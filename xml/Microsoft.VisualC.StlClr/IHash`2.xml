<Type Name="IHash&lt;TKey,TValue&gt;" FullName="Microsoft.VisualC.StlClr.IHash&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dd455d77fd58683c2cc51e1432bc2499fa4d4f16" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52737969" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IHash&lt;TKey,TValue&gt; : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IHash`2&lt;TKey, TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1&lt;!TValue&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.IHash`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHash(Of TKey, TValue)&#xA;Implements IBidirectionalContainer(Of TValue), ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public interface class IHash : ICloneable, Microsoft::VisualC::StlClr::Generic::IBidirectionalContainer&lt;TValue&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IHash&lt;'Key, 'Value&gt; = interface&#xA;    interface IBidirectionalContainer&lt;'Value&gt;&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="45140-101">Le type du composant clé d’un élément dans la séquence contrôlée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="45140-101">The type of the key component of an element in the controlled sequence.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="45140-102">Le type du composant valeur d’un élément dans la séquence contrôlée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="45140-102">The type of the value component of an element in the controlled sequence.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="45140-103">Définit l’interface des objets <c>hash_map</c>, <c>hash_multimap</c>, <c>hash_set</c> et <c>hash_multiset</c> STL/CLR.</span>
      <span class="sxs-lookup">
        <span data-stu-id="45140-103">Defines the interface of the STL/CLR <c>hash_map</c>, <c>hash_multimap</c>, <c>hash_set</c>, and <c>hash_multiset</c> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 <span data-ttu-id="45140-104">Pour plus d’informations, consultez [hachage\_map (STL/CLR)](/cpp/dotnet/hash-map-stl-clr), [hachage\_multimap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr), [hachage\_définie (STL/CLR)](/cpp/dotnet/hash-set-stl-clr)et [hachage\_multiset (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="45140-104">For more information, see [hash\_map (STL/CLR)](/cpp/dotnet/hash-map-stl-clr), [hash\_multimap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr), [hash\_set (STL/CLR)](/cpp/dotnet/hash-set-stl-clr), and [hash\_multiset (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="begin">
      <MemberSignature Language="C#" Value="public void begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void begin(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function begin (ByRef  As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ begin(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member begin :  -&gt; unit" Usage="iHash.begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="45140-105">Désigne le début de la séquence contrôlée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-105">Designates the beginning of the controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-106">Itérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-106">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="45140-107">Pour plus d’informations, consultez [hachage\_map::begin (STL/CLR)](/cpp/dotnet/hash-map-begin-stl-clr), [hachage\_multimap::begin (STL/CLR)](/cpp/dotnet/hash-multimap-begin-stl-clr), [hachage\_set::begin (STL/CLR)](/cpp/dotnet/hash-set-begin-stl-clr), et [hachage\_multiset::begin (STL/CLR)](/cpp/dotnet/hash-multiset-begin-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="45140-107">For more information, see [hash\_map::begin (STL/CLR)](/cpp/dotnet/hash-map-begin-stl-clr), [hash\_multimap::begin (STL/CLR)](/cpp/dotnet/hash-multimap-begin-stl-clr), [hash\_set::begin (STL/CLR)](/cpp/dotnet/hash-set-begin-stl-clr), and [hash\_multiset::begin (STL/CLR)](/cpp/dotnet/hash-multiset-begin-stl-clr).</span></span>  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="bucket_count">
      <MemberSignature Language="C#" Value="public int bucket_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 bucket_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.bucket_count" />
      <MemberSignature Language="VB.NET" Value="Public Function bucket_count () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int bucket_count();" />
      <MemberSignature Language="F#" Value="abstract member bucket_count : unit -&gt; int" Usage="iHash.bucket_count " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45140-108">Compte le nombre de compartiments dans la table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-108">Counts the number of buckets in the hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-109">Le nombre actuel de compartiments dans la table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-109">The current number of buckets in the hash table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-110">Pour plus d’informations, consultez [hachage\_map::bucket_count (STL/CLR)](/cpp/dotnet/hash-map-bucket-count-stl-clr), [hachage\_multimap::bucket_count (STL/CLR)](/cpp/dotnet/hash-multimap-bucket-count-stl-clr), [hachage\_set::bucket _count (STL/CLR)](/cpp/dotnet/hash-set-bucket-count-stl-clr), et [hachage\_multiset::bucket_count (STL/CLR)](/cpp/dotnet/hash-multiset-bucket-count-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="45140-110">For more information, see [hash\_map::bucket_count (STL/CLR)](/cpp/dotnet/hash-map-bucket-count-stl-clr), [hash\_multimap::bucket_count (STL/CLR)](/cpp/dotnet/hash-multimap-bucket-count-stl-clr), [hash\_set::bucket_count (STL/CLR)](/cpp/dotnet/hash-set-bucket-count-stl-clr), and [hash\_multiset::bucket_count (STL/CLR)](/cpp/dotnet/hash-multiset-bucket-count-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="clear">
      <MemberSignature Language="C#" Value="public void clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void clear();" />
      <MemberSignature Language="F#" Value="abstract member clear : unit -&gt; unit" Usage="iHash.clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45140-111">Supprime tous les éléments du conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-111">Removes all elements from the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-112">Pour plus d’informations, consultez [hachage\_map::clear (STL/CLR)](/cpp/dotnet/hash-map-clear-stl-clr), [hachage\_multimap::clear (STL/CLR)](/cpp/dotnet/hash-multimap-clear-stl-clr), [hachage\_set::clear (STL/CLR)](/cpp/dotnet/hash-set-clear-stl-clr), et [hachage\_multiset::clear (STL/CLR)](/cpp/dotnet/hash-multiset-clear-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="45140-112">For more information, see [hash\_map::clear (STL/CLR)](/cpp/dotnet/hash-map-clear-stl-clr), [hash\_multimap::clear (STL/CLR)](/cpp/dotnet/hash-multimap-clear-stl-clr), [hash\_set::clear (STL/CLR)](/cpp/dotnet/hash-set-clear-stl-clr), and [hash\_multiset::clear (STL/CLR)](/cpp/dotnet/hash-multiset-clear-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="count">
      <MemberSignature Language="C#" Value="public int count (TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 count(!TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.count(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function count (_Keyval As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int count(TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member count : 'Key -&gt; int" Usage="iHash.count _Keyval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="_Keyval">
          <span data-ttu-id="45140-113">La valeur de clé à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-113">The key value for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-114">Recherche le nombre d’éléments qui correspondent à une clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-114">Finds the number of elements that match a specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-115">Le nombre d’éléments dans la séquence contrôlée qui ont la même clé que <paramref name="_Keyval" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-115">The number of elements in the controlled sequence that have the same key as <paramref name="_Keyval" />.</span>
          </span>
          <span data-ttu-id="45140-116">Vous l’utilisez pour déterminer le nombre d’éléments actuellement dans la séquence contrôlée qui correspondent à une clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-116">You use it to determine the number of elements currently in the controlled sequence that match a specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-117">Pour plus d’informations, consultez [hachage\_map::count (STL/CLR)](/cpp/dotnet/hash-map-count-stl-clr), [hachage\_multimap::count (STL/CLR)](/cpp/dotnet/hash-multimap-count-stl-clr), [hachage\_set::count (STL/CLR)](/cpp/dotnet/hash-set-count-stl-clr), et [hachage\_multiset::count (STL/CLR)](/cpp/dotnet/hash-multiset-count-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="45140-117">For more information, see [hash\_map::count (STL/CLR)](/cpp/dotnet/hash-map-count-stl-clr), [hash\_multimap::count (STL/CLR)](/cpp/dotnet/hash-multimap-count-stl-clr), [hash\_set::count (STL/CLR)](/cpp/dotnet/hash-set-count-stl-clr), and [hash\_multiset::count (STL/CLR)](/cpp/dotnet/hash-multiset-count-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="empty">
      <MemberSignature Language="C#" Value="public bool empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.empty" />
      <MemberSignature Language="VB.NET" Value="Public Function empty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool empty();" />
      <MemberSignature Language="F#" Value="abstract member empty : unit -&gt; bool" Usage="iHash.empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45140-118">Tests si aucun élément n’est présents dans le conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-118">Tests whether no elements are present in the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-119">
            <see langword="true" /> Si le conteneur ne comporte aucun élément ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-119">
              <see langword="true" /> if the container has no elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-120">Pour plus d’informations, consultez [hachage\_map::empty (STL/CLR)](/cpp/dotnet/hash-map-empty-stl-clr), [hachage\_multimap::empty (STL/CLR)](/cpp/dotnet/hash-multimap-empty-stl-clr), [hachage\_set::empty (STL/CLR)](/cpp/dotnet/hash-set-empty-stl-clr), et [hachage\_multiset::empty (STL/CLR)](/cpp/dotnet/hash-multiset-empty-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="45140-120">For more information, see [hash\_map::empty (STL/CLR)](/cpp/dotnet/hash-map-empty-stl-clr), [hash\_multimap::empty (STL/CLR)](/cpp/dotnet/hash-multimap-empty-stl-clr), [hash\_set::empty (STL/CLR)](/cpp/dotnet/hash-set-empty-stl-clr), and [hash\_multiset::empty (STL/CLR)](/cpp/dotnet/hash-multiset-empty-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="end">
      <MemberSignature Language="C#" Value="public void end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void end(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function end (ByRef  As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ end(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member end :  -&gt; unit" Usage="iHash.end " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="45140-121">Désigne la fin de la séquence contrôlée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-121">Designates the end of the controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-122">Itérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-122">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="45140-123">Pour plus d’informations, consultez [hachage\_map::end (STL/CLR)](/cpp/dotnet/hash-map-end-stl-clr), [hachage\_multimap::end (STL/CLR)](/cpp/dotnet/hash-multimap-end-stl-clr), [hachage\_set::end (STL/CLR)](/cpp/dotnet/hash-set-end-stl-clr), et [hachage\_multiset::end (STL/CLR)](/cpp/dotnet/hash-multiset-end-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="45140-123">For more information, see [hash\_map::end (STL/CLR)](/cpp/dotnet/hash-map-end-stl-clr), [hash\_multimap::end (STL/CLR)](/cpp/dotnet/hash-multimap-end-stl-clr), [hash\_set::end (STL/CLR)](/cpp/dotnet/hash-set-end-stl-clr), and [hash\_multiset::end (STL/CLR)](/cpp/dotnet/hash-multiset-end-stl-clr).</span></span>  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="equal_range">
      <MemberSignature Language="C#" Value="public void equal_range (ref Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void equal_range(class Microsoft.VisualC.StlClr.GenericPair`2&lt;class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;, class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function equal_range (ByRef  As GenericPair(Of ContainerBidirectionalIterator(Of TValue), ContainerBidirectionalIterator(Of TValue)), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ equal_range(Microsoft::VisualC::StlClr::GenericPair&lt;Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^, Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member equal_range :  * 'Key -&gt; unit" Usage="iHash.equal_range (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Keyval">
          <span data-ttu-id="45140-124">La valeur de clé à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-124">The key value for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-125">Recherche la plage qui correspond à une clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-125">Finds the range that matches a specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-126">Une paire d’itérateurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-126">A pair of iterators.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="45140-127">Pour plus d’informations, consultez [hachage\_map::equal_range (STL/CLR)][hachage\_map::equal_range (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#equal_range)), [hachage\_multimap::equal_range (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#equal_range), [hachage\_set::equal_range (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#equal_range), et [hachage\_multiset::equal_range (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#equal_range).</span><span class="sxs-lookup"><span data-stu-id="45140-127">For more information, see [hash\_map::equal_range (STL/CLR)][hash\_map::equal_range (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#equal_range)), [hash\_multimap::equal_range (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#equal_range), [hash\_set::equal_range (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#equal_range), and [hash\_multiset::equal_range (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#equal_range).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="erase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="45140-128">Supprime les éléments du conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-128">Removes elements from the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-129">Pour plus d’informations, consultez [hachage\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hachage\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hachage\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), et [hachage\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="45140-129">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public int erase (TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 erase(!TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (_Keyval As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int erase(TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member erase : 'Key -&gt; int" Usage="iHash.erase _Keyval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="_Keyval">
          <span data-ttu-id="45140-130">La valeur de clé à effacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-130">The key value to erase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-131">Supprime les éléments du conteneur qui correspondent à la clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-131">Removes elements from the container that match the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-132">Le nombre d’éléments supprimés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-132">The number of elements removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-133">Pour plus d’informations, consultez [hachage\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hachage\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hachage\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), et [hachage\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="45140-133">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Where) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerBidirectionalIterator(Of TValue), _Where As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Where);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; -&gt; unit" Usage="iHash.erase (, _Where)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Where">
          <span data-ttu-id="45140-134">Un itérateur qui pointe vers l’élément à effacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-134">An iterator that points to the element to erase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-135">Supprime du conteneur de l’élément spécifié par l’itérateur donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-135">Removes from the container the element that is specified by the given iterator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-136">Itérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-136">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="45140-137">Pour plus d’informations, consultez [hachage\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hachage\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hachage\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), et [hachage\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="45140-137">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Last_iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _First_iter, class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Last_iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerBidirectionalIterator(Of TValue), _First_iter As ContainerBidirectionalIterator(Of TValue), _Last_iter As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _First_iter, Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Last_iter);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; -&gt; unit" Usage="iHash.erase (, _First_iter, _Last_iter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_First_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
        <Parameter Name="_Last_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_First_iter">
          <span data-ttu-id="45140-138">Itérateur qui pointe vers le début de la plage à effacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-138">An iterator that points to the beginning of the range to erase.</span>
          </span>
        </param>
        <param name="_Last_iter">
          <span data-ttu-id="45140-139">Itérateur qui pointe vers la position qui suit immédiatement la plage à effacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-139">An iterator that points to the position that immediately follows the range to erase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-140">Supprime du conteneur les éléments entre les itérateurs spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-140">Removes from the container the elements between the specified iterators.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-141">Itérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-141">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="45140-142">Pour plus d’informations, consultez [hachage\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hachage\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hachage\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), et [hachage\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="45140-142">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="find">
      <MemberSignature Language="C#" Value="public void find (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void find(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function find (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ find(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member find :  * 'Key -&gt; unit" Usage="iHash.find (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Keyval">
          <span data-ttu-id="45140-143">La valeur de clé à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-143">The key value for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-144">Recherche un élément qui correspond à une clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-144">Finds an element that matches a specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-145">Itérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-145">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="45140-146">Pour plus d’informations, consultez [hachage\_map::find (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#find), [hachage\_multimap::find (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#find), [hachage\_set::find (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#find), et [hachage\_multiset::find (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#find).</span><span class="sxs-lookup"><span data-stu-id="45140-146">For more information, see [hash\_map::find (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#find), [hash\_multimap::find (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#find), [hash\_set::find (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#find), and [hash\_multiset::find (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#find).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="hash_delegate">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.UnaryDelegate&lt;TKey,int&gt; hash_delegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.UnaryDelegate`2&lt;!TKey, int32&gt; hash_delegate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.hash_delegate" />
      <MemberSignature Language="VB.NET" Value="Public Function hash_delegate () As UnaryDelegate(Of TKey, Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::UnaryDelegate&lt;TKey, int&gt; ^ hash_delegate();" />
      <MemberSignature Language="F#" Value="abstract member hash_delegate : unit -&gt; Microsoft.VisualC.StlClr.UnaryDelegate&lt;'Key, int&gt;" Usage="iHash.hash_delegate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.UnaryDelegate&lt;TKey,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45140-147">Retourne le délégué qui est utilisé pour convertir une valeur de clé en entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-147">Returns the delegate that is used to convert a key value to an integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-148">Délégué qui est utilisé pour convertir une valeur de clé en entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-148">The delegate that is used to convert a key value to an integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-149">Pour plus d’informations, consultez [hachage\_map::hash_delegate (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#hash_delegate), [hachage\_multimap::hash_delegate (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#hash_delegate), [hachage\_set::hash _Delegate (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#hash_delegate), et [hachage\_multiset::hash_delegate (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#hash_delegate).</span><span class="sxs-lookup"><span data-stu-id="45140-149">For more information, see [hash\_map::hash_delegate (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#hash_delegate), [hash\_multimap::hash_delegate (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#hash_delegate), [hash\_set::hash_delegate (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#hash_delegate), and [hash\_multiset::hash_delegate (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#hash_delegate).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="insert">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="45140-150">Ajoute des éléments dans le conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-150">Adds elements to the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-151">Pour plus d’informations, consultez [hachage\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hachage\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hachage\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), et [hachage\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="45140-151">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (System.Collections.IEnumerable _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class System.Collections.IEnumerable _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Right As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(System::Collections::IEnumerable ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member insert : System.Collections.IEnumerable -&gt; unit" Usage="iHash.insert _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="_Right">
          <span data-ttu-id="45140-152">L’énumération à insérer dans le conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-152">The enumeration to insert into the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-153">Ajoute l’énumération donnée dans le conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-153">Adds the given enumeration to the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-154">Pour plus d’informations, consultez [hachage\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hachage\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hachage\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), et [hachage\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="45140-154">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; unit" Usage="iHash.insert (_First, _Last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First">
          <span data-ttu-id="45140-155">Itérateur qui pointe vers le début de la plage d’éléments à insérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-155">An iterator that points to the beginning of the range of elements to insert.</span>
          </span>
        </param>
        <param name="_Last">
          <span data-ttu-id="45140-156">Itérateur qui pointe vers l’élément qui suit immédiatement la plage d’éléments à insérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-156">An iterator that points to the element that immediately follows the range of elements to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-157">Ajoute au conteneur les éléments spécifiés par les itérateurs donnés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-157">Adds to the container the elements specified by the given iterators.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-158">Pour plus d’informations, consultez [hachage\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hachage\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hachage\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), et [hachage\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="45140-158">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,bool&gt; , TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void insert(class Microsoft.VisualC.StlClr.GenericPair`2&lt;class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;, bool&gt;&amp; , !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As GenericPair(Of ContainerBidirectionalIterator(Of TValue), Boolean), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::GenericPair&lt;Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^, bool&gt; ^ % , TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert :  * 'Value -&gt; unit" Usage="iHash.insert (, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,System.Boolean&gt;" RefType="ref" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Val">
          <span data-ttu-id="45140-159">La valeur de clé à insérer dans le conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-159">The key value to insert into the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-160">Ajoute la valeur donnée dans le conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-160">Adds the given value to the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-161">Une paire d’itérateurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-161">A pair of iterators.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="45140-162">Pour plus d’informations, consultez [hachage\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hachage\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hachage\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), et [hachage\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="45140-162">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Where, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void insert(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Where, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As ContainerBidirectionalIterator(Of TValue), _Where As ContainerBidirectionalIterator(Of TValue), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Where, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; * 'Value -&gt; unit" Usage="iHash.insert (, _Where, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Where">
          <span data-ttu-id="45140-163">Un itérateur qui spécifie où, dans le conteneur d’insérer l’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-163">An iterator that specifies where in the container to insert the element.</span>
          </span>
          <span data-ttu-id="45140-164">Cela est qu’une indication et est utilisé pour améliorer les performances.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-164">This is a hint only and is used to improve performance.</span>
          </span>
          <span data-ttu-id="45140-165">L’élément ne peut pas être inséré à cet emplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-165">The element might not be inserted at this location.</span>
          </span>
        </param>
        <param name="_Val">
          <span data-ttu-id="45140-166">La valeur de clé à insérer dans le conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-166">The key value to insert into the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-167">Ajoute l’élément donné au conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-167">Adds the given element to the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-168">Itérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-168">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="45140-169">Pour plus d’informations, consultez [hachage\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hachage\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hachage\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), et [hachage\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="45140-169">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="key_comp">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.BinaryDelegate&lt;TKey,TKey,bool&gt; key_comp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.BinaryDelegate`3&lt;!TKey, !TKey, bool&gt; key_comp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.key_comp" />
      <MemberSignature Language="VB.NET" Value="Public Function key_comp () As BinaryDelegate(Of TKey, TKey, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::BinaryDelegate&lt;TKey, TKey, bool&gt; ^ key_comp();" />
      <MemberSignature Language="F#" Value="abstract member key_comp : unit -&gt; Microsoft.VisualC.StlClr.BinaryDelegate&lt;'Key, 'Key, bool&gt;" Usage="iHash.key_comp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.BinaryDelegate&lt;TKey,TKey,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45140-170">Retourne le délégué de classement utilisé pour ordonner la séquence contrôlée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-170">Returns the ordering delegate that is used to order the controlled sequence.</span>
          </span>
          <span data-ttu-id="45140-171">Vous l’utilisez pour comparer deux clés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-171">You use it to compare two keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-172">Délégué de classement utilisé pour ordonner la séquence contrôlée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-172">The ordering delegate that is used to order the controlled sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-173">Pour plus d’informations, consultez [hachage\_map::key_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#key_comp), [hachage\_multimap::key_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#key_comp), [hachage\_set::key_comp (STL / CLR)](/cpp/dotnet/hash-set-stl-clr#key_comp), et [hachage\_multiset::key_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#key_comp).</span><span class="sxs-lookup"><span data-stu-id="45140-173">For more information, see [hash\_map::key_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#key_comp), [hash\_multimap::key_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#key_comp), [hash\_set::key_comp (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#key_comp), and [hash\_multiset::key_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#key_comp).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="load_factor">
      <MemberSignature Language="C#" Value="public float load_factor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 load_factor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.load_factor" />
      <MemberSignature Language="VB.NET" Value="Public Function load_factor () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float load_factor();" />
      <MemberSignature Language="F#" Value="abstract member load_factor : unit -&gt; single" Usage="iHash.load_factor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45140-174">Compte le nombre moyen d’éléments par compartiment dans la table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-174">Counts the average number of elements per bucket in the hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-175">Le nombre moyen d’éléments par compartiment dans la table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-175">The average number of elements per bucket in the hash table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-176">Pour plus d’informations, consultez [hachage\_map::load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#load_factor), [hachage\_multimap::load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#load_factor), [hachage\_set::load_ facteur (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), et [hachage\_multiset::load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#load_factor).</span><span class="sxs-lookup"><span data-stu-id="45140-176">For more information, see [hash\_map::load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#load_factor), [hash\_multimap::load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#load_factor), [hash\_set::load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), and [hash\_multiset::load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#load_factor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="lower_bound">
      <MemberSignature Language="C#" Value="public void lower_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void lower_bound(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function lower_bound (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ lower_bound(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member lower_bound :  * 'Key -&gt; unit" Usage="iHash.lower_bound (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Keyval">
          <span data-ttu-id="45140-177">La valeur de clé à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-177">The key value for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-178">Recherche le début de la plage d’éléments qui correspondent à une clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-178">Finds the beginning of the range of elements that match a specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-179">Itérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-179">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="45140-180">Pour plus d’informations, consultez [hachage\_map::lower_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#lower_bound), [hachage\_multimap::lower_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#lower_bound), [hachage\_set::lower_ lié (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#lower_bound), et [hachage\_multiset::lower_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#lower_bound).</span><span class="sxs-lookup"><span data-stu-id="45140-180">For more information, see [hash\_map::lower_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#lower_bound), [hash\_multimap::lower_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#lower_bound), [hash\_set::lower_bound (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#lower_bound), and [hash\_multiset::lower_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#lower_bound).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="max_load_factor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="45140-181">Obtient ou définit le nombre maximal d’éléments par compartiment dans la table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-181">Gets or sets the maximum number of elements per bucket in the hash table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-182">Pour plus d’informations, consultez [hachage\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [hachage\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [hachage\_définir :: max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), et [hachage\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span><span class="sxs-lookup"><span data-stu-id="45140-182">For more information, see [hash\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [hash\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [hash\_set::max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), and [hash\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="max_load_factor">
      <MemberSignature Language="C#" Value="public float max_load_factor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 max_load_factor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
      <MemberSignature Language="VB.NET" Value="Public Function max_load_factor () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float max_load_factor();" />
      <MemberSignature Language="F#" Value="abstract member max_load_factor : unit -&gt; single" Usage="iHash.max_load_factor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45140-183">Obtient le nombre maximal d’éléments par compartiment dans la table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-183">Gets the maximum number of elements per bucket in the hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-184">Le nombre maximal d’éléments par compartiment dans la table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-184">The maximum number of elements per bucket in the hash table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-185">Pour plus d’informations, consultez [hachage\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [hachage\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [hachage\_définir :: max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), et [hachage\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span><span class="sxs-lookup"><span data-stu-id="45140-185">For more information, see [hash\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [hash\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [hash\_set::max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), and [hash\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="max_load_factor">
      <MemberSignature Language="C#" Value="public void max_load_factor (float _Newmax);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void max_load_factor(float32 _Newmax) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub max_load_factor (_Newmax As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void max_load_factor(float _Newmax);" />
      <MemberSignature Language="F#" Value="abstract member max_load_factor : single -&gt; unit" Usage="iHash.max_load_factor _Newmax" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Newmax" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="_Newmax">
          <span data-ttu-id="45140-186">Le nombre maximal d’éléments par compartiment dans la table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-186">The maximum number of elements per bucket in the hash table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-187">Définit le nombre maximal d’éléments par compartiment dans la table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-187">Sets the maximum number of elements per bucket in the hash table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-188">Pour plus d’informations, consultez [hachage\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [hachage\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [hachage\_définir :: max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), et [hachage\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span><span class="sxs-lookup"><span data-stu-id="45140-188">For more information, see [hash\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [hash\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [hash\_set::max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), and [hash\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rbegin">
      <MemberSignature Language="C#" Value="public void rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rbegin(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rbegin (ByRef  As ReverseBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rbegin(Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rbegin :  -&gt; unit" Usage="iHash.rbegin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="45140-189">Désigne le début de la séquence contrôlée inverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-189">Designates the beginning of the reversed controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-190">Itérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-190">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="45140-191">Pour plus d’informations, consultez [hachage\_map::rbegin (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rbegin), [hachage\_multimap::rbegin (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rbegin), [hachage\_set::rbegin (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#rbegin), et [hachage\_multiset::rbegin (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rbegin).</span><span class="sxs-lookup"><span data-stu-id="45140-191">For more information, see [hash\_map::rbegin (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rbegin), [hash\_multimap::rbegin (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rbegin), [hash\_set::rbegin (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rbegin), and [hash\_multiset::rbegin (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rbegin).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rehash">
      <MemberSignature Language="C#" Value="public void rehash (int _Buckets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void rehash(int32 _Buckets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub rehash (_Buckets As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void rehash(int _Buckets);" />
      <MemberSignature Language="F#" Value="abstract member rehash : int -&gt; unit" Usage="iHash.rehash _Buckets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Buckets" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Buckets">
          <span data-ttu-id="45140-192">Le nombre de compartiments pour la table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-192">The number of buckets for the hash table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-193">Régénère la table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-193">Rebuilds the hash table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-194">Pour plus d’informations, consultez [hachage\_map::rehash (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rehash), [hachage\_multimap::rehash (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rehash), [hachage\_set::rehash (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#rehash), et [hachage\_multiset::rehash (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rehash).</span><span class="sxs-lookup"><span data-stu-id="45140-194">For more information, see [hash\_map::rehash (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rehash), [hash\_multimap::rehash (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rehash), [hash\_set::rehash (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rehash), and [hash\_multiset::rehash (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rehash).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rend">
      <MemberSignature Language="C#" Value="public void rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rend(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rend (ByRef  As ReverseBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rend(Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rend :  -&gt; unit" Usage="iHash.rend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="45140-195">Désigne la fin de la séquence contrôlée inverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-195">Designates the end of the reversed controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-196">Itérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-196">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="45140-197">Pour plus d’informations, consultez [hachage\_map::rend (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rend), [hachage\_multimap::rend (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rend), [hachage\_set::rend (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rend), et [hachage\_multiset::rend (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rend).</span><span class="sxs-lookup"><span data-stu-id="45140-197">For more information, see [hash\_map::rend (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rend), [hash\_multimap::rend (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rend), [hash\_set::rend (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rend), and [hash\_multiset::rend (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rend).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="size">
      <MemberSignature Language="C#" Value="public int size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.size" />
      <MemberSignature Language="VB.NET" Value="Public Function size () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int size();" />
      <MemberSignature Language="F#" Value="abstract member size : unit -&gt; int" Usage="iHash.size " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45140-198">Compte le nombre d’éléments dans le conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-198">Counts the number of elements in the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-199">La longueur de la séquence contrôlée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-199">The length of the controlled sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-200">Pour plus d’informations, consultez [hachage\_map::size (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#size), [hachage\_multimap::size (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#size), [hachage\_set::size (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#size), et [hachage\_multiset::size (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#size).</span><span class="sxs-lookup"><span data-stu-id="45140-200">For more information, see [hash\_map::size (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#size), [hash\_multimap::size (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#size), [hash\_set::size (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#size), and [hash\_multiset::size (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#size).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="swap">
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.IHash&lt;TKey,TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.IHash`2&lt;!TKey, !TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap (_Right As IHash(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::IHash&lt;TKey, TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member swap : Microsoft.VisualC.StlClr.IHash&lt;'Key, 'Value&gt; -&gt; unit" Usage="iHash.swap _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.IHash&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">
          <span data-ttu-id="45140-201">Conteneur avec lequel échanger le contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-201">The container with which to swap contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-202">Échange le contenu de deux conteneurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-202">Swaps the contents of two containers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-203">Pour plus d’informations, consultez [hachage\_map::swap (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#swap), [hachage\_multimap::swap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#swap), [hachage\_set::swap (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#swap), et [hachage\_multiset::swap (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#swap).</span><span class="sxs-lookup"><span data-stu-id="45140-203">For more information, see [hash\_map::swap (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#swap), [hash\_multimap::swap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#swap), [hash\_set::swap (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#swap), and [hash\_multiset::swap (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#swap).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="upper_bound">
      <MemberSignature Language="C#" Value="public void upper_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void upper_bound(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function upper_bound (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ upper_bound(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member upper_bound :  * 'Key -&gt; unit" Usage="iHash.upper_bound (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Keyval">
          <span data-ttu-id="45140-204">La valeur de clé à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-204">The key value to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45140-205">Recherche la fin de la plage d’éléments qui correspondent à une clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-205">Finds the end of the range of elements that match a specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-206">Itérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-206">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="45140-207">Pour plus d’informations, consultez [hachage\_map::upper_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#upper_bound), [hachage\_multimap::upper_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#upper_bound), [hachage\_set::upper_ lié (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#upper_bound), et [hachage\_multiset::upper_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#upper_bound).</span><span class="sxs-lookup"><span data-stu-id="45140-207">For more information, see [hash\_map::upper_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#upper_bound), [hash\_multimap::upper_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#upper_bound), [hash\_set::upper_bound (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#upper_bound), and [hash\_multiset::upper_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#upper_bound).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="value_comp">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,bool&gt; value_comp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.BinaryDelegate`3&lt;!TValue, !TValue, bool&gt; value_comp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.value_comp" />
      <MemberSignature Language="VB.NET" Value="Public Function value_comp () As BinaryDelegate(Of TValue, TValue, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::BinaryDelegate&lt;TValue, TValue, bool&gt; ^ value_comp();" />
      <MemberSignature Language="F#" Value="abstract member value_comp : unit -&gt; Microsoft.VisualC.StlClr.BinaryDelegate&lt;'Value, 'Value, bool&gt;" Usage="iHash.value_comp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45140-208">Retourne le délégué de classement utilisé pour ordonner la séquence contrôlée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-208">Returns the ordering delegate that is used to order the controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45140-209">Délégué de classement utilisé pour ordonner la séquence contrôlée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45140-209">The ordering delegate that is used to order the controlled sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45140-210">Pour plus d’informations, consultez [hachage\_map::value_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#value_comp), [hachage\_multimap::value_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#value_comp), [hachage\_set::value_comp (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#value_comp), et [hachage\_multiset::value_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#value_comp).</span><span class="sxs-lookup"><span data-stu-id="45140-210">For more information, see [hash\_map::value_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#value_comp), [hash\_multimap::value_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#value_comp), [hash\_set::value_comp (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#value_comp), and [hash\_multiset::value_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#value_comp).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>