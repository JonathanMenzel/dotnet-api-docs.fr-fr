<Type Name="SafeNCryptSecretHandle" FullName="Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf919e666a425f7b8bf25f8a6135c1850346a8f2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36657683" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SafeNCryptSecretHandle : Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SafeNCryptSecretHandle extends Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SafeNCryptSecretHandle&#xA;Inherits SafeNCryptHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class SafeNCryptSecretHandle sealed : Microsoft::Win32::SafeHandles::SafeNCryptHandle" />
  <TypeSignature Language="F#" Value="type SafeNCryptSecretHandle = class&#xA;    inherit SafeNCryptHandle" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Win32.SafeHandles.SafeNCryptHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b77d6-101">Fournit un handle sécurisé qui représente une valeur d’accord secret (NCRYPT_SECRET_HANDLE).</span>
      <span class="sxs-lookup">
        <span data-stu-id="b77d6-101">Provides a safe handle that represents a secret agreement value (NCRYPT_SECRET_HANDLE).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d6-102">Cette classe doit être utilisée lorsque vous travaillez avec le code natif qui attend un NCRYPT_SECRET_HANDLE.</span><span class="sxs-lookup"><span data-stu-id="b77d6-102">This class should be used when working with native code that expects an NCRYPT_SECRET_HANDLE.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b77d6-103">Ce type implémente le <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="b77d6-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="b77d6-104">Lorsque vous avez fini d’utiliser le type, vous devez la supprimer directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="b77d6-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="b77d6-105">Pour supprimer le type directement, vous devez appeler sa <xref:System.IDisposable.Dispose%2A> méthode dans un `try` / `catch` bloc.</span><span class="sxs-lookup"><span data-stu-id="b77d6-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="b77d6-106">Pour la supprimer indirectement, utiliser une construction de langage telles que `using` (en c#) ou `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="b77d6-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="b77d6-107">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <xref:System.IDisposable> rubrique de l’interface.</span><span class="sxs-lookup"><span data-stu-id="b77d6-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="b77d6-108">pour l’autorisation d’appeler du code non managé.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b77d6-108">for permission to call unmanaged code.</span>
      </span>
      <span data-ttu-id="b77d6-109">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b77d6-109">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
      </span>
      <span data-ttu-id="b77d6-110">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="b77d6-110">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SafeNCryptSecretHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SafeNCryptSecretHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b77d6-111">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d6-111">Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b77d6-112">pour l’autorisation d’appeler du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d6-112">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="b77d6-113">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d6-113">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="b77d6-114">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d6-114">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ReleaseNativeHandle">
      <MemberSignature Language="C#" Value="protected override bool ReleaseNativeHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ReleaseNativeHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ReleaseNativeHandle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ReleaseNativeHandle();" />
      <MemberSignature Language="F#" Value="override this.ReleaseNativeHandle : unit -&gt; bool" Usage="safeNCryptSecretHandle.ReleaseNativeHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>