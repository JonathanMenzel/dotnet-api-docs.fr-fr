<Type Name="TransformManyBlock&lt;TInput,TOutput&gt;" FullName="System.Threading.Tasks.Dataflow.TransformManyBlock&lt;TInput,TOutput&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8230b728f00e8e20cd7761e5a45e45610416aceb" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52604763" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TransformManyBlock&lt;TInput,TOutput&gt; : System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt;, System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt;, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TransformManyBlock`2&lt;TInput, TOutput&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.IPropagatorBlock`2&lt;!TInput, !TOutput&gt;, class System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&lt;!TOutput&gt;, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TOutput&gt;, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TInput&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransformManyBlock(Of TInput, TOutput)&#xA;Implements IPropagatorBlock(Of TInput, TOutput), IReceivableSourceBlock(Of TOutput), ISourceBlock(Of TOutput), ITargetBlock(Of TInput)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput, typename TOutput&gt;&#xA;public ref class TransformManyBlock sealed : System::Threading::Tasks::Dataflow::IPropagatorBlock&lt;TInput, TOutput&gt;, System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;TOutput&gt;, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt;, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="F#" Value="type TransformManyBlock&lt;'Input, 'Output&gt; = class&#xA;    interface IDataflowBlock&#xA;    interface IPropagatorBlock&lt;'Input, 'Output&gt;&#xA;    interface ISourceBlock&lt;'Output&gt;&#xA;    interface ITargetBlock&lt;'Input&gt;&#xA;    interface IReceivableSourceBlock&lt;'Output&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
    <TypeParameter Name="TOutput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IDataflowBlock</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayContent,nq}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.Dataflow.TransformManyBlock`2/DebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TInput">
      <span data-ttu-id="67de7-101">Spécifie le type de données reçu et traité par ce <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="67de7-101">Specifies the type of data received and operated on by this <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
      </span>
    </typeparam>
    <typeparam name="TOutput">
      <span data-ttu-id="67de7-102">Spécifie le type de données généré par le <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="67de7-102">Specifies the type of data output by this <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="67de7-103">Fournit un bloc de flux de données qui appelle un délégué <see cref="T:System.Func`2" /> fourni pour chaque élément de données reçu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="67de7-103">Provides a dataflow block that invokes a provided <see cref="T:System.Func`2" /> delegate for every data element received.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformManyBlock (Func&lt;TInput,System.Collections.Generic.IEnumerable&lt;TOutput&gt;&gt; transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Collections.Generic.IEnumerable`1&lt;!TOutput&gt;&gt; transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transform As Func(Of TInput, IEnumerable(Of TOutput)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransformManyBlock(Func&lt;TInput, System::Collections::Generic::IEnumerable&lt;TOutput&gt; ^&gt; ^ transform);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt; : Func&lt;'Input, seq&lt;'Output&gt;&gt; -&gt; System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt;" Usage="new System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt; transform" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transform" Type="System.Func&lt;TInput,System.Collections.Generic.IEnumerable&lt;TOutput&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="transform">
          <span data-ttu-id="67de7-104">Fonction à appeler à chaque élément de données reçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-104">The function to invoke with each data element received.</span>
          </span>
          <span data-ttu-id="67de7-105">Toutes les données retournées de <see cref="T:System.Collections.Generic.IEnumerable`1" /> sont rendues disponibles en tant que sortie de ce <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-105">All of the data from the returned <see cref="T:System.Collections.Generic.IEnumerable`1" /> will be made available as output from this <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67de7-106">Initialise une nouvelle <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> avec la fonction spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-106">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> with the specified function.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67de7-107">
            <paramref name="transform" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-107">The <paramref name="transform" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformManyBlock (Func&lt;TInput,System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;TOutput&gt;&gt;&gt; transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;!TOutput&gt;&gt;&gt; transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transform As Func(Of TInput, Task(Of IEnumerable(Of TOutput))))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransformManyBlock(Func&lt;TInput, System::Threading::Tasks::Task&lt;System::Collections::Generic::IEnumerable&lt;TOutput&gt; ^&gt; ^&gt; ^ transform);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt; : Func&lt;'Input, System.Threading.Tasks.Task&lt;seq&lt;'Output&gt;&gt;&gt; -&gt; System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt;" Usage="new System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt; transform" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transform" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;TOutput&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="transform">
          <span data-ttu-id="67de7-108">Fonction à appeler à chaque élément de données reçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-108">The function to invoke with each data element received.</span>
          </span>
          <span data-ttu-id="67de7-109">Toutes les données retournées de manière asynchrone dans <see cref="T:System.Collections.Generic.IEnumerable`1" /> sont rendues disponibles en tant que sortie de ce <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-109">All of the data asynchronously returned in the <see cref="T:System.Collections.Generic.IEnumerable`1" /> will be made available as output from this  <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67de7-110">Initialise une nouvelle <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> avec la fonction spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-110">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> with the specified function.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67de7-111">
            <paramref name="transform" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-111">The <paramref name="transform" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformManyBlock (Func&lt;TInput,System.Collections.Generic.IEnumerable&lt;TOutput&gt;&gt; transform, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Collections.Generic.IEnumerable`1&lt;!TOutput&gt;&gt; transform, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transform As Func(Of TInput, IEnumerable(Of TOutput)), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransformManyBlock(Func&lt;TInput, System::Collections::Generic::IEnumerable&lt;TOutput&gt; ^&gt; ^ transform, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt; : Func&lt;'Input, seq&lt;'Output&gt;&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt;" Usage="new System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt; (transform, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transform" Type="System.Func&lt;TInput,System.Collections.Generic.IEnumerable&lt;TOutput&gt;&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="transform">
          <span data-ttu-id="67de7-112">Fonction à appeler à chaque élément de données reçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-112">The function to invoke with each data element received.</span>
          </span>
          <span data-ttu-id="67de7-113">Toutes les données retournées de l’élément de manière asynchrone dans <see cref="T:System.Collections.Generic.IEnumerable`1" /> sont rendues disponibles en tant que sortie de ce <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-113">All of the data from the returned in the <see cref="T:System.Collections.Generic.IEnumerable`1" /> will be made available as output from this  <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="67de7-114">Options permettant de configurer ce <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-114">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67de7-115">Initialise un nouveau <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> avec la fonction et <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" /> spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-115">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> with the specified function and <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67de7-116">
            <paramref name="transform" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-116">The <paramref name="transform" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="67de7-117">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-117">-or-</span>
          </span>
          <span data-ttu-id="67de7-118">
            <paramref name="dataflowBlockOptions" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-118">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformManyBlock (Func&lt;TInput,System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;TOutput&gt;&gt;&gt; transform, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;!TOutput&gt;&gt;&gt; transform, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transform As Func(Of TInput, Task(Of IEnumerable(Of TOutput))), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransformManyBlock(Func&lt;TInput, System::Threading::Tasks::Task&lt;System::Collections::Generic::IEnumerable&lt;TOutput&gt; ^&gt; ^&gt; ^ transform, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt; : Func&lt;'Input, System.Threading.Tasks.Task&lt;seq&lt;'Output&gt;&gt;&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt;" Usage="new System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt; (transform, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transform" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;TOutput&gt;&gt;&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="transform">
          <span data-ttu-id="67de7-119">Fonction à appeler à chaque élément de données reçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-119">The function to invoke with each data element received.</span>
          </span>
          <span data-ttu-id="67de7-120">Toutes les données retournées de manière asynchrone dans <see cref="T:System.Collections.Generic.IEnumerable`1" /> sont rendues disponibles en tant que sortie de ce <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-120">All of the data asynchronously returned in the <see cref="T:System.Collections.Generic.IEnumerable`1" /> will be made available as output from this  <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="67de7-121">Options permettant de configurer ce <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-121">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67de7-122">Initialise un nouveau <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> avec la fonction et <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" /> spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-122">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> with the specified function and <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67de7-123">
            <paramref name="transform" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-123">The <paramref name="transform" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="67de7-124">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-124">-or-</span>
          </span>
          <span data-ttu-id="67de7-125">
            <paramref name="dataflowBlockOptions" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-125">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit&#xA;override this.Complete : unit -&gt; unit" Usage="transformManyBlock.Complete " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67de7-126">Signale à <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> qu'il ne doit plus recevoir ni produire de messages ou utiliser des messages différés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-126">Signals to the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> that it should not accept nor produce any more messages nor consume any more postponed messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67de7-127">Une fois <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Complete%2A> a été appelée sur un bloc de flux de données, ce bloc se termine et son <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A> tâche passera un état final après avoir traité toutes les données précédemment disponibles.</span><span class="sxs-lookup"><span data-stu-id="67de7-127">After <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Complete%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A> task will enter a final state after it has processed all previously available data.</span></span> <span data-ttu-id="67de7-128"><xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Complete%2A> va pas le bloc attend la fin se produisent, mais au lieu de cela lance la demande ; pour attendre la fin se produisent, le <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A> tâche peut être utilisée.</span><span class="sxs-lookup"><span data-stu-id="67de7-128"><xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Complete%2A> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A> task may be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt;.Completion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67de7-129">Obtient une <see cref="T:System.Threading.Tasks.Task" /> qui représente l'opération asynchrone et l'achèvement du bloc de flux de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-129">Gets a <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation and completion of the dataflow block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67de7-130">Tâche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-130">The task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67de7-131">Un bloc de flux de données est considéré comme terminé quand elle n’est pas actuellement traite un message et quand il a la garantie qu’il ne traitera pas plus de messages.</span><span class="sxs-lookup"><span data-stu-id="67de7-131">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="67de7-132">Retourné <xref:System.Threading.Tasks.Task> sera la transition vers un état terminé lorsque le bloc associé est terminée.</span><span class="sxs-lookup"><span data-stu-id="67de7-132">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state when the associated block has completed.</span></span> <span data-ttu-id="67de7-133">Il adopte le <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> sémantique définie par l’état lorsque le bloc termine son traitement avec succès selon le bloc de flux de données.</span><span class="sxs-lookup"><span data-stu-id="67de7-133">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block's defined semantics.</span></span> <span data-ttu-id="67de7-134">Il adopte le <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Faulted> état lorsque le bloc de flux de données a terminé le traitement prématurément en raison d’une exception non gérée, et il adopte le <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Canceled> état lorsque le bloc de flux de données est terminée. traitement prématurément en raison de la réception d’une demande d’annulation.</span><span class="sxs-lookup"><span data-stu-id="67de7-134">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</span></span> <span data-ttu-id="67de7-135">Si la tâche se termine dans le <xref:System.Threading.Tasks.TaskStatus.Faulted> état, son `Exception` propriété retournera un <xref:System.AggregateException> contenant une ou plusieurs exceptions qui a provoqué l’échec du bloc.</span><span class="sxs-lookup"><span data-stu-id="67de7-135">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property will return an <xref:System.AggregateException> containing the one or more exceptions that caused the block to fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputCount">
      <MemberSignature Language="C#" Value="public int InputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputCount : int" Usage="System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt;.InputCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67de7-136">Obtient le nombre d'éléments d'entrée en attente de traitement par ce bloc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-136">Gets the number of input items waiting to be processed by this block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67de7-137">Nombre d'éléments d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-137">The number of input items.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67de7-138">Le <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.InputCount%2A> n’inclut pas tous les éléments en cours de traitement par le bloc ou tous les éléments qui ont déjà été traités par le bloc.</span><span class="sxs-lookup"><span data-stu-id="67de7-138">The <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.InputCount%2A> does not include any items currently being processed by the block or any items that have already been processed by the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTo">
      <MemberSignature Language="C#" Value="public IDisposable LinkTo (System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable LinkTo(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkTo (target As ITargetBlock(Of TOutput), linkOptions As DataflowLinkOptions) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions);" />
      <MemberSignature Language="F#" Value="abstract member LinkTo : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions -&gt; IDisposable&#xA;override this.LinkTo : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions -&gt; IDisposable" Usage="transformManyBlock.LinkTo (target, linkOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="67de7-139">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> auquel connecter cette source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-139">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect this source.</span>
          </span>
        </param>
        <param name="linkOptions">
          <span data-ttu-id="67de7-140">Instance <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> qui configure le lien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-140">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> instance that configures the link.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67de7-141">Lie le <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> au <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-141">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67de7-142">IDisposable qui, en appelant Dispose, dissocie la source de la cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-142">An IDisposable that, upon calling Dispose, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67de7-143">
            <paramref name="target" /> est Null (Nothing en Visual Basic) ou <paramref name="linkOptions" /> est Null (Nothing en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-143">
              <paramref name="target" /> is null (Nothing in Visual Basic) or  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OutputCount">
      <MemberSignature Language="C#" Value="public int OutputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.OutputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputCount : int" Usage="System.Threading.Tasks.Dataflow.TransformManyBlock&lt;'Input, 'Output&gt;.OutputCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67de7-144">Obtient le nombre d'éléments de sortie disponibles en provenance de ce bloc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-144">Gets the number of output items available to be received from this block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67de7-145">Nombre d'éléments de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-145">The number of output items.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="67de7-146">
            <see cref="T:System.Exception" /> ayant provoqué l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-146">The <see cref="T:System.Exception" /> that caused the faulting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67de7-147">Provoque l’achèvement du <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> à l’état <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-147">Causes the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> to complete in a  <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67de7-148">Après avoir <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.System%23Threading%23Tasks%23Dataflow%23IDataflowBlock%23Fault%2A> a été appelée sur un bloc de flux de données, ce bloc se termine et son <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A> tâche passera à un état final.</span><span class="sxs-lookup"><span data-stu-id="67de7-148">After <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.System%23Threading%23Tasks%23Dataflow%23IDataflowBlock%23Fault%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="67de7-149">Provoquer une erreur dans un bloc, comme avec l’annulation d’un bloc, entraîne mis en mémoire tampon des messages (messages d’entrée non traités ainsi que les messages de sortie unoffered) perdues.</span><span class="sxs-lookup"><span data-stu-id="67de7-149">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67de7-150">
            <paramref name="exception" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-150">The <paramref name="exception" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ConsumeMessage">
      <MemberSignature Language="C#" Value="TOutput ISourceBlock&lt;TOutput&gt;.ConsumeMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, out bool messageConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance !TOutput System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ConsumeMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target, [out] bool&amp; messageConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Function ConsumeMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of TOutput), ByRef messageConsumed As Boolean) As TOutput Implements ISourceBlock(Of TOutput).ConsumeMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual TOutput System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ConsumeMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, [Runtime::InteropServices::Out] bool % messageConsumed) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt;::ConsumeMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="messageConsumed" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="67de7-151">
            <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> du message en cours d'utilisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-151">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being consumed.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="67de7-152">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> absorbant le message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-152">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> consuming the message.</span>
          </span>
        </param>
        <param name="messageConsumed">
          <span data-ttu-id="67de7-153">
            <see langword="true" /> si le message a été consommé avec succès ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-153">
              <see langword="true" /> if the message was successfully consumed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67de7-154">Appelé par un <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> lié pour recevoir et utiliser un <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> précédemment proposé par ce <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-154">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to accept and consume a <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> previously offered by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67de7-155">Valeur du message consommé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-155">The value of the consumed message.</span>
          </span>
          <span data-ttu-id="67de7-156">Cela peut correspondre à une autre instance <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> qui a été précédemment réservée et transmise comme <paramref name="messageHeader" /> à <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-156">This may correspond to a different <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance than was previously reserved and passed as the <paramref name="messageHeader" /> to <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />.</span>
          </span>
          <span data-ttu-id="67de7-157">Le <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> consommateur doit utiliser la valeur retournée au lieu de la valeur passée comme <paramref name="messageValue" /> via OfferMessage <see cref="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-157">The consuming <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> must use the returned value instead of the value passed as <paramref name="messageValue" /> through OfferMessage <see cref="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /></span>
          </span>
          <span data-ttu-id="67de7-158">Si le message demandé n'est pas disponible, la valeur de retour est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-158">If the message requested is not available, the return value will be <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67de7-159">Uniquement <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances liées à ce <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance peut utiliser <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>, et il doit uniquement servir à consommer <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances précédemment proposé par cette source à la cible.</span><span class="sxs-lookup"><span data-stu-id="67de7-159">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>, and it must only be used to consume <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="67de7-160">
            <paramref name="messageHeader" /> n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-160">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67de7-161">
            <paramref name="target" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-161">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReleaseReservation">
      <MemberSignature Language="C#" Value="void ISourceBlock&lt;TOutput&gt;.ReleaseReservation (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReleaseReservation(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})" />
      <MemberSignature Language="VB.NET" Value="Sub ReleaseReservation (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of TOutput)) Implements ISourceBlock(Of TOutput).ReleaseReservation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReleaseReservation(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt;::ReleaseReservation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="67de7-162">
            <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> du message réservé en cours de libération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-162">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the reserved message being released.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="67de7-163">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> libérant le message précédemment réservé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-163">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> releasing the message it previously reserved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67de7-164">Appelé par un <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> lié pour libérer un <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> précédemment réservé par ce <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-164">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to release a previously reserved <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67de7-165">Uniquement <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances liées à ce <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance peut utiliser <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A>, et il doit uniquement être utilisé pour libérer <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances précédemment et a été réservés par la cible.</span><span class="sxs-lookup"><span data-stu-id="67de7-165">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A>, and it must only be used to release <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously and successfully reserved by the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="67de7-166">
            <paramref name="messageHeader" /> n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-166">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67de7-167">
            <paramref name="target" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-167">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="67de7-168">La <paramref name="target" /> ne contient pas le message réservé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-168">The <paramref name="target" /> did not have the message reserved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReserveMessage">
      <MemberSignature Language="C#" Value="bool ISourceBlock&lt;TOutput&gt;.ReserveMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReserveMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})" />
      <MemberSignature Language="VB.NET" Value="Function ReserveMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of TOutput)) As Boolean Implements ISourceBlock(Of TOutput).ReserveMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReserveMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt;::ReserveMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="67de7-169">
            <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> du message en cours de réservation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-169">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being reserved.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="67de7-170">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> réservant le message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-170">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> reserving the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67de7-171">Appelé par un <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> lié pour réserver un <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> précédemment proposé par ce <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-171">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to reserve a previously offered <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67de7-172">
            <see langword="true" /> si le message a été réservé avec succès ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-172">
              <see langword="true" /> if the message was successfully reserved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67de7-173">Uniquement <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances liées à ce <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance peut utiliser <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, et il doit uniquement servir à réserver <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances précédemment proposé par cette source à la cible.</span><span class="sxs-lookup"><span data-stu-id="67de7-173">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, and it must only be used to reserve <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 <span data-ttu-id="67de7-174">Si `true` est retourné, le <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> doit appeler par la suite <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> ou <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> pour ce message.</span><span class="sxs-lookup"><span data-stu-id="67de7-174">If `true` is returned, the <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> must subsequently call either <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> or <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> for this message.</span></span> <span data-ttu-id="67de7-175">Pour ce faire, peut échouer dans la source de l’impossibilité de se propager plus aucun message à celui-ci ou d’autres cibles.</span><span class="sxs-lookup"><span data-stu-id="67de7-175">Failure to do so may result in the source being unable to propagate any further messages to this or other targets.</span></span>  
  
 <span data-ttu-id="67de7-176"><xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> ne doit pas être appelée pendant que la cible est maintenant tous les verrous internes.</span><span class="sxs-lookup"><span data-stu-id="67de7-176"><xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> must not be called while the target is holding any internal locks.</span></span> <span data-ttu-id="67de7-177">Cela violeront la hiérarchie des verrous nécessaire pour éviter les blocages dans un réseau de flux de données.</span><span class="sxs-lookup"><span data-stu-id="67de7-177">Doing so will violate the lock hierarchy necessary to avoid deadlocks in a dataflow network.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="67de7-178">
            <paramref name="messageHeader" /> n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-178">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67de7-179">
            <paramref name="target" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-179">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;TInput&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, TInput messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !TInput messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TInput&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&lt;TInput&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As TInput, source As ISourceBlock(Of TInput), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of TInput).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, TInput messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TInput&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;::OfferMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="TInput" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="67de7-180">Instance <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> qui représente l'en-tête du message qui est proposé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-180">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance that represents the header of the message being offered.</span>
          </span>
        </param>
        <param name="messageValue">
          <span data-ttu-id="67de7-181">Valeur du message proposé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-181">The value of the message being offered.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="67de7-182">
            <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> qui transmet le message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-182">The <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> offering the message.</span>
          </span>
          <span data-ttu-id="67de7-183">Celui-ci peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-183">This may be <see langword="null" />.</span>
          </span>
        </param>
        <param name="consumeToAccept">
          <span data-ttu-id="67de7-184">
            <see langword="true" /> si la cible doit appeler <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> de façon synchrone pendant l'appel à <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, avant de renvoyer <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> pour utiliser le message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-184">
              <see langword="true" /> if the target must call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67de7-185">Offre un message au <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, donnant à la cible la possibilité d'utiliser ou de différer le message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-185">Offers a message to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, giving the target the opportunity to consume or postpone the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67de7-186">État du message proposé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-186">The status of the offered message.</span>
          </span>
          <span data-ttu-id="67de7-187">Si le message a été accepté par la cible, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> est retourné, et la source ne doit plus utiliser le message envoyé, car elle est désormais la propriété de la cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-187">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, as it is now owned by the target.</span>
          </span>
          <span data-ttu-id="67de7-188">Si le message a été différé par la cible, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> est retournée comme notification que la cible peut ensuite essayer d'utiliser ou de réserver un message ; parallèlement, la source possède le message et peut toujours le proposer à d'autres blocs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-188">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span>
          </span>
          <span data-ttu-id="67de7-189">Si la cible avait par contre différé mais que la source avait la valeur <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> est retourné à la place.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-189">If the target would have otherwise postponed but source was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is instead returned.</span>
          </span>
          <span data-ttu-id="67de7-190">Si la cible a tenté de recevoir le message mais a échoué en raison de la source fournissant un message à une autre cible ou en l'ignorant simplement, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> est retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-190">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span>
          </span>
          <span data-ttu-id="67de7-191">Si la cible a choisi de ne pas recevoir le message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> est retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-191">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span>
          </span>
          <span data-ttu-id="67de7-192">Si la cible a choisi de ne pas recevoir le message et ne recevra jamais un autre message de cette source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> est retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-192">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="67de7-193">
            <paramref name="messageHeader" /> n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-193">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
          <span data-ttu-id="67de7-194">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-194">-or-</span>
          </span>
          <span data-ttu-id="67de7-195">
            <paramref name="consumeToAccept" /> peut avoir la valeur true uniquement s'il est fourni avec une <paramref name="source" /> différente de null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-195">
              <paramref name="consumeToAccept" /> may only be true if provided with a non-null <paramref name="source" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="transformManyBlock.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67de7-196">Retourne une chaîne qui représente le nom mis en forme de cette instance de <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-196">Returns a string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67de7-197">Chaîne qui représente le nom mis en forme de cette instance de <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-197">A string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67de7-198">Héritée de <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="67de7-198">Inherited from  <xref:System.Object> .</span></span> <span data-ttu-id="67de7-199">Utilise le <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span><span class="sxs-lookup"><span data-stu-id="67de7-199">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceive">
      <MemberSignature Language="C#" Value="public bool TryReceive (Predicate&lt;TOutput&gt; filter, out TOutput item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceive(class System.Predicate`1&lt;!TOutput&gt; filter, [out] !TOutput&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceive (filter As Predicate(Of TOutput), ByRef item As TOutput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceive(Predicate&lt;TOutput&gt; ^ filter, [Runtime::InteropServices::Out] TOutput % item);" />
      <MemberSignature Language="F#" Value="abstract member TryReceive : Predicate&lt;'Output&gt; *  -&gt; bool&#xA;override this.TryReceive : Predicate&lt;'Output&gt; *  -&gt; bool" Usage="transformManyBlock.TryReceive (filter, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceive(System.Predicate{`0},`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Predicate&lt;TOutput&gt;" />
        <Parameter Name="item" Type="TOutput" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="67de7-200">Attribut qu'une valeur doit passer avec succès pour sa réception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-200">The predicate value must successfully pass in order for it to be received.</span>
          </span>
          <span data-ttu-id="67de7-201">
            <paramref name="filter" /> peut être <see langword="null" />, dans ce cas, tous les éléments aboutissent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-201">
              <paramref name="filter" /> may be <see langword="null" />, in which case all items will pass.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="67de7-202">Élément envoyé à partir de la source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-202">The item received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67de7-203">Tente de recevoir de façon synchrone un élément de sortie disponible de <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-203">Attempts to synchronously receive an available output item from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67de7-204">
            <see langword="true" /> si un élément peut être reçu ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-204">
              <see langword="true" /> if an item could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67de7-205">Cette méthode ne bloque pas attendre la source fournir un élément.</span><span class="sxs-lookup"><span data-stu-id="67de7-205">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="67de7-206">Après avoir vérifié pour un élément, est retournée si un élément a été disponible ou non.</span><span class="sxs-lookup"><span data-stu-id="67de7-206">It will return after checking for an element, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceiveAll">
      <MemberSignature Language="C#" Value="public bool TryReceiveAll (out System.Collections.Generic.IList&lt;TOutput&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceiveAll([out] class System.Collections.Generic.IList`1&lt;!TOutput&gt;&amp; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceiveAll (ByRef items As IList(Of TOutput)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceiveAll([Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;TOutput&gt; ^ % items);" />
      <MemberSignature Language="F#" Value="abstract member TryReceiveAll :  -&gt; bool&#xA;override this.TryReceiveAll :  -&gt; bool" Usage="transformManyBlock.TryReceiveAll items" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IList&lt;TOutput&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="67de7-207">Éléments reçus de la source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-207">The items received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67de7-208">Tente de recevoir de façon synchrone tous les éléments disponibles de <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-208">Attempts to synchronously receive all available items from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67de7-209">
            <see langword="true" /> si un ou plusieurs éléments peuvent être reçus ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67de7-209">
              <see langword="true" /> if one or more items could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67de7-210">Cette méthode ne bloque pas attendre la source fournir un élément.</span><span class="sxs-lookup"><span data-stu-id="67de7-210">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="67de7-211">Après avoir vérifié les éléments, est retournée si un élément a été disponible ou non.</span><span class="sxs-lookup"><span data-stu-id="67de7-211">It will return after checking for elements, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>