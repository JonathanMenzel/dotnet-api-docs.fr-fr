<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BufferBlock`1.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac516a6794fdf79de01af71d14148f86cce8ac2ffcb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16a6794fdf79de01af71d14148f86cce8ac2ffcb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Dataflow.BufferBlock`1">
          <source>Specifies the type of the data buffered by this dataflow block.</source>
          <target state="translated">Spécifie le type des données mises en mémoire tampon par ce bloc de flux de données.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Dataflow.BufferBlock`1">
          <source>Provides a buffer for storing data.</source>
          <target state="translated">Fournit une mémoire tampon pour stocker des données.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /&gt;</ph>.</source>
          <target state="translated">Initialise un nouveau <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The options with which to configure this  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /&gt;</ph>.</source>
          <target state="translated">Options avec lesquelles configurer ce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /&gt;</ph> with the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" /&gt;</ph>.</source>
          <target state="translated">Initialise un nouveau <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /&gt;</ph> avec le <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.Complete">
          <source>Signals to the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> that it should not accept nor produce any more messages nor consume any more postponed messages.</source>
          <target state="translated">Signale à <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> qu'il ne doit plus recevoir ni produire de messages ou utiliser des messages différés.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.Complete">
          <source>After <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Complete%2A&gt;</ph> has been called on a dataflow block, that block will complete, and its <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A&gt;</ph> task will enter a final state after it has processed all previously available data.</source>
          <target state="translated">Une fois <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Complete%2A&gt;</ph> a été appelée sur un bloc de flux de données, ce bloc se termine et son <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A&gt;</ph> tâche passe un état final après avoir traité toutes les données précédemment disponibles.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.Complete">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Complete%2A&gt;</ph> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A&gt;</ph> task may be used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Complete%2A&gt;</ph> va pas empêcher le délai d’exécution se produit, mais plutôt émettra la demande ; pour attendre la fin se produise, le <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A&gt;</ph> tâche peut être utilisée.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that represents the asynchronous operation and completion of the dataflow block.</source>
          <target state="translated">Obtient une <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> qui représente l'opération asynchrone et l'achèvement du bloc de flux de données.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>The task.</source>
          <target state="translated">Tâche.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</source>
          <target state="translated">Un bloc de flux de données est considérée comme terminée quand elle n’est pas actuellement traite un message et quand il a la garantie qu’il ne traitera pas plus de messages.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> will transition to a completed state when the associated block has completed.</source>
          <target state="translated">Retourné <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> sera la transition vers un état terminé quand le bloc associé s’est terminée.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</source>
          <target state="translated">Il adopte le <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> sémantique définie par l’état quand le bloc termine son traitement avec succès en fonction du bloc de flux de données.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</source>
          <target state="translated">Il adopte le <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> état lorsque le bloc de flux de données a terminé le traitement prématurément en raison d’une exception non gérée, et il adopte le <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> état lorsque le bloc de flux de données est terminée. le traitement prématurément en raison de la réception d’une demande d’annulation.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>If the task completes in the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state, its <ph id="ph2">`Exception`</ph> property will return an <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> containing the one or more exceptions that caused the block to fail.</source>
          <target state="translated">Si la tâche se termine avec la <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> état, son <ph id="ph2">`Exception`</ph> propriété retournera un <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> contenant une ou plusieurs exceptions qui a provoqué l’échec du bloc.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Count">
          <source>Gets the number of items currently stored in the buffer.</source>
          <target state="translated">Obtient le nombre d'éléments actuellement stockés dans la mémoire tampon.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Count">
          <source>The number of items.</source>
          <target state="translated">Nombre d'éléments.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect this source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> auquel connecter cette source.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /&gt;</ph> instance that configures the link.</source>
          <target state="translated">Instance <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /&gt;</ph> qui configure le lien.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>Links the  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</source>
          <target state="translated">Lie le <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> au <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>An IDisposable that, upon calling Dispose, will unlink the source from the target.</source>
          <target state="translated">IDisposable qui, en appelant Dispose, dissocie la source de la cible.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is null (Nothing in Visual Basic) or  <ph id="ph2">&lt;paramref name="linkOptions" /&gt;</ph> is null (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> est Null (Nothing en Visual Basic) ou <ph id="ph2">&lt;paramref name="linkOptions" /&gt;</ph> est Null (Nothing en Visual Basic).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>The  <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that caused the faulting.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> ayant provoqué l’erreur.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>Causes the  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> to complete in a <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> state.</source>
          <target state="translated">Provoque l’achèvement du <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> à l’état <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>After <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A&gt;</ph> has been called on a dataflow block, that block will complete, and its  <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A&gt;</ph> task will enter a final state.</source>
          <target state="translated">Après avoir <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A&gt;</ph> a été appelée sur un bloc de flux de données, ce bloc se termine et son <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A&gt;</ph> tâche passe à un état final.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</source>
          <target state="translated">Provoquer une erreur dans un bloc, comme avec l’annulation d’un bloc, entraîne mis en mémoire tampon des messages (messages d’entrée non traités ainsi que les messages de sortie unoffered) perdues.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>The <ph id="ph1">&lt;paramref name="exception" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exception" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> of the message being consumed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> du message en cours d'utilisation.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> consuming the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> absorbant le message.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was successfully consumed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le message a été consommé avec succès ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>Called by a linked <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to accept and consume a <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> previously offered by this <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Appelé par un <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> lié pour recevoir et utiliser un <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> précédemment proposé par ce <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>The value of the consumed message.</source>
          <target state="translated">Valeur du message consommé.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>This may correspond to a different  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> instance than was previously reserved and passed as the <ph id="ph2">&lt;paramref name="messageHeader" /&gt;</ph> to  <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph>.</source>
          <target state="translated">Cela peut correspondre à une instance de <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> différente de celle qui a été précédemment réservée et transmise comme <ph id="ph2">&lt;paramref name="messageHeader" /&gt;</ph> à <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>The consuming <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> must use the returned value instead of the value passed as <ph id="ph2">&lt;paramref name="messageValue" /&gt;</ph> through <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> consommateur doit utiliser la valeur retournée au lieu de la valeur passée comme <ph id="ph2">&lt;paramref name="messageValue" /&gt;</ph> via <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>If the message requested is not available, the return value will be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si le message demandé n'est pas disponible, la valeur de retour est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>Only <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> instances linked to this <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> instance may use <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A&gt;</ph>, and it must only be used to consume <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> instances previously offered by this source to the target.</source>
          <target state="translated">Uniquement <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> les instances liées à ce <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> instance peut utiliser <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A&gt;</ph>, et il doit être utilisé uniquement pour consommer <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> instances précédemment offert par cette source à la cible.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>The <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> n'est pas valide.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> of the reserved message being released.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> du message réservé en cours de libération.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> releasing the message it previously reserved.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> libérant le message précédemment réservé.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>Called by a linked <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to release a previously reserved <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> by this <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Appelé par un <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> lié pour libérer un <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> précédemment réservé par ce <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>Only <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> instances linked to this <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> instance may use <ph id="ph3">`ReleaseReservation`</ph>, and it must only be used to release <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> instances previously and successfully reserved by the target.</source>
          <target state="translated">Uniquement <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> les instances liées à ce <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> instance peut utiliser <ph id="ph3">`ReleaseReservation`</ph>, et il doit être utilisé uniquement pour la version <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> instances précédemment et a été réservés par la cible.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> n'est pas valide.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> did not have the message reserved.</source>
          <target state="translated">La <ph id="ph1">&lt;paramref name="target" /&gt;</ph> ne contient pas le message réservé.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> of the message being reserved.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> du message en cours de réservation.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> reserving the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> réservant le message.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>Called by a linked <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to reserve a previously offered <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> by this <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Appelé par un <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> lié pour réserver un <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> précédemment proposé par ce <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was successfully reserved; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le message a été réservé avec succès ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>Only <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> instances linked to this <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> instance may use <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A&gt;</ph>, and it must only be used to reserve <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> instances previously offered by this source to the target.</source>
          <target state="translated">Uniquement <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> les instances liées à ce <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> instance peut utiliser <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A&gt;</ph>, et il doit être utilisé uniquement pour réserver <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> instances précédemment offert par cette source à la cible.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>If <ph id="ph1">`true`</ph> is returned, the  <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> must subsequently call either  <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A&gt;</ph> or  <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A&gt;</ph> for this message.</source>
          <target state="translated">Si <ph id="ph1">`true`</ph> est retourné, le <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> doit ensuite appeler <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A&gt;</ph> pour ce message.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>Failure to do so may result in the source being unable to propagate any further messages to this or other targets.</source>
          <target state="translated">Cela peut entraîner la source de l’impossibilité de se propager de n’importe quel autre message à ce ou d’autres cibles.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A&gt;</ph> must not be called while the target is holding any internal locks.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A&gt;</ph> ne doit pas être appelée pendant que la cible est maintenant tous les verrous internes.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>Doing so will violate the lock hierarchy necessary to avoid deadlocks in a dataflow network.</source>
          <target state="translated">Cela violeront la hiérarchie de verrouillage nécessaire pour éviter les blocages dans un réseau de flux de données.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> n'est pas valide.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> instance that represents the header of the message being offered.</source>
          <target state="translated">Instance <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> qui représente l'en-tête du message qui est proposé.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The value of the message being offered.</source>
          <target state="translated">Valeur du message proposé.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> offering the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> qui transmet le message.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>This may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Celui-ci peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>Set to true to instruct the target to call <ph id="ph1">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph> synchronously during the call to <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /&gt;</ph>, prior to returning <ph id="ph3">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph>, in order to consume the message.</source>
          <target state="translated">Définit sur true pour indiquer à la cible d’appeler <ph id="ph1">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph> de façon synchrone pendant l’appel à <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /&gt;</ph>, avant de retourner <ph id="ph3">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph>, pour consommer le message.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>Offers a message to the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>, giving the target the opportunity to consume or postpone the message.</source>
          <target state="translated">Offre un message au <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>, donnant à la cible la possibilité d'utiliser ou de différer le message.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The status of the offered message.</source>
          <target state="translated">État du message proposé.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the message was accepted by the target, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph> is returned, and the source should no longer use the offered message, because it is now owned by the target.</source>
          <target state="translated">Si le message a été accepté par la cible, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph> est retourné, et la source ne doit plus utiliser le message envoyé, car elle est désormais la propriété de la cible.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the message was postponed by the target, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /&gt;</ph> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</source>
          <target state="translated">Si le message a été différé par la cible, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /&gt;</ph> est retournée comme notification que la cible peut ensuite essayer d'utiliser ou de réserver un message ; parallèlement, la source possède le message et peut toujours le proposer à d'autres blocs.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target would have otherwise postponed message, but <ph id="ph1">&lt;paramref name="source" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph> is instead returned.</source>
          <target state="translated">Si la cible avait par contre un message différé mais que la <ph id="ph1">&lt;paramref name="source" /&gt;</ph> avait la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph> serait retourné à la place.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /&gt;</ph> is returned.</source>
          <target state="translated">Si la cible a tenté de recevoir le message mais a échoué en raison de la source fournissant un message à une autre cible ou en l'ignorant simplement, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /&gt;</ph> est retourné.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target chose not to accept the message, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph> is returned.</source>
          <target state="translated">Si la cible a choisi de ne pas recevoir le message, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph> est retourné.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target chose not to accept the message and will never accept another message from this source, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /&gt;</ph> is returned.</source>
          <target state="translated">Si la cible a choisi de ne pas recevoir le message et ne recevra jamais un autre message de cette source, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /&gt;</ph> est retourné.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The  <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> n’est pas valide.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>-or- <ph id="ph1">&lt;paramref name="consumeToAccept" /&gt;</ph> may only be true if provided with a non-null <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">ou <ph id="ph1">&lt;paramref name="consumeToAccept" /&gt;</ph> peut avoir la valeur true uniquement s’il est fourni avec une <ph id="ph2">&lt;paramref name="source" /&gt;</ph> non Null.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.ToString">
          <source>Returns a string that represents the formatted name of this  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> instance.</source>
          <target state="translated">Retourne une chaîne qui représente le nom mis en forme de cette instance de <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.ToString">
          <source>A string that represents the formatted name of this  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> instance.</source>
          <target state="translated">Chaîne qui représente le nom mis en forme de cette instance de <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.ToString">
          <source>Inherited from  <ph id="ph1">&lt;xref:System.Object&gt;</ph> .</source>
          <target state="translated">Hérité de <ph id="ph1">&lt;xref:System.Object&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.ToString">
          <source>Uses the  <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A&gt;</ph> option.</source>
          <target state="translated">Utilise le <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A&gt;</ph> option.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source>The predicate value must successfully pass in order for it to be received.</source>
          <target state="translated">Attribut qu'une valeur doit passer avec succès pour sa réception.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source><bpt id="p1">&lt;c&gt;</bpt>filter<ept id="p1">&lt;/c&gt;</ept> may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, in which case all items will pass.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>filter<ept id="p1">&lt;/c&gt;</ept> peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph>, auquel cas tous les éléments aboutissent.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source>The item received from the source.</source>
          <target state="translated">Élément envoyé à partir de la source.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source>Attempts to synchronously receive an available output item from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Tente de recevoir de façon synchrone un élément de sortie disponible de <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si un élément peut être reçu ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source>This method does not block waiting for the source to provide an item.</source>
          <target state="translated">Cette méthode ne bloque pas l’attente de la source pour fournir un élément.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source>It will return after checking for an element, whether or not an element was available.</source>
          <target state="translated">Il retournera après l’archivage d’un élément, un élément était disponible ou non.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
          <source>The items received from the source.</source>
          <target state="translated">Éléments reçus de la source.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
          <source>Attempts to synchronously receive all available items from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Tente de recevoir de façon synchrone tous les éléments disponibles de <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if one or more items could be received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si un ou plusieurs éléments peuvent être reçus ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
          <source>This method does not block waiting for the source to provide an item.</source>
          <target state="translated">Cette méthode ne bloque pas l’attente de la source pour fournir un élément.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
          <source>It will return after checking for elements, whether or not an element was available.</source>
          <target state="translated">Il retournera après la vérification des éléments, ou non un élément n’était pas disponible.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>