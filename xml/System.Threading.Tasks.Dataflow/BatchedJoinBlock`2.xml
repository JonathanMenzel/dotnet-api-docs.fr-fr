<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BatchedJoinBlock`2.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d95e3d1269f93fae7f5f665e84018beb57b9bbff.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d95e3d1269f93fae7f5f665e84018beb57b9bbff</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2">
          <source>Specifies the type of data accepted by the block's first target.</source>
          <target state="translated">Spécifie le type de données accepté par la première cible du bloc.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2">
          <source>Specifies the type of data accepted by the block's second target.</source>
          <target state="translated">Spécifie le type de données accepté par la deuxième cible du bloc.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2">
          <source>Provides a dataflow block that batches a specified number of inputs of potentially differing types provided to one or more of its targets.</source>
          <target state="translated">Fournit un bloc de flux de données qui traite par lot un nombre spécifié d'entrées de types potentiellement différents fournis à une ou plusieurs de ses cibles.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32)">
          <source>The number of items to group into a batch.</source>
          <target state="translated">Nombre d'éléments à regrouper en un lot.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph> with the specified configuration.</source>
          <target state="translated">Initialise un nouveau <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph> avec la configuration spécifiée.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="batchSize" /&gt;</ph> must be positive.</source>
          <target state="translated">La <ph id="ph1">&lt;paramref name="batchSize" /&gt;</ph> doit être positive.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
          <source>The number of items to group into a batch.</source>
          <target state="translated">Nombre d'éléments à regrouper en un lot.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
          <source>The options with which to configure this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph>.</source>
          <target state="translated">Options permettant de configurer ce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph> with the specified configuration.</source>
          <target state="translated">Initialise un nouveau <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph> avec la configuration spécifiée.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.BatchSize">
          <source>Gets the size of the batches generated by this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph>.</source>
          <target state="translated">Obtient la taille des lots générés par ce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.BatchSize">
          <source>The batch size.</source>
          <target state="translated">Taille du lot</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Complete">
          <source>Signals to the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> that it should not accept nor produce any more messages nor consume any more postponed messages.</source>
          <target state="translated">Signale à <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> qu'il ne doit plus recevoir ni produire de messages ou utiliser des messages différés.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Complete">
          <source>After <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Complete%2A&gt;</ph> has been called on a dataflow block, that block will complete, and its <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Completion%2A&gt;</ph> task will enter a final state after it has processed all previously available data.</source>
          <target state="translated">Une fois <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Complete%2A&gt;</ph> a été appelée sur un bloc de flux de données, ce bloc se termine et son <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Completion%2A&gt;</ph> tâche passe un état final après avoir traité toutes les données précédemment disponibles.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Complete">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Complete%2A&gt;</ph> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Completion%2A&gt;</ph> task may be used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Complete%2A&gt;</ph> va pas empêcher le délai d’exécution se produit, mais plutôt émettra la demande ; pour attendre la fin se produise, le <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Completion%2A&gt;</ph> tâche peut être utilisée.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that represents the asynchronous operation and completion of the dataflow block.</source>
          <target state="translated">Obtient une <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> qui représente l'opération asynchrone et l'achèvement du bloc de flux de données.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>The task.</source>
          <target state="translated">Tâche.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</source>
          <target state="translated">Un bloc de flux de données est considérée comme terminée quand elle n’est pas actuellement traite un message et quand il a la garantie qu’il ne traitera pas plus de messages.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> will transition to a completed state when the associated block has completed.</source>
          <target state="translated">Retourné <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> sera la transition vers un état terminé quand le bloc associé s’est terminée.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</source>
          <target state="translated">Il adopte le <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> sémantique définie par l’état quand le bloc termine son traitement avec succès en fonction du bloc de flux de données.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</source>
          <target state="translated">Il adopte le <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> état lorsque le bloc de flux de données a terminé le traitement prématurément en raison d’une exception non gérée, et il adopte le <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> état lorsque le bloc de flux de données est terminée. le traitement prématurément en raison de la réception d’une demande d’annulation.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>If the task completes in the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state, its <ph id="ph2">`Exception`</ph> property will return an <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> containing the one or more exceptions that caused the block to fail.</source>
          <target state="translated">Si la tâche se termine avec la <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> état, son <ph id="ph2">`Exception`</ph> propriété retournera un <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> contenant une ou plusieurs exceptions qui a provoqué l’échec du bloc.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect this source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> auquel connecter cette source.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /&gt;</ph> instance that configures the link.</source>
          <target state="translated">Instance <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /&gt;</ph> qui configure le lien.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>Links the  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> .</source>
          <target state="translated">Lie le <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> au <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>An IDisposable that, upon calling Dispose, will unlink the source from the target.</source>
          <target state="translated">IDisposable qui, en appelant Dispose, dissocie la source de la cible.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is null (Nothing in Visual Basic) or  <ph id="ph2">&lt;paramref name="linkOptions" /&gt;</ph> is null (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> est Null (Nothing en Visual Basic) ou <ph id="ph2">&lt;paramref name="linkOptions" /&gt;</ph> est Null (Nothing en Visual Basic).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.OutputCount">
          <source>Gets the number of output items available to be received from this block.</source>
          <target state="translated">Obtient le nombre d'éléments de sortie disponibles en provenance de ce bloc.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.OutputCount">
          <source>The number of output items.</source>
          <target state="translated">Nombre d'éléments de sortie.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that caused the faulting.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> ayant provoqué l'erreur.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> to complete in a  <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> state.</source>
          <target state="translated">Provoque l’achèvement du <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> à l’état <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>The <ph id="ph1">&lt;paramref name="exception" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exception" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target1">
          <source>Gets a target that may be used to offer messages of the first type.</source>
          <target state="translated">Obtient une cible qui peut être utilisée pour offrir des messages du premier type.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target1">
          <source>The target.</source>
          <target state="translated">Cible.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target2">
          <source>Gets a target that may be used to offer messages of the second type.</source>
          <target state="translated">Obtient une cible qui peut être utilisée pour offrir des messages du deuxième type.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target2">
          <source>The target.</source>
          <target state="translated">Cible.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.ToString">
          <source>Returns a string that represents the formatted name of this  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> instance.</source>
          <target state="translated">Retourne une chaîne qui représente le nom mis en forme de cette instance de <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.ToString">
          <source>A string that represents the formatted name of this  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> instance.</source>
          <target state="translated">Chaîne qui représente le nom mis en forme de cette instance de <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.ToString">
          <source>Inherited from  <ph id="ph1">&lt;xref:System.Object&gt;</ph> .</source>
          <target state="translated">Hérité de <ph id="ph1">&lt;xref:System.Object&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.ToString">
          <source>Uses the  <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A&gt;</ph> option.</source>
          <target state="translated">Utilise le <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A&gt;</ph> option.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source>The predicate a value must successfully pass in order for it to be received.</source>
          <target state="translated">Attribut qu'une valeur doit passer avec succès pour sa réception.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source><bpt id="p1">&lt;c&gt;</bpt>filter<ept id="p1">&lt;/c&gt;</ept> may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, in which case all items will pass.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>filter<ept id="p1">&lt;/c&gt;</ept> peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph>, auquel cas tous les éléments aboutissent.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source>The item received from the source.</source>
          <target state="translated">Élément envoyé à partir de la source.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source>Attempts to synchronously receive an available output item from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Tente de recevoir de façon synchrone un élément de sortie disponible de <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si un élément peut être reçu ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source>This method does not block waiting for the source to provide an item.</source>
          <target state="translated">Cette méthode ne bloque pas l’attente de la source pour fournir un élément.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source>It will return after checking for an element, whether or not an element was available.</source>
          <target state="translated">Il retournera après l’archivage d’un élément, un élément était disponible ou non.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)">
          <source>The items received from the source.</source>
          <target state="translated">Éléments reçus de la source.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)">
          <source>Attempts to synchronously receive all available items from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Tente de recevoir de façon synchrone tous les éléments disponibles de <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if one or more items could be received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si un ou plusieurs éléments peuvent être reçus ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)">
          <source>This method does not block waiting for the source to provide an item.</source>
          <target state="translated">Cette méthode ne bloque pas l’attente de la source pour fournir un élément.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)">
          <source>It will return after checking for elements, whether or not an element was available.</source>
          <target state="translated">Il retournera après la vérification des éléments, ou non un élément n’était pas disponible.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>