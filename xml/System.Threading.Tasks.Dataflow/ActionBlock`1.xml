<Type Name="ActionBlock&lt;TInput&gt;" FullName="System.Threading.Tasks.Dataflow.ActionBlock&lt;TInput&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cb06fbbb7ecd04eb3a9ea24bcbe275ec16bf254" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39850308" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ActionBlock&lt;TInput&gt; : System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActionBlock`1&lt;TInput&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TInput&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActionBlock(Of TInput)&#xA;Implements ITargetBlock(Of TInput)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput&gt;&#xA;public ref class ActionBlock sealed : System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="F#" Value="type ActionBlock&lt;'Input&gt; = class&#xA;    interface IDataflowBlock&#xA;    interface ITargetBlock&lt;'Input&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayContent,nq}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.Dataflow.ActionBlock`1/DebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TInput">
      <span data-ttu-id="6ef89-101">Type de données sur lequel ce <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> intervient.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6ef89-101">The type of data that this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> operates on.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="6ef89-102">Fournit un bloc de flux de données qui appelle un délégué <see cref="T:System.Action`1" /> fourni pour chaque élément de données reçu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6ef89-102">Provides a dataflow block that invokes a provided <see cref="T:System.Action`1" /> delegate for every data element received.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
## Examples  
 <span data-ttu-id="6ef89-103">L’exemple suivant illustre l’utilisation de la <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> classe pour effectuer plusieurs calculs à l’aide de blocs de flux de données et retourne le temps requis pour effectuer les calculs.</span><span class="sxs-lookup"><span data-stu-id="6ef89-103">The following example shows the use of the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> class to perform several computations using dataflow blocks, and returns the elapsed time required to perform the computations.</span></span> <span data-ttu-id="6ef89-104">Cet exemple de code fait partie d’un exemple plus complet fourni pour le [Comment : spécifier le degré de parallélisme dans un Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="6ef89-104">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Action&lt;TInput&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TInput&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Action(Of TInput))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Action&lt;TInput&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Action&lt;'Input&gt; -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;TInput&gt;" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="6ef89-105">Action à appeler à chaque élément de données reçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-105">The action to invoke with each data element received.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ef89-106">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> avec l'action spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-106">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ef89-107">
            <paramref name="action" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-107">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Func&lt;TInput,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Func(Of TInput, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Func&lt;TInput, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Func&lt;'Input, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="6ef89-108">Action à appeler à chaque élément de données reçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-108">The action to invoke with each data element received.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ef89-109">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> avec l'action spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-109">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ef89-110">
            <paramref name="action" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-110">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Action&lt;TInput&gt; action, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TInput&gt; action, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Action(Of TInput), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Action&lt;TInput&gt; ^ action, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Action&lt;'Input&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; (action, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;TInput&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="6ef89-111">Action à appeler à chaque élément de données reçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-111">The action to invoke with each data element received.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="6ef89-112">Options permettant de configurer ce <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-112">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ef89-113">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> avec l'action et les options de configuration spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-113">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action and configuration options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6ef89-114">L'exemple de code suivant montre comment utiliser le <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> constructeur pour créer une nouvelle <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29> objet.</span><span class="sxs-lookup"><span data-stu-id="6ef89-114">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29> constructor to create a new <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> object.</span></span> <span data-ttu-id="6ef89-115">Cet exemple de code fait partie d’un exemple plus complet fourni pour le [Comment : spécifier le degré de parallélisme dans un Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="6ef89-115">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ef89-116">
            <paramref name="action" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-116">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6ef89-117">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-117">-or-</span>
          </span>
          <span data-ttu-id="6ef89-118">
            <paramref name="dataflowBlockOptions" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-118">
              <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Func&lt;TInput,System.Threading.Tasks.Task&gt; action, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task&gt; action, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Func(Of TInput, Task), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Func&lt;TInput, System::Threading::Tasks::Task ^&gt; ^ action, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Func&lt;'Input, System.Threading.Tasks.Task&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; (action, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="6ef89-119">Action à appeler à chaque élément de données reçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-119">The action to invoke with each data element received.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="6ef89-120">Options permettant de configurer ce <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-120">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ef89-121">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> avec l'action et les options de configuration spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-121">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action and configuration options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ef89-122">
            <paramref name="action" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-122">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6ef89-123">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-123">-or-</span>
          </span>
          <span data-ttu-id="6ef89-124">
            <paramref name="dataflowBlockOptions" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-124">
              <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit&#xA;override this.Complete : unit -&gt; unit" Usage="actionBlock.Complete " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ef89-125">Signale au bloc de flux de données qu’il ne doit plus recevoir ni produire de messages ou utiliser des messages différés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-125">Signals to the dataflow block  that it shouldn't accept or produce any more messages and shouldn't consume any more postponed messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ef89-126">Une fois <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> a été appelée sur un bloc de flux de données, ce bloc se termine (afin que son <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> tâche passera à un état final) après avoir traité toutes les données précédemment disponibles.</span><span class="sxs-lookup"><span data-stu-id="6ef89-126">After <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> has been called on a dataflow block, that block will complete (so that its  <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> task will enter a final state) after it has processed all previously available data.</span></span> <span data-ttu-id="6ef89-127">Cette méthode ne bloque pas le délai d’exécution se produisent, mais lance la demande.</span><span class="sxs-lookup"><span data-stu-id="6ef89-127">This method will not block waiting for completion to occur, but will initiate the request.</span></span> <span data-ttu-id="6ef89-128">Pour attendre la fin se produise, vous devez utiliser le <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="6ef89-128">To wait for completion to occur, use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ef89-129">L’exemple suivant illustre l’utilisation de la <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> méthode pour signaler au bloc de flux de données qu’elle ne doit pas accepter ou produire plus de messages ni consommer des messages différés plus.</span><span class="sxs-lookup"><span data-stu-id="6ef89-129">The following example shows the use of the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> method to signal to the dataflow block  that it shouldn't accept or produce any more messages nor consume any more postponed messages .</span></span> <span data-ttu-id="6ef89-130">Cet exemple de code fait partie d’un exemple plus complet fourni pour le [Comment : spécifier le degré de parallélisme dans un Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="6ef89-130">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;.Completion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ef89-131">Obtient un objet <see cref="T:System.Threading.Tasks.Task" /> qui représente l’opération asynchrone et l’achèvement du bloc de flux de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-131">Gets a  <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation and completion of the dataflow block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ef89-132">Tâche terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-132">The completed task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ef89-133">Un bloc de flux de données est considéré comme terminé quand elle n’est pas actuellement traite un message et quand il a la garantie qu’il ne traitera pas plus de messages.</span><span class="sxs-lookup"><span data-stu-id="6ef89-133">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="6ef89-134">Retourné <xref:System.Threading.Tasks.Task> sera la transition vers un état terminé lorsque le bloc associé est terminée.</span><span class="sxs-lookup"><span data-stu-id="6ef89-134">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state  when the associated block has completed.</span></span> <span data-ttu-id="6ef89-135">Il adopte le <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> sémantique définie par l’état lorsque le bloc termine son traitement avec succès selon le bloc de flux de données.</span><span class="sxs-lookup"><span data-stu-id="6ef89-135">It will transition to the <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</span></span> <span data-ttu-id="6ef89-136">Il adopte le <xref:System.Threading.Tasks.TaskStatus.Faulted> état lorsque le bloc de flux de données a terminé le traitement prématurément en raison d’une exception non gérée, et il adopte le <xref:System.Threading.Tasks.TaskStatus.Canceled> état lorsque le bloc de flux de données est terminée prématurément après de traitement réception d’une demande d’annulation.</span><span class="sxs-lookup"><span data-stu-id="6ef89-136">It will transition to the <xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the  <xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely after receiving a cancellation request.</span></span> <span data-ttu-id="6ef89-137">Si la tâche se termine dans le <xref:System.Threading.Tasks.TaskStatus.Faulted> état, son `Exception` propriété retourne un <xref:System.AggregateException> exception qui contient une ou plusieurs exceptions qui a provoqué l’échec du bloc.</span><span class="sxs-lookup"><span data-stu-id="6ef89-137">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property returns an <xref:System.AggregateException> exception that contains one or more exceptions that caused the block to fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ef89-138">L’exemple suivant montre comment utiliser le <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> propriété pour attendre tous les messages d’être propagées à travers le réseau.</span><span class="sxs-lookup"><span data-stu-id="6ef89-138">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> property to wait for all messages to propagate through the network.</span></span> <span data-ttu-id="6ef89-139">Cet exemple de code fait partie d’un exemple plus complet fourni pour le [Comment : spécifier le degré de parallélisme dans un Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="6ef89-139">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputCount">
      <MemberSignature Language="C#" Value="public int InputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ActionBlock`1.InputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputCount : int" Usage="System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;.InputCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ef89-140">Obtient le nombre d'éléments d'entrée en attente de traitement par ce bloc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-140">Gets the number of input items waiting to be processed by this block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ef89-141">Nombre d'éléments d'entrée en attente de traitement par ce bloc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-141">The number of input items waiting to be processed by this block.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ef89-142">Le <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A> n’inclut pas tous les éléments qui sont en cours de traitement par le bloc ou tous les éléments qui ont déjà été traités par le bloc.</span><span class="sxs-lookup"><span data-stu-id="6ef89-142">The <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A> does not include any items that are currently being processed by the block or any items that have already been processed by the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public bool Post (TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Post(!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Post (item As TInput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Post(TInput item);" />
      <MemberSignature Language="F#" Value="member this.Post : 'Input -&gt; bool" Usage="actionBlock.Post item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="6ef89-143">Élément qui est proposé à la cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-143">The item being offered to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ef89-144">Publie un élément dans le bloc cible de flux de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-144">Posts an item to the target dataflow block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ef89-145">
            <see langword="true" /> si l'élément est publié dans le bloc de flux de données ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-145">
              <see langword="true" /> if the item is posted to the dataflow block; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6ef89-146">L’exemple suivant montre comment utiliser le <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A> méthode pour publier un élément dans le bloc de flux de données cible.</span><span class="sxs-lookup"><span data-stu-id="6ef89-146">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A> method to post an item to the target dataflow block.</span></span> <span data-ttu-id="6ef89-147">Cet exemple de code fait partie d’un exemple plus complet fourni pour le [Comment : spécifier le degré de parallélisme dans un Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="6ef89-147">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="6ef89-148">Exception ayant provoqué l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-148">The exception that caused the faulting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ef89-149">Provoque la fin du bloc de flux de données avec un état d'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-149">Causes the dataflow block to complete in a faulted state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ef89-150">Après avoir <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> a été appelée sur un bloc de flux de données, ce bloc se termine et que son <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> tâche passera à un état final.</span><span class="sxs-lookup"><span data-stu-id="6ef89-150">After <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> has been called on a dataflow block, that block will complete and its  <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="6ef89-151">Provoquer une erreur dans un bloc, comme avec l’annulation d’un bloc, entraîne mis en mémoire tampon des messages (messages d’entrée non traités ainsi que les messages de sortie unoffered) perdues.</span><span class="sxs-lookup"><span data-stu-id="6ef89-151">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ef89-152">
            <paramref name="exception" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-152">
              <paramref name="exception" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;TInput&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, TInput messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !TInput messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TInput&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;TInput&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As TInput, source As ISourceBlock(Of TInput), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of TInput).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, TInput messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TInput&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;::OfferMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="TInput" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="6ef89-153">En-tête du message proposé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-153">The header of the message being offered.</span>
          </span>
        </param>
        <param name="messageValue">
          <span data-ttu-id="6ef89-154">Valeur du message proposé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-154">The value of the message being offered.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="6ef89-155">Bloc de flux de données qui offre le message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-155">The dataflow block that is offering the message.</span>
          </span>
          <span data-ttu-id="6ef89-156">Celui-ci peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-156">This may be <see langword="null" />.</span>
          </span>
        </param>
        <param name="consumeToAccept">
          <span data-ttu-id="6ef89-157">
            <see langword="true" /> pour indiquer à la cible d’appeler <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> de façon synchrone pendant l’appel à <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, avant de retourner <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, pour consommer le message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-157">
              <see langword="true" /> to instruct the target to call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ef89-158">Offre un message au bloc de flux de données et lui donne la possibilité de le consommer ou le différer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-158">Offers a message to the dataflow block, and gives it the opportunity to consume or postpone the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ef89-159">État du message proposé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-159">The status of the offered message.</span>
          </span>
          <span data-ttu-id="6ef89-160">Si le message a été accepté par la cible, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> est retourné, et la source ne doit plus utiliser le message envoyé, car elle est désormais la propriété de la cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-160">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span>
          </span>
          <span data-ttu-id="6ef89-161">Si le message a été différé par la cible, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> est retournée comme notification que la cible peut ensuite essayer d'utiliser ou de réserver un message ; parallèlement, la source possède le message et peut toujours le proposer à d'autres blocs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-161">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span>
          </span>
          <span data-ttu-id="6ef89-162">Si la cible avait autrement différé le message alors que la source avait la valeur <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> aurait été retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-162">If the target would have otherwise postponed message, but source was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span>
          </span>
          <span data-ttu-id="6ef89-163">Si la cible a tenté de recevoir le message mais a échoué en raison de la source fournissant un message à une autre cible ou en l'ignorant simplement, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> est retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-163">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span>
          </span>
          <span data-ttu-id="6ef89-164">Si la cible a choisi de ne pas recevoir le message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> est retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-164">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span>
          </span>
          <span data-ttu-id="6ef89-165">Si la cible a choisi de ne pas recevoir le message et ne recevra jamais un autre message de cette source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> est retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-165">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6ef89-166">
            <paramref name="messageHeader" /> n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-166">
              <paramref name="messageHeader" /> is not valid.</span>
          </span>
          <span data-ttu-id="6ef89-167">ou <paramref name="consumeToAccept" /> peut avoir la valeur <see langword="true" /> uniquement s’il est fourni avec un <paramref name="source" /> différent de Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-167">-or- <paramref name="consumeToAccept" /> may be <see langword="true" /> only if provided with a non-null <paramref name="source" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="actionBlock.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ef89-168">Retourne une chaîne qui représente le nom mis en forme de cette instance <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-168">Returns a string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ef89-169">Chaîne qui représente le nom mis en forme de cette instance <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ef89-169">A string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ef89-170">Hérité de l'objet <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="6ef89-170">Inherited from <xref:System.Object>.</span></span> <span data-ttu-id="6ef89-171">Utilise le <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span><span class="sxs-lookup"><span data-stu-id="6ef89-171">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>