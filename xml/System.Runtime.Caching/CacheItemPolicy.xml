<Type Name="CacheItemPolicy" FullName="System.Runtime.Caching.CacheItemPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="015933685f63b3cb589e72b3e45686e7a6d483b2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36542321" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CacheItemPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CacheItemPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.CacheItemPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class CacheItemPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheItemPolicy" />
  <TypeSignature Language="F#" Value="type CacheItemPolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un jeu de détails d'éviction et d'expiration pour une entrée de cache spécifique.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Runtime.Caching.CacheItemPolicy> instance contient des informations qui peuvent être associées à une entrée de cache. Par exemple, lorsqu’une entrée de cache est sur le point d’être supprimé du cache, un <xref:System.Runtime.Caching.CacheEntryUpdateArguments> objet est passé à une méthode de rappel. Le <xref:System.Runtime.Caching.CacheEntryUpdateArguments.UpdatedCacheItemPolicy%2A> propriété de la <xref:System.Runtime.Caching.CacheEntryUpdateArguments> objet peut passer une référence à un <xref:System.Runtime.Caching.CacheItemPolicy> instance qui peut inclure des détails d’éviction et d’expiration sur l’entrée de cache.  
  
 Certaines méthodes dans le <xref:System.Runtime.Caching.MemoryCache> et <xref:System.Runtime.Caching.ObjectCache> classes acceptent un <xref:System.Runtime.Caching.CacheItemPolicy> instance pour décrire la stratégie d’éviction ou d’expiration.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un élément de cache en mémoire qui surveille le chemin d’accès pour un fichier texte. Le cache crée un <xref:System.Runtime.Caching.CacheItemPolicy> objet et définit le <xref:System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration%2A> propriété à vider le cache après 60 secondes.  
  
```vb  
Protected Sub Button1_Click(ByVal sender As Object, _  
            ByVal e As System.EventArgs) Handles Button1.Click  
    Dim cache As ObjectCache = MemoryCache.Default  
    Dim fileContents As String = TryCast(cache("filecontents"), _  
            String)  
    If fileContents Is Nothing Then  
        Dim policy As New CacheItemPolicy()  
        policy.AbsoluteExpiration = _  
            DateTimeOffset.Now.AddSeconds(60.0)  
        Dim filePaths As New List(Of String)()  
     Dim cachedFilePath As String = Server.MapPath("~") & _  
         "\cacheText.txt"  
        filePaths.Add(cachedFilePath)  
        policy.ChangeMonitors.Add(New _  
            HostFileChangeMonitor(filePaths))  
  
        ' Fetch the file contents.  
        fileContents = File.ReadAllText(cachedFilePath)  
        cache.Set("filecontents", fileContents, policy)  
    End If  
    Label1.Text = fileContents  
End Sub  
```  
  
```csharp  
protected void Button1_Click(object sender, EventArgs e)  
    {  
        ObjectCache cache = MemoryCache.Default;  
            string fileContents = cache["filecontents"] as string;  
            if (fileContents == null)  
            {  
                CacheItemPolicy policy = new CacheItemPolicy();  
                policy.AbsoluteExpiration =   
                    DateTimeOffset.Now.AddSeconds(60.0);  
  
                List<string> filePaths = new List<string>();  
             string cachedFilePath = Server.MapPath("~") +   
                 "\\cacheText.txt";  
             filePaths.Add(cachedFilePath);  
  
                policy.ChangeMonitors.Add(new   
                    HostFileChangeMonitor(filePaths));  
  
                // Fetch the file contents.  
                fileContents = File.ReadAllText(cachedFilePath);  
  
                cache.Set("filecontents", fileContents, policy);  
  
            }  
  
            Label1.Text = fileContents;  
        }  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Le <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> type est non scellé afin que les développeurs de cache personnalisé puissent l’étendre.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheItemPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.CacheItemPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheItemPolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Caching.CacheItemPolicy" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteExpiration">
      <MemberSignature Language="C#" Value="public DateTimeOffset AbsoluteExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset AbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property AbsoluteExpiration As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeOffset AbsoluteExpiration { DateTimeOffset get(); void set(DateTimeOffset value); };" />
      <MemberSignature Language="F#" Value="member this.AbsoluteExpiration : DateTimeOffset with get, set" Usage="System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si une entrée du cache doit être exclue à un point donné dans le temps.</summary>
        <value>Le point dans le temps auquel une entrée de cache est supprimée. La valeur par défaut est <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />, ce qui signifie que l'entrée n'expire pas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeMonitors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Runtime.Caching.ChangeMonitor&gt; ChangeMonitors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Runtime.Caching.ChangeMonitor&gt; ChangeMonitors" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeMonitors As Collection(Of ChangeMonitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Runtime::Caching::ChangeMonitor ^&gt; ^ ChangeMonitors { System::Collections::ObjectModel::Collection&lt;System::Runtime::Caching::ChangeMonitor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangeMonitors : System.Collections.ObjectModel.Collection&lt;System.Runtime.Caching.ChangeMonitor&gt;" Usage="System.Runtime.Caching.CacheItemPolicy.ChangeMonitors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Runtime.Caching.ChangeMonitor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection d'objets <see cref="T:System.Runtime.Caching.ChangeMonitor" /> associés à une entrée du cache.</summary>
        <value>Collection d'analyseurs de modification. La valeur par défaut est une collection vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez ajouter à ou supprimer des analyseurs de modifications qui sont associés à une entrée de cache. Toutefois, le jeu d’analyseurs de modification doit être terminé avant de passer un <xref:System.Runtime.Caching.CacheItemPolicy> de l’instance à un <xref:System.Runtime.Caching.ObjectCache> mise en œuvre. Si vous modifiez le jeu d’analyseurs de modification sur un <xref:System.Runtime.Caching.CacheItemPolicy> de l’objet après la <xref:System.Runtime.Caching.CacheItemPolicy> objet a été passé à une <xref:System.Runtime.Caching.ObjectCache> implémentation, les modifications n’ont aucun effet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Runtime.Caching.CacheItemPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.CacheItemPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As CacheItemPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Caching::CacheItemPriority Priority { System::Runtime::Caching::CacheItemPriority get(); void set(System::Runtime::Caching::CacheItemPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Runtime.Caching.CacheItemPriority with get, set" Usage="System.Runtime.Caching.CacheItemPolicy.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItemPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un paramètre de priorité utilisé pour déterminer s'il faut supprimer une entrée du cache.</summary>
        <value>Une des valeurs d'énumération qui indique la priorité d'éviction. La valeur de priorité par défaut est <see cref="F:System.Runtime.Caching.CacheItemPriority.Default" />, ce qui indique une absence de priorité.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans ASP.NET, l’énumération de priorité a seulement deux priorités possibles : <xref:System.Runtime.Caching.CacheItemPriority.Default> (ce qui ne signifie aucune priorité), et <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> (ce qui signifie que l’entrée ne peut pas être supprimé). Par conséquent, la seule priorité qui peut être définie est si une entrée de cache doit rester indéfiniment dans le cache.  
  
> [!IMPORTANT]
>  Ajout d’une entrée au cache avec un niveau de priorité de <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> risque de débordement avec des entrées qui ne peuvent jamais être supprimées du cache. Les implémentations de cache doivent définir le <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> priorité pour une entrée de cache uniquement si l’implémentation de cache fournit des moyens pour supprimer des entrées du cache et gérer le nombre d’entrées de cache.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovedCallback">
      <MemberSignature Language="C#" Value="public System.Runtime.Caching.CacheEntryRemovedCallback RemovedCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Caching.CacheEntryRemovedCallback RemovedCallback" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.RemovedCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property RemovedCallback As CacheEntryRemovedCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Caching::CacheEntryRemovedCallback ^ RemovedCallback { System::Runtime::Caching::CacheEntryRemovedCallback ^ get(); void set(System::Runtime::Caching::CacheEntryRemovedCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RemovedCallback : System.Runtime.Caching.CacheEntryRemovedCallback with get, set" Usage="System.Runtime.Caching.CacheItemPolicy.RemovedCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryRemovedCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une référence à un délégué <see cref="T:System.Runtime.Caching.CacheEntryRemovedCallback" /> appelé après la suppression d'une entrée du cache.</summary>
        <value>Référence à un délégué appelé par une implémentation de cache.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une fois une entrée de cache a été supprimée du cache, le cache appelle l’objet de rappel qui est référencé par le <xref:System.Runtime.Caching.CacheItemPolicy.RemovedCallback%2A> propriété. Une implémentation de cache peut utiliser ce rappel pour notifier la méthode d’appel qu’une entrée de cache a été supprimée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public TimeSpan SlidingExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property SlidingExpiration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SlidingExpiration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SlidingExpiration : TimeSpan with get, set" Usage="System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si une entrée du cache doit être évincée, si elle n'a pas été consultée dans un intervalle de temps donné.</summary>
        <value>Intervalle de temps pendant lequel une entrée du cache doit être consultée pour éviter son éviction du cache. La valeur par défaut est <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />, ce qui signifie que l'élément ne doit pas expirer d'après un intervalle de temps.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCallback">
      <MemberSignature Language="C#" Value="public System.Runtime.Caching.CacheEntryUpdateCallback UpdateCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Caching.CacheEntryUpdateCallback UpdateCallback" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.UpdateCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCallback As CacheEntryUpdateCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Caching::CacheEntryUpdateCallback ^ UpdateCallback { System::Runtime::Caching::CacheEntryUpdateCallback ^ get(); void set(System::Runtime::Caching::CacheEntryUpdateCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCallback : System.Runtime.Caching.CacheEntryUpdateCallback with get, set" Usage="System.Runtime.Caching.CacheItemPolicy.UpdateCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryUpdateCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une référence à un délégué <see cref="T:System.Runtime.Caching.CacheEntryUpdateCallback" /> appelé avant la suppression d'une entrée du cache.</summary>
        <value>Référence à un délégué appelé par une implémentation de cache.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>