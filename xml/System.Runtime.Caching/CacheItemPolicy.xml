<Type Name="CacheItemPolicy" FullName="System.Runtime.Caching.CacheItemPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88eb7fb93c5f8453c9b3179fe757b3ed4c72120a" />
    <Meta Name="ms.sourcegitcommit" Value="81d387351cc43c342755705908f4a5eb8af153d3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/04/2018" />
    <Meta Name="ms.locfileid" Value="34568205" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CacheItemPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CacheItemPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.CacheItemPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class CacheItemPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheItemPolicy" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ff7e3-101">Représente un jeu de détails d'éviction et d'expiration pour une entrée de cache spécifique.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff7e3-101">Represents a set of eviction and expiration details for a specific cache entry.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff7e3-102">A <xref:System.Runtime.Caching.CacheItemPolicy> instance contient des informations qui peuvent être associées à une entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-102">A <xref:System.Runtime.Caching.CacheItemPolicy> instance contains information that can be associated with a cache entry.</span></span> <span data-ttu-id="ff7e3-103">Par exemple, lorsqu’une entrée de cache est sur le point d’être supprimé du cache, un <xref:System.Runtime.Caching.CacheEntryUpdateArguments> objet est passé à une méthode de rappel.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-103">For example, when a cache entry is about to be removed from the cache, a <xref:System.Runtime.Caching.CacheEntryUpdateArguments> object is passed to a callback method.</span></span> <span data-ttu-id="ff7e3-104">Le <xref:System.Runtime.Caching.CacheEntryUpdateArguments.UpdatedCacheItemPolicy%2A> propriété de la <xref:System.Runtime.Caching.CacheEntryUpdateArguments> objet peut passer une référence à un <xref:System.Runtime.Caching.CacheItemPolicy> instance qui peut inclure des détails d’éviction et d’expiration sur l’entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-104">The <xref:System.Runtime.Caching.CacheEntryUpdateArguments.UpdatedCacheItemPolicy%2A> property of the <xref:System.Runtime.Caching.CacheEntryUpdateArguments> object can pass a reference to a <xref:System.Runtime.Caching.CacheItemPolicy> instance that can include eviction and expiration details about the cache entry.</span></span>  
  
 <span data-ttu-id="ff7e3-105">Certaines méthodes dans le <xref:System.Runtime.Caching.MemoryCache> et <xref:System.Runtime.Caching.ObjectCache> classes acceptent un <xref:System.Runtime.Caching.CacheItemPolicy> instance pour décrire la stratégie d’éviction ou d’expiration.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-105">Some methods in the <xref:System.Runtime.Caching.MemoryCache> and <xref:System.Runtime.Caching.ObjectCache> classes accept a <xref:System.Runtime.Caching.CacheItemPolicy> instance to describe eviction or expiration policy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff7e3-106">L’exemple suivant montre comment créer un élément de cache en mémoire qui surveille le chemin d’accès pour un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-106">The following example shows how to create an in-memory cache item that monitors the path for a text file.</span></span> <span data-ttu-id="ff7e3-107">Le cache crée un <xref:System.Runtime.Caching.CacheItemPolicy> objet et définit le <xref:System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration%2A> propriété à vider le cache après 60 secondes.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-107">The cache creates a <xref:System.Runtime.Caching.CacheItemPolicy> object and sets the <xref:System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration%2A> property to evict the cache after 60 seconds.</span></span>  
  
```vb  
Protected Sub Button1_Click(ByVal sender As Object, _  
            ByVal e As System.EventArgs) Handles Button1.Click  
    Dim cache As ObjectCache = MemoryCache.Default  
    Dim fileContents As String = TryCast(cache("filecontents"), _  
            String)  
    If fileContents Is Nothing Then  
        Dim policy As New CacheItemPolicy()  
        policy.AbsoluteExpiration = _  
            DateTimeOffset.Now.AddSeconds(60.0)  
        Dim filePaths As New List(Of String)()  
     Dim cachedFilePath As String = Server.MapPath("~") & _  
         "\cacheText.txt"  
        filePaths.Add(cachedFilePath)  
        policy.ChangeMonitors.Add(New _  
            HostFileChangeMonitor(filePaths))  
  
        ' Fetch the file contents.  
        fileContents = File.ReadAllText(cachedFilePath)  
        cache.Set("filecontents", fileContents, policy)  
    End If  
    Label1.Text = fileContents  
End Sub  
```  
  
```csharp  
protected void Button1_Click(object sender, EventArgs e)  
    {  
        ObjectCache cache = MemoryCache.Default;  
            string fileContents = cache["filecontents"] as string;  
            if (fileContents == null)  
            {  
                CacheItemPolicy policy = new CacheItemPolicy();  
                policy.AbsoluteExpiration =   
                    DateTimeOffset.Now.AddSeconds(60.0);  
  
                List<string> filePaths = new List<string>();  
             string cachedFilePath = Server.MapPath("~") +   
                 "\\cacheText.txt";  
             filePaths.Add(cachedFilePath);  
  
                policy.ChangeMonitors.Add(new   
                    HostFileChangeMonitor(filePaths));  
  
                // Fetch the file contents.  
                fileContents = File.ReadAllText(cachedFilePath);  
  
                cache.Set("filecontents", fileContents, policy);  
  
            }  
  
            Label1.Text = fileContents;  
        }  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="ff7e3-108">
        <para>Le <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> type est non scellé afin que les développeurs de cache personnalisé puissent l’étendre.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="ff7e3-108">
          <para>The <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> type is unsealed so that custom cache developers can extend it.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheItemPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.CacheItemPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheItemPolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff7e3-109">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Caching.CacheItemPolicy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-109">Initializes a new instance of the <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteExpiration">
      <MemberSignature Language="C#" Value="public DateTimeOffset AbsoluteExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset AbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property AbsoluteExpiration As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeOffset AbsoluteExpiration { DateTimeOffset get(); void set(DateTimeOffset value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff7e3-110">Obtient ou définit une valeur qui indique si une entrée du cache doit être exclue à un point donné dans le temps.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-110">Gets or sets a value that indicates whether a cache entry should be evicted at a specified point in time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff7e3-111">Le point dans le temps auquel une entrée de cache est supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-111">The point in time at which a cache entry is evicted.</span>
          </span>
          <span data-ttu-id="ff7e3-112">La valeur par défaut est <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />, ce qui signifie que l'entrée n'expire pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-112">The default value is <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />, meaning that the entry does not expire.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeMonitors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Runtime.Caching.ChangeMonitor&gt; ChangeMonitors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Runtime.Caching.ChangeMonitor&gt; ChangeMonitors" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeMonitors As Collection(Of ChangeMonitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Runtime::Caching::ChangeMonitor ^&gt; ^ ChangeMonitors { System::Collections::ObjectModel::Collection&lt;System::Runtime::Caching::ChangeMonitor ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Runtime.Caching.ChangeMonitor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff7e3-113">Obtient une collection d'objets <see cref="T:System.Runtime.Caching.ChangeMonitor" /> associés à une entrée du cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-113">Gets a collection of <see cref="T:System.Runtime.Caching.ChangeMonitor" /> objects that are associated with a cache entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff7e3-114">Collection d'analyseurs de modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-114">A collection of change monitors.</span>
          </span>
          <span data-ttu-id="ff7e3-115">La valeur par défaut est une collection vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-115">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff7e3-116">Vous pouvez ajouter à ou supprimer des analyseurs de modifications qui sont associés à une entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-116">You can add to or remove change monitors that are associated with a cache entry.</span></span> <span data-ttu-id="ff7e3-117">Toutefois, le jeu d’analyseurs de modification doit être terminé avant de passer un <xref:System.Runtime.Caching.CacheItemPolicy> de l’instance à un <xref:System.Runtime.Caching.ObjectCache> mise en œuvre.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-117">However, the set of change monitors must be complete before you pass a <xref:System.Runtime.Caching.CacheItemPolicy> instance to an <xref:System.Runtime.Caching.ObjectCache> implementation.</span></span> <span data-ttu-id="ff7e3-118">Si vous modifiez le jeu d’analyseurs de modification sur un <xref:System.Runtime.Caching.CacheItemPolicy> de l’objet après la <xref:System.Runtime.Caching.CacheItemPolicy> objet a été passé à une <xref:System.Runtime.Caching.ObjectCache> implémentation, les modifications n’ont aucun effet.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-118">If you change the set of change monitors on a <xref:System.Runtime.Caching.CacheItemPolicy> object after the <xref:System.Runtime.Caching.CacheItemPolicy> object has been passed to an <xref:System.Runtime.Caching.ObjectCache> implementation, the changes have no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Runtime.Caching.CacheItemPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.CacheItemPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As CacheItemPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Caching::CacheItemPriority Priority { System::Runtime::Caching::CacheItemPriority get(); void set(System::Runtime::Caching::CacheItemPriority value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItemPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff7e3-119">Obtient ou définit un paramètre de priorité utilisé pour déterminer s'il faut supprimer une entrée du cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-119">Gets or sets a priority setting that is used to determine whether to evict a cache entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff7e3-120">Une des valeurs d'énumération qui indique la priorité d'éviction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-120">One of the enumeration values that indicates the priority for eviction.</span>
          </span>
          <span data-ttu-id="ff7e3-121">La valeur de priorité par défaut est <see cref="F:System.Runtime.Caching.CacheItemPriority.Default" />, ce qui indique une absence de priorité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-121">The default priority value is <see cref="F:System.Runtime.Caching.CacheItemPriority.Default" />, which means no priority.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff7e3-122">Dans ASP.NET, l’énumération de priorité a seulement deux priorités possibles : <xref:System.Runtime.Caching.CacheItemPriority.Default> (ce qui ne signifie aucune priorité), et <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> (ce qui signifie que l’entrée ne peut pas être supprimé).</span><span class="sxs-lookup"><span data-stu-id="ff7e3-122">In ASP.NET, the priority enumeration only has two possible priorities: <xref:System.Runtime.Caching.CacheItemPriority.Default> (which means no priority), and <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> (which means the entry cannot be removed).</span></span> <span data-ttu-id="ff7e3-123">Par conséquent, la seule priorité qui peut être définie est si une entrée de cache doit rester indéfiniment dans le cache.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-123">Therefore, the only priority that can be set is whether a cache entry should remain in the cache forever.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ff7e3-124">Ajout d’une entrée au cache avec un niveau de priorité de <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> risque de débordement avec des entrées qui ne peuvent jamais être supprimées du cache.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-124">Adding an entry to the cache with a priority level of <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> can cause the cache to overflow with entries that can never be removed.</span></span> <span data-ttu-id="ff7e3-125">Les implémentations de cache doivent définir le <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> priorité pour une entrée de cache uniquement si l’implémentation de cache fournit des moyens pour supprimer des entrées du cache et gérer le nombre d’entrées de cache.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-125">Cache implementations should set the <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> priority for a cache entry only if the cache implementation provides ways to evict entries from the cache and to manage the number of cache entries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovedCallback">
      <MemberSignature Language="C#" Value="public System.Runtime.Caching.CacheEntryRemovedCallback RemovedCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Caching.CacheEntryRemovedCallback RemovedCallback" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.RemovedCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property RemovedCallback As CacheEntryRemovedCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Caching::CacheEntryRemovedCallback ^ RemovedCallback { System::Runtime::Caching::CacheEntryRemovedCallback ^ get(); void set(System::Runtime::Caching::CacheEntryRemovedCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryRemovedCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff7e3-126">Obtient ou définit une référence à un délégué <see cref="T:System.Runtime.Caching.CacheEntryRemovedCallback" /> appelé après la suppression d'une entrée du cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-126">Gets or sets a reference to a <see cref="T:System.Runtime.Caching.CacheEntryRemovedCallback" /> delegate that is called after an entry is removed from the cache.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff7e3-127">Référence à un délégué appelé par une implémentation de cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-127">A reference to a delegate that is called by a cache implementation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff7e3-128">Une fois une entrée de cache a été supprimée du cache, le cache appelle l’objet de rappel qui est référencé par le <xref:System.Runtime.Caching.CacheItemPolicy.RemovedCallback%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-128">After a cache entry has been removed from the cache, the cache invokes the callback object that is referenced by the <xref:System.Runtime.Caching.CacheItemPolicy.RemovedCallback%2A> property.</span></span> <span data-ttu-id="ff7e3-129">Une implémentation de cache peut utiliser ce rappel pour notifier la méthode d’appel qu’une entrée de cache a été supprimée.</span><span class="sxs-lookup"><span data-stu-id="ff7e3-129">A cache implementation can use this callback to notify the calling method that a cache entry has been removed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public TimeSpan SlidingExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property SlidingExpiration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SlidingExpiration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff7e3-130">Obtient ou définit une valeur qui indique si une entrée du cache doit être évincée, si elle n'a pas été consultée dans un intervalle de temps donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-130">Gets or sets a value that indicates whether a cache entry should be evicted if it has not been accessed in a given span of time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff7e3-131">Intervalle de temps pendant lequel une entrée du cache doit être consultée pour éviter son éviction du cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-131">A span of time within which a cache entry must be accessed before the cache entry is evicted from the cache.</span>
          </span>
          <span data-ttu-id="ff7e3-132">La valeur par défaut est <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />, ce qui signifie que l'élément ne doit pas expirer d'après un intervalle de temps.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-132">The default is <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />, meaning that the item should not be expired based on a time span.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCallback">
      <MemberSignature Language="C#" Value="public System.Runtime.Caching.CacheEntryUpdateCallback UpdateCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Caching.CacheEntryUpdateCallback UpdateCallback" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.UpdateCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCallback As CacheEntryUpdateCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Caching::CacheEntryUpdateCallback ^ UpdateCallback { System::Runtime::Caching::CacheEntryUpdateCallback ^ get(); void set(System::Runtime::Caching::CacheEntryUpdateCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryUpdateCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff7e3-133">Obtient ou définit une référence à un délégué <see cref="T:System.Runtime.Caching.CacheEntryUpdateCallback" /> appelé avant la suppression d'une entrée du cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-133">Gets or sets a reference to a <see cref="T:System.Runtime.Caching.CacheEntryUpdateCallback" /> delegate that is called before a cache entry is removed from the cache.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff7e3-134">Référence à un délégué appelé par une implémentation de cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e3-134">A reference to a delegate that is called by a cache implementation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>