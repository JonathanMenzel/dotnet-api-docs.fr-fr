<Type Name="ObjectCache" FullName="System.Runtime.Caching.ObjectCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb6768a024eb0de050aad40d92a2d0ba3066eb10" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53231961" /></Metadata><TypeSignature Language="C#" Value="public abstract class ObjectCache : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectCache extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ObjectCache" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectCache&#xA;Implements IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectCache abstract : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <TypeSignature Language="F#" Value="type ObjectCache = class&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="86bd5-101">Représente un cache d'objets et fournit les méthodes et propriétés de base pour l'accès au cache d'objets.</span><span class="sxs-lookup"><span data-stu-id="86bd5-101">Represents an object cache and provides the base methods and properties for accessing the object cache.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-102">Le <xref:System.Runtime.Caching.ObjectCache> type est le type de principal pour le cache d’objets en mémoire.</span><span class="sxs-lookup"><span data-stu-id="86bd5-102">The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache.</span></span> <span data-ttu-id="86bd5-103">Pour développer une implémentation de cache personnalisée, vous dérivez à partir de la <xref:System.Runtime.Caching.ObjectCache> classe.</span><span class="sxs-lookup"><span data-stu-id="86bd5-103">To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86bd5-104">Le <xref:System.Runtime.Caching.ObjectCache> classe est une nouveauté de la [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="86bd5-104">The <xref:System.Runtime.Caching.ObjectCache> class is new as of the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span>  
  
 <span data-ttu-id="86bd5-105">Intégrés <xref:System.Runtime.Caching.MemoryCache> classe dérive de la <xref:System.Runtime.Caching.ObjectCache> classe.</span><span class="sxs-lookup"><span data-stu-id="86bd5-105">The built-in <xref:System.Runtime.Caching.MemoryCache> class derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span> <span data-ttu-id="86bd5-106">Le <xref:System.Runtime.Caching.MemoryCache> classe est l’implémentation de cache d’objet concrète uniquement dans le [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] qui dérive de la <xref:System.Runtime.Caching.ObjectCache> classe.</span><span class="sxs-lookup"><span data-stu-id="86bd5-106">The <xref:System.Runtime.Caching.MemoryCache> class is the only concrete object cache implementation in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] that derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="86bd5-107">Ce type est thread-safe.</span><span class="sxs-lookup"><span data-stu-id="86bd5-107">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="86bd5-108">Étant donné que le <see cref="T:System.Runtime.Caching.ObjectCache" /> type représente uniquement les fonctions de cache communes, il n’est pas obligatoire pour l’un <see cref="T:System.Runtime.Caching.ObjectCache" /> instance doit être instanciée et obtenue.</span><span class="sxs-lookup"><span data-stu-id="86bd5-108">Because the <see cref="T:System.Runtime.Caching.ObjectCache" /> type represents only common cache functions, there is no requirement for how an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance must be instantiated and obtained.</span></span> <span data-ttu-id="86bd5-109">En outre, il n’est pas nécessaire que les implémentations concrètes de la <see cref="T:System.Runtime.Caching.ObjectCache" /> classe doit être singletons.</span><span class="sxs-lookup"><span data-stu-id="86bd5-109">In addition, there is no requirement that concrete implementations of the <see cref="T:System.Runtime.Caching.ObjectCache" /> class must be singletons.</span></span>  
  
 <block subset="none" type="note"><para><span data-ttu-id="86bd5-110"><see cref="T:System.Runtime.Caching.MemoryCache" /> n’est pas un singleton, mais vous devez créer uniquement une peu potentiellement qu’une seule <see cref="T:System.Runtime.Caching.MemoryCache" /> instance et le code qui met en cache des éléments doivent utiliser ces instances.</span><span class="sxs-lookup"><span data-stu-id="86bd5-110"><see cref="T:System.Runtime.Caching.MemoryCache" /> is not a singleton, but you should create only a few or potentially only one <see cref="T:System.Runtime.Caching.MemoryCache" /> instance and code that caches items should use those instances.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="86bd5-111">Lorsque vous héritez de la <see cref="T:System.Runtime.Caching.ObjectCache" /> (classe), vous devez substituer ses méthodes.</span><span class="sxs-lookup"><span data-stu-id="86bd5-111">When you inherit from the <see cref="T:System.Runtime.Caching.ObjectCache" /> class, you must override its methods.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86bd5-112">Appelée par des constructeurs de classes dérivées pour initialiser la classe <see cref="T:System.Runtime.Caching.ObjectCache" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-112">Called from constructors in derived classes in order to initialize the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="86bd5-113">En cas de substitution dans une classe dérivée, insère une entrée dans le cache, sans exiger qu'une entrée du cache existante avec une clé correspondante soit retournée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-113">When overridden in a derived class, inserts a cache entry into the cache, without requiring that an existing cache entry with a matching key be returned.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-114">Le <xref:System.Runtime.Caching.ObjectCache.Add%2A> surcharges de méthode essayant d’insérer une entrée dans le cache, sans remplacer ni supprimer une entrée de cache existante qui a la même clé.</span><span class="sxs-lookup"><span data-stu-id="86bd5-114">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads try to insert a cache entry into the cache, without overwriting or removing an existing cache entry that has the same key.</span></span> <span data-ttu-id="86bd5-115">L’entrée de cache peut être typé <xref:System.Runtime.Caching.CacheItem> objet ou un objet générique.</span><span class="sxs-lookup"><span data-stu-id="86bd5-115">The cache entry can be a typed <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="86bd5-116">Le <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> surcharges de méthode et la <xref:System.Runtime.Caching.ObjectCache.Add%2A> surcharges de méthode ont une différence significative.</span><span class="sxs-lookup"><span data-stu-id="86bd5-116">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads have one significant difference.</span></span> <span data-ttu-id="86bd5-117">Lorsque ces méthodes insèrent une entrée de cache, si une entrée correspondante est trouvée dans le cache, le <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> surcharges de méthode retournent l’entrée de cache existante, mais la <xref:System.Runtime.Caching.ObjectCache.Add%2A> n’est pas le cas de surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="86bd5-117">When these methods insert a cache entry, if a matching entry is found in the cache, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads return the existing cache entry, but the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads do not.</span></span> <span data-ttu-id="86bd5-118">Ces différentes surcharges de méthode permet aux appelants d’optimiser leur code s’ils ont besoin de l’entrée de cache existante.</span><span class="sxs-lookup"><span data-stu-id="86bd5-118">Having these different method overloads enables callers to optimize their code based on whether they need the existing cache entry.</span></span> <span data-ttu-id="86bd5-119">Dans les caches distribués, en renvoyant une valeur existante à l’aide de la <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> méthode peut être plus coûteuse que pour renvoyer une valeur booléenne à l’aide de <xref:System.Runtime.Caching.ObjectCache.Add%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="86bd5-119">In distributed caches, returning an existing value by using the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method might be more expensive than returning a Boolean value by using <xref:System.Runtime.Caching.ObjectCache.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (item As CacheItem, policy As CacheItemPolicy) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Add(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool&#xA;override this.Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool" Usage="objectCache.Add (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="86bd5-120">Objet à ajouter.</span><span class="sxs-lookup"><span data-stu-id="86bd5-120">The object to add.</span></span></param>
        <param name="policy"><span data-ttu-id="86bd5-121">Objet qui contient les informations d'éviction de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-121">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="86bd5-122">Cet objet fournit des options d'éviction autres que la simple expiration absolue.</span><span class="sxs-lookup"><span data-stu-id="86bd5-122">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="86bd5-123">En cas de substitution dans une classe dérivée, tente d'insérer une entrée dans le cache sous forme d'instance <see cref="T:System.Runtime.Caching.CacheItem" /> et ajoute des détails concernant la méthode d'éviction de l'entrée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-123">When overridden in a derived class, tries to insert a cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, and adds details about how the entry should be evicted.</span></span></summary>
        <returns><span data-ttu-id="86bd5-124"><see langword="true" /> si l'insertion a réussi ou <see langword="false" /> si une entrée du cache possède déjà la même clé que <paramref name="item" /></span><span class="sxs-lookup"><span data-stu-id="86bd5-124"><see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="item" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-125">Le <xref:System.Runtime.Caching.ObjectCache.Add%2A> surcharges de méthode sont virtuelles (pas abstraites) sur le <xref:System.Runtime.Caching.ObjectCache> classe, car le <xref:System.Runtime.Caching.ObjectCache.Add%2A> méthode appelle en interne <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span><span class="sxs-lookup"><span data-stu-id="86bd5-125">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="86bd5-126">Cela réduit le nombre de surcharges de méthode qui a un implémenteur de cache doit fournir.</span><span class="sxs-lookup"><span data-stu-id="86bd5-126">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="86bd5-127">Si une implémentation de cache ne requiert pas de comportement spécial pour le <xref:System.Runtime.Caching.ObjectCache.Add%2A> (méthode), il suffit d’implémenter la <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="86bd5-127">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * DateTimeOffset * string -&gt; bool&#xA;override this.Add : string * obj * DateTimeOffset * string -&gt; bool" Usage="objectCache.Add (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="86bd5-128">Identificateur unique de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-128">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="86bd5-129">Objet à insérer.</span><span class="sxs-lookup"><span data-stu-id="86bd5-129">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="86bd5-130">Date et heure fixes auxquelles l'entrée de cache expirera.</span><span class="sxs-lookup"><span data-stu-id="86bd5-130">The fixed date and time at which the cache entry will expire.</span></span> <span data-ttu-id="86bd5-131">Ce paramètre est obligatoire lorsque la méthode <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-131">This parameter is required when the <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> method is called.</span></span></param>
        <param name="regionName"><span data-ttu-id="86bd5-132">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-132">Optional.</span></span> <span data-ttu-id="86bd5-133">Région nommée du cache à laquelle l'entrée de cache peut être ajoutée, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-133">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="86bd5-134">Dans la mesure où les régions ne sont pas implémentées dans [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], la valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-134">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-135">En cas de substitution dans une classe dérivée, insère une entrée dans le cache sans remplacer d'entrée d'entrée de cache existante.</span><span class="sxs-lookup"><span data-stu-id="86bd5-135">When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</span></span></summary>
        <returns><span data-ttu-id="86bd5-136"><see langword="true" /> si l'insertion a réussi ou <see langword="false" /> si une entrée du cache possède déjà la même clé que <paramref name="key" /></span><span class="sxs-lookup"><span data-stu-id="86bd5-136"><see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-137">Le <xref:System.Runtime.Caching.ObjectCache.Add%2A> surcharges de méthode sont virtuelles (pas abstraites) sur le <xref:System.Runtime.Caching.ObjectCache> classe, car le <xref:System.Runtime.Caching.ObjectCache.Add%2A> méthode appelle en interne <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span><span class="sxs-lookup"><span data-stu-id="86bd5-137">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="86bd5-138">Cela réduit le nombre de surcharges de méthode qui a un implémenteur de cache doit fournir.</span><span class="sxs-lookup"><span data-stu-id="86bd5-138">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="86bd5-139">Si une implémentation de cache ne requiert pas de comportement spécial pour le <xref:System.Runtime.Caching.ObjectCache.Add%2A> (méthode), il suffit d’implémenter la <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="86bd5-139">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool&#xA;override this.Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool" Usage="objectCache.Add (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="86bd5-140">Identificateur unique de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-140">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="86bd5-141">Objet à insérer.</span><span class="sxs-lookup"><span data-stu-id="86bd5-141">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="86bd5-142">Objet qui contient les informations d'éviction de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-142">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="86bd5-143">Cet objet fournit des options d'éviction autres que la simple expiration absolue.</span><span class="sxs-lookup"><span data-stu-id="86bd5-143">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="86bd5-144">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-144">Optional.</span></span> <span data-ttu-id="86bd5-145">Région nommée du cache à laquelle l'entrée de cache peut être ajoutée, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-145">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="86bd5-146">La valeur par défaut du paramètre facultatif est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-146">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-147">En cas de substitution dans une classe dérivée, insère une entrée dans le cache, en spécifiant des informations sur le mode de suppression de l'entrée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-147">When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="86bd5-148"><see langword="true" /> en cas d'insertion réussie ou <see langword="false" />, si une entrée du cache possède déjà la même clé que <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-148"><see langword="true" /> if the insertion try succeeds, or <see langword="false" /> if there is an already an entry in the cache with the same key as <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-149">Le <xref:System.Runtime.Caching.ObjectCache.Add%2A> surcharges de méthode sont virtuelles (pas abstraites) sur le <xref:System.Runtime.Caching.ObjectCache> classe, car le <xref:System.Runtime.Caching.ObjectCache.Add%2A> méthode appelle en interne <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span><span class="sxs-lookup"><span data-stu-id="86bd5-149">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="86bd5-150">Cela réduit le nombre de surcharges de méthode qui a un implémenteur de cache doit fournir.</span><span class="sxs-lookup"><span data-stu-id="86bd5-150">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="86bd5-151">Si une implémentation de cache ne requiert pas de comportement spécial pour le <xref:System.Runtime.Caching.ObjectCache.Add%2A> (méthode), il suffit d’implémenter la <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="86bd5-151">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="86bd5-152">En cas de substitution dans une classe dérivée, tente d'insérer une entrée dans le cache et retourne une entrée du cache existante avec une clé correspondante.</span><span class="sxs-lookup"><span data-stu-id="86bd5-152">When overridden in a derived class, tries to insert a cache entry into the cache, and returns an existing cache entry with a matching key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-153">Le <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> surcharges de méthode insérer une entrée dans le cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-153">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads insert an entry into the cache.</span></span> <span data-ttu-id="86bd5-154">Si une entrée de cache avec une clé correspondante existe déjà, ils retournent l’entrée existante.</span><span class="sxs-lookup"><span data-stu-id="86bd5-154">If a cache entry with a matching key already exists, they return the existing entry.</span></span> <span data-ttu-id="86bd5-155">L’entrée de cache peut être un <xref:System.Runtime.Caching.CacheItem> objet ou un objet générique.</span><span class="sxs-lookup"><span data-stu-id="86bd5-155">The cache entry can be a <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="86bd5-156">Il existe une différence entre la <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> surcharges et <xref:System.Runtime.Caching.ObjectCache.Add%2A> surcharges.</span><span class="sxs-lookup"><span data-stu-id="86bd5-156">There is one difference between the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads.</span></span> <span data-ttu-id="86bd5-157">Lorsque ces méthodes surchargées essaient d’insérer une entrée de cache, si une entrée existante se trouve qu’a une clé qui correspond à un existant inséré l’entrée du cache, le <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> surcharges retournent l’entrée de cache existante.</span><span class="sxs-lookup"><span data-stu-id="86bd5-157">When these overloaded methods try to insert a cache entry, if an existing entry is found that has a key that matches an existing inserted cache entry, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads return the existing cache entry.</span></span> <span data-ttu-id="86bd5-158">Le <xref:System.Runtime.Caching.ObjectCache.Add%2A> n’est pas le cas de surcharges.</span><span class="sxs-lookup"><span data-stu-id="86bd5-158">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads do not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem value, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (value As CacheItem, policy As CacheItemPolicy) As CacheItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Runtime::Caching::CacheItem ^ AddOrGetExisting(System::Runtime::Caching::CacheItem ^ value, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.AddOrGetExisting (value, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="86bd5-159">Objet à insérer.</span><span class="sxs-lookup"><span data-stu-id="86bd5-159">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="86bd5-160">Objet qui contient les informations d'éviction de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-160">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="86bd5-161">Cet objet fournit des options d'éviction autres que la simple expiration absolue.</span><span class="sxs-lookup"><span data-stu-id="86bd5-161">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="86bd5-162">En cas de substitution dans une classe dérivée, insère l'objet <see cref="T:System.Runtime.Caching.CacheItem" /> spécifié dans le cache, en spécifiant des informations sur le mode de suppression de l'entrée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-162">When overridden in a derived class, inserts the specified <see cref="T:System.Runtime.Caching.CacheItem" /> object into the cache, specifying information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="86bd5-163">S'il existe une entrée de cache ayant la même clé, entrée de cache spécifiée ; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-163">If a cache entry with the same key exists, the specified cache entry; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * DateTimeOffset * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="86bd5-164">Identificateur unique de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-164">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="86bd5-165">Objet à insérer.</span><span class="sxs-lookup"><span data-stu-id="86bd5-165">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="86bd5-166">Date et heure fixes auxquelles l'entrée de cache expirera.</span><span class="sxs-lookup"><span data-stu-id="86bd5-166">The fixed date and time at which the cache entry will expire.</span></span></param>
        <param name="regionName"><span data-ttu-id="86bd5-167">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-167">Optional.</span></span> <span data-ttu-id="86bd5-168">Région nommée du cache à laquelle l'entrée de cache peut être ajoutée, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-168">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="86bd5-169">La valeur par défaut du paramètre facultatif est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-169">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-170">En cas de substitution dans une classe dérivée, insère une entrée dans le cache, à l'aide d'une clé, d'un objet pour l'entrée du cache, d'une valeur d'expiration absolue et d'une région facultative dans laquelle ajouter le cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-170">When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</span></span></summary>
        <returns><span data-ttu-id="86bd5-171">S'il existe une entrée du cache ayant la même clé, valeur de l'entrée de cache spécifiée ; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-171">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-172">Cela <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> surcharge de méthode retourne une valeur d’objet, pas un <xref:System.Runtime.Caching.CacheItem> objet.</span><span class="sxs-lookup"><span data-stu-id="86bd5-172">This <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method overload returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="86bd5-173">Identificateur unique de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-173">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="86bd5-174">Objet à insérer.</span><span class="sxs-lookup"><span data-stu-id="86bd5-174">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="86bd5-175">Objet qui contient les informations d'éviction de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-175">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="86bd5-176">Cet objet fournit des options d'éviction autres que la simple expiration absolue.</span><span class="sxs-lookup"><span data-stu-id="86bd5-176">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="86bd5-177">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-177">Optional.</span></span> <span data-ttu-id="86bd5-178">Région nommée du cache à laquelle l'entrée de cache peut être ajoutée, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-178">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="86bd5-179">La valeur par défaut du paramètre facultatif est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-179">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-180">En cas de substitution dans une classe dérivée, insère une entrée dans le cache, en spécifiant une clé et une valeur pour l'entrée du cache, ainsi que des informations sur le mode de suppression de l'entrée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-180">When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="86bd5-181">S'il existe une entrée du cache ayant la même clé, valeur de l'entrée de cache spécifiée ; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-181">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-182">Le <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> méthode retourne une valeur d’objet, pas un <xref:System.Runtime.Caching.CacheItem> objet.</span><span class="sxs-lookup"><span data-stu-id="86bd5-182">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> method returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (key As String, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : string * string -&gt; bool" Usage="objectCache.Contains (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="86bd5-183">Identificateur unique de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-183">A unique identifier for the cache entry.</span></span></param>
        <param name="regionName"><span data-ttu-id="86bd5-184">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-184">Optional.</span></span> <span data-ttu-id="86bd5-185">Région nommée du cache dans laquelle le cache peut être trouvé, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-185">A named region in the cache where the cache can be found, if regions are implemented.</span></span> <span data-ttu-id="86bd5-186">La valeur par défaut du paramètre facultatif est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-186">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-187">En cas de substitution dans une classe dérivée, vérifie si l'entrée existe déjà dans le cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-187">When overridden in a derived class, checks whether the cache entry already exists in the cache.</span></span></summary>
        <returns><span data-ttu-id="86bd5-188"><see langword="true" /> si le cache contient une entrée qui a la même valeur de clé que <paramref name="key" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-188"><see langword="true" /> if the cache contains a cache entry with the same key value as <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCacheEntryChangeMonitor (keys As IEnumerable(Of String), Optional regionName As String = null) As CacheEntryChangeMonitor" />
      <MemberSignature Language="F#" Value="abstract member CreateCacheEntryChangeMonitor : seq&lt;string&gt; * string -&gt; System.Runtime.Caching.CacheEntryChangeMonitor" Usage="objectCache.CreateCacheEntryChangeMonitor (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="86bd5-189">Identificateurs uniques pour les entrées du cache à surveiller.</span><span class="sxs-lookup"><span data-stu-id="86bd5-189">The unique identifiers for cache entries to monitor.</span></span></param>
        <param name="regionName"><span data-ttu-id="86bd5-190">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-190">Optional.</span></span> <span data-ttu-id="86bd5-191">Région nommée du cache dans laquelle se trouvent les clés du paramètre <paramref name="keys" />, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-191">A named region in the cache where the cache keys in the <paramref name="keys" /> parameter exist, if regions are implemented.</span></span> <span data-ttu-id="86bd5-192">La valeur par défaut du paramètre facultatif est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-192">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-193">En cas de substitution dans une classe dérivée, crée un objet <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> qui peut déclencher des événements en réponse aux modifications apportées aux entrées du cache spécifiées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-193">When overridden in a derived class, creates a <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> object that can trigger events in response to changes to specified cache entries.</span></span></summary>
        <returns><span data-ttu-id="86bd5-194">Analyseur de modification qui surveille les entrées du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-194">A change monitor that monitors cache entries in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-195">Quand une dérivée <xref:System.Runtime.Caching.ObjectCache> classe substitue à la base de <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> (méthode), l’implémentation de cache doit créer un <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objet.</span><span class="sxs-lookup"><span data-stu-id="86bd5-195">When a derived <xref:System.Runtime.Caching.ObjectCache> class overrides the base <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> method, the cache implementation must create a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> object.</span></span> <span data-ttu-id="86bd5-196">Cet analyseur de modification spécialisé notifie les appelants lorsque des modifications sont apportées aux entrées de cache qui sont spécifiées dans le `keys` paramètre.</span><span class="sxs-lookup"><span data-stu-id="86bd5-196">This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the `keys` parameter.</span></span> <span data-ttu-id="86bd5-197">Par exemple, si un élément surveillé dans la `keys` paramètre est mis à jour ou supprimé du cache, l’Analyseur de modification créé par cette méthode déclenche un événement.</span><span class="sxs-lookup"><span data-stu-id="86bd5-197">For example, if a monitored item in the `keys` parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</span></span>  
  
 <span data-ttu-id="86bd5-198">Si une implémentation de cache prend en charge les régions de cache nommé, une valeur de chaîne peut être spécifiée en tant que le `regionName` paramètre.</span><span class="sxs-lookup"><span data-stu-id="86bd5-198">If a cache implementation supports named cache regions, a string value can be specified as the `regionName` parameter.</span></span> <span data-ttu-id="86bd5-199">Sinon, le paramètre par défaut est `null`.</span><span class="sxs-lookup"><span data-stu-id="86bd5-199">Otherwise, the parameter defaults to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86bd5-200">Pas toutes les implémentations de cache prend en charge des analyseurs de modification d’entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-200">Not all cache implementations support cache-entry change monitors.</span></span> <span data-ttu-id="86bd5-201">Pour déterminer si votre implémentation de cache prend en charge <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objets, consultez la documentation pour l’implémentation de cache spécifique.</span><span class="sxs-lookup"><span data-stu-id="86bd5-201">To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCacheCapabilities As DefaultCacheCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Runtime::Caching::DefaultCacheCapabilities DefaultCacheCapabilities { System::Runtime::Caching::DefaultCacheCapabilities get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCacheCapabilities : System.Runtime.Caching.DefaultCacheCapabilities" Usage="System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86bd5-202">En cas de substitution dans une classe dérivée, obtient une description des fonctionnalités que fournit une implémentation de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-202">When overridden in a derived class, gets a description of the features that a cache implementation provides.</span></span></summary>
        <value><span data-ttu-id="86bd5-203">Combinaison d'opérations de bits d'indicateurs qui indiquent les fonctions par défaut d'une implémentation de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-203">A bitwise combination of flags that indicate the default capabilities of a cache implementation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract object Get (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string -&gt; obj" Usage="objectCache.Get (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="86bd5-204">Identificateur unique de l'entrée de cache à obtenir.</span><span class="sxs-lookup"><span data-stu-id="86bd5-204">A unique identifier for the cache entry to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="86bd5-205">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-205">Optional.</span></span> <span data-ttu-id="86bd5-206">Région nommée du cache à laquelle l'entrée de cache a été ajoutée, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-206">A named region in the cache to which the cache entry was added, if regions are implemented.</span></span> <span data-ttu-id="86bd5-207">La valeur par défaut du paramètre facultatif est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-207">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-208">En cas de substitution dans une classe dérivée, obtient l'entrée du cache spécifiée sous forme d'objet.</span><span class="sxs-lookup"><span data-stu-id="86bd5-208">When overridden in a derived class, gets the specified cache entry from the cache as an object.</span></span></summary>
        <returns><span data-ttu-id="86bd5-209">Entrée du cache identifiée par <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-209">The cache entry that is identified by <paramref name="key" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCacheItem (key As String, Optional regionName As String = null) As CacheItem" />
      <MemberSignature Language="F#" Value="abstract member GetCacheItem : string * string -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.GetCacheItem (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="86bd5-210">Identificateur unique de l'entrée de cache à obtenir.</span><span class="sxs-lookup"><span data-stu-id="86bd5-210">A unique identifier for the cache entry to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="86bd5-211">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-211">Optional.</span></span> <span data-ttu-id="86bd5-212">Région nommée du cache à laquelle le cache a été ajouté, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-212">A named region in the cache to which the cache was added, if regions are implemented.</span></span> <span data-ttu-id="86bd5-213">Dans la mesure où les régions ne sont pas implémentées dans [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], la valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-213">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-214">En cas de substitution dans une classe dérivée, obtient l'entrée du cache spécifiée sous la forme d'une instance <see cref="T:System.Runtime.Caching.CacheItem" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-214">When overridden in a derived class, gets the specified cache entry from the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance.</span></span></summary>
        <returns><span data-ttu-id="86bd5-215">Entrée du cache identifiée par <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-215">The cache entry that is identified by <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-216">Cette surcharge de méthode existe parce que certaines implémentations de cache peuvent étendre la <xref:System.Runtime.Caching.CacheItem> classe.</span><span class="sxs-lookup"><span data-stu-id="86bd5-216">This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class.</span></span> <span data-ttu-id="86bd5-217">Dans ce cas, le <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> surcharge de méthode ne retournera pas nécessairement toutes les informations sur les données mises en cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-217">In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data.</span></span> <span data-ttu-id="86bd5-218">Toutefois, le <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> surcharge de méthode permet aux caches personnalisés retourner plus que la valeur de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-218">However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value.</span></span>  
  
 <span data-ttu-id="86bd5-219">Le <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> méthode est comparable à la <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> (méthode), à ceci près que le <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> méthode retourne à l’entrée du cache comme un <xref:System.Runtime.Caching.CacheItem> instance.</span><span class="sxs-lookup"><span data-stu-id="86bd5-219">The <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method is like the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method, except that the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method returns return the cache entry as a <xref:System.Runtime.Caching.CacheItem> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public abstract long GetCount (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCount (Optional regionName As String = null) As Long" />
      <MemberSignature Language="F#" Value="abstract member GetCount : string -&gt; int64" Usage="objectCache.GetCount regionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName"><span data-ttu-id="86bd5-220">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-220">Optional.</span></span> <span data-ttu-id="86bd5-221">Région nommée du cache pour laquelle le nombre d'entrées de cache doit être calculé, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-221">A named region in the cache for which the cache entry count should be computed, if regions are implemented.</span></span> <span data-ttu-id="86bd5-222">La valeur par défaut du paramètre facultatif est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-222">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-223">En cas de substitution dans une classe dérivée, obtient le nombre total d'entrées du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-223">When overridden in a derived class, gets the total number of cache entries in the cache.</span></span></summary>
        <returns><span data-ttu-id="86bd5-224">Nombre d'entrées du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-224">The number of cache entries in the cache.</span></span> <span data-ttu-id="86bd5-225">Si <paramref name="regionName" /> n'est pas <see langword="null" />, le nombre indique le nombre d'entrées dans la région de cache spécifiée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-225">If <paramref name="regionName" /> is not <see langword="null" />, the count indicates the number of entries that are in the specified cache region.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="objectCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86bd5-226">En cas de substitution dans une classe dérivée, crée un énumérateur qui peut être utilisé pour itérer au sein de la collection d'entrées du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-226">When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</span></span></summary>
        <returns><span data-ttu-id="86bd5-227">Objet énumérateur qui fournit l’accès aux entrées de cache dans le cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-227">The enumerator object that provides access to the cache entries in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-228">Les implémenteurs de cache peuvent remplacer et étendre cette méthode pour fournir un moyen personnalisé d’itérer une collection d’entrées du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-228">Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86bd5-229">Retour d’un énumérateur est généralement une opération plus complexe que le retour de l’entrée de cache dans son intégralité.</span><span class="sxs-lookup"><span data-stu-id="86bd5-229">Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</span></span>  
  
 <span data-ttu-id="86bd5-230">Cette méthode est appelée par les implémentations d’interface explicite qui le <xref:System.Runtime.Caching.ObjectCache> classe a pour le <xref:System.Collections.IEnumerable.GetEnumerator%2A> et <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="86bd5-230">This method is called by the explicit interface implementations that the <xref:System.Runtime.Caching.ObjectCache> class has for the <xref:System.Collections.IEnumerable.GetEnumerator%2A> and <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="86bd5-231">Obtient un ensemble d'entrées du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-231">Gets a set of cache entries.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (keys As IEnumerable(Of String), Optional regionName As String = null) As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="abstract member GetValues : seq&lt;string&gt; * string -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="86bd5-232">Collection d'identificateurs uniques pour les entrées de cache à obtenir.</span><span class="sxs-lookup"><span data-stu-id="86bd5-232">A collection of unique identifiers for the cache entries to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="86bd5-233">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-233">Optional.</span></span> <span data-ttu-id="86bd5-234">Région nommée du cache à laquelle la ou les entrées de cache ont été ajoutées, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-234">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span></span> <span data-ttu-id="86bd5-235">La valeur par défaut du paramètre facultatif est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-235">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-236">En cas de substitution dans une classe dérivée, obtient un ensemble d'entrées du cache qui correspondent aux clés spécifiées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-236">When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</span></span></summary>
        <returns><span data-ttu-id="86bd5-237">Dictionnaire de paires clé-valeur qui représentent les entrées du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-237">A dictionary of key/value pairs that represent cache entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-238">Le <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> surcharge de méthode est une optimisation des performances pour les caches distribués qui prennent en charge l’extraction de plusieurs entrées de cache à partir du cache pendant un appel réseau unique.</span><span class="sxs-lookup"><span data-stu-id="86bd5-238">The <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</span></span>  
  
 <span data-ttu-id="86bd5-239">Même si un appelant peut passer une ou plusieurs clés à la méthode, il n’existe aucune garantie que toutes les clés représentent des entrées dans le cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-239">Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</span></span> <span data-ttu-id="86bd5-240">Par conséquent, le dictionnaire retourné peut contenir moins d’éléments que le nombre de clés qui ont été passés à la méthode.</span><span class="sxs-lookup"><span data-stu-id="86bd5-240">Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (string regionName, params string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(string regionName, string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (regionName As String, ParamArray keys As String()) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetValues(System::String ^ regionName, ... cli::array &lt;System::String ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (regionName, keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="regionName"><span data-ttu-id="86bd5-241">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-241">Optional.</span></span> <span data-ttu-id="86bd5-242">Région nommée du cache à laquelle la ou les entrées de cache ont été ajoutées, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-242">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span></span> <span data-ttu-id="86bd5-243">Dans la mesure où les régions ne sont pas implémentées dans [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], la valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-243">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span></span></param>
        <param name="keys"><span data-ttu-id="86bd5-244">Collection d'identificateurs uniques pour les entrées de cache à obtenir.</span><span class="sxs-lookup"><span data-stu-id="86bd5-244">A collection of unique identifiers for the cache entries to get.</span></span></param>
        <summary><span data-ttu-id="86bd5-245">Obtient un ensemble d'entrées du cache qui correspondent aux clés spécifiées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-245">Gets a set of cache entries that correspond to the specified keys.</span></span></summary>
        <returns><span data-ttu-id="86bd5-246">Dictionnaire de paires clé-valeur qui représentent les entrées du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-246">A dictionary of key/value pairs that represent cache entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-247">Le <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> surcharge de méthode est comme la <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> surcharge de méthode, mais vous permet de transmettre la région nommée en utilisant la syntaxe de paramètre optionnel qui est pris en charge par les langages managés tels que c#.</span><span class="sxs-lookup"><span data-stu-id="86bd5-247">The <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> method overload is like the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</span></span>  
  
 <span data-ttu-id="86bd5-248">Cette méthode est une méthode virtuelle, car le <xref:System.Runtime.Caching.ObjectCache> classe fournit une implémentation par défaut qui passe le `params` de tableau à la <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="86bd5-248">This method is a virtual method because the <xref:System.Runtime.Caching.ObjectCache> class provides a default implementation that passes the `params` array to the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public static IServiceProvider Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IServiceProvider Host" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Host" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Host As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property IServiceProvider ^ Host { IServiceProvider ^ get(); void set(IServiceProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : IServiceProvider with get, set" Usage="System.Runtime.Caching.ObjectCache.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86bd5-249">Obtient ou définit une référence à un environnement d'hébergement managé qui est disponibles pour des implémentations de <see cref="T:System.Runtime.Caching.ObjectCache" /> et qui peut fournir des services spécifiques à l'hôte aux implémentations de <see cref="T:System.Runtime.Caching.ObjectCache" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-249">Gets or set a reference to a managed hosting environment that is available to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations and that can provide host-specific services to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations.</span></span></summary>
        <value><span data-ttu-id="86bd5-250">Référence à un environnement d'hébergement managé ayant connaissance du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-250">A reference to a cache-aware managed hosting environment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-251">Le <xref:System.Runtime.Caching.ObjectCache.Host%2A> propriété est conçue pour une utilisation par [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] environnements hôtes et par les implémentations de cache qui implémentent le comportement dépend du Framework .NET héberger l’environnement.</span><span class="sxs-lookup"><span data-stu-id="86bd5-251">The <xref:System.Runtime.Caching.ObjectCache.Host%2A> property is intended for use by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</span></span>  
  
 <span data-ttu-id="86bd5-252">Le tableau suivant répertorie l’ensemble des services qui peuvent être disponibles à partir d’un environnement d’hébergement managé et qui sont disponibles pour l’environnement hôte <xref:System.Runtime.Caching.ObjectCache> implémentations via le <xref:System.Runtime.Caching.ObjectCache.Host%2A> propriété :</span><span class="sxs-lookup"><span data-stu-id="86bd5-252">The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property:</span></span>  
  
|<span data-ttu-id="86bd5-253">Service</span><span class="sxs-lookup"><span data-stu-id="86bd5-253">Service</span></span>|<span data-ttu-id="86bd5-254">Description </span><span class="sxs-lookup"><span data-stu-id="86bd5-254">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|<span data-ttu-id="86bd5-255">Permet de fournir des identificateurs de domaine d’application qui peuvent être nécessaires par une implémentation de cache pour les fonctionnalités telles que l’identification des compteurs de performances environnements hôtes.</span><span class="sxs-lookup"><span data-stu-id="86bd5-255">Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|<span data-ttu-id="86bd5-256">Permet d’environnements hôtes proposent un système de notification de modification de fichier personnalisé, au lieu d’utiliser celui fourni dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="86bd5-256">Lets host environments provide a custom file-change notification system, instead of using the one provided in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|<span data-ttu-id="86bd5-257">Permet la consommation de mémoire cache cache implémentations rapport à l’environnement hôte.</span><span class="sxs-lookup"><span data-stu-id="86bd5-257">Lets cache implementations report cache memory consumption to the host environment.</span></span> <span data-ttu-id="86bd5-258">Ainsi, les environnements d’hôte gérer de manière centralisée la consommation de mémoire sur plusieurs implémentations de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-258">This enables host environments to centrally manage memory consumption across multiple cache implementations.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="86bd5-259">Les appelants de cette valeur de propriété nécessitent des autorisations d’accès au code non restreint.</span><span class="sxs-lookup"><span data-stu-id="86bd5-259">Callers of this property value require unrestricted code access security permissions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="86bd5-260">La valeur assignée à la propriété est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-260">The value being assigned to the property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="86bd5-261">Une tentative a été faite pour définir la valeur de propriété plusieurs fois.</span><span class="sxs-lookup"><span data-stu-id="86bd5-261">An attempt was made to set the property value more than one time.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="86bd5-262">pour la confiance totale pour tous les accesseurs de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="86bd5-262">for full trust for all accessors of this property.</span></span> <span data-ttu-id="86bd5-263">Cette propriété ne peut pas être utilisée par du code partiellement fiable.</span><span class="sxs-lookup"><span data-stu-id="86bd5-263">This property cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InfiniteAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset InfiniteAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteAbsoluteExpiration As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteAbsoluteExpiration : DateTimeOffset" Usage="System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86bd5-264">Obtient une valeur qui indique qu'une entrée du cache n'a aucune expiration absolue.</span><span class="sxs-lookup"><span data-stu-id="86bd5-264">Gets a value that indicates that a cache entry has no absolute expiration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-265">Une entrée de cache qui est insérée dans le cache avec la <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> valeur de champ définie comme la valeur d’expiration ne doit jamais expirer basée sur un point absolu dans le temps.</span><span class="sxs-lookup"><span data-stu-id="86bd5-265">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time.</span></span> <span data-ttu-id="86bd5-266">Toutefois, une entrée de cache avec ce paramètre peut être supprimée à partir du cache pour d’autres raisons qui sont déterminés par une implémentation de cache particulière, telle que de l’éviction d’événement de la surveillance des modifications due à une sollicitation de la mémoire.</span><span class="sxs-lookup"><span data-stu-id="86bd5-266">However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Runtime.Caching.ObjectCache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="86bd5-267">Identificateur unique d'une entrée dans le cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-267">A unique identifier for a cache entry in the cache.</span></span></param>
        <summary><span data-ttu-id="86bd5-268">Obtient ou définit l'indexeur par défaut de la classe <see cref="T:System.Runtime.Caching.ObjectCache" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-268">Gets or sets the default indexer for the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span></span></summary>
        <value><span data-ttu-id="86bd5-269">Clé servant d'indexeur dans l'instance de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-269">A key that serves as an indexer into the cache instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-270">Le comportement de l’accesseur set de cette propriété est comme le <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="86bd5-270">The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method.</span></span> <span data-ttu-id="86bd5-271">En interne, une implémentation de cache peut définir l’expiration absolue de la valeur spécifiée pour le <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> (méthode).</span><span class="sxs-lookup"><span data-stu-id="86bd5-271">Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method.</span></span> <span data-ttu-id="86bd5-272">Toutefois, ce comportement est finalement jusqu'à l’implémentation de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-272">However this behavior is ultimately up to the cache implementation.</span></span>  
  
 <span data-ttu-id="86bd5-273">Le comportement de l’accesseur get revient à appeler le <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> (méthode) et à l’aide de `null` pour le nom de la région.</span><span class="sxs-lookup"><span data-stu-id="86bd5-273">The behavior of get accessor is like calling the <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> method and using `null` for the region name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.Caching.ObjectCache.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86bd5-274">Obtient le nom d'une instance <see cref="T:System.Runtime.Caching.ObjectCache" /> spécifique.</span><span class="sxs-lookup"><span data-stu-id="86bd5-274">Gets the name of a specific <see cref="T:System.Runtime.Caching.ObjectCache" /> instance.</span></span></summary>
        <value><span data-ttu-id="86bd5-275">Nom d'une instance de cache spécifique.</span><span class="sxs-lookup"><span data-stu-id="86bd5-275">The name of a specific cache instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-276">Certaines implémentations de cache peuvent prendre en charge plusieurs instances du cache qui s’exécute dans une application unique.</span><span class="sxs-lookup"><span data-stu-id="86bd5-276">Some cache implementations might support multiple instances of the cache that is running in a single application.</span></span> <span data-ttu-id="86bd5-277">Cette propriété permet aux implémenteurs de cache de retourner un nom qui identifie une instance de cache spécifique.</span><span class="sxs-lookup"><span data-stu-id="86bd5-277">This property lets cache implementers return a name that identifies a specific cache instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86bd5-278">Indique qu'une entrée du cache n'a pas d'heure d'expiration décalée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-278">Indicates that a cache entry has no sliding expiration time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-279">L’expiration basée sur la durée ou une fenêtre de temps définie est également appelée expiration décalée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-279">Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</span></span> <span data-ttu-id="86bd5-280">En règle générale, une implémentation de cache qui supprime les éléments qui sont basés sur l’expiration décalée supprimera un élément qui n’ont pas été utilisée dans la fenêtre de temps spécifiée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-280">Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</span></span>  
  
 <span data-ttu-id="86bd5-281">Une entrée de cache qui est insérée dans le cache avec la <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> champ la valeur définie comme la valeur d’expiration ne doit jamais être supprimée en raison d’autres que des activités dans une fenêtre temporelle coulissante.</span><span class="sxs-lookup"><span data-stu-id="86bd5-281">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</span></span> <span data-ttu-id="86bd5-282">Toutefois, un élément de cache peut être supprimé si elle a une expiration absolue, ou si un autre événement d’éviction se produit, telle une modification moniteur ou la mémoire de pression.</span><span class="sxs-lookup"><span data-stu-id="86bd5-282">However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract object Remove (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Remove : string * string -&gt; obj" Usage="objectCache.Remove (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="86bd5-283">Identificateur unique de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-283">A unique identifier for the cache entry.</span></span></param>
        <param name="regionName"><span data-ttu-id="86bd5-284">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-284">Optional.</span></span> <span data-ttu-id="86bd5-285">Région nommée du cache à laquelle l'entrée de cache a été ajoutée, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-285">A named region in the cache to which the cache entry was added, if regions are implemented.</span></span> <span data-ttu-id="86bd5-286">La valeur par défaut du paramètre facultatif est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-286">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-287">En cas de substitution dans une classe dérivée, supprime l'entrée du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-287">When overridden in a derived class, removes the cache entry from the cache.</span></span></summary>
        <returns><span data-ttu-id="86bd5-288">Objet qui représente la valeur de l'entrée de cache supprimée qui était spécifiée par la clé, ou <see langword="null" /> si l'entrée spécifiée est introuvable.</span><span class="sxs-lookup"><span data-stu-id="86bd5-288">An object that represents the value of the removed cache entry that was specified by the key, or <see langword="null" /> if the specified entry was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-289">Si vous substituez cette méthode dans une implémentation de cache personnalisée, s’il existe une entrée de cache dans le cache correspond à `key`, la valeur de l’élément supprimé doit être retournée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-289">If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to `key`, the value of the removed item should be returned.</span></span> <span data-ttu-id="86bd5-290">Si rien n’a été supprimé du cache, la méthode doit retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="86bd5-290">If nothing was removed from the cache, the method should return `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86bd5-291">Certaines implémentations de cache distribué ne peuvent pas en charge la possibilité de retourner la valeur qui a été supprimée du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-291">Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</span></span> <span data-ttu-id="86bd5-292">Cela peut être, car l’implémentation de cache ne prend pas en charge le renvoi de la valeur d’un élément de cache supprimée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-292">This might be because the cache implementation does not support returning the value of a removed cache item.</span></span> <span data-ttu-id="86bd5-293">Il peut également être, car le marshaling de l’objet comme une valeur de retour est trop coûteuse.</span><span class="sxs-lookup"><span data-stu-id="86bd5-293">It might also be because marshaling the object as a return value is too expensive.</span></span> <span data-ttu-id="86bd5-294">Dans ce cas, les implémentations de cache peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="86bd5-294">In such cases, cache implementations can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="86bd5-295">En cas de substitution dans une classe dérivée, insère une entrée dans le cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-295">When overridden in a derived class, inserts a cache entry into the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-296">Le comportement par défaut de la <xref:System.Runtime.Caching.ObjectCache.Set%2A> les méthodes de surcharge est une opération insert ou update.</span><span class="sxs-lookup"><span data-stu-id="86bd5-296">The typical behavior of the <xref:System.Runtime.Caching.ObjectCache.Set%2A> overload methods is an insert-or-update operation.</span></span> <span data-ttu-id="86bd5-297">Une entrée de cache est que soit insérée comme une nouvelle entrée si l’entrée spécifiée n’existe pas, ou l’entrée de cache est mis à jour avec une nouvelle valeur si elle existe déjà.</span><span class="sxs-lookup"><span data-stu-id="86bd5-297">A cache entry is either inserted as a new entry if the specified entry does not exist, or the cache entry is updated with a new value if it already exists.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (item As CacheItem, policy As CacheItemPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Set(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Set : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; unit" Usage="objectCache.Set (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="86bd5-298">Élément de cache à ajouter.</span><span class="sxs-lookup"><span data-stu-id="86bd5-298">The cache item to add.</span></span></param>
        <param name="policy"><span data-ttu-id="86bd5-299">Objet qui contient les informations d'éviction de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-299">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="86bd5-300">Cet objet fournit des options d'éviction autres que la simple expiration absolue.</span><span class="sxs-lookup"><span data-stu-id="86bd5-300">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="86bd5-301">En cas de substitution dans une classe dérivée, insère l'entrée de cache dans le cache sous la forme d'une instance <see cref="T:System.Runtime.Caching.CacheItem" />, en spécifiant des informations sur le mode de suppression de l'entrée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-301">When overridden in a derived class, inserts the cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, specifying information about how the entry will be evicted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-302">Si la clé pour `item` n’existe pas, `item` est inséré comme une nouvelle entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-302">If the key for `item` does not exist, `item` is inserted as a new cache entry.</span></span> <span data-ttu-id="86bd5-303">Si un élément avec une clé qui correspond à `item` existe, la valeur de `item` est utilisé pour mettre à jour ou remplacer la valeur de l’entrée de cache existante.</span><span class="sxs-lookup"><span data-stu-id="86bd5-303">If an item with a key that matches `item` exists, the value from `item` is used to update or overwrite the value of the existing cache entry.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * DateTimeOffset * string -&gt; unit" Usage="objectCache.Set (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="86bd5-304">Identificateur unique de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-304">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="86bd5-305">Objet à insérer.</span><span class="sxs-lookup"><span data-stu-id="86bd5-305">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="86bd5-306">Date et heure fixes auxquelles l'entrée de cache expirera.</span><span class="sxs-lookup"><span data-stu-id="86bd5-306">The fixed date and time at which the cache entry will expire.</span></span></param>
        <param name="regionName"><span data-ttu-id="86bd5-307">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-307">Optional.</span></span> <span data-ttu-id="86bd5-308">Région nommée du cache à laquelle l'entrée de cache peut être ajoutée, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-308">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="86bd5-309">La valeur par défaut du paramètre facultatif est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-309">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-310">En cas de substitution dans une classe dérivée, insère une entrée dans le cache en spécifiant les détails d'expiration basés sur l'heure.</span><span class="sxs-lookup"><span data-stu-id="86bd5-310">When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-311">Si un élément qui correspond à `key` n’existe pas dans le cache, `value` et `key` sont utilisées pour insérer une nouvelle entrée du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-311">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="86bd5-312">Si un élément avec une clé qui correspond à `item` existe, l’entrée de cache est mis à jour ou remplacée à l’aide de `value`.</span><span class="sxs-lookup"><span data-stu-id="86bd5-312">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; unit" Usage="objectCache.Set (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="86bd5-313">Identificateur unique de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-313">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="86bd5-314">Objet à insérer.</span><span class="sxs-lookup"><span data-stu-id="86bd5-314">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="86bd5-315">Objet qui contient les informations d'éviction de l'entrée de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-315">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="86bd5-316">Cet objet fournit des options d'éviction autres que la simple expiration absolue.</span><span class="sxs-lookup"><span data-stu-id="86bd5-316">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="86bd5-317">Optionnel.</span><span class="sxs-lookup"><span data-stu-id="86bd5-317">Optional.</span></span> <span data-ttu-id="86bd5-318">Région nommée du cache à laquelle l'entrée de cache peut être ajoutée, si des régions sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="86bd5-318">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="86bd5-319">La valeur par défaut du paramètre facultatif est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86bd5-319">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="86bd5-320">En cas de substitution dans une classe dérivée, insère une entrée dans le cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-320">When overridden in a derived class, inserts a cache entry into the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-321">Cette surcharge de méthode vous permet de fournir plus de détails d’éviction ou d’expiration que celles qui sont disponibles dans la durée d’expiration absolue.</span><span class="sxs-lookup"><span data-stu-id="86bd5-321">This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</span></span>  
  
 <span data-ttu-id="86bd5-322">Si un élément qui correspond à `key` n’existe pas dans le cache, `value` et `key` sont utilisées pour insérer une nouvelle entrée du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-322">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="86bd5-323">Si un élément avec une clé qui correspond à `item` existe, l’entrée de cache est mis à jour ou remplacée à l’aide de `value`.</span><span class="sxs-lookup"><span data-stu-id="86bd5-323">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86bd5-324">Prend en charge l’itération sur une collection fortement typée.</span><span class="sxs-lookup"><span data-stu-id="86bd5-324">Supports iteration over a strongly typed collection.</span></span></summary>
        <returns><span data-ttu-id="86bd5-325">Objet énumérateur qui fournit l’accès aux entrées de cache dans le cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-325">The enumerator object that provides access to the cache entries in the cache.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86bd5-326">Prend en charge une itération sur une collection générique.</span><span class="sxs-lookup"><span data-stu-id="86bd5-326">Supports iteration over a generic collection.</span></span></summary>
        <returns><span data-ttu-id="86bd5-327">Objet énumérateur qui fournit l'accès aux éléments du cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-327">The enumerator object that provides access to the items in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bd5-328">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="86bd5-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86bd5-329">Il peut être utilisé uniquement lorsqu’une dérivée <xref:System.Runtime.Caching.ObjectCache> instance est castée en un <xref:System.Collections.IEnumerable> interface.</span><span class="sxs-lookup"><span data-stu-id="86bd5-329">It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="86bd5-330">Les développeurs peuvent utiliser cette méthode pour itérer une collection générique d’entrées de cache.</span><span class="sxs-lookup"><span data-stu-id="86bd5-330">Developers can use this method to iterate through a generic collection of cache entries.</span></span>  
  
 <span data-ttu-id="86bd5-331">Ceci est la valeur par défaut <xref:System.Collections.IEnumerable.GetEnumerator%2A> implémentation appelle en interne la <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="86bd5-331">This is the default <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementation that internally calls the <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>