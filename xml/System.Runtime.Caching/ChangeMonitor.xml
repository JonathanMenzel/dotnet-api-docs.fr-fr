<Type Name="ChangeMonitor" FullName="System.Runtime.Caching.ChangeMonitor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aa8f739063475b844ca1c37c795d7728c6ae75a7" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53390051" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChangeMonitor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChangeMonitor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChangeMonitor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChangeMonitor abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type ChangeMonitor = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d3b12-101">Fournit une classe de base pour un type personnalisé dérivé qui surveille les modifications de l'état des données dont dépend un élément de cache.</span><span class="sxs-lookup"><span data-stu-id="d3b12-101">Provides a base class for a derived custom type that monitors changes in the state of the data which a cache item depends on.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3b12-102">Le <xref:System.Runtime.Caching.ChangeMonitor> classe est utilisée comme classe de base pour les classes de surveillance dérivées spécialisées pour les implémentations de cache particulière.</span><span class="sxs-lookup"><span data-stu-id="d3b12-102">The <xref:System.Runtime.Caching.ChangeMonitor> class is used as the base class for derived monitor classes that are specialized for particular cache implementations.</span></span> <span data-ttu-id="d3b12-103">Un <xref:System.Runtime.Caching.ChangeMonitor> instance surveille les modifications de l’état des données dont dépend un élément de cache.</span><span class="sxs-lookup"><span data-stu-id="d3b12-103">A <xref:System.Runtime.Caching.ChangeMonitor> instance monitors changes in the state of data which a cache item depends on.</span></span> <span data-ttu-id="d3b12-104">Par exemple, l’élément peut être une entité de fichier ou de données dont le contenu est mis en cache.</span><span class="sxs-lookup"><span data-stu-id="d3b12-104">For example, the item can be a file or data entity whose contents are cached.</span></span> <span data-ttu-id="d3b12-105">Si l’entité de données ou de fichier est mis à jour, l’entrée de cache associée doit également être modifiée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-105">If the file or data entity is updated, the associated cache entry must be changed also.</span></span> <span data-ttu-id="d3b12-106">Éléments communs qui peuvent être surveillés incluent des entités de données (par exemple, les champs de base de données, des valeurs, des lignes ou des tables), une autre entrée de cache et les fichiers et les attributs de fichier.</span><span class="sxs-lookup"><span data-stu-id="d3b12-106">Common items that can be monitored include data entities (such as database fields, values, rows, or tables), another cache entry, and files and file attributes.</span></span>  
  
 <span data-ttu-id="d3b12-107">Modification de dépendance est une modification de l’état d’une dépendance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-107">A dependency change is a change in the state of a dependency.</span></span> <span data-ttu-id="d3b12-108">Dans une implémentation de cache typique, après un <xref:System.Runtime.Caching.ChangeMonitor> instance notifie le cache qu’une dépendance a changé, le cache effectue l’action requise, telles que l’invalidation de l’entrée de cache insérée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-108">In a typical cache implementation, after a <xref:System.Runtime.Caching.ChangeMonitor> instance notifies the cache that a dependency has changed, the cache performs the required action, such as invalidating the inserted cache entry.</span></span>  
  
 <span data-ttu-id="d3b12-109">Dérivés <xref:System.Runtime.Caching.ChangeMonitor> classes peuvent être personnalisées pour surveiller les modifications de dépendance pour les magasins de données différents spécifiques.</span><span class="sxs-lookup"><span data-stu-id="d3b12-109">Derived <xref:System.Runtime.Caching.ChangeMonitor> classes can be customized to monitor dependency changes for specific different data stores.</span></span> <span data-ttu-id="d3b12-110">Par exemple, il existe des implémentations de cache pour un système de fichiers, la mémoire physique ou une base de données.</span><span class="sxs-lookup"><span data-stu-id="d3b12-110">For example, there are cache implementations for a file system, physical memory, or a database.</span></span> <span data-ttu-id="d3b12-111">Le <xref:System.Runtime.Caching.ChangeMonitor> classe examine les modifications qui se produisent en dehors du cache, puis avertit le cache de modifications ont eu lieu.</span><span class="sxs-lookup"><span data-stu-id="d3b12-111">The <xref:System.Runtime.Caching.ChangeMonitor> class examines changes that occur outside the cache, and then alerts the cache that changes have occurred.</span></span>  
  
 <span data-ttu-id="d3b12-112">Le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] inclut les classes suivantes dérivent <xref:System.Runtime.Caching.ChangeMonitor> classe :</span><span class="sxs-lookup"><span data-stu-id="d3b12-112">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] includes the following classes that derive from <xref:System.Runtime.Caching.ChangeMonitor> class:</span></span>  
  
-   <xref:System.Runtime.Caching.CacheEntryChangeMonitor>  
  
-   <xref:System.Runtime.Caching.FileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.HostFileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.SqlChangeMonitor>  
  
 <span data-ttu-id="d3b12-113">Chacune de ces classes fonctionne avec différents types de dépendances.</span><span class="sxs-lookup"><span data-stu-id="d3b12-113">Each of these classes works with different types of dependencies.</span></span> <span data-ttu-id="d3b12-114">Par exemple, la dérivée <xref:System.Runtime.Caching.FileChangeMonitor> classe surveille les modifications apportées à un cache pour les données de système de fichiers (fichiers et dossiers) qui dépend de l’élément de cache.</span><span class="sxs-lookup"><span data-stu-id="d3b12-114">For example, the derived <xref:System.Runtime.Caching.FileChangeMonitor> class monitors changes to a cache for file system data (files and folders) that the cache item depends on.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="d3b12-115">Ce type est thread-safe.</span><span class="sxs-lookup"><span data-stu-id="d3b12-115">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="d3b12-116">Si vous créer une implémentation de cache ou une modification dérivée de type de moniteur, vous devez respecter certaines règles.</span><span class="sxs-lookup"><span data-stu-id="d3b12-116">If you create a custom cache implementation or a derived change monitor type, you must follow certain guidelines.</span></span> <span data-ttu-id="d3b12-117">La liste suivante résume ces instructions.</span><span class="sxs-lookup"><span data-stu-id="d3b12-117">The following list summarizes these guidelines.</span></span> <span data-ttu-id="d3b12-118">Pour plus d’informations, consultez la documentation pour les méthodes ou propriétés.</span><span class="sxs-lookup"><span data-stu-id="d3b12-118">For more information, see the documentation for individual methods or properties.</span></span>  
  
<span data-ttu-id="d3b12-119">-Le constructeur d’une classe dérivée doit définir la <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> propriété, commencer la surveillance et appeler <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> méthode avant le retour de la méthode.</span><span class="sxs-lookup"><span data-stu-id="d3b12-119">-   The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the method returns.</span></span> <span data-ttu-id="d3b12-120">Si un constructeur rencontre une erreur lors des constructions et doit supprimer des ressources, le constructeur peut appeler uniquement la <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> surcharger après le <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> méthode est appelée, car le <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> surcharge lève un <see cref="T:System.InvalidOperationException" /> exception si l’initialisation n’est pas terminée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-120">If a constructor encounters an error during constructions and must have to dispose of resources, the constructor can only call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called because the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload will throw an <see cref="T:System.InvalidOperationException" /> exception if initialization is not completed.</span></span>  
  
<span data-ttu-id="d3b12-121">-Si les modifications se produisent dans les données qui sont en cours d’analyse avant l’initialisation est terminée, le constructeur doit appeler le <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> méthode avant d’appeler le <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3b12-121">-   If changes occur in the data that is being monitored before initialization is complete, the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span></span>  
  
<span data-ttu-id="d3b12-122">-Après une dérivée <see cref="T:System.Runtime.Caching.ChangeMonitor" /> type est instancié, vous devez insérer l’analyseur dans personnalisé <see cref="T:System.Runtime.Caching.ObjectCache" /> implémentation.</span><span class="sxs-lookup"><span data-stu-id="d3b12-122">-   After a derived <see cref="T:System.Runtime.Caching.ChangeMonitor" /> type is instantiated, you must insert the monitor into a custom <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation.</span></span> <span data-ttu-id="d3b12-123">Ou si vous avez terminé d’utiliser l’Analyseur de modification, appelez le <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3b12-123">Or if you are finished using the change monitor, call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span></span>  
  
<span data-ttu-id="d3b12-124">-Après une <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance est insérée dans un <see cref="T:System.Runtime.Caching.ObjectCache" /> implémentation, le <see cref="T:System.Runtime.Caching.ObjectCache" /> instance nécessitent que la surveillance des modifications est supprimée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-124">-   After a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance is inserted into a <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation, the <see cref="T:System.Runtime.Caching.ObjectCache" /> instance require that the change monitor is disposed.</span></span> <span data-ttu-id="d3b12-125">Même si l’insertion n’est pas valide et provoque une exception, le <see cref="T:System.Runtime.Caching.ObjectCache" /> implémentation doit appeler la <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="d3b12-125">Even if the insertion is invalid and causes an exception, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span></span>  
  
<span data-ttu-id="d3b12-126">-Une fois que l’Analyseur de modification dérivée est inséré dans un cache, le <see cref="T:System.Runtime.Caching.ObjectCache" /> implémentation doit appeler <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, en passant un <see cref="T:System.Runtime.Caching.OnChangedCallback" /> objet.</span><span class="sxs-lookup"><span data-stu-id="d3b12-126">-   After a derived change monitor is inserted into a cache, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, by passing a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object.</span></span> <span data-ttu-id="d3b12-127">Le <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> méthode peut être appelée qu’une seule fois.</span><span class="sxs-lookup"><span data-stu-id="d3b12-127">The <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method can be called only one time.</span></span> <span data-ttu-id="d3b12-128">Si une modification de dépendance a déjà eu lieu, le <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance sera appelée immédiatement lorsque <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-128">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span></span> <span data-ttu-id="d3b12-129">Sinon, le <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance sera appelée qu’une seule fois.</span><span class="sxs-lookup"><span data-stu-id="d3b12-129">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called only one time.</span></span> <span data-ttu-id="d3b12-130">Cette un fois appel produit lorsque le <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> méthode est appelée, car le <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance a détecté une modification, ou lorsque le <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> méthode est appelée sur le <see cref="T:System.Runtime.Caching.ChangeMonitor" />, selon la première éventualité.</span><span class="sxs-lookup"><span data-stu-id="d3b12-130">This one time call occurs either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called because the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance detected a change, or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called on the <see cref="T:System.Runtime.Caching.ChangeMonitor" />, whichever occurs first.</span></span>  
  
<span data-ttu-id="d3b12-131">-Le <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance qui est fournie par un <see cref="T:System.Runtime.Caching.ObjectCache" /> implémentation doit supprimer l’entrée de cache associée et spécifier une raison à l’aide de la <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> énumération.</span><span class="sxs-lookup"><span data-stu-id="d3b12-131">-   The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance that is provided by an <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation should remove the associated cache entry and specify a reason by using the <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> enumeration.</span></span>  
  
<span data-ttu-id="d3b12-132">-A <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance peut appeler le <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> méthode avant qu’une implémentation de cache a appelé <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> méthode ou après.</span><span class="sxs-lookup"><span data-stu-id="d3b12-132">-   A <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method either before a cache implementation has called <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or after.</span></span> <span data-ttu-id="d3b12-133">Si le <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> méthode est appelée avant <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> est appelée, la base de <see cref="T:System.Runtime.Caching.ChangeMonitor" /> implémentation informe le cache que cela s’est produit et déclenchera le rappel devant être transmis au <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> immédiatement lorsque <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> est appelé.</span><span class="sxs-lookup"><span data-stu-id="d3b12-133">If the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called before <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called, the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> implementation will notify the cache that this has occurred and will trigger the callback to be passed to <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is invoked.</span></span> <span data-ttu-id="d3b12-134">Les données d’état sont passées à la <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> méthode est enregistrée par l’Analyseur de modification et ensuite passée à la <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> (méthode) lorsque le <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-134">Any state data that is passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is saved by the change monitor and subsequently passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method when the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method is invoked.</span></span>  
  
<span data-ttu-id="d3b12-135">-Analyseur de modification doit implémenter la <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3b12-135">-   A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method.</span></span> <span data-ttu-id="d3b12-136">Pour plus d'informations, consultez la documentation sur la méthode <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-136">For more information, see the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method documentation.</span></span>  
  
<span data-ttu-id="d3b12-137">-Le <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> surcharge de méthode doit être appelée pour supprimer le <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-137">-   The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload must be called to dispose of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span> <span data-ttu-id="d3b12-138">Les règles pour appeler Dispose sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="d3b12-138">The rules for calling Dispose are as follows:</span></span> 
<span data-ttu-id="d3b12-139">-Avant qu’un élément est inséré dans le cache, il est la responsabilité de l’appelant de supprimer une <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-139">-   Before an item is inserted into the cache, it is the responsibility of caller to dispose of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span>  
  
<span data-ttu-id="d3b12-140">-Une fois l’élément du cache et la <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances qui lui sont associées sont passées à un cache, l’implémenteur de cache doit s’assurer que le <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> méthode est appelée, même si l’insertion échoue.</span><span class="sxs-lookup"><span data-stu-id="d3b12-140">-   Once cache item and the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances that are associated with it are passed to a cache, the cache implementer must make sure that the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, even if the insert fails.</span></span>  
  
<span data-ttu-id="d3b12-141">-Après un élément et ses associés <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances sont passées à un cache, l’appelant ne doit pas supprimer la dépendance car lorsque la <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> est appelée, l’appel est traité comme si la dépendance a changé.</span><span class="sxs-lookup"><span data-stu-id="d3b12-141">-   After an item and its associated <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances are passed to a cache, the caller must not dispose the dependency because when the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, the call is treated as if the dependency has changed.</span></span> <span data-ttu-id="d3b12-142">Par conséquent, le <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> méthode est appelée automatiquement.</span><span class="sxs-lookup"><span data-stu-id="d3b12-142">As a result, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is automatically invoked.</span></span>  
  
<span data-ttu-id="d3b12-143">-Tenant ces règles, le <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> méthode doit être appelée dans une des manières suivantes :</span><span class="sxs-lookup"><span data-stu-id="d3b12-143">-   Taking these rules into consideration, the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method must be called in one of the following ways:</span></span> 
<span data-ttu-id="d3b12-144">-Les utilisateurs doivent appeler le <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> surcharge de méthode si elles décident de ne pas insérer de l’instance dérivée de suivi des modifications dans un cache.</span><span class="sxs-lookup"><span data-stu-id="d3b12-144">-   Users must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
<span data-ttu-id="d3b12-145">-Si l’implémentation essaie d’insérer l’instance de l’Analyseur de modification dans un cache d’objets mais que l’insertion échoue, l’implémentation de cache est chargée d’appeler le <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="d3b12-145">-   If the implementation tries to insert the change-monitor instance into an object cache but the insertion fails, the cache implementation is responsible for calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span></span> <span data-ttu-id="d3b12-146">Lorsque la tentative d’insertion provoque une exception, l’implémentation de cache doit supprimer toutes les dépendances associées.</span><span class="sxs-lookup"><span data-stu-id="d3b12-146">When the insertion attempt causes an exception, the cache implementation must dispose of any associated dependencies.</span></span>  
  
<span data-ttu-id="d3b12-147">-Si l’entrée de cache est supprimée, l’implémentation de cache doit également supprimer de la dépendance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-147">-   If the cache entry is removed, the cache implementation must also dispose of the dependency.</span></span>  
  
<span data-ttu-id="d3b12-148">-L’implémentation interne de la <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> méthode appelle automatiquement la <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> méthode après avoir appelé un rappel qui est inscrit via <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-148">-   The internal implementation of the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method automatically calls the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method after it calls a callback that is registered through <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="d3b12-149">Cet appel automatique à la méthode dispose pendant le déclenchement de l’événement se produit uniquement si l’initialisation de la <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance a été effectuée précédemment.</span><span class="sxs-lookup"><span data-stu-id="d3b12-149">This automatic call to the dispose method during the event firing only occurs if the initialization of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance was previously completed.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="d3b12-150">Lorsque le constructeur d’un analyseur de modification dérivée appelle le <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> méthode, si l’état de l’Analyseur de modification a déjà changé (autrement dit, l’état qui est surveillé a déjà été modifié lorsque le constructeur était encore actif), le <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> sera (méthode) supprimer automatiquement le suivi des modifications.</span><span class="sxs-lookup"><span data-stu-id="d3b12-150">When a derived change monitor's constructor calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method, if the state of the change monitor has already changed (that is, the state that is monitored already changed when the constructor was still active) then the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method will automatically dispose of the change monitor.</span></span>  
  
<span data-ttu-id="d3b12-151">-Le <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /> propriété est définie sur <see langword="true" /> après le <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> méthode est appelée par l’instance de surveillance des modifications dérivées, indépendamment de si un <see cref="T:System.Runtime.Caching.OnChangedCallback" /> objet a été défini par un appel à la <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> méthode ou non.</span><span class="sxs-lookup"><span data-stu-id="d3b12-151">-   The <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /> property is set to <see langword="true" /> after the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called by the derived change-monitor instance, regardless of whether a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object has been set by a call to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or not.</span></span></para></block>
    <altmember cref="N:System.Web.Caching" />
    <altmember cref="T:System.Runtime.Caching.ObjectCache" />
    <related type="Article" href="https://msdn.microsoft.com/library/ac11c8ea-df5d-4de8-b315-9ccf1048b0ce"><span data-ttu-id="d3b12-152">La mise en cache ASP.NET</span><span class="sxs-lookup"><span data-stu-id="d3b12-152">ASP.NET Caching</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChangeMonitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChangeMonitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3b12-153">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-153">Initializes a new instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span> <span data-ttu-id="d3b12-154">Ce constructeur est appelé par les constructeurs de classes dérivées pour initialiser la classe de base.</span><span class="sxs-lookup"><span data-stu-id="d3b12-154">This constructor is called from constructors in derived classes to initialize the base class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3b12-155">Le <xref:System.Runtime.Caching.ChangeMonitor> classe a un constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="d3b12-155">The <xref:System.Runtime.Caching.ChangeMonitor> class has a default constructor.</span></span> <span data-ttu-id="d3b12-156">Toutefois, les classes qui héritent de la base de <xref:System.Runtime.Caching.ChangeMonitor> classe et définissez la surveillance des modifications personnalisée comportement doit exécuter l’initialisation dans le constructeur.</span><span class="sxs-lookup"><span data-stu-id="d3b12-156">However, classes that inherit from the base <xref:System.Runtime.Caching.ChangeMonitor> class and define custom change-monitoring behavior must perform initialization in the constructor.</span></span> <span data-ttu-id="d3b12-157">Pour plus d’informations, consultez les section Remarques aux héritiers.</span><span class="sxs-lookup"><span data-stu-id="d3b12-157">For more information, see the Notes for Inheritors section.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d3b12-158">Le constructeur d’une classe dérivée doit définir la <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> propriété, commencer la surveillance et appeler la <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> classe avant de retourner.</span><span class="sxs-lookup"><span data-stu-id="d3b12-158">The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> class before it returns.</span></span> <span data-ttu-id="d3b12-159">Si une dépendance a été modifiée avant l’initialisation est terminée (par exemple, si une clé de cache dépendante est introuvable dans le cache), le constructeur doit appeler le <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> méthode avant d’appeler le <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3b12-159">If a dependency changes before initialization is complete (for example, if a dependent cache key is not found in the cache), the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before it calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span></span> <span data-ttu-id="d3b12-160">Dans ce cas, le constructeur peut appeler le <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> méthode uniquement après la <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> méthode est appelée, car le <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> méthode lève une exception si l’initialisation n’est pas terminée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-160">In this case, constructor can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3b12-161">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-161">Releases all resources used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3b12-162">Le <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> méthode est utilisée pour libérer le <xref:System.Runtime.Caching.ChangeMonitor> instance et les ressources associées.</span><span class="sxs-lookup"><span data-stu-id="d3b12-162">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is used to release the <xref:System.Runtime.Caching.ChangeMonitor> instance and related resources.</span></span> <span data-ttu-id="d3b12-163">Public <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> méthode est appelée pour coordonner le processus d’élimination avec les événements de cycle de vie de clé de classes d’analyseur de modification dérivée (par exemple, l’initialisation) et pour libérer le <xref:System.Runtime.Caching.ChangeMonitor> instance afin que l’instance peut être nettoyées.</span><span class="sxs-lookup"><span data-stu-id="d3b12-163">The public <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is invoked to coordinate the disposal process with key life-cycle events of derived change-monitor classes (such as initialization), and to release the <xref:System.Runtime.Caching.ChangeMonitor> instance so that the instance can be garbage collected.</span></span> <span data-ttu-id="d3b12-164">Le <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> méthode est implémentée par les classes de surveillance des modifications dérivées pour supprimer leurs ressources managées et non managées.</span><span class="sxs-lookup"><span data-stu-id="d3b12-164">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is implemented by derived change-monitor classes to dispose of their managed and unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="changeMonitor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3b12-165">Libère toutes les ressources qui sont utilisées par l’instance actuelle de la classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-165">Releases all resources that are used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3b12-166">Le <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> méthode appelle le <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> méthode des classes dérivées qu’une seule fois, la première fois qu’elle est appelée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-166">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method invokes the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method of derived classes only one time, the first time it is called.</span></span> <span data-ttu-id="d3b12-167">Les appels suivants à la <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> (méthode) n’ont aucun effet.</span><span class="sxs-lookup"><span data-stu-id="d3b12-167">Subsequent calls to the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method have no effect.</span></span> <span data-ttu-id="d3b12-168">Une fois que la méthode a été appelée, le <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> propriété est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="d3b12-168">After the method has been called, the <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="d3b12-169">Le <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> surcharge doit être appelée pour supprimer un <xref:System.Runtime.Caching.ChangeMonitor> instance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-169">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload must be called to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="d3b12-170">Les règles sont les suivantes pour appeler la méthode dispose :</span><span class="sxs-lookup"><span data-stu-id="d3b12-170">The following are the rules for calling the dispose method:</span></span>  
  
-   <span data-ttu-id="d3b12-171">Avant qu’un élément est inséré dans le cache, il revient l’appelant pour supprimer un <xref:System.Runtime.Caching.ChangeMonitor> instance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-171">Before an item is inserted into the cache, it is the caller's responsibility to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
-   <span data-ttu-id="d3b12-172">Une fois l’élément du cache et la <xref:System.Runtime.Caching.ChangeMonitor> instances qui lui sont associées sont passées à un cache, l’implémenteur de cache doit s’assurer que <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> est appelée, même si l’insertion échoue.</span><span class="sxs-lookup"><span data-stu-id="d3b12-172">Once cache item and the <xref:System.Runtime.Caching.ChangeMonitor> instances that are associated with it are passed to a cache, the cache implementer that must make sure that <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> is called, even if the insert fails.</span></span>  
  
-   <span data-ttu-id="d3b12-173">Après un élément et ses associés <xref:System.Runtime.Caching.ChangeMonitor> instances sont passées à un cache, l’appelant ne doit pas supprimer la dépendance car lorsque la <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> est appelée, l’appel est traité comme si la dépendance a changé.</span><span class="sxs-lookup"><span data-stu-id="d3b12-173">After an item and its associated <xref:System.Runtime.Caching.ChangeMonitor> instances are passed to a cache, the caller must not dispose the dependency because when the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is called, the call is treated as if the dependency has changed.</span></span> <span data-ttu-id="d3b12-174">Par conséquent, le <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> méthode est appelée automatiquement.</span><span class="sxs-lookup"><span data-stu-id="d3b12-174">As a result, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is automatically invoked.</span></span>  
  
-   <span data-ttu-id="d3b12-175">Ces règles en tenant compte, le <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> méthode doit être appelée dans une des manières suivantes :</span><span class="sxs-lookup"><span data-stu-id="d3b12-175">Taking these rules into consideration, the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method must be called in one of the following ways:</span></span>  
  
    -   <span data-ttu-id="d3b12-176">Les utilisateurs doivent appeler le <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> surcharge de méthode si elles décident de ne pas insérer de l’instance dérivée de suivi des modifications dans un cache.</span><span class="sxs-lookup"><span data-stu-id="d3b12-176">Users must call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
    -   <span data-ttu-id="d3b12-177">L’implémentation de cache est chargée d’appeler le <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> surcharge si l’implémentation essaie d’insérer l’instance de l’Analyseur de modification dans un cache d’objets mais que l’insertion échoue.</span><span class="sxs-lookup"><span data-stu-id="d3b12-177">The cache implementation is responsible for calling the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload if the implementation tries to insert the change-monitor instance into an object cache but the insertion fails.</span></span> <span data-ttu-id="d3b12-178">Lors de la tentative d’insertion provoque une exception, l’implémentation de cache doit supprimer toutes les dépendances associées.</span><span class="sxs-lookup"><span data-stu-id="d3b12-178">When the insertion attempt causes an exception, the cache implementation must dispose any associated dependencies.</span></span>  
  
    -   <span data-ttu-id="d3b12-179">Si l’entrée de cache est supprimée, l’implémentation de cache doit également supprimer la dépendance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-179">If the cache entry is removed, the cache implementation must also dispose the dependency.</span></span>  
  
 <span data-ttu-id="d3b12-180">L’implémentation interne de la <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> méthode appelle automatiquement la <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> méthode après avoir appelé un rappel qui est inscrit par le biais du <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3b12-180">The internal implementation of the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method after it calls a callback that is registered through the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3b12-181">Cette suppression automatique pendant le déclenchement des événements se produit uniquement si l’initialisation de la <xref:System.Runtime.Caching.ChangeMonitor> instance précédemment s’est terminée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-181">This automatic dispose during the event firing only occurs if the initialization of the <xref:System.Runtime.Caching.ChangeMonitor> instance previously completed.</span></span>  
  
 <span data-ttu-id="d3b12-182">Lorsque le constructeur d’un analyseur de modification dérivée appelle le <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> méthode, si l’état de l’Analyseur de modification a déjà changé (autrement dit, l’état qui est surveillé a déjà modifié lorsque le constructeur était toujours actif) puis <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> sera (méthode) supprimer automatiquement le suivi des modifications.</span><span class="sxs-lookup"><span data-stu-id="d3b12-182">When a derived change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, if the state of the change monitor has already changed (that is, the state that is monitored has already changed when the constructor was still active) then <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method will automatically dispose the change monitor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3b12-183">Les utilisateurs ne doivent pas appeler le <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3b12-183">Users should not call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="d3b12-184">Toutefois, vous ne pouvez pas empêcher les utilisateurs à partir de l’appel de la méthode.</span><span class="sxs-lookup"><span data-stu-id="d3b12-184">However, you cannot prevent users from calling the method.</span></span> <span data-ttu-id="d3b12-185">Par conséquent, s’ils le font, la <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-185">Therefore, if they do, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked.</span></span> <span data-ttu-id="d3b12-186">Dans ce cas, l’entrée du cache est notifiée comme si la dépendance a changé.</span><span class="sxs-lookup"><span data-stu-id="d3b12-186">In that case, the cache entry is notified as if the dependency has changed.</span></span>  
  
 <span data-ttu-id="d3b12-187">Pour empêcher des classes dérivées de substituer <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> méthode, la méthode n’est pas une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3b12-187">To prevent derived classes from overriding <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method, the method is not an explicit interface implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d3b12-188">L'initialisation n'est pas terminée dans la classe d'analyseur de modification dérivée qui a appelé la méthode <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> de base.</span><span class="sxs-lookup"><span data-stu-id="d3b12-188">Initialization is not complete in the derived change-monitor class that called the base <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span></span></exception>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected abstract void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit" Usage="changeMonitor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d3b12-189"><see langword="true" /> pour libérer les ressources managées et non managées, ainsi que les références à une instance de <see cref="T:System.Runtime.Caching.ChangeMonitor" /> ; <see langword="false" /> pour libérer uniquement les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="d3b12-189"><see langword="true" /> to release managed and unmanaged resources and any references to a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance; <see langword="false" /> to release only unmanaged resources.</span></span> <span data-ttu-id="d3b12-190">Lorsque la valeur <see langword="false" /> est transmise, la méthode <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> est appelée par un thread <see langword="finalizer" /> et les références managées externes ne sont probablement plus valides, car elles ont déjà été récupérées par le garbage collector.</span><span class="sxs-lookup"><span data-stu-id="d3b12-190">When <see langword="false" /> is passed, the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method is called by a <see langword="finalizer" /> thread and any external managed references are likely no longer valid because they have already been garbage collected.</span></span></param>
        <summary><span data-ttu-id="d3b12-191">Libère toutes les ressources managées et non managées, ainsi que les références à l'instance <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-191">Releases all managed and unmanaged resources and any references to the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span> <span data-ttu-id="d3b12-192">Cette surcharge doit être implémentée par des classes de surveillance des modifications dérivées.</span><span class="sxs-lookup"><span data-stu-id="d3b12-192">This overload must be implemented by derived change-monitor classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3b12-193">Lorsque la valeur de `disposing` valeur est `true`, toutes les ressources managées et non managées sont supprimées et toutes les références à cet objet sont libérées afin que l’instance de surveillance des modifications dérivées peut être nettoyées.</span><span class="sxs-lookup"><span data-stu-id="d3b12-193">When the value of `disposing` value is `true`, all managed and unmanaged resources are disposed and any references to this object are released so that the derived change-monitor instance can be garbage collected.</span></span> <span data-ttu-id="d3b12-194">Il est garanti que la base de <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> méthode appelle l’implémentation <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> méthode qu’une seule fois.</span><span class="sxs-lookup"><span data-stu-id="d3b12-194">It is guaranteed that the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method will invoke the implemented <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method only one time.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d3b12-195">Analyseur de modification doit implémenter la <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> surcharge pour libérer toutes les ressources managées et lorsque la valeur de <paramref name="disposing" /> est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-195">A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload to release all managed and unmanaged resources when the value of <paramref name="disposing" /> is <see langword="true" />.</span></span> <span data-ttu-id="d3b12-196">Le <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> surcharge de méthode qui a un <paramref name="disposing" /> valeur <see langword="true" /> parle qu’une seule fois, à savoir, lorsque l’instance est supprimée pour la première fois.</span><span class="sxs-lookup"><span data-stu-id="d3b12-196">The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method overload that has a <paramref name="disposing" /> value of <see langword="true" /> is called only one time, namely, when the instance is disposed for the first time.</span></span> <span data-ttu-id="d3b12-197">Analyseur de modification ne doit pas appeler le <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> surcharger directement.</span><span class="sxs-lookup"><span data-stu-id="d3b12-197">A change monitor must not call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload directly.</span></span> <span data-ttu-id="d3b12-198">Analyseur de modification dérivée peut appeler le public sans paramètre <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> méthode sur la base de <see cref="T:System.Runtime.Caching.ChangeMonitor" /> classe.</span><span class="sxs-lookup"><span data-stu-id="d3b12-198">A derived change monitor can call the public parameter-less <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method on the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span>  
  
<span data-ttu-id="d3b12-199">Vous pouvez également un analyseur de modification peut implémenter une méthode de finaliseur.</span><span class="sxs-lookup"><span data-stu-id="d3b12-199">Alternatively, a change monitor can implement a finalizer method.</span></span> <span data-ttu-id="d3b12-200">Dans ce cas, le finaliseur peut appeler le <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> (méthode) et lui passer un <paramref name="disposing" /> valeur <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-200">In that case, the finalizer can invoke the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method and pass it a <paramref name="disposing" /> value of <see langword="false" />.</span></span> <span data-ttu-id="d3b12-201">Toutefois, il s’agit généralement pas nécessaire.</span><span class="sxs-lookup"><span data-stu-id="d3b12-201">However, this is usually unnecessary.</span></span> <span data-ttu-id="d3b12-202">Surveiller les modifications de la dépendance est généralement effectuée par un service qui conserve une référence à l’instance de l’Analyseur de modification.</span><span class="sxs-lookup"><span data-stu-id="d3b12-202">Monitoring for dependency changes is typically performed by a service that maintains a reference to the change-monitor instance.</span></span> <span data-ttu-id="d3b12-203">La référence empêche l’instance d’une garbage collecté et est donc une méthode de finaliseur inutiles.</span><span class="sxs-lookup"><span data-stu-id="d3b12-203">The reference prevents the instance from being garbage collected, and therefore makes a finalizer method unnecessary.</span></span> <span data-ttu-id="d3b12-204">Pour éviter les fuites de mémoire, lorsqu’une dépendance change, la <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> méthode supprime l’instance de l’Analyseur de modification (à moins que l’initialisation n’est pas terminée).</span><span class="sxs-lookup"><span data-stu-id="d3b12-204">To avoid memory leaks, when a dependency changes, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method disposes the change-monitor instance (unless initialization has not finished).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="System.Runtime.Caching.ChangeMonitor.HasChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3b12-205">Obtient une valeur qui indique que l'état surveillé par la classe <see cref="T:System.Runtime.Caching.ChangeMonitor" /> a changé.</span><span class="sxs-lookup"><span data-stu-id="d3b12-205">Gets a value that indicates that the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class has changed.</span></span></summary>
        <value><span data-ttu-id="d3b12-206"><see langword="true" /> si l'état surveillé par l'instance <see cref="T:System.Runtime.Caching.ChangeMonitor" /> a changé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-206"><see langword="true" /> if the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance has changed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3b12-207">Vous pouvez vérifier la valeur de cette propriété dans une dérivée <xref:System.Runtime.Caching.ChangeMonitor> classe pour voir si une dépendance a changé.</span><span class="sxs-lookup"><span data-stu-id="d3b12-207">You can check the value of this property in a derived <xref:System.Runtime.Caching.ChangeMonitor> class to see whether a dependency has changed.</span></span>  
  
 <span data-ttu-id="d3b12-208">La valeur est définie sur `true` lorsqu’une modification de dépendance se produit (autrement dit, quand le <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> méthode est appelée).</span><span class="sxs-lookup"><span data-stu-id="d3b12-208">The value is set to `true` when a dependency change occurs (that is, when the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called).</span></span> <span data-ttu-id="d3b12-209">Après le <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> méthode est appelée par la classe dérivée, la valeur de la <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> propriété sera `true`, quel que soit ou non d’un <xref:System.Runtime.Caching.OnChangedCallback> instance a été notifiée par un appel à la <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3b12-209">After the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called by the derived class, the value of the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property will be `true`, regardless of whether a <xref:System.Runtime.Caching.OnChangedCallback> instance has been notified by a call to the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3b12-210">Les appelants peuvent vérifier le <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> propriété pour voir si une dépendance a changé.</span><span class="sxs-lookup"><span data-stu-id="d3b12-210">Callers can check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property to see whether a dependency has changed.</span></span> <span data-ttu-id="d3b12-211">Toutefois, dans un environnement multithread, une approche plus simple et plus facile à gérer est pour insérer des données dans une implémentation de cache sans vérifier le <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d3b12-211">However, in a multi-threaded environment, a simpler and more maintainable approach is to insert data into a cache implementation without checking the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property.</span></span> <span data-ttu-id="d3b12-212">Les implémentations de cache doivent vérifier le <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> propriété pour vous et ne doivent pas effectuer une insertion ou opération ensembliste si une ou plusieurs dépendances associées ont déjà été modifié.</span><span class="sxs-lookup"><span data-stu-id="d3b12-212">Cache implementations must check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property for you and must not perform an insert or set operation if one or more associated dependencies have already changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InitializationComplete">
      <MemberSignature Language="C#" Value="protected void InitializationComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializationComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializationComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializationComplete();" />
      <MemberSignature Language="F#" Value="member this.InitializationComplete : unit -&gt; unit" Usage="changeMonitor.InitializationComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3b12-213">Appelé par le constructeur des classes dérivées pour indiquer que l'initialisation est terminée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-213">Called from the constructor of derived classes to indicate that initialization is finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3b12-214">Si une dépendance change avant l’initialisation est terminée dans une classe dérivée, le constructeur de la classe dérivée doit appeler la <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3b12-214">If a dependency changes before initialization is complete in a derived class, the constructor of the derived class must invoke the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span>  
  
 <span data-ttu-id="d3b12-215">Lorsque le <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> méthode est appelée, le <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> propriété est automatiquement définie sur `true` par l’Analyseur de modification.</span><span class="sxs-lookup"><span data-stu-id="d3b12-215">When the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked, the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is automatically set to `true` by the change monitor.</span></span> <span data-ttu-id="d3b12-216">Par conséquent, lorsque l’Analyseur de modification le constructeur appelle la <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> (méthode), la classe de base appelle automatiquement la <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3b12-216">As a result, when the change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, the base class will automatically call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="d3b12-217">Si l’initialisation est terminée, le <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> méthode supprime automatiquement l’instance de surveillance des modifications dérivées.</span><span class="sxs-lookup"><span data-stu-id="d3b12-217">If initialization is complete, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically disposes the derived change-monitor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d3b12-218">Le constructeur d’une classe dérivée doit appeler la base <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> méthode avant le retour du constructeur.</span><span class="sxs-lookup"><span data-stu-id="d3b12-218">The constructor of a derived class must call the base <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the constructor returns.</span></span> <span data-ttu-id="d3b12-219">Le constructeur d’une classe dérivée peut appeler le <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> méthode uniquement après avoir <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> est appelée, car le <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> méthode lève une exception si l’initialisation n’est pas terminée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-219">The constructor of a derived class can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Runtime.Caching.ChangeMonitor.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3b12-220">Obtient une valeur qui indique que l'instance dérivée d'une classe <see cref="T:System.Runtime.Caching.ChangeMonitor" /> est supprimée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-220">Gets a value that indicates that the derived instance of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class is disposed.</span></span></summary>
        <value><span data-ttu-id="d3b12-221"><see langword="true" /> si l'instance est supprimée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-221"><see langword="true" /> if the instance is disposed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3b12-222">La propriété est définie sur `true` après la base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> les appels de méthode le <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> méthode dans une classe dérivée pour éliminer l’instance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-222">The property is set to `true` after the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method in a derived class to dispose of the instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnChanged">
      <MemberSignature Language="C#" Value="public void NotifyOnChanged (System.Runtime.Caching.OnChangedCallback onChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyOnChanged(class System.Runtime.Caching.OnChangedCallback onChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyOnChanged(System::Runtime::Caching::OnChangedCallback ^ onChangedCallback);" />
      <MemberSignature Language="F#" Value="member this.NotifyOnChanged : System.Runtime.Caching.OnChangedCallback -&gt; unit" Usage="changeMonitor.NotifyOnChanged onChangedCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
      </Parameters>
      <Docs>
        <param name="onChangedCallback"><span data-ttu-id="d3b12-223">Référence à une méthode appelée lorsqu'une dépendance a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-223">A reference to a method that is invoked when a dependency has changed.</span></span></param>
        <summary><span data-ttu-id="d3b12-224">Appelée par les implémenteurs de cache pour inscrire un rappel et notifier une instance de <see cref="T:System.Runtime.Caching.ObjectCache" /> via le délégué <see cref="T:System.Runtime.Caching.OnChangedCallback" /> lorsqu'une dépendance a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-224">Called by Cache implementers to register a callback and notify an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance through the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> delegate when a dependency has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3b12-225">Les implémenteurs de cache utilisent cette méthode pour se connecter à un analyseur de modification.</span><span class="sxs-lookup"><span data-stu-id="d3b12-225">Cache implementers use this method to wire themselves up to a change monitor.</span></span> <span data-ttu-id="d3b12-226">Si vous associez un ou plusieurs analyseurs de modification à l’élément de cache, vous passez un <xref:System.Runtime.Caching.CacheItemPolicy> instance avec une propriété de moniteurs de modification remplie à l’élément de cache.</span><span class="sxs-lookup"><span data-stu-id="d3b12-226">If you associate one or more change monitors with the cache item, you pass a <xref:System.Runtime.Caching.CacheItemPolicy> instance with a populated change monitors property to the cache item.</span></span> <span data-ttu-id="d3b12-227">Un implémenteur de cache qui prend en charge des analyseurs de modification est responsable de l’itération sur la <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> propriété et inscrire le <xref:System.Runtime.Caching.OnChangedCallback> délégués avec chaque analyseur de modification qu’il trouve.</span><span class="sxs-lookup"><span data-stu-id="d3b12-227">A cache implementer that supports change monitors is responsible for iterating over the <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> property and register the <xref:System.Runtime.Caching.OnChangedCallback> delegates with each change monitor that it finds.</span></span>  
  
 <span data-ttu-id="d3b12-228">Étant donné que le <xref:System.Runtime.Caching.OnChangedCallback> délégué inclut un paramètre d’état facultatif, une implémentation d’analyseur de modification concrète peut passer des informations d’état facultatives.</span><span class="sxs-lookup"><span data-stu-id="d3b12-228">Because the <xref:System.Runtime.Caching.OnChangedCallback> delegate includes an optional state parameter, a concrete change monitor implementation can pass optional state information.</span></span> <span data-ttu-id="d3b12-229">L’implémenteur de cache détermine si une dépendance explicite sur le type d’état Analyseur de modification personnalisé transmet en tant que partie du rappel peut être extraite.</span><span class="sxs-lookup"><span data-stu-id="d3b12-229">The cache implementer determines whether an explicit dependency on the type of state that a custom change monitor passes as part of the callback can be taken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3b12-230">L’API d’extensibilité du cache de base n’a aucune spécification de dépendance explicite sur le type d’état.</span><span class="sxs-lookup"><span data-stu-id="d3b12-230">The base cache extensibility API has no requirement for explicit dependency on the type of state.</span></span>  
  
 <span data-ttu-id="d3b12-231">L’implémentation de la <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> méthode détermine automatiquement si l’état de l’analyse a déjà changé au moment <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-231">The implementation of the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method automatically determines whether the state of the monitor has already changed at the time <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called.</span></span> <span data-ttu-id="d3b12-232">Si le <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> propriété est `true`, la méthode appelle automatiquement la <xref:System.Runtime.Caching.OnChangedCallback> Gestionnaire d’événements, qui a été inscrit, via le <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3b12-232">If the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is `true`, then the method automatically calls the <xref:System.Runtime.Caching.OnChangedCallback> event handler, that was registered, through the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span> <span data-ttu-id="d3b12-233">Cela se produit, car il est possible qu’à partir du moment qu'une implémentation de cache crée un analyseur de modification, à la fois une implémentation de cache Obtient l’analyse et celui, l’état surveillé sous-jacent a changé.</span><span class="sxs-lookup"><span data-stu-id="d3b12-233">This occurs because it is possible that from the time a cache implementation creates a change monitor, to the time a cache implementation gets the monitor and wires itself up to it, the underlying monitored state has changed.</span></span> <span data-ttu-id="d3b12-234">Si l’état a déjà changé, l’objet qui est passé à la <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> méthode est `null`.</span><span class="sxs-lookup"><span data-stu-id="d3b12-234">If the state has already changed then the object that is passed to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is `null`.</span></span>  
  
 <span data-ttu-id="d3b12-235">Le <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> méthode peut être appelée qu’une seule fois et lève une exception lors des appels ultérieurs.</span><span class="sxs-lookup"><span data-stu-id="d3b12-235">The <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method can be invoked only one time, and will throw an exception on subsequent calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d3b12-236">La méthode de rappel a déjà été appelée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-236">The callback method has already been invoked.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d3b12-237"><paramref name="onChangedCallback" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-237"><paramref name="onChangedCallback" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d3b12-238">1.  Vous devez appeler la <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> méthode pour être informé des modifications de dépendance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-238">1.  You must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method to be notified of any dependency changes.</span></span> <span data-ttu-id="d3b12-239">Si une modification de dépendance a déjà eu lieu, le <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance sera appelée lorsque <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-239">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span></span> <span data-ttu-id="d3b12-240">Sinon, le <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance sera appelée une seule fois, soit lorsque le <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> méthode est appelée ou lorsque le <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> méthode est appelée, selon la première éventualité.</span><span class="sxs-lookup"><span data-stu-id="d3b12-240">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called one time, either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, whichever occurs first.</span></span> <span data-ttu-id="d3b12-241">Le <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance fournie par l’implémentation de cache doit supprimer l’entrée de cache et si cela est demandé par l’appelant du cache, déclencher la modification nécessaire ou l’événement de mise à jour à l’appelant de cache d’origine.</span><span class="sxs-lookup"><span data-stu-id="d3b12-241">The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance provided by the cache implementation should remove the cache entry and if it is requested by the cache caller, raise the necessary change or update event back to the original cache caller.</span></span>  
  
<span data-ttu-id="d3b12-242">2.</span><span class="sxs-lookup"><span data-stu-id="d3b12-242">2.</span></span>  <span data-ttu-id="d3b12-243">L’implémentation de cache d’objet doit supprimer l’entrée de cache qui est associée à une modification de dépendance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-243">The object cache implementation must remove the cache entry that is associated with a dependency change.</span></span></para></block>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChanged (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChanged(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.OnChanged : obj -&gt; unit" Usage="changeMonitor.OnChanged state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="d3b12-244">Données de l'événement de modification.</span><span class="sxs-lookup"><span data-stu-id="d3b12-244">The data for the change event.</span></span> <span data-ttu-id="d3b12-245">Cette valeur peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-245">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d3b12-246">Appelé par les classes dérivées pour déclencher l'événement lorsqu'une dépendance a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-246">Called by derived classes to raise the event when a dependency changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3b12-247">En règle générale, le <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> méthode est appelée en cas de modification de dépendance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-247">Typically, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called when dependency changes occur.</span></span> <span data-ttu-id="d3b12-248">Le <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> méthode est également appelée lorsqu’une instance de surveillance des modifications est supprimée mais que la suppression se produit uniquement si le rappel n’a pas déjà été appelé.</span><span class="sxs-lookup"><span data-stu-id="d3b12-248">The <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is also invoked when a change-monitor instance is disposed but the disposal occurs only if the callback has not already been invoked.</span></span>  
  
 <span data-ttu-id="d3b12-249">Si le <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> méthode est appelée avant la <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> méthode est appelée, les données d’état de l’appel à la <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> méthode est enregistrée par l’implémentation de cache.</span><span class="sxs-lookup"><span data-stu-id="d3b12-249">If the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called before the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called, the state data from the call to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is saved by the cache implementation.</span></span> <span data-ttu-id="d3b12-250">En outre, le rappel pour le <xref:System.Runtime.Caching.OnChangedCallback> méthode est appelée immédiatement lorsque la <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="d3b12-250">Also, the callback to the <xref:System.Runtime.Caching.OnChangedCallback> method is invoked immediately when the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public abstract string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueId : string" Usage="System.Runtime.Caching.ChangeMonitor.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3b12-251">Obtient une valeur qui représente l'instance de la classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="d3b12-251">Gets a value that represents the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class instance.</span></span></summary>
        <value><span data-ttu-id="d3b12-252">Identificateur d'une instance de surveillance des modifications.</span><span class="sxs-lookup"><span data-stu-id="d3b12-252">The identifier for a change-monitor instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3b12-253">Le <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> valeur de propriété se compose généralement dépendance noms combinée des données de chaîne qui identifie de façon unique les données surveillées par un <xref:System.Runtime.Caching.ChangeMonitor> instance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-253">The <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property value typically consists of dependency names combined string data that uniquely identifiers the data that is being monitored by a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="d3b12-254">La valeur de la <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> propriété est une chaîne.</span><span class="sxs-lookup"><span data-stu-id="d3b12-254">The value of the <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property is a string.</span></span> <span data-ttu-id="d3b12-255">La valeur de la chaîne est utilisée pour affecter l’ID unique de la <xref:System.Runtime.Caching.ChangeMonitor> instance.</span><span class="sxs-lookup"><span data-stu-id="d3b12-255">The value of the string is used to assign the unique ID of the <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d3b12-256">En substituant la propriété, vous pouvez définir une implémentation personnalisée pour la valeur de chaîne de la propriété pour l’affecter un ID unique.</span><span class="sxs-lookup"><span data-stu-id="d3b12-256">By overriding the property, you can define a custom implementation for the string value of the property in order to assign it a unique ID.</span></span></para></block>
        <block subset="none" type="overrides"><para><span data-ttu-id="d3b12-257">Dans les classes dérivées, vous devez définir la valeur de la propriété dans le constructeur.</span><span class="sxs-lookup"><span data-stu-id="d3b12-257">In derived classes, you must set the value of the property in the constructor.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>