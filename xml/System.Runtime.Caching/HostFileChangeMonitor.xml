<Type Name="HostFileChangeMonitor" FullName="System.Runtime.Caching.HostFileChangeMonitor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="15366bf2547c18451db55bcb7d5d1a037fd07433" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39924825" /></Metadata><TypeSignature Language="C#" Value="public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostFileChangeMonitor extends System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.HostFileChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostFileChangeMonitor&#xA;Inherits FileChangeMonitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostFileChangeMonitor sealed : System::Runtime::Caching::FileChangeMonitor" />
  <TypeSignature Language="F#" Value="type HostFileChangeMonitor = class&#xA;    inherit FileChangeMonitor" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.FileChangeMonitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Surveille les chemins d'accès aux répertoires et aux fichiers, et fournit une notification au cache concernant les modifications apportées aux éléments surveillés. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Runtime.Caching.HostFileChangeMonitor> classe est une implémentation concrète de la <xref:System.Runtime.Caching.FileChangeMonitor> type. Cette classe est scellée, par conséquent, il ne peut pas être étendu. Cette classe est utile si vous souhaitez utiliser une implémentation de cache existante et surveiller les fichiers et répertoires pour les modifications.  
  
 Pour chaque fichier spécifié ou le chemin d’accès du répertoire, la <xref:System.Runtime.Caching.HostFileChangeMonitor> classe déclenche une notification de modification si une des modifications suivantes se produit :  
  
-   Le nom du fichier analysé ou des changements de répertoire.  
  
-   Le fichier ou répertoire spécifié n’existait pas au moment de l’analyse a été créée, mais qu’il a été créée ultérieurement. En d’autres termes, un fichier ou répertoire a été créé dans la portée des éléments surveillés.  
  
-   La taille d’un fichier surveillé est modifiée.  
  
-   Le contenu d’un fichier surveillé modifié, ou le contenu d’un répertoire surveillé est modifié.  
  
-   La liste de contrôle d’accès (ACL) du fichier ou du répertoire a été modifiée.  
  
-   Le fichier analysé ou le répertoire a été supprimé.  
  
 Si trop de modifications se produire pour le fichier analysé ou le répertoire en même temps, le <xref:System.Runtime.Caching.HostFileChangeMonitor> instance peut perdre la trace des modifications spécifiques. Dans ce scénario, le <xref:System.Runtime.Caching.HostFileChangeMonitor> classe déclenche une notification de modification. Ce scénario est plus susceptible de se produire lorsque le <xref:System.Runtime.Caching.HostFileChangeMonitor> instance surveille un répertoire et de nombreuses modifications se produisent dans le cadre de la structure de répertoires sur une courte période de temps.  
  
 Étant donné que l’objectif de la <xref:System.Runtime.Caching.HostFileChangeMonitor> classe est uniquement de signaler que quelque chose a changé entre le jeu de fichiers surveillés et de répertoires, il n’est pas considéré comme important que les informations sur une modification spécifique ne sont pas capturées. L’objectif de la <xref:System.Runtime.Caching.HostFileChangeMonitor> classe consiste à fournir la notification d’état modifié de sorte qu’une entrée de cache (ou entrées) peuvent être supprimées. Étant donné que la <xref:System.Runtime.Caching.HostFileChangeMonitor> classe n’indique pas exactement ce qui a changé, le suivi des modifications interne de dépassement de capacité n’est pas pertinente.  
  
 Lorsque vous fournissez des chemins d’accès à un <xref:System.Runtime.Caching.HostFileChangeMonitor> chemins d’accès de l’instance, le répertoire et le fichier doivent être des chemins d’accès complets au répertoire ou au fichier. Chemins d’accès relatifs et les caractères génériques dans les chemins d’accès ne sont pas autorisés.  
  
 Lorsque la <xref:System.Runtime.Caching.HostFileChangeMonitor> classe est utilisée dans une application ASP.NET, l’identité Windows qui est utilisée pour accéder aux éléments surveillés est l’identité de l’application ASP.NET. En d’autres termes, l’identité de l’application aura l’une des opérations suivantes :  
  
-   L’identité du processus.  
  
-   L’identité de l’application configurée.  
  
-   Les informations d’identification UNC si l’application est en cours d’exécution à partir d’un partage UNC.  
  
 Lorsque le <xref:System.Runtime.Caching.HostFileChangeMonitor> classe est utilisée dans une application non-ASP.NET, la <xref:System.IO.FileSystemWatcher> classe est utilisée en interne pour surveiller les fichiers. Par conséquent, toute liste de contrôle d’accès (ACL) s’applique à un fichier surveillé ou un répertoire est appliquée à l’identité Windows du thread actuel.  
  
> [!NOTE]
>  Les appelants doivent avoir le niveau approprié d’autorisations de sécurité (CA) d’accès au code et doivent disposer des autorisations NTFS pour tous les répertoires et surveillés chemins d’accès.  
  
   
  
## Examples  
 L’exemple suivant crée un élément de cache qui utilise un <xref:System.Runtime.Caching.HostFileChangeMonitor> objet à surveiller l’état des données sources (c'est-à-dire un fichier) sur le système de fichiers. L’entrée du cache est définie en utilisant un <xref:System.Runtime.Caching.CacheItemPolicy> objet pour fournir des détails d’éviction et d’expiration pour l’entrée de cache.  
  
 [!code-csharp[CachingASPNetApplications#1](~/samples/snippets/csharp/VS_Snippets_WebNet/cachingaspnetapplications/cs/default.aspx.cs#1)]
 [!code-vb[CachingASPNetApplications#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/cachingaspnetapplications/vb/default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostFileChangeMonitor (System.Collections.Generic.IList&lt;string&gt; filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;string&gt; filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filePaths As IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostFileChangeMonitor(System::Collections::Generic::IList&lt;System::String ^&gt; ^ filePaths);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Caching.HostFileChangeMonitor : System.Collections.Generic.IList&lt;string&gt; -&gt; System.Runtime.Caching.HostFileChangeMonitor" Usage="new System.Runtime.Caching.HostFileChangeMonitor filePaths" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="filePaths">Liste qui contient un ou plusieurs chemins d'accès aux répertoires ou aux fichiers à surveiller.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les appels à la <xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A> constructeur doit fournir une valeur non null pour le `filePaths` paramètre. Au minimum, le constructeur valide la collection de chemins d’accès qui est passée dans celle-ci, puis initialise l’analyse pour ces chemins d’accès.  
  
> [!NOTE]
>  Le constructeur effectue uniquement la validation du nom de chemin d’accès de chaîne. Il ne canonicaliser les chemins d’accès ni valider que les chemins d’accès existent.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filePaths" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="filePaths" /> contient des éléments nuls.  
  
- ou - 
Un chemin d'accès dans la liste <paramref name="filePaths" /> est <see langword="null" /> ou une chaîne vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hostFileChangeMonitor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePaths">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FilePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FilePaths" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FilePaths As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FilePaths { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePaths : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de chemins d'accès aux répertoires ou aux fichiers passée au constructeur <see cref="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />.</summary>
        <value>Collection de chemins d'accès aux répertoires ou aux fichiers.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public override DateTimeOffset LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastModified" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LastModified As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTimeOffset LastModified { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.LastModified : DateTimeOffset" Usage="System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur en lecture seule qui indique l'heure de dernière écriture d'un fichier ou d'un chemin d'accès surveillé.</summary>
        <value>Heure de dernière écriture d'un fichier ou d'un chemin d'accès surveillé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si une modification de fichier surveille plusieurs fichiers ou chemins d’accès, cette propriété retourne l’heure de la dernière écriture dans le jeu de tous les fichiers et les chemins d’accès.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public override string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueId : string" Usage="System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un identificateur pour l'instance <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" /> basée sur l'ensemble des chemins d'accès aux répertoires et aux fichiers surveillés.</summary>
        <value>Identificateur pour la surveillance des modifications.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chaîne qui constitue le <xref:System.Runtime.Caching.HostFileChangeMonitor.UniqueId%2A> valeur de propriété est construite à partir des parties suivantes :  
  
-   Un chemin d’accès du fichier ou répertoire.  
  
-   Temps d’écriture le plus récent en heure UTC, mesuré en graduations mais représenté sous forme de chaîne hexadécimale.  
  
-   La taille du fichier, représentée sous forme de chaîne hexadécimale.  
  
 Si un analyseur de modification de fichier surveille plusieurs chemins d’accès, les informations retournées par cette propriété sont concaténées en une chaîne unique pour tous les répertoires surveillés et les chemins d’accès de fichier.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>