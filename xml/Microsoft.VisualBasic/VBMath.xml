<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="VBMath.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53839187e325901ad3f3f4d5e81304055450240f2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3839187e325901ad3f3f4d5e81304055450240f2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.VBMath">
          <source>The <ph id="ph1">&lt;see langword="VbMath" /&gt;</ph> module contains procedures used to perform mathematical operations.</source>
          <target state="translated">Le module <ph id="ph1">&lt;see langword="VbMath" /&gt;</ph> contient les procédures utilisées pour effectuer des opérations mathématiques.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.VBMath">
          <source>This module supports the Visual Basic language keywords and run-time library members for generating random numbers.</source>
          <target state="translated">Ce module prend en charge les mots clés du langage Visual Basic et les membres de la bibliothèque Runtime pour la génération de nombres aléatoires.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.VBMath">
          <source>This example uses the <ph id="ph1">`Rnd`</ph> function to generate a random integer value in the range from 1 to 6.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`Rnd`</ph> fonction à générer un entier aléatoire compris dans la plage de 1 à 6.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.VBMath">
          <source>Initializes the random-number generator.</source>
          <target state="translated">Initialise le générateur de nombres aléatoires.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Randomize">
          <source>Initializes the random-number generator.</source>
          <target state="translated">Initialise le générateur de nombres aléatoires.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize">
          <source>This overload of the <ph id="ph1">`Randomize`</ph> method does not take a seed value.</source>
          <target state="translated">Cette surcharge de la <ph id="ph1">`Randomize`</ph> méthode ne prend pas une valeur de départ.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize">
          <source>Instead, the value returned by the system timer is used as the new seed value.</source>
          <target state="translated">Au lieu de cela, la valeur retournée par l’horloge système est utilisée en tant que la nouvelle valeur de départ.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize">
          <source>If <ph id="ph1">`Randomize`</ph> is not used, the <ph id="ph2">`Rnd`</ph> function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.</source>
          <target state="translated">Si <ph id="ph1">`Randomize`</ph> n’est pas utilisé, le <ph id="ph2">`Rnd`</ph> fonction (sans argument) utilise le même nombre comme valeur initiale la première fois, elle est appelée et par la suite utilise le nombre généré par le dernier comme une valeur de départ.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize">
          <source>To repeat sequences of random numbers, call <ph id="ph1">`Rnd`</ph> with a negative argument immediately before using <ph id="ph2">`Randomize`</ph> with a numeric argument.</source>
          <target state="translated">Pour répéter des séquences de nombres aléatoires, appelez <ph id="ph1">`Rnd`</ph> avec un argument négatif juste avant d’utiliser <ph id="ph2">`Randomize`</ph> avec un argument numérique.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize">
          <source>Because the <ph id="ph1">`Random`</ph> statement and the <ph id="ph2">`Rnd`</ph> function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</source>
          <target state="translated">Étant donné que la <ph id="ph1">`Random`</ph> instruction et <ph id="ph2">`Rnd`</ph> fonction commencent par une valeur initiale et génèrent des nombres qui se trouvent dans une plage finie, les résultats peuvent être prévus par toute personne connaissant l’algorithme utilisé pour générer les.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize">
          <source>Consequently, the <ph id="ph1">`Random`</ph> statement and the <ph id="ph2">`Rnd`</ph> function should not be used to generate random numbers for use in cryptography.</source>
          <target state="translated">Par conséquent, le <ph id="ph1">`Random`</ph> instruction et <ph id="ph2">`Rnd`</ph> fonction ne doit pas être utilisée pour générer des nombres aléatoires à utiliser dans le chiffrement.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize">
          <source>This example uses the <ph id="ph1">`Randomize`</ph> statement to initialize the random-number generator.</source>
          <target state="translated">Cet exemple utilise la <ph id="ph1">`Randomize`</ph> instruction pour initialiser le Générateur de nombres aléatoires.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize">
          <source>Because the number argument has been omitted, <ph id="ph1">`Randomize`</ph> uses the return value from the <ph id="ph2">`Timer`</ph> function as the new seed value.</source>
          <target state="translated">L’argument de nombre a été omis, <ph id="ph1">`Randomize`</ph> utilise la valeur de retournée de la <ph id="ph2">`Timer`</ph> de fonction en tant que la nouvelle valeur de départ.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source>An <ph id="ph1">&lt;see langword="Object" /&gt;</ph> or any valid numeric expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> ou toute expression numérique valide.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source>Initializes the random-number generator.</source>
          <target state="translated">Initialise le générateur de nombres aléatoires.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source><ph id="ph1">`Randomize`</ph> uses <ph id="ph2">`Number`</ph> to initialize the <ph id="ph3">`Rnd`</ph> function's random-number generator, giving it a new seed value.</source>
          <target state="translated"><ph id="ph1">`Randomize`</ph> utilise <ph id="ph2">`Number`</ph> pour initialiser le <ph id="ph3">`Rnd`</ph> Générateur de nombres aléatoires de la fonction, en lui donnant une nouvelle valeur de départ.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source>If you omit <ph id="ph1">`Number`</ph>, the value returned by the system timer is used as the new seed value.</source>
          <target state="translated">Si vous omettez <ph id="ph1">`Number`</ph>, la valeur retournée par l’horloge système est utilisée en tant que la nouvelle valeur de départ.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source>If <ph id="ph1">`Randomize`</ph> is not used, the <ph id="ph2">`Rnd`</ph> function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.</source>
          <target state="translated">Si <ph id="ph1">`Randomize`</ph> n’est pas utilisé, le <ph id="ph2">`Rnd`</ph> fonction (sans argument) utilise le même nombre comme valeur initiale la première fois, elle est appelée et par la suite utilise le nombre généré par le dernier comme une valeur de départ.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source>To repeat sequences of random numbers, call <ph id="ph1">`Rnd`</ph> with a negative argument immediately before using <ph id="ph2">`Randomize`</ph> with a numeric argument.</source>
          <target state="translated">Pour répéter des séquences de nombres aléatoires, appelez <ph id="ph1">`Rnd`</ph> avec un argument négatif juste avant d’utiliser <ph id="ph2">`Randomize`</ph> avec un argument numérique.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source>Using <ph id="ph1">`Randomize`</ph> with the same value for <ph id="ph2">`Number`</ph> does not repeat the previous sequence.</source>
          <target state="translated">À l’aide de <ph id="ph1">`Randomize`</ph> avec la même valeur pour <ph id="ph2">`Number`</ph> ne se répète pas la séquence précédente.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source>Because the <ph id="ph1">`Random`</ph> statement and the <ph id="ph2">`Rnd`</ph> function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</source>
          <target state="translated">Étant donné que la <ph id="ph1">`Random`</ph> instruction et <ph id="ph2">`Rnd`</ph> fonction commencent par une valeur initiale et génèrent des nombres qui se trouvent dans une plage finie, les résultats peuvent être prévus par toute personne connaissant l’algorithme utilisé pour générer les.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source>Consequently, the <ph id="ph1">`Random`</ph> statement and the <ph id="ph2">`Rnd`</ph> function should not be used to generate random numbers for use in cryptography.</source>
          <target state="translated">Par conséquent, le <ph id="ph1">`Random`</ph> instruction et <ph id="ph2">`Rnd`</ph> fonction ne doit pas être utilisée pour générer des nombres aléatoires à utiliser dans le chiffrement.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source>This example uses the <ph id="ph1">`Randomize`</ph> statement to initialize the random-number generator.</source>
          <target state="translated">Cet exemple utilise la <ph id="ph1">`Randomize`</ph> instruction pour initialiser le Générateur de nombres aléatoires.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
          <source>Because the number argument has been omitted, <ph id="ph1">`Randomize`</ph> uses the return value from the <ph id="ph2">`Timer`</ph> function as the new seed value.</source>
          <target state="translated">L’argument de nombre a été omis, <ph id="ph1">`Randomize`</ph> utilise la valeur de retournée de la <ph id="ph2">`Timer`</ph> de fonction en tant que la nouvelle valeur de départ.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.VBMath">
          <source>Returns a random number of type <ph id="ph1">&lt;see langword="Single" /&gt;</ph>.</source>
          <target state="translated">Retourne un nombre aléatoire de type <ph id="ph1">&lt;see langword="Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Rnd">
          <source>Returns a random number of type <ph id="ph1">&lt;see langword="Single" /&gt;</ph>.</source>
          <target state="translated">Retourne un nombre aléatoire de type <ph id="ph1">&lt;see langword="Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Rnd">
          <source>The next random number in the sequence.</source>
          <target state="translated">Le nombre aléatoire suivant dans la série.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd">
          <source>The <ph id="ph1">`Rnd`</ph> function returns a value less than 1, but greater than or equal to zero.</source>
          <target state="translated">Le <ph id="ph1">`Rnd`</ph> fonction retourne une valeur inférieure à 1, mais supérieur ou égal à zéro.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd">
          <source>Before calling <ph id="ph1">`Rnd`</ph>, use the <ph id="ph2">`Randomize`</ph> statement without an argument to initialize the random-number generator with a seed based on the system timer.</source>
          <target state="translated">Avant d’appeler <ph id="ph1">`Rnd`</ph>, utilisez la <ph id="ph2">`Randomize`</ph> instruction sans argument pour initialiser le Générateur de nombres aléatoires avec une valeur initiale basée sur l’horloge système.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd">
          <source>To produce random integers in a given range, use the following formula.</source>
          <target state="translated">Pour générer des entiers aléatoires dans une plage donnée, utilisez la formule suivante.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd">
          <source>Here, <ph id="ph1">`upperbound`</ph> is the highest number in the range, and <ph id="ph2">`lowerbound`</ph> is the lowest number in the range.</source>
          <target state="translated">Ici, <ph id="ph1">`upperbound`</ph> est le nombre le plus élevé dans la plage, et <ph id="ph2">`lowerbound`</ph> est le nombre le plus bas dans la plage.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd">
          <source>To repeat sequences of random numbers, call <ph id="ph1">`Rnd`</ph> with a negative argument immediately before using <ph id="ph2">`Randomize`</ph> with a numeric argument.</source>
          <target state="translated">Pour répéter des séquences de nombres aléatoires, appelez <ph id="ph1">`Rnd`</ph> avec un argument négatif juste avant d’utiliser <ph id="ph2">`Randomize`</ph> avec un argument numérique.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd">
          <source>Because the <ph id="ph1">`Random`</ph> statement and the <ph id="ph2">`Rnd`</ph> function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</source>
          <target state="translated">Étant donné que la <ph id="ph1">`Random`</ph> instruction et <ph id="ph2">`Rnd`</ph> fonction commencent par une valeur initiale et génèrent des nombres qui se trouvent dans une plage finie, les résultats peuvent être prévus par toute personne connaissant l’algorithme utilisé pour générer les.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd">
          <source>Consequently, the <ph id="ph1">`Random`</ph> statement and the <ph id="ph2">`Rnd`</ph> function should not be used to generate random numbers for use in cryptography.</source>
          <target state="translated">Par conséquent, le <ph id="ph1">`Random`</ph> instruction et <ph id="ph2">`Rnd`</ph> fonction ne doit pas être utilisée pour générer des nombres aléatoires à utiliser dans le chiffrement.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd">
          <source>This example uses the <ph id="ph1">`Rnd`</ph> function to generate a random integer value in the range from 1 to 6.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`Rnd`</ph> fonction à générer un entier aléatoire compris dans la plage de 1 à 6.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>A <ph id="ph1">&lt;see langword="Single" /&gt;</ph> value or any valid <ph id="ph2">&lt;see langword="Single" /&gt;</ph> expression.</source>
          <target state="translated">Une valeur <ph id="ph1">&lt;see langword="Single" /&gt;</ph> ou toute expression <ph id="ph2">&lt;see langword="Single" /&gt;</ph> valide.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>Returns a random number of type <ph id="ph1">&lt;see langword="Single" /&gt;</ph>.</source>
          <target state="translated">Retourne un nombre aléatoire de type <ph id="ph1">&lt;see langword="Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>If number is less than zero, Rnd generates the same number every time, using <ph id="ph1">&lt;paramref name="Number" /&gt;</ph> as the seed.</source>
          <target state="translated">Si le nombre est inférieur à zéro, Rnd génère même nombre à chaque fois, en utilisant l'argument <ph id="ph1">&lt;paramref name="Number" /&gt;</ph>comme valeur initiale.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>If number is greater than zero, Rnd generates the next random number in the sequence.</source>
          <target state="translated">Si le nombre est supérieur à zéro, Rnd génère le nombre aléatoire suivant dans la séquence.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>If number is equal to zero, Rnd generates the most recently generated number.</source>
          <target state="translated">Si le nombre est égal à zéro, Rnd génère le dernier nombre généré.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>If number is not supplied, Rnd generates the next random number in the sequence.</source>
          <target state="translated">Si le nombre n'est pas fourni, Rnd génère le nombre aléatoire suivant dans la séquence.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>The <ph id="ph1">`Rnd`</ph> function returns a value less than 1, but greater than or equal to zero.</source>
          <target state="translated">Le <ph id="ph1">`Rnd`</ph> fonction retourne une valeur inférieure à 1, mais supérieur ou égal à zéro.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>The value of <ph id="ph1">`Number`</ph> determines how <ph id="ph2">`Rnd`</ph> generates a random number.</source>
          <target state="translated">La valeur de <ph id="ph1">`Number`</ph> détermine comment <ph id="ph2">`Rnd`</ph> génère un nombre aléatoire.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>For any given initial seed, the same number sequence is generated because each successive call to the <ph id="ph1">`Rnd`</ph> function uses the previously generated number as a seed for the next number in the sequence.</source>
          <target state="translated">Toute valeur initiale donnée, la même séquence de nombres est générée, car chaque appel à la <ph id="ph1">`Rnd`</ph> fonction utilise le nombre généré précédemment comme valeur de départ pour le numéro suivant dans la séquence.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>Before calling <ph id="ph1">`Rnd`</ph>, use the <ph id="ph2">`Randomize`</ph> statement without an argument to initialize the random-number generator with a seed based on the system timer.</source>
          <target state="translated">Avant d’appeler <ph id="ph1">`Rnd`</ph>, utilisez la <ph id="ph2">`Randomize`</ph> instruction sans argument pour initialiser le Générateur de nombres aléatoires avec une valeur initiale basée sur l’horloge système.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>To produce random integers in a given range, use the following formula.</source>
          <target state="translated">Pour générer des entiers aléatoires dans une plage donnée, utilisez la formule suivante.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>Here, <ph id="ph1">`upperbound`</ph> is the highest number in the range, and <ph id="ph2">`lowerbound`</ph> is the lowest number in the range.</source>
          <target state="translated">Ici, <ph id="ph1">`upperbound`</ph> est le nombre le plus élevé dans la plage, et <ph id="ph2">`lowerbound`</ph> est le nombre le plus bas dans la plage.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>To repeat sequences of random numbers, call <ph id="ph1">`Rnd`</ph> with a negative argument immediately before using <ph id="ph2">`Randomize`</ph> with a numeric argument.</source>
          <target state="translated">Pour répéter des séquences de nombres aléatoires, appelez <ph id="ph1">`Rnd`</ph> avec un argument négatif juste avant d’utiliser <ph id="ph2">`Randomize`</ph> avec un argument numérique.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>Using <ph id="ph1">`Randomize`</ph> with the same value for <ph id="ph2">`Number`</ph> does not repeat the previous sequence.</source>
          <target state="translated">À l’aide de <ph id="ph1">`Randomize`</ph> avec la même valeur pour <ph id="ph2">`Number`</ph> ne se répète pas la séquence précédente.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>Because the <ph id="ph1">`Random`</ph> statement and the <ph id="ph2">`Rnd`</ph> function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</source>
          <target state="translated">Étant donné que la <ph id="ph1">`Random`</ph> instruction et <ph id="ph2">`Rnd`</ph> fonction commencent par une valeur initiale et génèrent des nombres qui se trouvent dans une plage finie, les résultats peuvent être prévus par toute personne connaissant l’algorithme utilisé pour générer les.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>Consequently, the <ph id="ph1">`Random`</ph> statement and the <ph id="ph2">`Rnd`</ph> function should not be used to generate random numbers for use in cryptography.</source>
          <target state="translated">Par conséquent, le <ph id="ph1">`Random`</ph> instruction et <ph id="ph2">`Rnd`</ph> fonction ne doit pas être utilisée pour générer des nombres aléatoires à utiliser dans le chiffrement.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
          <source>This example uses the <ph id="ph1">`Rnd`</ph> function to generate a random integer value in the range from 1 to 6.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`Rnd`</ph> fonction à générer un entier aléatoire compris dans la plage de 1 à 6.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>