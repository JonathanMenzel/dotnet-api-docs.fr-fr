<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0763605b5570e09f0b13f7032c94322d5809e8a5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39771805" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <TypeSignature Language="F#" Value="type ErrObject = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="96242-101">Le module <see langword="ErrObject" /> contient des propriétés et procédures permettant d'identifier et de gérer les erreurs d'exécution à l'aide de l'objet <see langword="Err" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="96242-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96242-102">Le `ErrObject` module prend en charge la `Err` objet.</span><span class="sxs-lookup"><span data-stu-id="96242-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="96242-103">Pour plus d'informations, consultez <xref:Microsoft.VisualBasic.Information.Err%2A>.</span><span class="sxs-lookup"><span data-stu-id="96242-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96242-104">Cet exemple utilise les propriétés de la `Err` objet lors de la construction d’une boîte de dialogue de message d’erreur.</span><span class="sxs-lookup"><span data-stu-id="96242-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="96242-105">Notez ce qui se passe lorsque vous utilisez le `Clear` méthode première : lorsque vous générez une erreur Visual Basic avec le `Raise` (méthode), les valeurs par défaut de Visual Basic deviennent les propriétés de la `Err` objet.</span><span class="sxs-lookup"><span data-stu-id="96242-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errObject.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96242-106">Efface tous les paramètres de propriété de l'objet <see langword="Err" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-106">Clears all property settings of the <see langword="Err" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96242-107">Utilisez `Clear` à vider explicitement la `Err` après une erreur a été gérée, comme lorsque vous utilisez l’aide de l’objet `On Error Resume Next`.</span><span class="sxs-lookup"><span data-stu-id="96242-107">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="96242-108">Le `Clear` méthode est appelée automatiquement chaque fois que l’une des instructions suivantes est exécutée :</span><span class="sxs-lookup"><span data-stu-id="96242-108">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="96242-109">N’importe quel type de `Resume` instruction</span><span class="sxs-lookup"><span data-stu-id="96242-109">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="96242-110">`Exit Sub`, `Exit Function`ou `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="96242-110">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="96242-111">N’importe quel `On Error` instruction</span><span class="sxs-lookup"><span data-stu-id="96242-111">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="96242-112">N’importe quel `Try...Catch...Finally` instruction</span><span class="sxs-lookup"><span data-stu-id="96242-112">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="96242-113">Le `On Error Resume Next` construction peut être préférable `On Error GoTo` lors de la gestion des erreurs générées pendant l’accès à d’autres objets.</span><span class="sxs-lookup"><span data-stu-id="96242-113">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="96242-114">La vérification `Err` après chaque interaction avec un objet supprime l’ambiguïté dont l’objet est accessible par le code : vous pouvez être sûr quel objet placé dans le code d’erreur `Err.Number`, ainsi que de l’objet qui a généré l’erreur (l’objet spécifié dans `Err.Source`).</span><span class="sxs-lookup"><span data-stu-id="96242-114">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96242-115">Cet exemple utilise le `Err` l’objet `Clear` méthode pour réinitialiser les propriétés numériques de le `Err` objet à zéro et ses propriétés de chaîne pour les chaînes de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="96242-115">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="96242-116">Sans l’appel à `Clear`, le deuxième appel à `MsgBox` afficherait le même message d’erreur.</span><span class="sxs-lookup"><span data-stu-id="96242-116">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96242-117">Retourne ou définit une expression <see langword="String" /> contenant une chaîne descriptive associée à une erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-117">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span>
          </span>
          <span data-ttu-id="96242-118">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-118">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96242-119">Retourne ou définit une expression <see langword="String" /> contenant une chaîne descriptive associée à une erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-119">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span>
          </span>
          <span data-ttu-id="96242-120">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-120">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96242-121">Le `Description` propriété comprend une brève description de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="96242-121">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="96242-122">Utilisez cette propriété pour avertir l’utilisateur d’une erreur que vous ne pouvez pas ou ne souhaitez pas gérer.</span><span class="sxs-lookup"><span data-stu-id="96242-122">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="96242-123">Lors de la génération d’une erreur définie par l’utilisateur, assignez une courte description de votre erreur à la `Description` propriété.</span><span class="sxs-lookup"><span data-stu-id="96242-123">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="96242-124">Si le `Description` propriété n’est pas renseignée et la valeur de la <xref:Microsoft.VisualBasic.ErrObject.Number%2A> propriété correspond à une erreur d’exécution Visual Basic, puis la chaîne retournée par la <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> fonction est définie dans le `Description` propriété lors de l’erreur est générée.</span><span class="sxs-lookup"><span data-stu-id="96242-124">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96242-125">Cet exemple assigne un message défini par l’utilisateur pour le `Description` propriété de la `Err` objet.</span><span class="sxs-lookup"><span data-stu-id="96242-125">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Erl : int" Usage="Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96242-126">Retourne un entier indiquant le numéro de ligne de la dernière instruction exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-126">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="96242-127">Lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-127">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96242-128">Retourne un entier indiquant le numéro de ligne de la dernière instruction exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-128">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="96242-129">Lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-129">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96242-130">Si Visual Basic ne rencontre aucun numéro de ligne, elle retourne 0.</span><span class="sxs-lookup"><span data-stu-id="96242-130">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96242-131">Cet exemple utilise le `Erl` propriété pour indiquer le numéro de ligne.</span><span class="sxs-lookup"><span data-stu-id="96242-131">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberSignature Language="F#" Value="member this.GetException : unit -&gt; Exception" Usage="errObject.GetException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96242-132">Retourne l'exception représentant l'erreur survenue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-132">Returns the exception representing the error that occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96242-133">Retourne l'exception représentant l'erreur survenue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-133">Returns the exception representing the error that occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96242-134">Le `GetException` fonction est disponible uniquement à partir de la `Err` classe d’objet.</span><span class="sxs-lookup"><span data-stu-id="96242-134">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="96242-135">Il fonctionne avec le `Exception` propriété de la `Err` objet pour afficher l’erreur qui s’est produite.</span><span class="sxs-lookup"><span data-stu-id="96242-135">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96242-136">Le code suivant affiche le message assigné à l’exception dans le `Err` objet :</span><span class="sxs-lookup"><span data-stu-id="96242-136">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HelpContext : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96242-137">Retourne ou définit un <see langword="Integer" /> contenant l'ID de contexte pour une rubrique dans un fichier d'aide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-137">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span>
          </span>
          <span data-ttu-id="96242-138">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-138">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96242-139">Retourne ou définit un <see langword="Integer" /> contenant l'ID de contexte pour une rubrique dans un fichier d'aide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-139">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span>
          </span>
          <span data-ttu-id="96242-140">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-140">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96242-141">Le `HelpContext` propriété est utilisée pour afficher l’aide contextuelle pour une application.</span><span class="sxs-lookup"><span data-stu-id="96242-141">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="96242-142">Si un fichier d’aide est spécifié dans `HelpFile`, le `HelpContext` propriété est utilisée pour afficher automatiquement le fichier d’aide identifié.</span><span class="sxs-lookup"><span data-stu-id="96242-142">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="96242-143">Si les deux le `HelpFile` et `HelpContext` propriétés sont vides, la valeur de la <xref:Microsoft.VisualBasic.ErrObject.Number%2A> propriété est vérifiée.</span><span class="sxs-lookup"><span data-stu-id="96242-143">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="96242-144">Si la valeur de la `Number` propriété correspond à une valeur d’erreur d’exécution Visual Basic, puis l’ID de contexte de l’aide de Visual Basic pour l’erreur est utilisé.</span><span class="sxs-lookup"><span data-stu-id="96242-144">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="96242-145">Si la valeur de la `Number` propriété ne correspond pas à une erreur Visual Basic, l’écran de contenu pour le fichier d’aide Visual Basic s’affiche.</span><span class="sxs-lookup"><span data-stu-id="96242-145">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96242-146">Vous devez écrire des routines dans votre application pour gérer les erreurs courantes.</span><span class="sxs-lookup"><span data-stu-id="96242-146">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="96242-147">Lors de la programmation avec un objet, vous pouvez utiliser le fichier d’objet aide pour améliorer la qualité de votre gestion des erreurs, ou pour afficher un message significatif à votre utilisateur si l’erreur n’est pas récupérable.</span><span class="sxs-lookup"><span data-stu-id="96242-147">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96242-148">Cet exemple utilise le `HelpContext` propriété de la `Err` objet pour afficher la rubrique d’aide Visual Basic pour le `Overflow` erreur.</span><span class="sxs-lookup"><span data-stu-id="96242-148">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpFile : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96242-149">Retourne ou définit une expression <see langword="String" /> contenant le chemin qualifié complet à un fichier d'aide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-149">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span>
          </span>
          <span data-ttu-id="96242-150">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-150">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96242-151">Retourne ou définit une expression <see langword="String" /> contenant le chemin qualifié complet à un fichier d'aide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-151">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span>
          </span>
          <span data-ttu-id="96242-152">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-152">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96242-153">Si un fichier d’aide est spécifié par le `HelpFile` propriété, elle est automatiquement appelée lorsque l’utilisateur appuie sur la touche d’aide (ou la touche F1) dans la boîte de dialogue de message erreur.</span><span class="sxs-lookup"><span data-stu-id="96242-153">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="96242-154">Si le `HelpContext` propriété contient un contexte valide ID pour le fichier spécifié, cette rubrique est automatiquement affiché.</span><span class="sxs-lookup"><span data-stu-id="96242-154">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="96242-155">Si aucun `HelpFile` est spécifié, le fichier d’aide Visual Basic s’affiche.</span><span class="sxs-lookup"><span data-stu-id="96242-155">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96242-156">Vous devez écrire des routines dans votre application pour gérer les erreurs courantes.</span><span class="sxs-lookup"><span data-stu-id="96242-156">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="96242-157">Lors de la programmation avec un objet, vous pouvez utiliser le fichier d’objet aide pour améliorer la qualité de votre gestion des erreurs, ou pour afficher un message significatif à votre utilisateur si l’erreur n’est pas récupérable.</span><span class="sxs-lookup"><span data-stu-id="96242-157">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96242-158">Cet exemple utilise le `HelpFile` propriété de la `Err` objet pour démarrer le système d’aide.</span><span class="sxs-lookup"><span data-stu-id="96242-158">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="96242-159">Par défaut, le `HelpFile` propriété comporte le nom du fichier d’aide de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="96242-159">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastDllError : int" Usage="Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96242-160">Retourne un code d'erreur système produit par un appel à une bibliothèque de liens dynamiques (DLL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-160">Returns a system error code produced by a call to a dynamic-link library (DLL).</span>
          </span>
          <span data-ttu-id="96242-161">Lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-161">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96242-162">Retourne un code d'erreur système produit par un appel à une bibliothèque de liens dynamiques (DLL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-162">Returns a system error code produced by a call to a dynamic-link library (DLL).</span>
          </span>
          <span data-ttu-id="96242-163">Lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-163">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96242-164">Le <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> propriété s’applique uniquement aux appels DLL effectués à partir de code Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="96242-164">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="96242-165">Lorsqu’un appel est effectué, la fonction appelée retourne généralement un code indiquant la réussite ou l’échec et le <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> propriété est remplie.</span><span class="sxs-lookup"><span data-stu-id="96242-165">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="96242-166">Consultez la documentation pour les fonctions de la DLL déterminer les valeurs de retour qui indiquent la réussite ou l’échec.</span><span class="sxs-lookup"><span data-stu-id="96242-166">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="96242-167">Chaque fois que le code d’échec est retourné, l’application Visual Basic doit vérifier immédiatement la <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="96242-167">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="96242-168">Aucune exception n’est levée lorsque le <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> propriété est définie.</span><span class="sxs-lookup"><span data-stu-id="96242-168">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96242-169">Le <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> propriété est protégée par <xref:System.Security.Permissions.SecurityAction.LinkDemand>, ce qui empêche qu’il soit accessible à partir de code non fiable.</span><span class="sxs-lookup"><span data-stu-id="96242-169">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="96242-170">Toutefois, <xref:System.Security.Permissions.SecurityAction.LinkDemand> nécessite uniquement l’appelant immédiat doit être <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> autorisation.</span><span class="sxs-lookup"><span data-stu-id="96242-170">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="96242-171">Si votre code peut être appelé à partir du code partiellement fiable, exposant la valeur de <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> sans validation constitue un risque de sécurité.</span><span class="sxs-lookup"><span data-stu-id="96242-171">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="96242-172">Pour les limitations importantes concernant l’utilisation de la <xref:System.Security.Permissions.SecurityAction.LinkDemand> membre, consultez [Demand et. LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span><span class="sxs-lookup"><span data-stu-id="96242-172">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="96242-173">Pour plus d’informations sur les autorisations, consultez <xref:System.Security.Permissions.SecurityPermission> et [autorisations d’accès de Code](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="96242-173">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="96242-174">Remarque pour les périphériques intelligents de que cette propriété retourne toujours la valeur zéro.</span><span class="sxs-lookup"><span data-stu-id="96242-174">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96242-175">L’exemple suivant montre comment vous pouvez utiliser le `LastDllError` propriété après l’appel d’une fonction dans l’API Windows.</span><span class="sxs-lookup"><span data-stu-id="96242-175">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="96242-176">Le `PrintWindowCoordinates` procédure accepte un handle à une fenêtre et appelle le `GetWindowRect` (fonction).</span><span class="sxs-lookup"><span data-stu-id="96242-176">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="96242-177">`GetWindowRect` remplit la structure de données RECT avec les longueurs des côtés du rectangle qui composent la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="96242-177">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="96242-178">Si vous passez un handle non valide, une erreur se produit, et le numéro d’erreur est disponible via le `LastDllError` propriété.</span><span class="sxs-lookup"><span data-stu-id="96242-178">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Number : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96242-179">Retourne ou définit une valeur numérique spécifiant une erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-179">Returns or sets a numeric value specifying an error.</span>
          </span>
          <span data-ttu-id="96242-180">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-180">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96242-181">Retourne ou définit une valeur numérique spécifiant une erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-181">Returns or sets a numeric value specifying an error.</span>
          </span>
          <span data-ttu-id="96242-182">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-182">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96242-183">Tous les `Raise` les arguments sauf `Number` sont facultatifs.</span><span class="sxs-lookup"><span data-stu-id="96242-183">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="96242-184">Si vous omettez les arguments facultatifs et les paramètres de propriété de la `Err` objet contiennent des valeurs qui n’ont pas été effacées, ces valeurs servent de valeurs pour votre erreur.</span><span class="sxs-lookup"><span data-stu-id="96242-184">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="96242-185">Étant donné que le `Err` objet donne des informations plus riches que lorsque vous générez des erreurs avec le `Error` instruction, `Raise` est utile pour générer des erreurs lors de l’écriture de modules de classe.</span><span class="sxs-lookup"><span data-stu-id="96242-185">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="96242-186">Par exemple, avec le `Raise` méthode, la source ayant généré l’erreur peut être spécifiée dans le `Source` propriété, aide en ligne pour l’erreur peut être référencée et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="96242-186">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="96242-187">Lors du retour d’une erreur définie par l’utilisateur à partir d’un objet, définissez `Err.Number` en ajoutant le nombre que vous avez sélectionnée comme un code d’erreur à la `VbObjectError` constante.</span><span class="sxs-lookup"><span data-stu-id="96242-187">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="96242-188">Par exemple, vous utilisez le code suivant pour retourner le nombre 1051 comme code d’erreur :</span><span class="sxs-lookup"><span data-stu-id="96242-188">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="96242-189">Cet exemple illustre une utilisation typique de la `Number` propriété dans une routine de gestion des erreurs.</span><span class="sxs-lookup"><span data-stu-id="96242-189">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="96242-190">Cet exemple utilise le `Err` l’objet `Raise` méthode permettant de générer une erreur d’origine dans une fonction écrite en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="96242-190">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="96242-191">La fonction appelante peut intercepter l’erreur et la signaler à l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="96242-191">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="96242-192">Remarquez que la procédure `CallingProcedure` compare le type d’informations que vous pouvez dériver d’un `Err` objet avec les informations que vous pouvez dériver d’un `Exception` objet.</span><span class="sxs-lookup"><span data-stu-id="96242-192">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="96242-193">
            <paramref name="Number" /> est supérieur à 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-193">
              <paramref name="Number" /> is greater than 65535.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Raise : int * obj * obj * obj * obj -&gt; unit" Usage="errObject.Raise (Number, Source, Description, HelpFile, HelpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="96242-194">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-194">Required.</span>
          </span>
          <span data-ttu-id="96242-195">Entier <see langword="Long" /> qui identifie la nature de l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-195">
              <see langword="Long" /> integer that identifies the nature of the error.</span>
          </span>
          <span data-ttu-id="96242-196">Les erreurs Visual Basic se situent dans la plage 0-65535 ; la plage 0-512 est réservée aux erreurs système ; la plage 513-65535 est disponible pour les erreurs définies par l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-196">Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</span>
          </span>
          <span data-ttu-id="96242-197">Lorsque vous définissez la propriété <see langword="Number" /> à votre propre code d'erreur dans un module de classe, vous ajoutez votre numéro de code d'erreur à la constante <see langword="vbObjectError" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-197">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span>
          </span>
          <span data-ttu-id="96242-198">Par exemple, pour générer le numéro d’erreur 513, affectez la valeur <c>vbObjectError + 513</c> à la propriété <see langword="Number" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-198">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span>
          </span>
        </param>
        <param name="Source">
          <span data-ttu-id="96242-199">Optionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-199">Optional.</span>
          </span>
          <span data-ttu-id="96242-200">Expression <see langword="String" /> nommant l'objet ou l'application qui a généré l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-200">
              <see langword="String" /> expression naming the object or application that generated the error.</span>
          </span>
          <span data-ttu-id="96242-201">Lorsque vous définissez cette propriété pour un objet, utilisez la forme <c>project</c>.<c>class</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-201">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span>
          </span>
          <span data-ttu-id="96242-202">Si <c>Source</c> n’est pas spécifié, l’ID de processus du projet Visual Basic actuel est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-202">If <c>Source</c> is not specified, the process ID of the current Visual Basic project is used.</span>
          </span>
        </param>
        <param name="Description">
          <span data-ttu-id="96242-203">Optionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-203">Optional.</span>
          </span>
          <span data-ttu-id="96242-204">Expression <see langword="String" /> décrivant l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-204">
              <see langword="String" /> expression describing the error.</span>
          </span>
          <span data-ttu-id="96242-205">Si elle est non spécifiée, la valeur dans la propriété <see langword="Number" /> est examinée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-205">If unspecified, the value in the <see langword="Number" /> property is examined.</span>
          </span>
          <span data-ttu-id="96242-206">Si elle peut être mappée à un code d'erreur d'exécution Visual Basic, la chaîne qui serait retournée par la fonction <see langword="Error" /> est utilisée comme propriété <see langword="Description" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-206">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span>
          </span>
          <span data-ttu-id="96242-207">S'il n'y a aucune erreur Visual Basic correspondant à la propriété <see langword="Number" />, le message "Erreur définie par l'application ou par l'objet" est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-207">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span>
          </span>
        </param>
        <param name="HelpFile">
          <span data-ttu-id="96242-208">Optionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-208">Optional.</span>
          </span>
          <span data-ttu-id="96242-209">Chemin qualifié complet au fichier d'aide dans lequel l'aide concernant cette erreur peut être recherchée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-209">The fully qualified path to the Help file in which help on this error can be found.</span>
          </span>
          <span data-ttu-id="96242-210">S'il n'est pas spécifié, Visual Basic utilise le lecteur, le chemin d'accès et le nom de fichier qualifiés complets du fichier d'aide Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-210">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span>
          </span>
        </param>
        <param name="HelpContext">
          <span data-ttu-id="96242-211">Optionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-211">Optional.</span>
          </span>
          <span data-ttu-id="96242-212">ID de contexte identifiant une rubrique dans <c>HelpFile</c> qui fournit une aide pour l’erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-212">The context ID identifying a topic within <c>HelpFile</c> that provides help for the error.</span>
          </span>
          <span data-ttu-id="96242-213">S'il est omis, l'ID de contexte du fichier d'aide Visual Basic pour l'erreur correspondant à la propriété <see langword="Number" /> est utilisé, s'il existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-213">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96242-214">Génère une erreur d'exécution ; peut être utilisé au lieu de l'instruction <see langword="Error" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-214">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96242-215">Tous les `Raise` les arguments sauf `Number` sont facultatifs.</span><span class="sxs-lookup"><span data-stu-id="96242-215">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="96242-216">Si vous omettez les arguments facultatifs et les paramètres de propriété de la `Err` objet contiennent des valeurs qui n’ont pas été effacées, ces valeurs servent de valeurs pour votre erreur.</span><span class="sxs-lookup"><span data-stu-id="96242-216">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="96242-217">Étant donné que le `Err` objet donne des informations plus riches que lorsque vous générez des erreurs avec le `Error` instruction, `Raise` est utile pour générer des erreurs lors de l’écriture de modules de classe.</span><span class="sxs-lookup"><span data-stu-id="96242-217">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="96242-218">Par exemple, avec le `Raise` méthode, la source ayant généré l’erreur peut être spécifiée dans le `Source` propriété, aide en ligne pour l’erreur peut être référencée et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="96242-218">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96242-219">Cet exemple utilise le `Err` l’objet `Raise` méthode permettant de générer une erreur dans une fonction écrite en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="96242-219">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="96242-220">La fonction appelante peut intercepter l’erreur et la signaler à l’utilisateur avec une boîte de message.</span><span class="sxs-lookup"><span data-stu-id="96242-220">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96242-221">Retourne ou définit une expression <see langword="String" /> spécifiant le nom de l'objet ou de l'application qui a généré l'erreur au départ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-221">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span>
          </span>
          <span data-ttu-id="96242-222">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-222">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96242-223">Retourne ou définit une expression <see langword="String" /> spécifiant le nom de l'objet ou de l'application qui a généré l'erreur au départ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-223">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span>
          </span>
          <span data-ttu-id="96242-224">Lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96242-224">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96242-225">Le `Source` propriété spécifie un `String` expression représentant l’objet qui a généré l’erreur ; l’expression est généralement le nom de classe de l’objet ou l’ID de processus.</span><span class="sxs-lookup"><span data-stu-id="96242-225">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="96242-226">Utilisez le `Source` propriété pour fournir des informations lorsque votre code est incapable de gérer une erreur générée dans un objet accessible.</span><span class="sxs-lookup"><span data-stu-id="96242-226">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="96242-227">Par exemple, si vous accédez à Microsoft Excel et qu’il génère un `Division by zero` erreur, Microsoft Excel définit `Err.Number` à son code d’erreur pour cette erreur et les jeux `Source` à « Excel.Application ».</span><span class="sxs-lookup"><span data-stu-id="96242-227">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="96242-228">Lorsque l’application génère une erreur à partir du code, `Source` votre ID d’application par programmation.</span><span class="sxs-lookup"><span data-stu-id="96242-228">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="96242-229">Dans une classe, `Source` doit contenir un nom ayant la forme *projet*.* classe*.</span><span class="sxs-lookup"><span data-stu-id="96242-229">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="96242-230">Lorsqu’une erreur inattendue se produit dans votre code, le `Source` propriété est automatiquement renseignée.</span><span class="sxs-lookup"><span data-stu-id="96242-230">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="96242-231">Les erreurs dans un module, `Source` contient le nom du projet.</span><span class="sxs-lookup"><span data-stu-id="96242-231">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96242-232">Cet exemple illustre l’utilisation de la `Source` propriété dans une routine classique de gestion des erreurs.</span><span class="sxs-lookup"><span data-stu-id="96242-232">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="96242-233">Lorsqu’une erreur est levée à partir de `Class1`, la chaîne `"Class1"` est affectée à la `Source` propriété de la `Err` objet.</span><span class="sxs-lookup"><span data-stu-id="96242-233">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="96242-234">Cette chaîne est ensuite affichée dans un message d’information indiquant la source et le numéro de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="96242-234">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
  </Members>
</Type>