<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ErrObject.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac519573ad50fc15f1c13f60caa02a1d51f05408059.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19573ad50fc15f1c13f60caa02a1d51f05408059</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>The <ph id="ph1">&lt;see langword="ErrObject" /&gt;</ph> module contains properties and procedures used to identify and handle run-time errors using the <ph id="ph2">&lt;see langword="Err" /&gt;</ph> object.</source>
          <target state="translated">Le module <ph id="ph1">&lt;see langword="ErrObject" /&gt;</ph> contient des propriétés et procédures permettant d'identifier et de gérer les erreurs d'exécution à l'aide de l'objet <ph id="ph2">&lt;see langword="Err" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>The <ph id="ph1">`ErrObject`</ph> module supports the <ph id="ph2">`Err`</ph> object.</source>
          <target state="translated">Le <ph id="ph1">`ErrObject`</ph> module prend en charge la <ph id="ph2">`Err`</ph> objet.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Information.Err%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Information.Err%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>This example uses the properties of the <ph id="ph1">`Err`</ph> object in constructing an error-message dialog box.</source>
          <target state="translated">Cet exemple utilise les propriétés de la <ph id="ph1">`Err`</ph> objet lors de la construction d’une boîte de dialogue de message d’erreur.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>Notice what happens when you use the <ph id="ph1">`Clear`</ph> method first: When you then generate a Visual Basic error with the <ph id="ph2">`Raise`</ph> method, Visual Basic's default values become the properties of the <ph id="ph3">`Err`</ph> object.</source>
          <target state="translated">Notez que se passe-t-il lorsque vous utilisez la <ph id="ph1">`Clear`</ph> (méthode) première : lorsque vous générez une erreur Visual Basic avec le <ph id="ph2">`Raise`</ph> (méthode), les valeurs par défaut de Visual Basic deviennent les propriétés de la <ph id="ph3">`Err`</ph> objet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Clears all property settings of the <ph id="ph1">&lt;see langword="Err" /&gt;</ph> object.</source>
          <target state="translated">Efface tous les paramètres de propriété de l'objet <ph id="ph1">&lt;see langword="Err" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Use <ph id="ph1">`Clear`</ph> to explicitly clear the <ph id="ph2">`Err`</ph> object after an error has been handled, such as when you use deferred error handling with <ph id="ph3">`On Error Resume Next`</ph>.</source>
          <target state="translated">Utilisez <ph id="ph1">`Clear`</ph> pour effacer explicitement le <ph id="ph2">`Err`</ph> après le traitement d’une erreur, comme lorsque vous utilisez l’aide de l’objet <ph id="ph3">`On Error Resume Next`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>The <ph id="ph1">`Clear`</ph> method is called automatically whenever any of the following statements executes:</source>
          <target state="translated">Le <ph id="ph1">`Clear`</ph> méthode est appelée automatiquement chaque fois que l’une des instructions suivantes est exécutée :</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Any type of <ph id="ph1">`Resume`</ph> statement</source>
          <target state="translated">N’importe quel type de <ph id="ph1">`Resume`</ph> instruction</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source><ph id="ph1">`Exit Sub`</ph>, <ph id="ph2">`Exit Function`</ph>, or <ph id="ph3">`Exit Property`</ph></source>
          <target state="translated"><ph id="ph1">`Exit Sub`</ph>, <ph id="ph2">`Exit Function`</ph>ou <ph id="ph3">`Exit Property`</ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Any <ph id="ph1">`On Error`</ph> statement</source>
          <target state="translated">N’importe quel <ph id="ph1">`On Error`</ph> instruction</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Any <ph id="ph1">`Try...Catch...Finally`</ph> statement</source>
          <target state="translated">N’importe quel <ph id="ph1">`Try...Catch...Finally`</ph> instruction</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>The <ph id="ph1">`On Error Resume Next`</ph> construct may be preferable to <ph id="ph2">`On Error GoTo`</ph> when handling errors generated during access to other objects.</source>
          <target state="translated">Le <ph id="ph1">`On Error Resume Next`</ph> construction peut être préférable <ph id="ph2">`On Error GoTo`</ph> lors de la gestion des erreurs générées pendant l’accès à d’autres objets.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Checking <ph id="ph1">`Err`</ph> after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in <ph id="ph2">`Err.Number`</ph>, as well as which object originally generated the error (the object specified in <ph id="ph3">`Err.Source`</ph>).</source>
          <target state="translated">La vérification de la <ph id="ph1">`Err`</ph> après chaque interaction avec un objet supprime l’ambiguïté à laquelle l’objet est accessible par le code : vous pouvez être certain objet qui a placé le code d’erreur <ph id="ph2">`Err.Number`</ph>, ainsi que l’objet qui a généré l’erreur (l’objet spécifié dans <ph id="ph3">`Err.Source`</ph>).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>This example uses the <ph id="ph1">`Err`</ph> object's <ph id="ph2">`Clear`</ph> method to reset the numeric properties of the <ph id="ph3">`Err`</ph> object to zero and its string properties to zero-length strings.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`Err`</ph> l’objet <ph id="ph2">`Clear`</ph> méthode pour réinitialiser les propriétés numériques de le <ph id="ph3">`Err`</ph> objet à zéro et ses propriétés de chaîne pour les chaînes de longueur nulle.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Without the call to <ph id="ph1">`Clear`</ph>, the second call to <ph id="ph2">`MsgBox`</ph> would display the same error message.</source>
          <target state="translated">Sans l’appel à <ph id="ph1">`Clear`</ph>, le deuxième appel à <ph id="ph2">`MsgBox`</ph> afficherait le même message d’erreur.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing a descriptive string associated with an error.</source>
          <target state="translated">Retourne ou définit une expression <ph id="ph1">&lt;see langword="String" /&gt;</ph> contenant une chaîne descriptive associée à une erreur.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Read/write.</source>
          <target state="translated">Lecture/écriture.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing a descriptive string associated with an error.</source>
          <target state="translated">Retourne ou définit une expression <ph id="ph1">&lt;see langword="String" /&gt;</ph> contenant une chaîne descriptive associée à une erreur.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Read/write.</source>
          <target state="translated">Lecture/écriture.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>The <ph id="ph1">`Description`</ph> property setting consists of a short description of the error.</source>
          <target state="translated">Le <ph id="ph1">`Description`</ph> propriété comprend une brève description de l’erreur.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Use this property to alert the user to an error that you cannot or do not want to handle.</source>
          <target state="translated">Utilisez cette propriété pour avertir l’utilisateur d’une erreur que vous ne pouvez pas ou ne souhaitez pas gérer.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>When generating a user-defined error, assign a short description of your error to the <ph id="ph1">`Description`</ph> property.</source>
          <target state="translated">Lorsque vous générez une erreur définie par l’utilisateur, assignez une courte description de votre erreur à la <ph id="ph1">`Description`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>If the <ph id="ph1">`Description`</ph> property is not filled in, and the value of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> property corresponds to a Visual Basic run-time error, then the string returned by the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A&gt;</ph> function is set in the <ph id="ph4">`Description`</ph> property when the error is generated.</source>
          <target state="translated">Si le <ph id="ph1">`Description`</ph> propriété n’est pas renseignée et la valeur de la <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> propriété correspond à une erreur d’exécution Visual Basic, alors la chaîne retournée par la <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A&gt;</ph> fonction est définie dans le <ph id="ph4">`Description`</ph> propriété lorsque l’erreur est générée.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>This example assigns a user-defined message to the <ph id="ph1">`Description`</ph> property of the <ph id="ph2">`Err`</ph> object.</source>
          <target state="translated">Cet exemple assigne un message défini par l’utilisateur pour le <ph id="ph1">`Description`</ph> propriété de la <ph id="ph2">`Err`</ph> objet.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">Retourne un entier indiquant le numéro de ligne de la dernière instruction exécutée.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Read-only.</source>
          <target state="translated">Lecture seule.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">Retourne un entier indiquant le numéro de ligne de la dernière instruction exécutée.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Read-only.</source>
          <target state="translated">Lecture seule.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>If Visual Basic encounters no line numbers, it returns 0.</source>
          <target state="translated">Si Visual Basic ne rencontre aucun numéro de ligne, il retourne 0.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>This example uses the <ph id="ph1">`Erl`</ph> property to indicate the line number.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`Erl`</ph> propriété pour indiquer le numéro de ligne.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>Returns the exception representing the error that occurred.</source>
          <target state="translated">Retourne l'exception représentant l'erreur survenue.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>Returns the exception representing the error that occurred.</source>
          <target state="translated">Retourne l'exception représentant l'erreur survenue.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>The <ph id="ph1">`GetException`</ph> function is available only from the <ph id="ph2">`Err`</ph> object class.</source>
          <target state="translated">Le <ph id="ph1">`GetException`</ph> fonction est disponible uniquement à partir de la <ph id="ph2">`Err`</ph> classe d’objet.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>It works with the <ph id="ph1">`Exception`</ph> property of the <ph id="ph2">`Err`</ph> object to display the error that has occurred.</source>
          <target state="translated">Il fonctionne avec le <ph id="ph1">`Exception`</ph> propriété de la <ph id="ph2">`Err`</ph> objet pour afficher l’erreur qui s’est produite.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>The following code displays the message assigned to the exception in the <ph id="ph1">`Err`</ph> object:</source>
          <target state="translated">Le code suivant affiche le message assigné à l’exception dans le <ph id="ph1">`Err`</ph> objet :</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Returns or sets an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> containing the context ID for a topic in a Help file.</source>
          <target state="translated">Retourne ou définit un <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> contenant l'ID de contexte pour une rubrique dans un fichier d'aide.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Read/write.</source>
          <target state="translated">Lecture/écriture.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Returns or sets an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> containing the context ID for a topic in a Help file.</source>
          <target state="translated">Retourne ou définit un <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> contenant l'ID de contexte pour une rubrique dans un fichier d'aide.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Read/write.</source>
          <target state="translated">Lecture/écriture.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>The <ph id="ph1">`HelpContext`</ph> property is used to display context-sensitive Help for an application.</source>
          <target state="translated">Le <ph id="ph1">`HelpContext`</ph> propriété est utilisée pour afficher l’aide contextuelle pour une application.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If a Help file is specified in <ph id="ph1">`HelpFile`</ph>, the <ph id="ph2">`HelpContext`</ph> property is used to automatically display the Help file identified.</source>
          <target state="translated">Si un fichier d’aide est spécifié dans <ph id="ph1">`HelpFile`</ph>, le <ph id="ph2">`HelpContext`</ph> propriété est utilisée pour afficher automatiquement le fichier d’aide identifié.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If both the <ph id="ph1">`HelpFile`</ph> and <ph id="ph2">`HelpContext`</ph> properties are empty, the value of the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> property  is checked.</source>
          <target state="translated">Si les deux le <ph id="ph1">`HelpFile`</ph> et <ph id="ph2">`HelpContext`</ph> propriétés sont vides, la valeur de la <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> propriété est activée.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If the value of the <ph id="ph1">`Number`</ph> property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</source>
          <target state="translated">Si la valeur de la <ph id="ph1">`Number`</ph> propriété correspond à une valeur d’erreur d’exécution Visual Basic, puis l’ID de contexte de l’aide de Visual Basic de l’erreur est utilisé.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If the value of the <ph id="ph1">`Number`</ph> property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</source>
          <target state="translated">Si la valeur de la <ph id="ph1">`Number`</ph> propriété ne correspond pas à une erreur Visual Basic, l’écran de contenu pour le fichier d’aide de Visual Basic s’affiche.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>You should write routines in your application to handle typical errors.</source>
          <target state="translated">Vous devez écrire des routines dans votre application pour gérer les erreurs courantes.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</source>
          <target state="translated">Lors de la programmation avec un objet, vous pouvez utiliser les fichier d’aide de l’objet pour améliorer la qualité de votre gestion des erreurs, ou pour afficher un message significatif à votre utilisateur si l’erreur n’est pas récupérable.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>This example uses the <ph id="ph1">`HelpContext`</ph> property of the <ph id="ph2">`Err`</ph> object to show the Visual Basic Help topic for the <ph id="ph3">`Overflow`</ph> error.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`HelpContext`</ph> propriété de la <ph id="ph2">`Err`</ph> objet pour afficher la rubrique d’aide Visual Basic pour le <ph id="ph3">`Overflow`</ph> erreur.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the fully qualified path to a Help file.</source>
          <target state="translated">Retourne ou définit une expression <ph id="ph1">&lt;see langword="String" /&gt;</ph> contenant le chemin qualifié complet à un fichier d'aide.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Read/write.</source>
          <target state="translated">Lecture/écriture.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the fully qualified path to a Help file.</source>
          <target state="translated">Retourne ou définit une expression <ph id="ph1">&lt;see langword="String" /&gt;</ph> contenant le chemin qualifié complet à un fichier d'aide.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Read/write.</source>
          <target state="translated">Lecture/écriture.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>If a Help file is specified by the <ph id="ph1">`HelpFile`</ph> property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</source>
          <target state="translated">Si un fichier d’aide spécifié par le <ph id="ph1">`HelpFile`</ph> propriété, elle est automatiquement appelée quand l’utilisateur appuie sur la touche d’aide (ou la touche F1) dans la boîte de dialogue d’erreur.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>If the <ph id="ph1">`HelpContext`</ph> property contains a valid context ID for the specified file, that topic is automatically displayed.</source>
          <target state="translated">Si le <ph id="ph1">`HelpContext`</ph> propriété contient un contexte valide ID pour le fichier spécifié, cette rubrique s’affiche automatiquement.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>If no <ph id="ph1">`HelpFile`</ph> is specified, the Visual Basic Help file is displayed.</source>
          <target state="translated">Si aucun <ph id="ph1">`HelpFile`</ph> est spécifié, le fichier d’aide de Visual Basic s’affiche.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>You should write routines in your application to handle typical errors.</source>
          <target state="translated">Vous devez écrire des routines dans votre application pour gérer les erreurs courantes.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</source>
          <target state="translated">Lors de la programmation avec un objet, vous pouvez utiliser les fichier d’aide de l’objet pour améliorer la qualité de votre gestion des erreurs, ou pour afficher un message significatif à votre utilisateur si l’erreur n’est pas récupérable.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>This example uses the <ph id="ph1">`HelpFile`</ph> property of the <ph id="ph2">`Err`</ph> object to start the Help system.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`HelpFile`</ph> propriété de la <ph id="ph2">`Err`</ph> objet pour démarrer le système d’aide.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>By default, the <ph id="ph1">`HelpFile`</ph> property contains the name of the Visual Basic Help file.</source>
          <target state="translated">Par défaut, le <ph id="ph1">`HelpFile`</ph> propriété contient le nom du fichier d’aide de Visual Basic.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Returns a system error code produced by a call to a dynamic-link library (DLL).</source>
          <target state="translated">Retourne un code d'erreur système produit par un appel à une bibliothèque de liens dynamiques (DLL).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Read-only.</source>
          <target state="translated">Lecture seule.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Returns a system error code produced by a call to a dynamic-link library (DLL).</source>
          <target state="translated">Retourne un code d'erreur système produit par un appel à une bibliothèque de liens dynamiques (DLL).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Read-only.</source>
          <target state="translated">Lecture seule.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property applies only to DLL calls made from Visual Basic code.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> propriété s’applique uniquement aux appels de DLL effectués à partir de code Visual Basic.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>When such a call is made, the called function usually returns a code indicating success or failure, and the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property is filled.</source>
          <target state="translated">Lorsqu’un appel est effectué, la fonction appelée retourne généralement un code indiquant la réussite ou l’échec et le <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> propriété est remplie.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</source>
          <target state="translated">Consultez la documentation pour les fonctions de la DLL déterminer les valeurs de retournés qui indiquent la réussite ou l’échec.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Whenever the failure code is returned, the Visual Basic application should immediately check the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property.</source>
          <target state="translated">Chaque fois que le code d’échec est retourné, l’application Visual Basic doit vérifier immédiatement la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>No exception is raised when the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property is set.</source>
          <target state="translated">Aucune exception n’est levée lorsque la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> est définie.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property is protected by <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph>, which helps prevent it from being accessed from untrusted code.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> propriété est protégée par <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph>, qui vous aide à empêcher qu’il soit accessible à partir de code non fiable.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>However, <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> requires only the immediate caller to have <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A&gt;</ph> permission.</source>
          <target state="translated">Toutefois, <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> requiert uniquement l’appelant immédiat doit être <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A&gt;</ph> autorisation.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>If your code can be called from partially trusted code, exposing the value of <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> without validation is a security risk.</source>
          <target state="translated">Si votre code peut être appelé à partir du code partiellement fiable, exposant la valeur de <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> sans validation constitue un risque de sécurité.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>For important limitations about how to use the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> member, see <bpt id="p1">[</bpt>Demand vs. LinkDemand<ept id="p1">](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>.</source>
          <target state="translated">Pour les limitations importantes concernant l’utilisation de la <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> membre, consultez <bpt id="p1">[</bpt>Demand et. LinkDemand<ept id="p1">](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>For more information about permissions, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les autorisations, consultez <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> et <bpt id="p1">[</bpt>autorisations d’accès de Code<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Note   For smart devices this property always returns zero.</source>
          <target state="translated">Remarque pour les projets smart device que cette propriété retourne toujours zéro.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The following example shows how you can use the <ph id="ph1">`LastDllError`</ph> property after calling a function in the Windows API.</source>
          <target state="translated">L’exemple suivant montre comment vous pouvez utiliser le <ph id="ph1">`LastDllError`</ph> propriété après l’appel à une fonction dans l’API Windows.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The <ph id="ph1">`PrintWindowCoordinates`</ph> procedure takes a handle to a window and calls the <ph id="ph2">`GetWindowRect`</ph> function.</source>
          <target state="translated">Le <ph id="ph1">`PrintWindowCoordinates`</ph> procédure accepte un handle à une fenêtre et appelle la <ph id="ph2">`GetWindowRect`</ph> (fonction).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source><ph id="ph1">`GetWindowRect`</ph> fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</source>
          <target state="translated"><ph id="ph1">`GetWindowRect`</ph> remplit la structure de données RECT avec les longueurs des côtés du rectangle qui composent la fenêtre.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>If you pass an invalid handle, an error occurs, and the error number is available through the <ph id="ph1">`LastDllError`</ph> property.</source>
          <target state="translated">Si vous passez un handle non valide, une erreur se produit et le numéro d’erreur est disponible via le <ph id="ph1">`LastDllError`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Returns or sets a numeric value specifying an error.</source>
          <target state="translated">Retourne ou définit une valeur numérique spécifiant une erreur.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Read/write.</source>
          <target state="translated">Lecture/écriture.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Returns or sets a numeric value specifying an error.</source>
          <target state="translated">Retourne ou définit une valeur numérique spécifiant une erreur.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Read/write.</source>
          <target state="translated">Lecture/écriture.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>All of the <ph id="ph1">`Raise`</ph> arguments except <ph id="ph2">`Number`</ph> are optional.</source>
          <target state="translated">Tous les <ph id="ph1">`Raise`</ph> arguments sauf <ph id="ph2">`Number`</ph> sont facultatifs.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>If you omit optional arguments, and the property settings of the <ph id="ph1">`Err`</ph> object contain values that have not been cleared, those values serve as the values for your error.</source>
          <target state="translated">Si vous omettez les arguments facultatifs et les paramètres de propriété de la <ph id="ph1">`Err`</ph> objet contiennent des valeurs qui n’ont pas été effacées, ces valeurs servent de valeurs pour votre erreur.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Because the <ph id="ph1">`Err`</ph> object gives richer information than when you generate errors with the <ph id="ph2">`Error`</ph> statement, <ph id="ph3">`Raise`</ph> is useful for generating errors when writing class modules.</source>
          <target state="translated">Étant donné que la <ph id="ph1">`Err`</ph> objet donne des informations plus riches que lorsque vous générez des erreurs avec les <ph id="ph2">`Error`</ph> instruction, <ph id="ph3">`Raise`</ph> est utile pour générer des erreurs lors de l’écriture de modules de classe.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>For example, with the <ph id="ph1">`Raise`</ph> method, the source that generated the error can be specified in the <ph id="ph2">`Source`</ph> property, online Help for the error can be referenced, and so on.</source>
          <target state="translated">Par exemple, avec la <ph id="ph1">`Raise`</ph> (méthode), la source qui a généré l’erreur peut être spécifiée dans le <ph id="ph2">`Source`</ph> propriété, aide en ligne de l’erreur peut être référencée et ainsi de suite.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>When returning a user-defined error from an object, set <ph id="ph1">`Err.Number`</ph> by adding the number you selected as an error code to the <ph id="ph2">`VbObjectError`</ph> constant.</source>
          <target state="translated">Lors du retour d’une erreur définie par l’utilisateur à partir d’un objet, définissez <ph id="ph1">`Err.Number`</ph> en ajoutant le nombre que vous avez sélectionné en tant que code d’erreur à le <ph id="ph2">`VbObjectError`</ph> constante.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>For example, you use the following code to return the number 1051 as an error code:</source>
          <target state="translated">Par exemple, vous utilisez le code suivant pour retourner le nombre 1051 comme code d’erreur :</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>This example illustrates a typical use of the <ph id="ph1">`Number`</ph> property in an error-handling routine.</source>
          <target state="translated">Cet exemple illustre une utilisation typique de le <ph id="ph1">`Number`</ph> propriété dans une routine de gestion des erreurs.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>This example uses the <ph id="ph1">`Err`</ph> object's <ph id="ph2">`Raise`</ph> method to generate an original error within a function written in Visual Basic.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`Err`</ph> l’objet <ph id="ph2">`Raise`</ph> méthode permettant de générer une erreur d’origine dans une fonction écrite en Visual Basic.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>The calling function can catch the error and report it to the user.</source>
          <target state="translated">La fonction appelante peut intercepter l’erreur et la signaler à l’utilisateur.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Notice that procedure <ph id="ph1">`CallingProcedure`</ph> contrasts the type of information that you can derive from an <ph id="ph2">`Err`</ph> object with the information that you can derive from an <ph id="ph3">`Exception`</ph> object.</source>
          <target state="translated">Remarquez que la procédure <ph id="ph1">`CallingProcedure`</ph> contraste avec le type d’informations que vous pouvez dériver d’un <ph id="ph2">`Err`</ph> objet avec les informations que vous pouvez dériver d’un <ph id="ph3">`Exception`</ph> objet.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> is greater than 65535.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> est supérieur à 65535.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Obligatoire.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph> integer that identifies the nature of the error.</source>
          <target state="translated">Entier <ph id="ph1">&lt;see langword="Long" /&gt;</ph> qui identifie la nature de l'erreur.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</source>
          <target state="translated">Les erreurs Visual Basic se situent dans la plage 0-65535 ; la plage 0-512 est réservée aux erreurs système ; la plage 513-65535 est disponible pour les erreurs définies par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>When setting the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property to your own error code in a class module, you add your error code number to the <ph id="ph2">&lt;see langword="vbObjectError" /&gt;</ph> constant.</source>
          <target state="translated">Lorsque vous définissez la propriété <ph id="ph1">&lt;see langword="Number" /&gt;</ph> à votre propre code d'erreur dans un module de classe, vous ajoutez votre numéro de code d'erreur à la constante <ph id="ph2">&lt;see langword="vbObjectError" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>For example, to generate the error number 513, assign <bpt id="p1">&lt;c&gt;</bpt>vbObjectError + 513<ept id="p1">&lt;/c&gt;</ept> to the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property.</source>
          <target state="translated">Par exemple, pour générer le numéro d’erreur 513, affectez la valeur <bpt id="p1">&lt;c&gt;</bpt>vbObjectError + 513<ept id="p1">&lt;/c&gt;</ept> à la propriété <ph id="ph1">&lt;see langword="Number" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression naming the object or application that generated the error.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see langword="String" /&gt;</ph> nommant l'objet ou l'application qui a généré l'erreur.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>When setting this property for an object, use the form <bpt id="p1">&lt;c&gt;</bpt>project<ept id="p1">&lt;/c&gt;</ept>.<bpt id="p2">&lt;c&gt;</bpt>class<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Lorsque vous définissez cette propriété pour un objet, utilisez la forme <bpt id="p1">&lt;c&gt;</bpt>project<ept id="p1">&lt;/c&gt;</ept>.<bpt id="p2">&lt;c&gt;</bpt>class<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Source<ept id="p1">&lt;/c&gt;</ept> is not specified, the process ID of the current Visual Basic project is used.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>Source<ept id="p1">&lt;/c&gt;</ept> n’est pas spécifié, l’ID de processus du projet Visual Basic actuel est utilisé.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression describing the error.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see langword="String" /&gt;</ph> décrivant l'erreur.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If unspecified, the value in the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property is examined.</source>
          <target state="translated">Si elle est non spécifiée, la valeur dans la propriété <ph id="ph1">&lt;see langword="Number" /&gt;</ph> est examinée.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <ph id="ph1">&lt;see langword="Error" /&gt;</ph> function is used as the <ph id="ph2">&lt;see langword="Description" /&gt;</ph> property.</source>
          <target state="translated">Si elle peut être mappée à un code d'erreur d'exécution Visual Basic, la chaîne qui serait retournée par la fonction <ph id="ph1">&lt;see langword="Error" /&gt;</ph> est utilisée comme propriété <ph id="ph2">&lt;see langword="Description" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If there is no Visual Basic error corresponding to the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property, the "Application-defined or object-defined error" message is used.</source>
          <target state="translated">S'il n'y a aucune erreur Visual Basic correspondant à la propriété <ph id="ph1">&lt;see langword="Number" /&gt;</ph>, le message "Erreur définie par l'application ou par l'objet" est utilisé.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>The fully qualified path to the Help file in which help on this error can be found.</source>
          <target state="translated">Chemin qualifié complet au fichier d'aide dans lequel l'aide concernant cette erreur peut être recherchée.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</source>
          <target state="translated">S'il n'est pas spécifié, Visual Basic utilise le lecteur, le chemin d'accès et le nom de fichier qualifiés complets du fichier d'aide Visual Basic.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>The context ID identifying a topic within <bpt id="p1">&lt;c&gt;</bpt>HelpFile<ept id="p1">&lt;/c&gt;</ept> that provides help for the error.</source>
          <target state="translated">ID de contexte identifiant une rubrique dans <bpt id="p1">&lt;c&gt;</bpt>HelpFile<ept id="p1">&lt;/c&gt;</ept> qui fournit une aide pour l’erreur.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If omitted, the Visual Basic Help-file context ID for the error corresponding to the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property is used, if it exists.</source>
          <target state="translated">S'il est omis, l'ID de contexte du fichier d'aide Visual Basic pour l'erreur correspondant à la propriété <ph id="ph1">&lt;see langword="Number" /&gt;</ph> est utilisé, s'il existe.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Generates a run-time error; can be used instead of the <ph id="ph1">&lt;see langword="Error" /&gt;</ph> statement.</source>
          <target state="translated">Génère une erreur d'exécution ; peut être utilisé au lieu de l'instruction <ph id="ph1">&lt;see langword="Error" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>All of the <ph id="ph1">`Raise`</ph> arguments except <ph id="ph2">`Number`</ph> are optional.</source>
          <target state="translated">Tous les <ph id="ph1">`Raise`</ph> arguments sauf <ph id="ph2">`Number`</ph> sont facultatifs.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If you omit optional arguments, and the property settings of the <ph id="ph1">`Err`</ph> object contain values that have not been cleared, those values serve as the values for your error.</source>
          <target state="translated">Si vous omettez les arguments facultatifs et les paramètres de propriété de la <ph id="ph1">`Err`</ph> objet contiennent des valeurs qui n’ont pas été effacées, ces valeurs servent de valeurs pour votre erreur.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Because the <ph id="ph1">`Err`</ph> object gives richer information than when you generate errors with the <ph id="ph2">`Error`</ph> statement, <ph id="ph3">`Raise`</ph> is useful for generating errors when writing class modules.</source>
          <target state="translated">Étant donné que la <ph id="ph1">`Err`</ph> objet donne des informations plus riches que lorsque vous générez des erreurs avec les <ph id="ph2">`Error`</ph> instruction, <ph id="ph3">`Raise`</ph> est utile pour générer des erreurs lors de l’écriture de modules de classe.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>For example, with the <ph id="ph1">`Raise`</ph> method, the source that generated the error can be specified in the <ph id="ph2">`Source`</ph> property, online Help for the error can be referenced, and so on.</source>
          <target state="translated">Par exemple, avec la <ph id="ph1">`Raise`</ph> (méthode), la source qui a généré l’erreur peut être spécifiée dans le <ph id="ph2">`Source`</ph> propriété, aide en ligne de l’erreur peut être référencée et ainsi de suite.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>This example uses the <ph id="ph1">`Err`</ph> object's <ph id="ph2">`Raise`</ph> method to generate an error within a function written in Visual Basic.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`Err`</ph> l’objet <ph id="ph2">`Raise`</ph> méthode permettant de générer une erreur dans une fonction écrite en Visual Basic.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>The calling function can catch the error and report it to the user with a message box.</source>
          <target state="translated">La fonction appelante peut intercepter l’erreur et la signaler à l’utilisateur avec une boîte de message.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression specifying the name of the object or application that originally generated the error.</source>
          <target state="translated">Retourne ou définit une expression <ph id="ph1">&lt;see langword="String" /&gt;</ph> spécifiant le nom de l'objet ou de l'application qui a généré l'erreur au départ.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Read/write.</source>
          <target state="translated">Lecture/écriture.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression specifying the name of the object or application that originally generated the error.</source>
          <target state="translated">Retourne ou définit une expression <ph id="ph1">&lt;see langword="String" /&gt;</ph> spécifiant le nom de l'objet ou de l'application qui a généré l'erreur au départ.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Read/write.</source>
          <target state="translated">Lecture/écriture.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>The <ph id="ph1">`Source`</ph> property specifies a <ph id="ph2">`String`</ph> expression representing the object that generated the error; the expression is usually the object's class name or process ID.</source>
          <target state="translated">Le <ph id="ph1">`Source`</ph> propriété spécifie un <ph id="ph2">`String`</ph> expression représentant l’objet qui a généré l’erreur ; l’expression est généralement le nom de la classe de l’objet ou l’ID de processus.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Use the <ph id="ph1">`Source`</ph> property to provide information when your code is unable to handle an error generated in an accessed object.</source>
          <target state="translated">Utilisez le <ph id="ph1">`Source`</ph> propriété afin de fournir des informations lorsque votre code ne peut pas gérer une erreur générée dans un objet accessible.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>For example, if you access Microsoft Excel and it generates a <ph id="ph1">`Division by zero`</ph> error, Microsoft Excel sets <ph id="ph2">`Err.Number`</ph> to its error code for that error and sets <ph id="ph3">`Source`</ph> to "Excel.Application".</source>
          <target state="translated">Par exemple, si vous accédez à Microsoft Excel et génère un <ph id="ph1">`Division by zero`</ph> erreur, Microsoft Excel définit <ph id="ph2">`Err.Number`</ph> à son code d’erreur de cette erreur et les jeux de <ph id="ph3">`Source`</ph> à « Excel.Application ».</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>When the application is generating an error from code, <ph id="ph1">`Source`</ph> is your application's programmatic ID.</source>
          <target state="translated">Lorsque l’application génère une erreur de code, <ph id="ph1">`Source`</ph> votre ID d’application par programme.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Within a class, <ph id="ph1">`Source`</ph> should contain a name having the form <bpt id="p1">*</bpt>project<ept id="p1">*</ept>.<bpt id="p2">*</bpt>class<ept id="p2">*</ept>.</source>
          <target state="translated">Dans une classe, <ph id="ph1">`Source`</ph> doit contenir un nom de la forme <bpt id="p1">*</bpt>projet<ept id="p1">*</ept>.<bpt id="p2">*</bpt> classe<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>When an unexpected error occurs in your code, the <ph id="ph1">`Source`</ph> property is automatically filled in.</source>
          <target state="translated">Lorsqu’une erreur inattendue se produit dans votre code, le <ph id="ph1">`Source`</ph> propriété est automatiquement renseignée.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>For errors in a module, <ph id="ph1">`Source`</ph> contains the project name.</source>
          <target state="translated">Les erreurs dans un module, <ph id="ph1">`Source`</ph> contient le nom du projet.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>This example demonstrates the use of the <ph id="ph1">`Source`</ph> property in a typical error-handling routine.</source>
          <target state="translated">Cet exemple illustre l’utilisation de la <ph id="ph1">`Source`</ph> propriété dans une routine de gestion des erreurs par défaut.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>When an error is raised from <ph id="ph1">`Class1`</ph>, the string <ph id="ph2">`"Class1"`</ph> is assigned to the <ph id="ph3">`Source`</ph> property of the <ph id="ph4">`Err`</ph> object.</source>
          <target state="translated">Lorsqu’une erreur est levée à partir de <ph id="ph1">`Class1`</ph>, la chaîne <ph id="ph2">`"Class1"`</ph> est affectée à la <ph id="ph3">`Source`</ph> propriété de la <ph id="ph4">`Err`</ph> objet.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>This string is then displayed in an informative message indicating the source and number of the error.</source>
          <target state="translated">Cette chaîne est ensuite affichée dans un message d’information indiquant la source et le numéro de l’erreur.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>