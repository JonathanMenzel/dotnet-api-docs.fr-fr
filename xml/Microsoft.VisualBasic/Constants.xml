<Type Name="Constants" FullName="Microsoft.VisualBasic.Constants">
  <TypeSignature Language="C#" Value="public sealed class Constants" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Constants extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Constants" />
  <TypeSignature Language="VB.NET" Value="Public Module Constants" />
  <TypeSignature Language="C++ CLI" Value="public ref class Constants sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fe2ae-101">Le module <see langword="Constants" /> contient diverses constantes.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-101">The <see langword="Constants" /> module contains miscellaneous constants.</span></span> <span data-ttu-id="fe2ae-102">Ces constantes peuvent être utilisées partout dans votre code.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-102">These constants can be used anywhere in your code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-103">Ce module prend en charge les constantes du langage Visual Basic qui correspondent aux membres de plusieurs énumérations Visual Basic :</span><span class="sxs-lookup"><span data-stu-id="fe2ae-103">This module supports the Visual Basic language constants that correspond to the members of many Visual Basic enumerations:</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="vbAbort">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbAbort = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbAbort = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbort" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbort As MsgBoxResult  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbAbort = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-104">Indique qu'un clic a été effectué sur le bouton <see langword="Abort" /> dans une boîte de message.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-104">Indicates that the <see langword="Abort" /> button was clicked in a message box.</span></span> <span data-ttu-id="fe2ae-105">Retourné par la fonction <see langword="MsgBox" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-105">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-106">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxResult` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-106">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-107">Le `MsgBox` fonction renvoie une `MsgBoxResult` valeur d’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-107">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbAbortRetryIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbortRetryIgnore As MsgBoxStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-108">Indique que les boutons <see langword="Abort" />, <see langword="Retry" /> et <see langword="Ignore" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-108">Indicates that the <see langword="Abort" />, <see langword="Retry" />, and <see langword="Ignore" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-109">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-109">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-110">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-110">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbApplicationModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbApplicationModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbApplicationModal As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbApplicationModal = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-111">Indique que la boîte de message est affichée sous la forme d'une boîte de dialogue modale lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-111">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-112">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-112">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-113">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-113">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbArchive">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbArchive = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbArchive = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArchive" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArchive As FileAttribute  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbArchive = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-114">Indique que le fichier a changé depuis la dernière opération de sauvegarde pour des fonctions d'accès au fichier.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-114">Indicates that the file has changed since the last backup operation for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-115">Lorsque vous appelez le `Dir`, `GetAttr`, ou `SetAttr` fonctions, vous pouvez utiliser la `FileAttribute` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-115">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-116">Le `Attributes` argument prend le `FileAttribute` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-116">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-117">Lorsque vous effectuez des opérations d’e/s de fichier, le `My.Computer.FileSystem` objet fournit des performances et la facilité d’utilisation de fichier hérité les méthodes d’e/s.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-117">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="fe2ae-118">Pour plus d’informations, consultez <xref:Microsoft.VisualBasic.FileSystem> objet.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-118">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbArray">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbArray = 8192;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbArray = (8192)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArray" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArray As VariantType  = 8192" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbArray = 8192;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-119">Indique que le type d'un objet variant est un tableau.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-119">Indicates that the type of a variant object is an array.</span></span> <span data-ttu-id="fe2ae-120">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-120">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-121">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-121">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-122">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-122">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-123">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-123">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbBack">
      <MemberSignature Language="C#" Value="public const string vbBack;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbBack" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBack" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBack As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbBack;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-124">Représente un caractère d'espacement arrière pour l'impression et les fonctions d'affichage.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-124">Represents a backspace character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbBinaryCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbBinaryCompare = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbBinaryCompare = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBinaryCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBinaryCompare As CompareMethod  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbBinaryCompare = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-125">Spécifie qu'une comparaison binaire doit être effectuée lorsque des fonctions de comparaison sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-125">Specifies that a binary comparison should be performed when comparison functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-126">Lorsque vous appelez des fonctions de comparaison, vous pouvez utiliser la <xref:Microsoft.VisualBasic.CompareMethod> énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-126">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-127">Le `Compare` argument prend le `CompareMethod` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-127">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-128">Pour les comparaisons de texte et binaires, consultez [instruction Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="fe2ae-128">For binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      </Docs>
    </Member>
    <Member MemberName="vbBoolean">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbBoolean = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbBoolean = (11)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBoolean As VariantType  = 11" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbBoolean = 11;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-129">Indique que le type d'un objet variant est <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-129">Indicates that the type of a variant object is <see langword="Boolean" />.</span></span> <span data-ttu-id="fe2ae-130">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-130">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-131">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-131">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-132">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-132">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-133">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-133">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbByte">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbByte = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbByte = (17)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbByte" />
      <MemberSignature Language="VB.NET" Value="Public Const vbByte As VariantType  = 17" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbByte = 17;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-134">Indique que le type d'un objet variant est <see langword="Byte" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-134">Indicates that the type of a variant object is <see langword="Byte" />.</span></span> <span data-ttu-id="fe2ae-135">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-135">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-136">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-136">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-137">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-137">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-138">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-138">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbCancel = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbCancel = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCancel As MsgBoxResult  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbCancel = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-139">Indique qu'un clic a été effectué sur le bouton <see langword="Cancel" /> dans une boîte de message.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-139">Indicates that the <see langword="Cancel" /> button was clicked in a message box.</span></span> <span data-ttu-id="fe2ae-140">Retourné par la fonction <see langword="MsgBox" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-140">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-141">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxResult` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-141">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-142">Le `MsgBox` fonction renvoie une `MsgBoxResult` valeur d’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-142">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCr">
      <MemberSignature Language="C#" Value="public const string vbCr;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCr" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCr" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCr As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCr;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-143">Représente un caractère de retour chariot pour l'impression et les fonctions d'affichage.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-143">Represents a carriage-return character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbCritical">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbCritical = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbCritical = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCritical" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCritical As MsgBoxStyle  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbCritical = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-144">Indique que l'icône de message critique est affichée lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-144">Indicates that the critical message icon will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-145">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-145">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-146">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-146">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCrLf">
      <MemberSignature Language="C#" Value="public const string vbCrLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCrLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCrLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCrLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCrLf;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-147">Représente un caractère de retour chariot mixé avec un caractère de retour de ligne pour l'impression et les fonctions d'affichage.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-147">Represents a carriage-return character combined with a linefeed character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbCurrency">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbCurrency = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbCurrency = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCurrency" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCurrency As VariantType  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbCurrency = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-148">Indique que le type d'un objet variant est <see langword="Currency" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-148">Indicates that the type of a variant object is <see langword="Currency" />.</span></span> <span data-ttu-id="fe2ae-149">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-149">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-150">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-150">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-151">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-151">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-152">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-152">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDate = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDate = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDate As VariantType  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDate = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-153">Indique que le type d'un objet variant est <see langword="Date" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-153">Indicates that the type of a variant object is <see langword="Date" />.</span></span> <span data-ttu-id="fe2ae-154">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-154">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-155">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-155">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-156">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-156">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-157">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-157">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDecimal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDecimal = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDecimal = (14)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDecimal As VariantType  = 14" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDecimal = 14;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-158">Indique que le type d'un objet variant est <see langword="Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-158">Indicates that the type of a variant object is <see langword="Decimal" />.</span></span> <span data-ttu-id="fe2ae-159">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-159">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-160">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-160">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-161">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-161">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-162">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-162">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton1 As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-163">Indique que le bouton situé le plus à gauche est sélectionné comme bouton par défaut lorsque la boîte de message s'affiche.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-163">Indicates that the leftmost button is selected as the default button when the message box appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-164">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-164">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-165">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-165">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton2">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton2" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton2 As MsgBoxStyle  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-166">Indique que le deuxième bouton en partant de la gauche est sélectionné comme bouton par défaut lorsque la boîte de message s'affiche.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-166">Indicates that the second button from the left is selected as the default button when the message box appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-167">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-167">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-168">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-168">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton3">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton3" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton3 As MsgBoxStyle  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-169">Indique que le troisième bouton en partant de la gauche est sélectionné comme bouton par défaut lorsque la boîte de message s'affiche.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-169">Indicates that the third button from the left is selected as the default button when the message box appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-170">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-170">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-171">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-171">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDirectory">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbDirectory = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbDirectory = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDirectory As FileAttribute  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbDirectory = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-172">Indique que le fichier est un répertoire ou dossier pour les fonctions d'accès au fichier.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-172">Indicates that the file is a directory or folder for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-173">Lorsque vous appelez le `Dir`, `GetAttr`, ou `SetAttr` fonctions, vous pouvez utiliser la `FileAttribute` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-173">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-174">Le `Attributes` argument prend le `FileAttribute` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-174">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-175">Lorsque vous effectuez des opérations d’e/s de fichier, le `My.Computer.FileSystem` objet fournit des performances et la facilité d’utilisation de fichier hérité les méthodes d’e/s.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-175">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="fe2ae-176">Pour plus d’informations, consultez <xref:Microsoft.VisualBasic.FileSystem> objet.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-176">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbDouble">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDouble = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDouble = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDouble" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDouble As VariantType  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDouble = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-177">Indique que le type d'un objet variant est <see langword="Double" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-177">Indicates that the type of a variant object is <see langword="Double" />.</span></span> <span data-ttu-id="fe2ae-178">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-178">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-179">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-179">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-180">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-180">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-181">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-181">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbEmpty">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbEmpty = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbEmpty = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Const vbEmpty As VariantType  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbEmpty = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-182">Indique que le type d'un objet variant est <see langword="Empty" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-182">Indicates that the type of a variant object is <see langword="Empty" />.</span></span> <span data-ttu-id="fe2ae-183">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-183">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-184">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-184">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-185">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-185">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-186">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-186">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbExclamation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbExclamation = 48;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbExclamation = (48)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbExclamation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbExclamation As MsgBoxStyle  = 48" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbExclamation = 48;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>48</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-187">Indique que l'icône d'exclamation est affichée lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-187">Indicates that the exclamation icon will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-188">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-188">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-189">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-189">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbFalse">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbFalse = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbFalse = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFalse" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFalse As TriState  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbFalse = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-190">Indique qu'une valeur <see langword="Boolean" /> de <see langword="False" /> doit être utilisée lorsque des fonctions de mise en forme de nombres sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-190">Indicates that a <see langword="Boolean" /> value of <see langword="False" /> should be used when number-formatting functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-191">Lorsque vous mise en forme de nombre d’appels de fonctions, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-191">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstFourDays">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFourDays" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFourDays As FirstWeekOfYear  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-192">Indique que la première semaine de l'année qui a au moins quatre jours doit être utilisée lorsque des fonctions de date sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-192">Indicates that the first week of the year that has at least four days should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-193">Lorsque vous appelez des fonctions de date, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-193">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-194">Certaines fonctions de date un `DayOfWeek` argument, un `WeekOfYear` argument ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-194">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="fe2ae-195">Le `FirstWeekOfYear` énumération spécifie les valeurs valides pour le `WeekOfYear` arguments, ainsi que les valeurs de retournés possibles des fonctions.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-195">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="fe2ae-196">Le `WeekOfYear` argument prend le `FirstWeekOfYear` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-196">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstFullWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFullWeek As FirstWeekOfYear  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-197">Indique que la première semaine complète de l'année doit être utilisée lorsque des fonctions de date sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-197">Indicates that the first full week of the year should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-198">Lorsque vous appelez des fonctions de date, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-198">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-199">Certaines fonctions de date un `DayOfWeek` argument, un `WeekOfYear` argument ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-199">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="fe2ae-200">Le `FirstWeekOfYear` énumération spécifie les valeurs valides pour le `WeekOfYear` arguments, ainsi que les valeurs de retournés possibles des fonctions.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-200">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="fe2ae-201">Le `WeekOfYear` argument prend le `FirstWeekOfYear` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-201">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstJan1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstJan1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstJan1 As FirstWeekOfYear  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-202">Indique que la semaine de l'année qui inclut le 1er janvier doit être utilisée lorsque des fonctions de date sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-202">Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-203">Lorsque vous appelez des fonctions de date, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-203">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-204">Certaines fonctions de date un `DayOfWeek` argument, un `WeekOfYear` argument ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-204">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="fe2ae-205">Le `FirstWeekOfYear` énumération spécifie les valeurs valides pour le `WeekOfYear` arguments, ainsi que les valeurs de retournés possibles des fonctions.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-205">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="fe2ae-206">Le `WeekOfYear` argument prend le `FirstWeekOfYear` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-206">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFormFeed">
      <MemberSignature Language="C#" Value="public const string vbFormFeed;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbFormFeed" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFormFeed" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFormFeed As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbFormFeed;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-207">Représente un caractère de saut de page pour les fonctions d'impression.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-207">Represents a form-feed character for print functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbFriday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbFriday = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbFriday = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFriday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFriday As FirstDayOfWeek  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbFriday = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-208">Spécifie que le vendredi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-208">Specifies that Friday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-209">Lorsque vous appelez des fonctions de date, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-209">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-210">Certaines fonctions de date un `DayOfWeek` argument, un `WeekOfYear` argument ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-210">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="fe2ae-211">Le `FirstDayOfWeek` énumération spécifie les valeurs valides pour le `DayOfWeek` arguments, ainsi que les valeurs de retournés possibles des fonctions.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-211">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="fe2ae-212">Le `DayOfWeek` argument prend le `FirstDayOfWeek` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-212">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-213">Les fonctions de date sont également retournent `FirstDayOfWeek` valeurs (à l’exception de `System`).</span><span class="sxs-lookup"><span data-stu-id="fe2ae-213">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbGeneralDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbGeneralDate = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbGeneralDate = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGeneralDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGeneralDate As DateFormat  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbGeneralDate = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-214">Indique que le format de date général pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-214">Indicates that the general date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-215">Lorsque vous appelez le `FormatDateTime` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-215">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe2ae-216">Vous pouvez accéder à des paramètres régionaux de votre ordinateur en double-cliquant sur le **Options régionales** icône **le panneau de configuration**.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-216">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbGet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbGet = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbGet = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGet As CallType  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbGet = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-217">Spécifie qu'une valeur de propriété doit être extraite lorsque la fonction <see langword="CallByName" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-217">Specifies that a property value should be retrieved when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-218">Lorsque vous appelez le `CallByName` (fonction), vous pouvez utiliser les éléments suivants `CallType` membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-218">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-219">Le `UseCallType` argument prend le `CallType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-219">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbHidden">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbHidden = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbHidden = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHidden" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHidden As FileAttribute  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbHidden = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-220">Indique que le fichier est un fichier masqué pour les fonctions d'accès au fichier.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-220">Indicates that the file is a hidden file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-221">Lorsque vous appelez le `Dir`, `GetAttr`, ou `SetAttr` fonctions, vous pouvez utiliser la `FileAttribute` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-221">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-222">Le `Attributes` argument prend le `FileAttribute` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-222">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-223">Lorsque vous effectuez des opérations d’e/s de fichier, le `My.Computer.FileSystem` objet fournit des performances et la facilité d’utilisation de fichier hérité les méthodes d’e/s.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-223">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="fe2ae-224">Pour plus d’informations, consultez <xref:Microsoft.VisualBasic.FileSystem> objet.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-224">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbHide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbHide = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbHide = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHide As AppWinStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbHide = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-225">Indique que le style de fenêtre est masqué pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-225">Indicates that the window style is hidden for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-226">Lorsque vous émettez `Shell` commandes, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-226">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-227">Le `Style` argument prend le `AppWinStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-227">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbHiragana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbHiragana = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbHiragana = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHiragana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHiragana As VbStrConv  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbHiragana = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-228">Indique que les caractères Hiragana doivent être convertis en caractères Katakana lorsque la fonction <see langword="StrConv" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-228">Indicates Hiragana characters should be converted to Katakana characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-229">Lorsque vous appelez le `StrConv` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-229">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-230">Le `Conversion` argument prend le `VbStrConv` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-230">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbIgnore = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbIgnore = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbIgnore As MsgBoxResult  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbIgnore = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-231">Indique qu'un clic a été effectué sur le bouton <see langword="Ignore" /> dans une boîte de message.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-231">Indicates that the <see langword="Ignore" /> button was clicked in a message box.</span></span> <span data-ttu-id="fe2ae-232">Retourné par la fonction <see langword="MsgBox" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-232">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-233">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxResult` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-233">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-234">Le `MsgBox` fonction renvoie une `MsgBoxResult` valeur d’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-234">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbInformation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbInformation = 64;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbInformation = (64)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInformation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInformation As MsgBoxStyle  = 64" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbInformation = 64;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-235">Indique que l'icône d'informations est affichée lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-235">Indicates that the information icon will display when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-236">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-236">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-237">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-237">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbInteger">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbInteger = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbInteger = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInteger" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInteger As VariantType  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbInteger = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-238">Indique que le type d'un objet variant est <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-238">Indicates that the type of a variant object is <see langword="Integer" />.</span></span> <span data-ttu-id="fe2ae-239">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-239">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-240">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-240">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-241">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-241">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-242">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-242">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbKatakana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbKatakana = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbKatakana = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbKatakana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbKatakana As VbStrConv  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbKatakana = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-243">Indique que les caractères Katakana doivent être convertis en caractères Hiragana lorsque la fonction <see langword="StrConv" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-243">Indicates that Katakana characters should be converted to Hiragana characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-244">Lorsque vous appelez le `StrConv` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-244">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-245">Le `Conversion` argument prend le `VbStrConv` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-245">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbLet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbLet = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbLet = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLet As CallType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbLet = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-246">Indique qu'une valeur de propriété doit avoir pour valeur une instance d'objet lorsque la fonction <see langword="CallByName" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-246">Indicates that a property value should be set to an object instance when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-247">Lorsque vous appelez le `CallByName` (fonction), vous pouvez utiliser les éléments suivants `CallType` membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-247">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-248">Le `UseCallType` argument prend le `CallType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-248">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbLf">
      <MemberSignature Language="C#" Value="public const string vbLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbLf;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-249">Représente un caractère de retour de ligne pour l'impression et les fonctions d'affichage.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-249">Represents a linefeed character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbLinguisticCasing">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = (1024)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLinguisticCasing As VbStrConv  = 1024" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLinguisticCasing = 1024;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-250">Indique que les caractères doivent être convertis de façon à utiliser des règles linguistiques pour le respect de la casse au lieu de règles de système de fichiers pour le respect de la casse lorsque la fonction <see langword="StrConv" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-250">Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-251">Lorsque vous appelez le `StrConv` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-251">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-252">Le `Conversion` argument prend le `VbStrConv` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-252">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbLong">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbLong = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbLong = (20)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLong" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLong As VariantType  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbLong = 20;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-253">Indique que le type d'un objet variant est <see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-253">Indicates the type of a variant object is <see langword="Long" />.</span></span> <span data-ttu-id="fe2ae-254">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-254">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-255">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-255">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-256">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-256">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-257">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-257">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbLongDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongDate = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongDate = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongDate As DateFormat  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongDate = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-258">Indique que le format de date long pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-258">Indicates that the long date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-259">Lorsque vous appelez le `FormatDateTime` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-259">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe2ae-260">Vous pouvez accéder à des paramètres régionaux de votre ordinateur en double-cliquant sur le **Options régionales** icône **le panneau de configuration**.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-260">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbLongTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongTime = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongTime = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongTime As DateFormat  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongTime = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-261">Indique que le format d'heure long pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-261">Indicates that the long time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-262">Lorsque vous appelez le `FormatDateTime` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-262">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe2ae-263">Vous pouvez accéder à des paramètres régionaux de votre ordinateur en double-cliquant sur le **Options régionales** icône **le panneau de configuration**.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-263">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbLowerCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLowerCase = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLowerCase = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLowerCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLowerCase As VbStrConv  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLowerCase = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-264">Indique que les caractères doivent être convertis en minuscules lorsque la fonction <see langword="StrConv" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-264">Indicates that characters should be converted to lowercase when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-265">Lorsque vous appelez le `StrConv` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-265">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-266">Le `Conversion` argument prend le `VbStrConv` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-266">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMaximizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMaximizedFocus As AppWinStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMaximizedFocus = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-267">Indique que le style de fenêtre est agrandi avec le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-267">Indicates that the window style is maximized with focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-268">Lorsque vous émettez `Shell` commandes, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-268">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-269">Le `Style` argument prend le `AppWinStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-269">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMethod">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbMethod = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbMethod = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMethod" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMethod As CallType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbMethod = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-270">Spécifie qu'une méthode doit être appelée lorsque la fonction <see langword="CallByName" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-270">Specifies that a method should be called when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-271">Lorsque vous appelez le `CallByName` (fonction), vous pouvez utiliser les éléments suivants `CallType` membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-271">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-272">Le `UseCallType` argument prend le `CallType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-272">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedFocus As AppWinStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedFocus = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-273">Indique que le style de fenêtre est réduit avec le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-273">Indicates that the window style is minimized with focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-274">Lorsque vous émettez `Shell` commandes, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-274">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-275">Le `Style` argument prend le `AppWinStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-275">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedNoFocus As AppWinStyle  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-276">Indique que le style de fenêtre est réduit sans le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-276">Indicates that the window style is minimized without focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-277">Lorsque vous émettez `Shell` commandes, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-277">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-278">Le `Style` argument prend le `AppWinStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-278">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMonday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbMonday = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbMonday = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMonday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMonday As FirstDayOfWeek  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbMonday = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-279">Spécifie que le lundi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-279">Specifies that Monday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-280">Lorsque vous appelez des fonctions de date, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-280">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-281">Certaines fonctions de date un `DayOfWeek` argument, un `WeekOfYear` argument ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-281">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="fe2ae-282">Le `FirstDayOfWeek` énumération spécifie les valeurs valides pour le `DayOfWeek` arguments, ainsi que les valeurs de retournés possibles des fonctions.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-282">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="fe2ae-283">Le `DayOfWeek` argument prend le `FirstDayOfWeek` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-283">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-284">Les fonctions de date sont également retournent `FirstDayOfWeek` valeurs (à l’exception de `System`).</span><span class="sxs-lookup"><span data-stu-id="fe2ae-284">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxHelp">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = (16384)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxHelp As MsgBoxStyle  = 16384" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-285">Indique que le bouton <see langword="Help" /> est affiché lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-285">Indicates that the <see langword="Help" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-286">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-286">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-287">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-287">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRight">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = (524288)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRight As MsgBoxStyle  = 524288" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-288">Indique que le texte est aligné à droite lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-288">Indicates that text will be right-aligned when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-289">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-289">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-290">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-290">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRtlReading">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = (1048576)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRtlReading As MsgBoxStyle  = 1048576" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-291">Indique que le texte à lecture de droite à gauche (systèmes hébreu et arabe) est affiché lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-291">Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-292">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-292">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-293">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-293">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxSetForeground">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = (65536)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxSetForeground As MsgBoxStyle  = 65536" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-294">Indique que la boîte de message s'affiche au premier plan lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-294">Indicates that the message box will display in the foreground when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-295">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-295">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-296">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-296">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNarrow">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbNarrow = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbNarrow = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNarrow" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNarrow As VbStrConv  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbNarrow = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-297">Indique que les caractères larges (codés sur deux octets) doivent être convertis en caractères étroits (codés sur un octet) lorsque la fonction <see langword="StrConv" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-297">Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-298">Lorsque vous appelez le `StrConv` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-298">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-299">Le `Conversion` argument prend le `VbStrConv` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-299">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNewLine">
      <MemberSignature Language="C#" Value="public const string vbNewLine;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNewLine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNewLine" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNewLine As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNewLine;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-300">Représente un caractère de saut de ligne pour l'impression et les fonctions d'affichage.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-300">Represents a newline character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbNo = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbNo = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNo As MsgBoxResult  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbNo = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-301">Indique qu'un clic a été effectué sur le bouton <see langword="No" /> dans une boîte de message.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-301">Indicates that the <see langword="No" /> button was clicked in a message box.</span></span> <span data-ttu-id="fe2ae-302">Retourné par la fonction <see langword="MsgBox" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-302">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-303">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxResult` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-303">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-304">Le `MsgBox` fonction renvoie une `MsgBoxResult` valeur d’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-304">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbNormal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbNormal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormal As FileAttribute  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbNormal = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-305">Indique que le fichier est un fichier normal pour les fonctions d'accès au fichier.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-305">Indicates that the file is a normal file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-306">Lorsque vous appelez le `Dir`, `GetAttr`, ou `SetAttr` fonctions, vous pouvez utiliser la `FileAttribute` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-306">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-307">Le `Attributes` argument prend le `FileAttribute` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-307">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-308">Lorsque vous effectuez des opérations d’e/s de fichier, le `My.Computer.FileSystem` objet fournit des performances et la facilité d’utilisation de fichier hérité les méthodes d’e/s.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-308">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="fe2ae-309">Pour plus d’informations, consultez <xref:Microsoft.VisualBasic.FileSystem> objet.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-309">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormalFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalFocus = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalFocus = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalFocus As AppWinStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalFocus = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-310">Indique que le style de fenêtre est normal avec le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-310">Indicates that the window style is normal with focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-311">Lorsque vous émettez `Shell` commandes, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-311">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-312">Le `Style` argument prend le `AppWinStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-312">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormalNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalNoFocus As AppWinStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalNoFocus = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-313">Indique que le style de fenêtre est normal sans le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-313">Indicates that the window style is normal without focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-314">Lorsque vous émettez `Shell` commandes, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-314">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-315">Le `Style` argument prend le `AppWinStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-315">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNull">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbNull = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbNull = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNull" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNull As VariantType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbNull = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-316">Indique que le type d'un objet variant est <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-316">Indicates that the type of a variant object is <see langword="Nothing" />.</span></span> <span data-ttu-id="fe2ae-317">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-317">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-318">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-318">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-319">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-319">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-320">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-320">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNullChar">
      <MemberSignature Language="C#" Value="public const string vbNullChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullChar" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullChar" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullChar As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-321">Représente un caractère Null pour l'impression et les fonctions d'affichage.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-321">Represents a null character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbNullString">
      <MemberSignature Language="C#" Value="public const string vbNullString = null;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullString = null" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullString As String  = null" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullString = nullptr;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <MemberValue>null</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-322">Représente une chaîne de longueur nulle pour l'impression et les fonctions d'affichage, et pour appeler des procédures auxiliaires.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-322">Represents a zero-length string for print and display functions, and for calling external procedures.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbObject">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbObject = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbObject = (9)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObject" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObject As VariantType  = 9" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbObject = 9;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-323">Indique que le type d'un objet variant est <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-323">Indicates that the type of a variant object is <see langword="Object" />.</span></span> <span data-ttu-id="fe2ae-324">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-324">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-325">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-325">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-326">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-326">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-327">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-327">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbObjectError">
      <MemberSignature Language="C#" Value="public const int vbObjectError = -2147221504;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 vbObjectError = (-2147221504)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObjectError" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObjectError As Integer  = -2147221504" />
      <MemberSignature Language="C++ CLI" Value="public: int vbObjectError = -2147221504;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147221504</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-328">Représente le numéro d'erreur de l'objet.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-328">Represents the object error number.</span></span> <span data-ttu-id="fe2ae-329">Les numéros d'erreur définis par l'utilisateur doivent être supérieurs à cette valeur.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-329">User-defined error numbers should be greater than this value.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbOK">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbOK = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbOK = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOK" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOK As MsgBoxResult  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbOK = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-330">Indique qu'un clic a été effectué sur le bouton <see langword="OK" /> dans une boîte de message.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-330">Indicates that the <see langword="OK" /> button was clicked in a message box.</span></span> <span data-ttu-id="fe2ae-331">Retourné par la fonction <see langword="MsgBox" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-331">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-332">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxResult` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-332">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-333">Le `MsgBox` fonction renvoie une `MsgBoxResult` valeur d’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-333">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbOKCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKCancel As MsgBoxStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKCancel = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-334">Indique que les boutons <see langword="OK" /> et <see langword="Cancel" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-334">Indicates that the <see langword="OK" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-335">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-335">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-336">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-336">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbOKOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKOnly As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKOnly = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-337">Indique que seul le bouton <see langword="OK" /> est affiché lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-337">Indicates that only the <see langword="OK" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-338">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-338">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-339">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-339">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbProperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbProperCase = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbProperCase = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbProperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbProperCase As VbStrConv  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbProperCase = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-340">Indique que la première lettre de chaque mot dans une chaîne doit être convertie en majuscule et les caractères restants en minuscules lorsque la fonction <see langword="StrConv" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-340">Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-341">Lorsque vous appelez le `StrConv` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-341">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-342">Le `Conversion` argument prend le `VbStrConv` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-342">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbQuestion">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbQuestion = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbQuestion = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbQuestion" />
      <MemberSignature Language="VB.NET" Value="Public Const vbQuestion As MsgBoxStyle  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbQuestion = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-343">Indique que l'icône de question est affichée lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-343">Indicates that the question icon will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-344">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-344">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-345">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-345">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbReadOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbReadOnly = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbReadOnly = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbReadOnly As FileAttribute  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbReadOnly = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-346">Indique que le fichier est un fichier en lecture seule pour les fonctions d'accès au fichier.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-346">Indicates that the file is a read-only file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-347">Lorsque vous appelez le `Dir`, `GetAttr`, ou `SetAttr` fonctions, vous pouvez utiliser la `FileAttribute` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-347">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-348">Le `Attributes` argument prend le `FileAttribute` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-348">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-349">Lorsque vous effectuez des opérations d’e/s de fichier, le `My.Computer.FileSystem` objet fournit des performances et la facilité d’utilisation de fichier hérité les méthodes d’e/s.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-349">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="fe2ae-350">Pour plus d’informations, consultez <xref:Microsoft.VisualBasic.FileSystem> objet.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-350">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbRetry">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbRetry = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbRetry = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetry" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetry As MsgBoxResult  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbRetry = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-351">Indique qu'un clic a été effectué sur le bouton <see langword="Retry" /> dans une boîte de message.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-351">Indicates that the <see langword="Retry" /> button was clicked in a message box.</span></span> <span data-ttu-id="fe2ae-352">Retourné par la fonction <see langword="MsgBox" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-352">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-353">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxResult` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-353">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-354">Le `MsgBox` fonction renvoie une `MsgBoxResult` valeur d’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-354">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbRetryCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetryCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetryCancel As MsgBoxStyle  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbRetryCancel = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-355">Indique que les boutons <see langword="Retry" /> et <see langword="Cancel" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-355">Indicates that the <see langword="Retry" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-356">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-356">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-357">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-357">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbSaturday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSaturday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSaturday As FirstDayOfWeek  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSaturday = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-358">Spécifie que le samedi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-358">Specifies that Saturday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-359">Lorsque vous appelez des fonctions de date, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-359">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-360">Certaines fonctions de date un `DayOfWeek` argument, un `WeekOfYear` argument ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-360">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="fe2ae-361">Le `FirstDayOfWeek` énumération spécifie les valeurs valides pour le `DayOfWeek` arguments, ainsi que les valeurs de retournés possibles des fonctions.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-361">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="fe2ae-362">Le `DayOfWeek` argument prend le `FirstDayOfWeek` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-362">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-363">Les fonctions de date sont également retournent `FirstDayOfWeek` valeurs (à l’exception de `System`).</span><span class="sxs-lookup"><span data-stu-id="fe2ae-363">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbSet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbSet = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbSet = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSet As CallType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbSet = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-364">Indique qu'une valeur de propriété doit être définie lorsque la fonction <see langword="CallByName" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-364">Indicates that a property value should be set when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-365">Lorsque vous appelez le `CallByName` (fonction), vous pouvez utiliser les éléments suivants `CallType` membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-365">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-366">Le `UseCallType` argument prend le `CallType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-366">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbShortDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortDate = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortDate = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortDate As DateFormat  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortDate = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-367">Indique que le format de date court pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-367">Indicates that the short-date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-368">Lorsque vous appelez le `FormatDateTime` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-368">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe2ae-369">Vous pouvez accéder à des paramètres régionaux de votre ordinateur en double-cliquant sur le **Options régionales** icône **le panneau de configuration**.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-369">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbShortTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortTime = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortTime = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortTime As DateFormat  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortTime = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-370">Indique que le format d'heure court pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-370">Indicates that the short-time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-371">Lorsque vous appelez le `FormatDateTime` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-371">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe2ae-372">Vous pouvez accéder à des paramètres régionaux de votre ordinateur en double-cliquant sur le **Options régionales** icône **le panneau de configuration**.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-372">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbSimplifiedChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSimplifiedChinese As VbStrConv  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbSimplifiedChinese = 256;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-373">Indique que les caractères doivent être convertis en Chinois simplifié lorsque la fonction <see langword="StrConv" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-373">Indicates that characters should be converted to Simplified Chinese when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-374">Lorsque vous appelez le `StrConv` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-374">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-375">Le `Conversion` argument prend le `VbStrConv` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-375">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbSingle">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbSingle = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbSingle = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSingle" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSingle As VariantType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbSingle = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-376">Indique que le type d'un objet variant est <see langword="Single" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-376">Indicates that the type of a variant object is <see langword="Single" />.</span></span> <span data-ttu-id="fe2ae-377">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-377">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-378">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-378">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-379">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-379">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-380">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-380">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbString">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbString = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbString = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbString As VariantType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbString = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-381">Indique que le type d'un objet variant est <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-381">Indicates that the type of a variant object is <see langword="String" />.</span></span> <span data-ttu-id="fe2ae-382">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-382">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-383">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-383">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-384">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-384">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-385">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-385">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbSunday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSunday = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSunday = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSunday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSunday As FirstDayOfWeek  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSunday = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-386">Spécifie que le dimanche doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-386">Specifies that Sunday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-387">Lorsque vous appelez des fonctions de date, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-387">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-388">Certaines fonctions de date un `DayOfWeek` argument, un `WeekOfYear` argument ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-388">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="fe2ae-389">Le `FirstDayOfWeek` énumération spécifie les valeurs valides pour le `DayOfWeek` arguments, ainsi que les valeurs de retournés possibles des fonctions.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-389">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="fe2ae-390">Le `DayOfWeek` argument prend le `FirstDayOfWeek` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-390">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-391">Les fonctions de date sont également retournent `FirstDayOfWeek` valeurs (à l’exception de `System`).</span><span class="sxs-lookup"><span data-stu-id="fe2ae-391">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbSystem = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbSystem = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystem As FileAttribute  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbSystem = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-392">Indique que le fichier est un fichier système pour les fonctions d'accès au fichier.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-392">Indicates that the file is a system file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-393">Lorsque vous appelez le `Dir`, `GetAttr`, ou `SetAttr` fonctions, vous pouvez utiliser la `FileAttribute` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-393">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-394">Le `Attributes` argument prend le `FileAttribute` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-394">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-395">Lorsque vous effectuez des opérations d’e/s de fichier, le `My.Computer.FileSystem` objet fournit des performances et la facilité d’utilisation de fichier hérité les méthodes d’e/s.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-395">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="fe2ae-396">Pour plus d’informations, consultez <xref:Microsoft.VisualBasic.FileSystem> objet.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-396">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbSystemModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = 4096;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = (4096)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystemModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystemModal As MsgBoxStyle  = 4096" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbSystemModal = 4096;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-397">Indique que la boîte de message est affichée sous la forme d'une boîte de dialogue modale lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-397">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-398">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-398">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-399">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-399">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbTab">
      <MemberSignature Language="C#" Value="public const string vbTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbTab;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-400">Représente un caractère de tabulation pour l'impression et les fonctions d'affichage.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-400">Represents a tab character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbTextCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbTextCompare = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbTextCompare = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTextCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTextCompare As CompareMethod  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbTextCompare = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-401">Indique qu'une comparaison de texte doit être effectuée lorsque des fonctions de comparaison sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-401">Indicates that a text comparison should be performed when comparison functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-402">Lorsque vous appelez des fonctions de comparaison, vous pouvez utiliser la <xref:Microsoft.VisualBasic.CompareMethod> énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-402">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-403">Le `Compare` argument prend le `CompareMethod` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-403">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-404">Pour plus d’informations sur plus d’informations sur les comparaisons de texte et binaires, consultez [instruction Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="fe2ae-404">For more information about more information about binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      </Docs>
    </Member>
    <Member MemberName="vbThursday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbThursday = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbThursday = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbThursday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbThursday As FirstDayOfWeek  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbThursday = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-405">Spécifie que le jeudi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-405">Specifies that Thursday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-406">Lorsque vous appelez des fonctions de date, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-406">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-407">Certaines fonctions de date un `DayOfWeek` argument, un `WeekOfYear` argument ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-407">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="fe2ae-408">Le `FirstDayOfWeek` énumération spécifie les valeurs valides pour le `DayOfWeek` arguments, ainsi que les valeurs de retournés possibles des fonctions.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-408">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="fe2ae-409">Le `DayOfWeek` argument prend le `FirstDayOfWeek` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-409">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-410">Les fonctions de date sont également retournent `FirstDayOfWeek` valeurs (à l’exception de `System`).</span><span class="sxs-lookup"><span data-stu-id="fe2ae-410">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbTraditionalChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTraditionalChinese As VbStrConv  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbTraditionalChinese = 512;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-411">Indique que les caractères doivent être convertis en Chinois traditionnel lorsque la fonction <see langword="StrConv" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-411">Indicates that characters should be converted to Traditional Chinese when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-412">Lorsque vous appelez le `StrConv` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-412">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-413">Le `Conversion` argument prend le `VbStrConv` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-413">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbTrue">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbTrue = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbTrue = (-1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTrue" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTrue As TriState  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbTrue = -1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-414">Indique qu'une valeur <see langword="Boolean" /> de <see langword="True" /> doit être utilisée lorsque des fonctions de mise en forme de nombres sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-414">Indicates that a <see langword="Boolean" /> value of <see langword="True" /> should be used when number-formatting functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-415">Lorsque vous mise en forme de nombre d’appels de fonctions, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-415">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbTuesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTuesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTuesday As FirstDayOfWeek  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbTuesday = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-416">Spécifie que le mardi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-416">Specifies that Tuesday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-417">Lorsque vous appelez des fonctions de date, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-417">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-418">Certaines fonctions de date un `DayOfWeek` argument, un `WeekOfYear` argument ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-418">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="fe2ae-419">Le `FirstDayOfWeek` énumération spécifie les valeurs valides pour le `DayOfWeek` arguments, ainsi que les valeurs de retournés possibles des fonctions.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-419">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="fe2ae-420">Le `DayOfWeek` argument prend le `FirstDayOfWeek` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-420">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-421">Les fonctions de date sont également retournent `FirstDayOfWeek` valeurs (à l’exception de `System`).</span><span class="sxs-lookup"><span data-stu-id="fe2ae-421">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbUpperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbUpperCase = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbUpperCase = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUpperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUpperCase As VbStrConv  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbUpperCase = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-422">Indique que les caractères doivent être convertis en majuscules lorsque la fonction <see langword="StrConv" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-422">Indicates that characters should be converted to uppercase when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-423">Lorsque vous appelez le `StrConv` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-423">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-424">Le `Conversion` argument prend le `VbStrConv` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-424">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseDefault">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbUseDefault = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbUseDefault = (-2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseDefault" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseDefault As TriState  = -2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbUseDefault = -2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-425">Indique que la valeur <see langword="Boolean" /> par défaut doit être utilisée lorsque des fonctions de mise en forme de nombres sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-425">Indicates that the default <see langword="Boolean" /> value should be used when number-formatting functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-426">Lorsque vous mise en forme de nombre d’appels de fonctions, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-426">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbUserDefinedType">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbUserDefinedType = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbUserDefinedType = (36)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUserDefinedType" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUserDefinedType As VariantType  = 36" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbUserDefinedType = 36;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-427">Indique que le type d'un objet variant est un type défini par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-427">Indicates that the type of a variant object is a user-defined type.</span></span> <span data-ttu-id="fe2ae-428">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-428">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-429">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-429">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-430">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-430">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-431">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-431">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystem As FirstWeekOfYear  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbUseSystem = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-432">Indique que la semaine spécifiée par votre système comme première semaine de l'année doit être utilisée lorsque des fonctions de date sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-432">Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-433">Lorsque vous appelez des fonctions de date, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-433">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-434">Certaines fonctions de date un `DayOfWeek` argument, un `WeekOfYear` argument ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-434">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="fe2ae-435">Le `FirstWeekOfYear` énumération spécifie les valeurs valides pour le `WeekOfYear` arguments, ainsi que les valeurs de retournés possibles des fonctions.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-435">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="fe2ae-436">Le `WeekOfYear` argument prend le `FirstWeekOfYear` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-436">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseSystemDayOfWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystemDayOfWeek As FirstDayOfWeek  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-437">Indique que le jour spécifié par votre système comme premier jour de la semaine doit être utilisé lorsque des fonctions de date sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-437">Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-438">Lorsque vous appelez des fonctions de date, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-438">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-439">Certaines fonctions de date un `DayOfWeek` argument, un `WeekOfYear` argument ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-439">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="fe2ae-440">Le `FirstDayOfWeek` énumération spécifie les valeurs valides pour le `DayOfWeek` arguments, ainsi que les valeurs de retournés possibles des fonctions.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-440">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="fe2ae-441">Le `DayOfWeek` argument prend le `FirstDayOfWeek` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-441">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-442">Les fonctions de date sont également retournent `FirstDayOfWeek` valeurs (à l’exception de `System`).</span><span class="sxs-lookup"><span data-stu-id="fe2ae-442">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbVariant">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbVariant = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbVariant = (12)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVariant" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVariant As VariantType  = 12" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbVariant = 12;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-443">Indique que le type d'un objet variant est <see langword="Variant" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-443">Indicates that the type of a variant object is <see langword="Variant" />.</span></span> <span data-ttu-id="fe2ae-444">Retourné par la fonction <see langword="VarType" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-444">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-445">Lorsque vous appelez le `VarType` (fonction), vous pouvez utiliser des membres de l’énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-445">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-446">Le `VariantType` énumération définit les constantes utilisées pour identifier les éventuels `Variant` types.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-446">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="fe2ae-447">Le tableau suivant répertorie les `VariantType` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-447">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbVerticalTab">
      <MemberSignature Language="C#" Value="public const string vbVerticalTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbVerticalTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVerticalTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVerticalTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbVerticalTab;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-448">Représente un caractère de retour chariot pour les fonctions d'impression.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-448">Represents a carriage-return character for print functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbVolume">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbVolume = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbVolume = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVolume" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVolume As FileAttribute  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbVolume = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-449">Indique l'attribut de fichier de nom de volume pour les fonctions d'accès au fichier.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-449">Indicates the volume label file attribute for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-450">Cet attribut n’est pas valide pour le `SetAttr` (fonction).</span><span class="sxs-lookup"><span data-stu-id="fe2ae-450">This attribute is not valid for the `SetAttr` function.</span></span>  
  
 <span data-ttu-id="fe2ae-451">Lorsque vous appelez le `Dir`, `GetAttr`, ou `SetAttr` fonctions, vous pouvez utiliser la `FileAttribute` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-451">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-452">Le `Attributes` argument prend le `FileAttribute` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-452">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-453">Lorsque vous effectuez des opérations d’e/s de fichier, le `My.Computer.FileSystem` objet fournit des performances et la facilité d’utilisation de fichier hérité les méthodes d’e/s.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-453">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="fe2ae-454">Pour plus d’informations, consultez <xref:Microsoft.VisualBasic.FileSystem> objet.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-454">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbWednesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWednesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWednesday As FirstDayOfWeek  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbWednesday = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-455">Spécifie que le mercredi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-455">Specifies that Wednesday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-456">Lorsque vous appelez des fonctions de date, vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-456">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-457">Certaines fonctions de date un `DayOfWeek` argument, un `WeekOfYear` argument ou les deux.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-457">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="fe2ae-458">Le `FirstDayOfWeek` énumération spécifie les valeurs valides pour le `DayOfWeek` arguments, ainsi que les valeurs de retournés possibles des fonctions.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-458">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="fe2ae-459">Le `DayOfWeek` argument prend le `FirstDayOfWeek` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-459">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="fe2ae-460">Les fonctions de date sont également retournent `FirstDayOfWeek` valeurs (à l’exception de `System`).</span><span class="sxs-lookup"><span data-stu-id="fe2ae-460">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbWide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbWide = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbWide = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWide As VbStrConv  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbWide = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-461">Indique que les caractères étroits (codés sur un octet) doivent être convertis en caractères larges (codés sur deux octets) lorsque la fonction <see langword="StrConv" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-461">Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-462">Lorsque vous appelez le `StrConv` (fonction), vous pouvez utiliser les membres d’énumération suivants dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-462">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-463">Le `Conversion` argument prend le `VbStrConv` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-463">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbYes">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbYes = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbYes = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYes" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYes As MsgBoxResult  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbYes = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-464">Indique qu'un clic a été effectué sur le bouton <see langword="Yes" /> dans une boîte de message.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-464">Indicates that the <see langword="Yes" /> button was clicked in a message box.</span></span> <span data-ttu-id="fe2ae-465">Retourné par la fonction <see langword="MsgBox" />.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-465">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-466">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxResult` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-466">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="fe2ae-467">Le `MsgBox` fonction renvoie une `MsgBoxResult` valeur d’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-467">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbYesNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNo = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNo = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNo As MsgBoxStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNo = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-468">Indique que les boutons <see langword="Yes" /> et <see langword="No" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-468">Indicates that the <see langword="Yes" /> and <see langword="No" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-469">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-469">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-470">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-470">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbYesNoCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNoCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNoCancel As MsgBoxStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fe2ae-471">Indique que les boutons <see langword="Yes" />, <see langword="No" /> et <see langword="Cancel" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-471">Indicates that the <see langword="Yes" />, <see langword="No" />, and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe2ae-472">Lorsque vous appelez le `MsgBox` (fonction), vous pouvez utiliser la `MsgBoxStyle` énumération dans votre code à la place des valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-472">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="fe2ae-473">Le `Buttons` argument prend le `MsgBoxStyle` membres de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fe2ae-473">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>