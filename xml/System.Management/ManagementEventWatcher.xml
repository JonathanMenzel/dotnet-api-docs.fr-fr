<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="deaa5054d5a6e4440bdc47d463d522542aad06a1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementEventWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventWatcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEventWatcher : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e3492-101">S’abonne à des notifications d’événements temporaires basées sur une *requête d’événement* spécifiée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e3492-101">Subscribes to temporary event notifications based on a specified *event query*.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3492-102">L’exemple suivant montre comment le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-103">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-103">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-104">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-105">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3492-106">Initialise une nouvelle instance de la classe <see cref="T:System.Management.ManagementEventWatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3492-107">Initialise une nouvelle instance de la classe <see cref="T:System.Management.ManagementEventWatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-107">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          </span>
          <span data-ttu-id="e3492-108">Définissez les propriétés sur l'objet pour plus d'options d'initialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-108">For further initialization, set the properties on the object.</span>
          </span>
          <span data-ttu-id="e3492-109">Il s'agit du constructeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-109">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-110">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-110">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-111">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-112">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-113">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3492-114">L’exemple suivant montre comment le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-114">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-115">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-115">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-116">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-116">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-117">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-117">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::EventQuery ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="e3492-118">
            <see cref="T:System.Management.EventQuery" /> représentant une requête d'événement WMI, qui détermine les événements que l'observateur doit écouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-118">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3492-119">Initialise une nouvelle instance de la classe <see cref="T:System.Management.ManagementEventWatcher" /> lors de la soumission d’une *requête d’événement* WMI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-119">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3492-120">L’espace de noms dans lequel l’observateur écoute les événements est l’espace de noms par défaut qui est actuellement défini.</span><span class="sxs-lookup"><span data-stu-id="e3492-120">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-121">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-121">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-122">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-123">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-124">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3492-125">Dans cet exemple de code, le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-125">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-126">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-126">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-127">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-128">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/cs/ManagementEventWatcher-E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/vb/ManagementEventWatcher-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="e3492-129">Requête d'événement WMI qui définit les événements que l'observateur doit écouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-129">A WMI event query, which defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3492-130">Initialise une nouvelle instance de la classe <see cref="T:System.Management.ManagementEventWatcher" /> lors de la soumission d’une *requête d’événement* WMI sous la forme d’une chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-130">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3492-131">L’espace de noms dans lequel l’observateur écoute les événements est l’espace de noms par défaut qui est actuellement défini.</span><span class="sxs-lookup"><span data-stu-id="e3492-131">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-132">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-132">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-133">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-134">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-135">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3492-136">L’exemple suivant montre comment le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-136">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-137">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-137">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-138">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-138">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-139">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-139">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/cs/ManagementEventWatcher-S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/vb/ManagementEventWatcher-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="e3492-140">
            <see cref="T:System.Management.ManagementScope" /> représentant la portée (espace de noms) dans laquelle l'observateur doit écouter les événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-140">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="e3492-141">
            <see cref="T:System.Management.EventQuery" /> représentant une requête d'événement WMI, qui détermine les événements que l'observateur doit écouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-141">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3492-142">Initialise une nouvelle instance de la classe <see cref="T:System.Management.ManagementEventWatcher" /> qui écoute les événements correspondant à la *requête d’événement* spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-142">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-143">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-143">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-144">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-144">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-145">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-145">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-146">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-146">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3492-147">Dans cet exemple de code, le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-147">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-148">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-148">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-149">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-149">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-150">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-150">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/cs/ManagementEventWatcher-M_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/vb/ManagementEventWatcher-M_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="e3492-151">Portée de gestion (espace de noms) dans laquelle l'observateur doit écouter les événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-151">The management scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="e3492-152">Requête qui définit les événements que l'observateur doit écouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-152">The query that defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3492-153">Initialise une nouvelle instance de la classe <see cref="T:System.Management.ManagementEventWatcher" /> qui écoute les événements correspondant à la *requête d’événement* spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-153">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          </span>
          <span data-ttu-id="e3492-154">Pour cette variante, la requête et la portée sont spécifiées sous la forme de chaînes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-154">For this variant, the query and the scope are specified as strings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-155">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-155">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-156">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-156">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-157">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-157">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-158">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-158">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3492-159">L’exemple suivant montre comment le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-159">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-160">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-160">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-161">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-161">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-162">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-162">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/cs/ManagementEventWatcher-S_S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/vb/ManagementEventWatcher-S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="e3492-163">
            <see cref="T:System.Management.ManagementScope" /> représentant la portée (espace de noms) dans laquelle l'observateur doit écouter les événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-163">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="e3492-164">
            <see cref="T:System.Management.EventQuery" /> représentant une requête d'événement WMI, qui détermine les événements que l'observateur doit écouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-164">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="e3492-165">
            <see cref="T:System.Management.EventWatcherOptions" /> représentant les options supplémentaires utilisées pour surveiller les événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-165">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3492-166">Initialise une nouvelle instance de la classe <see cref="T:System.Management.ManagementEventWatcher" /> qui écoute les événements correspondant à la requête d'événement WMI spécifiée, conformément aux options spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-166">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options.</span>
          </span>
          <span data-ttu-id="e3492-167">Pour cette variante, la requête et la portée sont des objets spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-167">For this variant, the query and the scope are specified objects.</span>
          </span>
          <span data-ttu-id="e3492-168">L'objet d'options peut spécifier des options telles qu'un délai d'attente et des informations de contexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-168">The options object can specify options such as time-out and context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-169">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-169">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-170">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-170">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-171">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-171">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-172">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-172">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3492-173">L’exemple suivant montre comment le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-173">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-174">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-174">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-175">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-175">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-176">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-176">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/cs/ManagementEventWatcher-M_E_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/vb/ManagementEventWatcher-M_E_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="e3492-177">Portée de gestion (espace de noms) dans laquelle l'observateur doit écouter les événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-177">The management scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="e3492-178">Requête qui définit les événements que l'observateur doit écouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-178">The query that defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="e3492-179">
            <see cref="T:System.Management.EventWatcherOptions" /> représentant les options supplémentaires utilisées pour surveiller les événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-179">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3492-180">Initialise une nouvelle instance de la classe <see cref="T:System.Management.ManagementEventWatcher" /> qui écoute les événements correspondant à la *requête d’événement* WMI donnée, conformément aux options spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-180">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options.</span>
          </span>
          <span data-ttu-id="e3492-181">Pour cette variante, la requête et la portée sont spécifiées sous la forme de chaînes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-181">For this variant, the query and the scope are specified as strings.</span>
          </span>
          <span data-ttu-id="e3492-182">L'objet d'options peut spécifier des options telles qu'un délai d'attente et des informations de contexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-182">The options object can specify options such as a time-out and context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-183">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-183">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-184">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-185">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-186">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3492-187">L’exemple suivant montre comment le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-187">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-188">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-188">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-189">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-189">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-190">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-190">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/cs/ManagementEventWatcher-S_S_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/vb/ManagementEventWatcher-S_S_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.EventArrived" />
      <MemberSignature Language="VB.NET" Value="Public Event EventArrived As EventArrivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::EventArrivedEventHandler ^ EventArrived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3492-191">Se produit lorsqu'un nouvel événement arrive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-191">Occurs when a new event arrives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="e3492-192">Données d’événement</span><span class="sxs-lookup"><span data-stu-id="e3492-192">Event Data</span></span>  
 <span data-ttu-id="e3492-193">Le Gestionnaire d’événements reçoit un argument de type <xref:System.Management.EventArrivedEventArgs> contenant les données associées à cet événement.</span><span class="sxs-lookup"><span data-stu-id="e3492-193">The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="e3492-194">Les éléments suivants <xref:System.Management.EventArrivedEventArgs> propriétés fournissent des informations spécifiques à cet événement.</span><span class="sxs-lookup"><span data-stu-id="e3492-194">The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="e3492-195">Property</span><span class="sxs-lookup"><span data-stu-id="e3492-195">Property</span></span>|<span data-ttu-id="e3492-196">Description </span><span class="sxs-lookup"><span data-stu-id="e3492-196">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="e3492-197"><xref:System.Management.ManagementEventArgs.Context%2A> (héritée de <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="e3492-197"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="e3492-198">Obtient le contexte d'opération en écho de l'opération qui a déclenché l'événement.</span><span class="sxs-lookup"><span data-stu-id="e3492-198">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|<span data-ttu-id="e3492-199">Obtient l'événement WMI qui a été renvoyé.</span><span class="sxs-lookup"><span data-stu-id="e3492-199">Gets the WMI event that was delivered.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-200">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-200">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-201">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-202">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-203">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-203">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementEventWatcher ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3492-204">Garantit que les appels en attente sont effacés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-204">Ensures that outstanding calls are cleared.</span>
          </span>
          <span data-ttu-id="e3492-205">Il s'agit du destructeur pour l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-205">This is the destructor for the object.</span>
          </span>
          <span data-ttu-id="e3492-206">En C#, les finaliseurs sont exprimés à l'aide de la syntaxe de destructeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-206">In C#, finalizers are expressed using destructor syntax.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-207">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-207">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-208">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-208">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-209">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-209">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-210">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-210">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As EventWatcherOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventWatcherOptions ^ Options { System::Management::EventWatcherOptions ^ get(); void set(System::Management::EventWatcherOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3492-211">Obtient ou définit les options utilisées pour surveiller les événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-211">Gets or sets the options used to watch for events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3492-212">Retourne un <see cref="T:System.Management.EventWatcherOptions" /> qui contient les options d'événements utilisées pour surveiller les événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-212">Returns an <see cref="T:System.Management.EventWatcherOptions" /> that contains the event options used to watch for events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="e3492-213">Valeur de propriété</span><span class="sxs-lookup"><span data-stu-id="e3492-213">Property Value</span></span>  
 <span data-ttu-id="e3492-214">Les options utilisées pour surveiller les événements.</span><span class="sxs-lookup"><span data-stu-id="e3492-214">The options used to watch for events.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-215">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-215">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-216">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-216">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-217">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-217">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-218">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-218">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3492-219">L’exemple suivant montre comment le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-219">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-220">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-220">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-221">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-221">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-222">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-222">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As EventQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventQuery ^ Query { System::Management::EventQuery ^ get(); void set(System::Management::EventQuery ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3492-223">Obtient ou définit les critères à appliquer aux événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-223">Gets or sets the criteria to apply to events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3492-224">Retourne un <see cref="T:System.Management.EventQuery" /> qui contient la requête à appliquer aux événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-224">Returns an <see cref="T:System.Management.EventQuery" /> that contains the query to apply to events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="e3492-225">Valeur de propriété</span><span class="sxs-lookup"><span data-stu-id="e3492-225">Property Value</span></span>  
 <span data-ttu-id="e3492-226">Les critères à appliquer aux événements, qui est égale à la *requête d’événement*.</span><span class="sxs-lookup"><span data-stu-id="e3492-226">The criteria to apply to the events, which is equal to the *event query*.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-227">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-227">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-228">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-228">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-229">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-229">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-230">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-230">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3492-231">L’exemple suivant montre comment le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-231">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-232">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-232">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-233">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-233">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-234">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-234">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ManagementScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ManagementScope ^ Scope { System::Management::ManagementScope ^ get(); void set(System::Management::ManagementScope ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3492-235">Obtient ou définit la portée dans laquelle surveiller les événements (espace de noms ou portée).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-235">Gets or sets the scope in which to watch for events (namespace or scope).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3492-236">Retourne un <see cref="T:System.Management.ManagementScope" /> qui contient la portée dans laquelle surveiller les événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-236">Returns a <see cref="T:System.Management.ManagementScope" /> that contains the scope the in which to watch for events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="e3492-237">Valeur de propriété</span><span class="sxs-lookup"><span data-stu-id="e3492-237">Property Value</span></span>  
 <span data-ttu-id="e3492-238">L’étendue dans laquelle surveiller les événements (espace de noms ou portée).</span><span class="sxs-lookup"><span data-stu-id="e3492-238">The scope in which to watch for events (namespace or scope).</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-239">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-239">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-240">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-240">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-241">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-241">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-242">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-242">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3492-243">L’exemple suivant montre comment le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-243">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-244">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-244">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-245">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-245">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-246">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-246">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3492-247">S'abonne à des événements avec la requête spécifiée et les remet, de manière asynchrone, à l'aide de l'événement <see cref="E:System.Management.ManagementEventWatcher.EventArrived" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-247">Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-248">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-248">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-249">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-249">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-250">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-250">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-251">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-251">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3492-252">Annule l'abonnement, qu'il soit synchrone ou asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-252">Cancels the subscription whether it is synchronous or asynchronous.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-253">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-253">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-254">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-254">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-255">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-255">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-256">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-256">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3492-257">L’exemple suivant montre comment le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-257">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-258">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-258">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-259">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-259">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-260">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-260">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As StoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::StoppedEventHandler ^ Stopped;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3492-261">Se produit lorsqu'un abonnement est annulé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-261">Occurs when a subscription is canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="e3492-262">Données d’événement</span><span class="sxs-lookup"><span data-stu-id="e3492-262">Event Data</span></span>  
 <span data-ttu-id="e3492-263">Le Gestionnaire d’événements reçoit un argument de type <xref:System.Management.StoppedEventArgs> contenant les données associées à cet événement.</span><span class="sxs-lookup"><span data-stu-id="e3492-263">The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="e3492-264">Les éléments suivants <xref:System.Management.StoppedEventArgs> propriétés fournissent des informations spécifiques à cet événement.</span><span class="sxs-lookup"><span data-stu-id="e3492-264">The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="e3492-265">Property</span><span class="sxs-lookup"><span data-stu-id="e3492-265">Property</span></span>|<span data-ttu-id="e3492-266">Description </span><span class="sxs-lookup"><span data-stu-id="e3492-266">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="e3492-267"><xref:System.Management.ManagementEventArgs.Context%2A> (héritée de <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="e3492-267"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="e3492-268">Obtient le contexte d'opération en écho de l'opération qui a déclenché l'événement.</span><span class="sxs-lookup"><span data-stu-id="e3492-268">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|<span data-ttu-id="e3492-269">Obtient l'état d'achèvement de l'opération.</span><span class="sxs-lookup"><span data-stu-id="e3492-269">Gets the completion status of the operation.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-270">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-270">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-271">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-271">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-272">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-272">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-273">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-273">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.WaitForNextEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForNextEvent () As ManagementBaseObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementBaseObject ^ WaitForNextEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3492-274">Attend l'arrivée de l'événement suivant qui correspond à la requête spécifiée, puis le retourne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-274">Waits for the next event that matches the specified query to arrive, and then returns it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3492-275">
            <see cref="T:System.Management.ManagementBaseObject" /> représentant le nouvel événement arrivé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3492-275">A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3492-276">Si l’objet de l’Observateur d’événements contient des options avec un délai d’attente spécifié, l’API attend de l’événement suivant uniquement pour la durée spécifiée ; dans le cas contraire, l’API est bloquée jusqu'à ce que l’événement suivant se produit.</span><span class="sxs-lookup"><span data-stu-id="e3492-276">If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3492-277">Sécurité .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3492-277">.NET Framework Security</span></span>  
 <span data-ttu-id="e3492-278">Confiance totale accordée à l'appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="e3492-278">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3492-279">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="e3492-279">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3492-280">Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code d’un niveau de confiance partiel](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3492-280">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3492-281">L’exemple suivant montre comment le client reçoit la notification lorsqu’une instance de **Win32_Process** est créé, car la classe d’événements est **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3492-281">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3492-282">Pour plus d’informations, consultez la documentation de Windows Management Instrumentation dans MSDN Library à http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="e3492-282">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="e3492-283">Le client reçoit les événements de façon synchrone en appelant la méthode <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3492-283">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3492-284">Cet exemple peut être testé par le démarrage d'un processus, comme le Bloc-notes, alors que l'exemple de code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="e3492-284">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>