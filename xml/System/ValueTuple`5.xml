<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ValueTuple`5.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56c0e1bd6c40adf38c7d7bf5af1c674a6233dcd84.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c0e1bd6c40adf38c7d7bf5af1c674a6233dcd84</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.7.1,netframework-4.7,netstandard-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>The type of the value tuple's first element.</source>
          <target state="translated">Le type du premier élément du tuple de valeur.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>The type of the value tuple's second element.</source>
          <target state="translated">Le type du deuxième élément du tuple de valeur.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>The type of the value tuple's third element.</source>
          <target state="translated">Le type du troisième élément du tuple de valeur.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>The type of the value tuple's fourth element.</source>
          <target state="translated">Le type du quatrième élément du tuple de valeur.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>The type of the value tuple's fifth element.</source>
          <target state="translated">Le type du cinquième élément du tuple de valeur.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.ValueTuple`5">
          <source>Represents a value tuple with 5 components.</source>
          <target state="translated">Représente un tuple de valeur avec 5 composants.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>A value tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">Un tuple de valeur est une structure de données qui a un nombre spécifique et une séquence de valeurs.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> structure represents a value tuple that has five elements.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> structure représente un tuple de valeur qui a cinq éléments.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>The value tuple types differ from the tuple types (such as <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph>) as follows:</source>
          <target state="translated">Les types de tuple de valeur diffèrent des types de tuple (tel que <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph>) comme suit :</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>They are structures (value types) rather than classes (reference types).</source>
          <target state="translated">Ils sont des structures (types valeur) au lieu de classes (types référence).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>Members such as <ph id="ph1">&lt;xref:System.ValueTuple%605.Item1&gt;</ph> and   <ph id="ph2">&lt;xref:System.ValueTuple%605.Item2&gt;</ph> are fields rather than properties.</source>
          <target state="translated">Membres comme <ph id="ph1">&lt;xref:System.ValueTuple%605.Item1&gt;</ph> et <ph id="ph2">&lt;xref:System.ValueTuple%605.Item2&gt;</ph> sont des champs au lieu des propriétés.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>Their fields are mutable rather than read-only.</source>
          <target state="translated">Les champs sont mutables plutôt qu’en lecture seule.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>The value tuple types provide the runtime implementation that supports <bpt id="p1">[</bpt>tuples in C#<ept id="p1">](~/docs/csharp/tuples.md)</ept> and struct tuples in F#.</source>
          <target state="translated">Les types de tuple de valeur fournissent l’implémentation du runtime qui prend en charge <bpt id="p1">[</bpt>tuples en C#<ept id="p1">](~/docs/csharp/tuples.md)</ept> et les tuples du struct en F #.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>In addition to creating a <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> instance by using language syntax, you can call the <ph id="ph2">&lt;xref:System.ValueTuple.Create%2A&gt;</ph> factory method.</source>
          <target state="translated">Outre la création d’un <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> instance en utilisant la syntaxe du langage, vous pouvez appeler la <ph id="ph2">&lt;xref:System.ValueTuple.Create%2A&gt;</ph> méthode de fabrique.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>Serialization and value tuples</source>
          <target state="translated">Sérialisation et la valeur des tuples</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> type is not serializable in .NET Core 1.x or in the .NET Framework 4.7 and earlier versions.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> type n’est pas sérialisable dans .NET Core 1.x ou dans le .NET Framework 4.7 et versions antérieures.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>In addition, .NET Standard, including .NET Standard 2.0, does not mandate serialization of <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> instances; whether or not a <ph id="ph2">&lt;xref:System.ValueTuple%605&gt;</ph> instance is serializable depends on the individual .NET Standard implementation.</source>
          <target state="translated">En outre, .NET Standard, y compris .NET 2.0 Standard, n’impose pas la sérialisation des <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> instances ; ou non une <ph id="ph2">&lt;xref:System.ValueTuple%605&gt;</ph> instance est sérialisable dépend de l’implémentation .NET Standard individuelle.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>To determine whether a <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> type is serializable on a particular .NET implementation, get a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph3">&lt;xref:System.ValueTuple%605&gt;</ph> type and retrieve the value of its <ph id="ph4">&lt;xref:System.Type.IsSerializable%2A&gt;</ph> property.</source>
          <target state="translated">Pour déterminer si un <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> type est sérialisable sur une implémentation particulière de .NET, d’obtenir un <ph id="ph2">&lt;xref:System.Type&gt;</ph> objet qui représente le <ph id="ph3">&lt;xref:System.ValueTuple%605&gt;</ph> de type et récupérer la valeur de son <ph id="ph4">&lt;xref:System.Type.IsSerializable%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`5">
          <source>For a list of serializable types in .NET Core and the .NET Framework, see <bpt id="p1">[</bpt>Binary Serialization<ept id="p1">](~/docs/standard/serialization/binary-serialization.md)</ept>.</source>
          <target state="translated">Pour obtenir la liste des types sérialisables dans .NET Core et le .NET Framework, consultez <bpt id="p1">[</bpt>sérialisation binaire<ept id="p1">](~/docs/standard/serialization/binary-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value tuple's first element.</source>
          <target state="translated">Premier élément du tuple de valeur.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value tuple's second element.</source>
          <target state="translated">Deuxième élément du tuple de valeur.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value tuple's third element.</source>
          <target state="translated">Troisième élément du tuple de valeur.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value tuple's fourth element.</source>
          <target state="translated">Quatrième élément du tuple de valeur.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value tuple's fifth element.</source>
          <target state="translated">Cinquième élément du tuple de valeur.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance.</source>
          <target state="translated">Initialise une nouvelle instance de <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source>The tuple to compare with this instance.</source>
          <target state="translated">Le tuple à comparer à cette instance.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance to a specified <ph id="ph2">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance.</source>
          <target state="translated">Compare l'instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle avec une instance <ph id="ph2">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> spécifiée.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source>A signed integer that indicates the relative position of this instance and                      <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Entier signé qui indique la position relative de cette instance et de <ph id="ph1">&lt;paramref name="other" /&gt;</ph> dans l’ordre de tri, comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valeur</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier négatif</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes                                      <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance précède <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zéro</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and                                      <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance et <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ont la même position dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier positif</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows                                      <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance suit <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.ValueTuple`5">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance is equal to a specified object.</source>
          <target state="translated">Retourne une valeur qui indique si l’instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle est égale à un objet spécifié.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Objet à comparer avec cette instance.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance is equal to a specified object.</source>
          <target state="translated">Retourne une valeur qui indique si l’instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle est égale à un objet spécifié.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instance actuelle est égale à l'objet spécifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`5.Equals(System.Object)">
          <source>The                          <ph id="ph1">`obj`</ph> argument is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated">Le <ph id="ph1">`obj`</ph> argument est considéré comme étant égal à l’instance actuelle dans les conditions suivantes :</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`5.Equals(System.Object)">
          <source>It is a                                  <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> value type.</source>
          <target state="translated">Il s’agit d’un <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> type valeur.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`5.Equals(System.Object)">
          <source>Its components are of the same types as those of the current instance.</source>
          <target state="translated">Ses composants sont des mêmes types que ceux de l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`5.Equals(System.Object)">
          <source>Its components are equal to those of the current instance.</source>
          <target state="translated">Ses composants sont égales à celles de l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`5.Equals(System.Object)">
          <source>Equality is determined by the default equality comparer for each component.</source>
          <target state="translated">L’égalité est déterminée par le comparateur d’égalité par défaut pour chaque composant.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.Equals(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source>The value tuple to compare with this instance.</source>
          <target state="translated">Le tuple de valeur à comparer à cette instance.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.Equals(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance is equal to a specified <ph id="ph2">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance.</source>
          <target state="translated">Retourne une valeur qui indique si l’instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle est égale à une instance <ph id="ph2">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> spécifiée.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.Equals(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified tuple; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instance actuelle est égale au tuple spécifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`5.Equals(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source>The                          <ph id="ph1">`other`</ph> argument is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated">Le <ph id="ph1">`other`</ph> argument est considéré comme étant égal à l’instance actuelle dans les conditions suivantes :</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`5.Equals(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source>Its components are of the same types as those of the current instance.</source>
          <target state="translated">Ses composants sont des mêmes types que ceux de l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`5.Equals(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source>Its components are equal to those of the current instance.</source>
          <target state="translated">Ses composants sont égales à celles de l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`5.Equals(System.ValueTuple{`0,`1,`2,`3,`4})">
          <source>Equality is determined by the default equality comparer for each component.</source>
          <target state="translated">L’égalité est déterminée par le comparateur d’égalité par défaut pour chaque composant.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.GetHashCode">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance.</source>
          <target state="translated">Calcule le code de hachage de l'instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.GetHashCode">
          <source>The hash code for the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance.</source>
          <target state="translated">Code de hachage de l'instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`5.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance's first element.</source>
          <target state="translated">Obtient la valeur du premier élément de l’instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`5.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance's second element.</source>
          <target state="translated">Obtient la valeur du deuxième élément de l’instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`5.Item3">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance's third element.</source>
          <target state="translated">Obtient la valeur du troisième élément de l’instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`5.Item4">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance's fourth element.</source>
          <target state="translated">Obtient la valeur du quatrième élément de l'instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`5.Item5">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance's fifth element.</source>
          <target state="translated">Obtient la valeur du cinquième élément de l’instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The object to compare with the current instance.</source>
          <target state="translated">Objet à comparer à l'instance actuelle.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">Un objet qui fournit des règles personnalisées pour la comparaison.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Compare l’instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle à un objet spécifié en utilisant un comparateur spécifié et renvoie un entier qui indique si l’objet actuel est avant, après ou à la même position que l’objet spécifié dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Entier signé qui indique la position relative de cette instance et de <ph id="ph1">&lt;paramref name="other" /&gt;</ph> dans l’ordre de tri, comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valeur</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier négatif</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance précède <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zéro</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance et <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ont la même position dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier positif</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance suit <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Objet à comparer avec cette instance.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">Un objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">Retourne une valeur qui indique si l’instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle équivaut à un objet spécifié sur la base d’une méthode de comparaison spécifiée.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified objects; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instance actuelle est égale aux objets spécifiés ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance.</source>
          <target state="translated">Un objet dont la méthode <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> calcule le code de hachage de l’instance <ph id="ph2">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance by using a specified computation method.</source>
          <target state="translated">Calcule le code de hachage pour l’instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle à l’aide d’une méthode de calcul spécifiée.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Code de hachage d'un entier signé 32 bits.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The object to compare with the current instance.</source>
          <target state="translated">Objet à comparer à l'instance actuelle.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Compare l’instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> actuelle à un objet spécifié en utilisant un comparateur spécifié et renvoie un entier qui indique si l’objet actuel est avant, après ou à la même position que l’objet spécifié dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Entier signé qui indique la position relative de cette instance et de <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> dans l’ordre de tri, comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valeur</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier négatif</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance précède <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zéro</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance et <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ont la même position dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier positif</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance suit <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the specified <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> element.</source>
          <target state="translated">Index de l’élément <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 to 4.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> peut être compris entre 0 et 4.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> element.</source>
          <target state="translated">Obtient la valeur de l’élément <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">Valeur de l’élément <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> à la position spécifiée.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%605.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ValueTuple%605.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> propriété est une implémentation d’interface explicite.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Pour l’appeler, vous devez effectuer un cast ou convertir les <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> de l’objet à un <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> objet d’interface.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 4.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieur à 0 ou supérieur à 4.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph>.</source>
          <target state="translated">Obtient le nombre d’éléments dans <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>5, the number of elements in a <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> object.</source>
          <target state="translated">5, le nombre d’éléments dans un objet <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%605.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ValueTuple%605.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType&gt;</ph> propriété est une implémentation d’interface explicite.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Pour l’appeler, vous devez effectuer un cast ou convertir les <ph id="ph1">&lt;xref:System.ValueTuple%605&gt;</ph> de l’objet à un <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> objet d’interface.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance.</source>
          <target state="translated">Retourne une chaîne qui représente la valeur de cette instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`5.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph> instance.</source>
          <target state="translated">Représentation sous forme de chaîne de cette instance <ph id="ph1">&lt;see cref="T:System.ValueTuple`5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`5.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>, <bpt id="p5">*</bpt>Item5<ept id="p5">*</ept>, where <bpt id="p6">*</bpt>Item1<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item2<ept id="p7">*</ept>, <bpt id="p8">*</bpt>Item3<ept id="p8">*</ept>, <bpt id="p9">*</bpt>Item4<ept id="p9">*</ept>, and <bpt id="p10">*</bpt>Item5<ept id="p10">*</ept> represent the values of the <ph id="ph1">&lt;xref:System.ValueTuple%605.Item1&gt;</ph>, <ph id="ph2">&lt;xref:System.ValueTuple%605.Item2&gt;</ph>, <ph id="ph3">&lt;xref:System.ValueTuple%605.Item3&gt;</ph>, <ph id="ph4">&lt;xref:System.ValueTuple%605.Item4&gt;</ph>, and <ph id="ph5">&lt;xref:System.ValueTuple%605.Item5&gt;</ph> fields.</source>
          <target state="translated">La chaîne retournée par cette méthode prend la forme (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>, <bpt id="p5">*</bpt>Item5<ept id="p5">*</ept>, où <bpt id="p6">*</bpt>Item1<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item2<ept id="p7">*</ept>, <bpt id="p8">*</bpt>Item3<ept id="p8">*</ept>, <bpt id="p9">*</bpt>Item4<ept id="p9">*</ept>, et <bpt id="p10">*</bpt>Item5<ept id="p10">*</ept> représentent les valeurs de la <ph id="ph1">&lt;xref:System.ValueTuple%605.Item1&gt;</ph>, <ph id="ph2">&lt;xref:System.ValueTuple%605.Item2&gt;</ph>, <ph id="ph3">&lt;xref:System.ValueTuple%605.Item3&gt;</ph>, <ph id="ph4">&lt;xref:System.ValueTuple%605.Item4&gt;</ph>, et <ph id="ph5">&lt;xref:System.ValueTuple%605.Item5&gt;</ph> champs.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`5.ToString">
          <source>If any of the field values is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si une des valeurs du champ est <ph id="ph1">`null`</ph>, il est représenté en tant que <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>