<Type Name="Nullable&lt;T&gt;" FullName="System.Nullable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fab882ea8e2d250985c9aca5c92bab487c549202" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52385418" /></Metadata><TypeSignature Language="C#" Value="public struct Nullable&lt;T&gt; where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Nullable`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Nullable`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Nullable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Nullable" />
  <TypeSignature Language="F#" Value="type Nullable&lt;'T (requires 'T : struct)&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">Type valeur sous-jacent du type <see cref="T:System.Nullable`1" /> générique.</typeparam>
    <summary>Représente un type valeur qui peut avoir la valeur <see langword="null" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un type est dit nullable si elle peut être affectée à une valeur ou peut être affectée `null`, ce qui signifie que le type n’a aucune valeur. Par défaut, tous les types référencent, tels que <xref:System.String>, sont nullable, mais toutes les valeurs de types, tels que <xref:System.Int32>, ne sont pas.  
  
 En c# et Visual Basic, vous marquez un type valeur Nullable à l’aide de la `?` notation après le type de valeur. Par exemple, `int?` en c# ou `Integer?` en Visual Basic déclare un type de valeur d’entier qui peut être affecté `null`.  
  
 Le <xref:System.Nullable%601> structure prend en charge uniquement un type valeur comme un type nullable, car les types référence sont nullables de conception.  
  
 Le <xref:System.Nullable> classe fournit une prise en charge complémentaire pour le <xref:System.Nullable%601> structure. Le <xref:System.Nullable> classe prend en charge l’obtention du type sous-jacent d’un type nullable, et les opérations de comparaison et d’égalité sur les paires de types nullables dont sous-jacent de type valeur ne prend pas en charge des opérations de comparaison et d’égalité génériques.  
  
## <a name="fundamental-properties"></a>Propriétés fondamentales  
 Les deux membres fondamentaux de la <xref:System.Nullable%601> structure sont les <xref:System.Nullable%601.HasValue%2A> et <xref:System.Nullable%601.Value%2A> propriétés. Si le <xref:System.Nullable%601.HasValue%2A> propriété pour un <xref:System.Nullable%601> objet est `true`, la valeur de l’objet est accessible avec la <xref:System.Nullable%601.Value%2A> propriété. Si le <xref:System.Nullable%601.HasValue%2A> propriété est `false`, la valeur de l’objet n’est pas définie et une tentative d’accès à la <xref:System.Nullable%601.Value%2A> propriété lève une <xref:System.InvalidOperationException>.  
  
## <a name="boxing-and-unboxing"></a>Conversion boxing et unboxing  
 Lorsqu’un type nullable est boxed, le common language runtime boîtes automatiquement la valeur sous-jacente de la <xref:System.Nullable%601> de l’objet, pas le <xref:System.Nullable%601> objet lui-même. Autrement dit, si le <xref:System.Nullable%601.HasValue%2A> propriété est `true`, le contenu de la <xref:System.Nullable%601.Value%2A> propriété est boxed. Lorsque la valeur sous-jacente d’un type nullable est unboxed, le common language runtime crée un nouveau <xref:System.Nullable%601> structure initialisée à la valeur sous-jacente.  
  
 Si le `HasValue` propriété d’un type nullable est `false`, le résultat d’une opération de boxing est `null`. Par conséquent, si un type nullable boxed est passé à une méthode qui attend un argument d’objet, cette méthode doit être prête à gérer le cas où l’argument est `null`. Lorsque `null` est unboxed dans un type nullable, le common language runtime crée un <xref:System.Nullable%601> structure et l’initialise sa `HasValue` propriété `false`.  
  
## <a name="includenetv451includesnet-v451-mdmd-and-windows-runtime-components"></a>[!INCLUDE[net_v451](~/includes/net-v451-md.md)] et les composants Windows Runtime  
 En commençant par le [!INCLUDE[net_v451](~/includes/net-v451-md.md)], vous pouvez inclure un <xref:System.Nullable%601> type en tant que membre d’une structure exportée dans une bibliothèque WinMD. Auparavant, cela a été pas pris en charge.  
  
   
  
## Examples  
 L’exemple de code suivant définit trois lignes d’une table dans la base de données Pubs de Microsoft. Le tableau contient deux colonnes qui ne sont pas nullables et deux colonnes qui acceptent des valeurs NULL.  
  
 [!code-cpp[system.nullableOfT.class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.nullableOfT.class/cpp/tarow.cpp#1)]
 [!code-csharp[system.nullableOfT.class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.class/cs/tarow.cs#1)]
 [!code-vb[system.nullableOfT.class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.class/vb/tarow.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Nullable" />
    <related type="Article" href="https://msdn.microsoft.com/library/e473cb01-28ca-42be-9cea-f717055d72c6">Types Nullable (Guide de programmation C#)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/9ac3b602-6f96-4e6d-96f7-cd4e81c468a6">Types valeur Nullable (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Nullable (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable(T value);" />
      <MemberSignature Language="F#" Value="new Nullable&lt;'T (requires 'T : struct)&gt; : 'T -&gt; Nullable&lt;'T (requires 'T : struct)&gt;" Usage="new System.Nullable&lt;'T (requires 'T : struct)&gt; value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Un type valeur.</param>
        <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Nullable`1" /> avec la valeur spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Nullable%601.%23ctor%2A> constructeur initialise le <xref:System.Nullable%601.HasValue%2A> propriété de la nouvelle <xref:System.Nullable%601> objet `true`et le <xref:System.Nullable%601.Value%2A> propriété à la valeur de la `value` paramètre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="nullable.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">Objet.</param>
        <summary>Indique si l'objet <see cref="T:System.Nullable`1" /> actuel est égal à un objet spécifié.</summary>
        <returns><see langword="true" /> si le paramètre <paramref name="other" /> est égal à l'objet <see cref="T:System.Nullable`1" /> actuel ; sinon, <see langword="false" />.  
  
Cette table décrit la façon dont l'égalité est définie pour les valeurs comparées : 
 <list type="table"><listheader><term> Valeur de retour 
 </term><description> Description  
 </description></listheader><item><term><see langword="true" /></term><description> La propriété <see cref="P:System.Nullable`1.HasValue" /> est <see langword="false" />, et le paramètre <paramref name="other" /> est <see langword="null" />. Autrement dit, deux valeurs null sont égales par définition.  
  
- ou - 
La propriété <see cref="P:System.Nullable`1.HasValue" /> a la valeur <see langword="true" />, et la valeur retournée par la propriété <see cref="P:System.Nullable`1.Value" /> est égale au paramètre <paramref name="other" />.  
  
 </description></item><item><term><see langword="false" /></term><description> La propriété <see cref="P:System.Nullable`1.HasValue" /> de la structure <see cref="T:System.Nullable`1" /> en cours a la valeur <see langword="true" />, et le paramètre <paramref name="other" /> est <see langword="null" />.  
  
- ou - 
La propriété <see cref="P:System.Nullable`1.HasValue" /> de la structure <see cref="T:System.Nullable`1" /> en cours a la valeur <see langword="false" />, et le paramètre <paramref name="other" /> n'est pas <see langword="null" />.  
  
- ou - 
La propriété <see cref="P:System.Nullable`1.HasValue" /> de la structure <see cref="T:System.Nullable`1" /> en cours a la valeur <see langword="true" />, et la valeur retournée par la propriété <see cref="P:System.Nullable`1.Value" /> n'est pas égale au paramètre <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Nullable%601.HasValue%2A> propriété du courant <xref:System.Nullable%601> structure est `true` et le `other` argument n’est pas `null`, l’égalité est déterminée en passant le `other` paramètre à la `Equals` méthode de la sous-jacent de valeur de la <xref:System.Nullable%601> structure.  
  
   
  
## Examples  
 L’exemple de code suivant détermine si un objet et une <xref:System.Nullable%601> objet sont égaux à actuel <xref:System.Nullable%601> objet.  
  
 [!code-csharp[system.nullableOfT.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.Equals/cs/eq.cs#1)]
 [!code-vb[system.nullableOfT.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.Equals/vb/eq.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="nullable.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère le code de hachage de l'objet retourné par la propriété <see cref="P:System.Nullable`1.Value" />.</summary>
        <returns>Code de hachage de l'objet retourné par la propriété <see cref="P:System.Nullable`1.Value" /> si la propriété <see cref="P:System.Nullable`1.HasValue" /> est <see langword="true" /> ou zéro si la propriété <see cref="P:System.Nullable`1.HasValue" /> est <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValueOrDefault">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère la valeur de l'objet <see cref="T:System.Nullable`1" /> actuel ou une valeur par défaut.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault();" />
      <MemberSignature Language="F#" Value="member this.GetValueOrDefault : unit -&gt; 'T" Usage="nullable.GetValueOrDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère la valeur de l’objet <see cref="T:System.Nullable`1" /> actuel ou la valeur par défaut du type sous-jacent.</summary>
        <returns>Valeur de la propriété <see cref="P:System.Nullable`1.Value" /> si la propriété <see cref="P:System.Nullable`1.HasValue" /> est <see langword="true" /> ; sinon, valeur par défaut du type sous-jacent.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Nullable%601.GetValueOrDefault%2A> méthode retourne une valeur, même si le <xref:System.Nullable%601.HasValue%2A> propriété est `false` (contrairement à la <xref:System.Nullable%601.Value%2A> propriété, qui lève une exception). Si le <xref:System.Nullable%601.HasValue%2A> propriété est `false`, la méthode retourne la [par défaut](~/docs/csharp/language-reference/keywords/default-values-table.md) valeur du type sous-jacent.  
  
   
  
## Examples  
 L’exemple de code suivant récupère la valeur d’un <xref:System.Nullable%601> si cette valeur est définie ; sinon, elle récupère la valeur par défaut ou une valeur par défaut spécifiques de l’objet.  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault(`0)" />
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault (T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault(!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault (defaultValue As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault(T defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValueOrDefault : 'T -&gt; 'T" Usage="nullable.GetValueOrDefault defaultValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="defaultValue">Valeur à retourner si la propriété <see cref="P:System.Nullable`1.HasValue" /> est <see langword="false" />.</param>
        <summary>Récupère la valeur de l'objet <see cref="T:System.Nullable`1" /> actuel ou la valeur par défaut spécifiée.</summary>
        <returns>Valeur de la propriété <see cref="P:System.Nullable`1.Value" /> si la propriété <see cref="P:System.Nullable`1.HasValue" /> est <see langword="true" /> ; sinon, paramètre <paramref name="defaultValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Nullable%601.GetValueOrDefault%2A> méthode retourne une valeur, même si le <xref:System.Nullable%601.HasValue%2A> propriété est `false` (contrairement à la <xref:System.Nullable%601.Value%2A> propriété, qui lève une exception).  
  
   
  
## Examples  
 L’exemple de code suivant récupère la valeur d’un <xref:System.Nullable%601> si cette valeur est définie ; sinon, elle récupère la valeur par défaut ou une valeur par défaut spécifiques de l’objet.  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Nullable`1" /> actuel a une valeur valide de son type sous-jacent.</summary>
        <value><see langword="true" /> si l'objet <see cref="T:System.Nullable`1" /> actuel a une valeur ; <see langword="false" /> si l'objet <see cref="T:System.Nullable`1" /> actuel n'a aucune valeur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Nullable%601.HasValue%2A> propriété est `true`, la valeur de la <xref:System.Nullable%601> objet sont accessibles avec la <xref:System.Nullable%601.Value%2A> propriété. Sinon, tente d’accéder à sa valeur de lève une <xref:System.InvalidOperationException> exception.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Nullable%601.HasValue%2A> propriété d’un `Nullable<int>` (`Nullable(Of Integer)` en Visual Basic) objet afin de déterminer s’il doit afficher l’objet <xref:System.Nullable%601.Value%2A> propriété ou son <xref:System.Nullable%601.GetValueOrDefault%2A> propriété.  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator T (Nullable&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname !T op_Explicit(valuetype System.Nullable`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Nullable(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator T(Nullable&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Nullable&lt;'T (requires 'T : struct)&gt; -&gt; 'T" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Valeur de type nullable.</param>
        <summary>Définit une conversion explicite d'une instance <see cref="T:System.Nullable`1" /> à sa valeur sous-jacente.</summary>
        <returns>Valeur de la propriété <see cref="P:System.Nullable`1.Value" /> pour le paramètre <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet opérateur prend en charge la conversion explicite d’actuel <xref:System.Nullable%601> instance vers le type `T`, le type de <xref:System.Nullable%601.Value%2A>. La syntaxe de ces conversions explicites dépend du langage. Vous pouvez également être en mesure d’effectuer la conversion en appelant le <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> (méthode).  
  
 La méthode équivalente pour cet opérateur est <xref:System.Nullable%601.Value?displayProperty=nameWithType>  
  
## Examples  
 Le <xref:System.Nullable%601.op_Explicit%2A> opérateur permet de code semblable au suivant, qui convertit un `Nullable(Of Int32)` valeur un <xref:System.Int32> valeur.  
  
 [!code-csharp[System.Nullable~1.Conversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.conversion/cs/explicit1.cs#1)]
 [!code-vb[System.Nullable~1.Conversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.conversion/vb/explicit1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Nullable&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;!T&gt; op_Implicit(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As T) As Nullable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Nullable&lt;T&gt;(T value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : 'T -&gt; Nullable&lt;'T (requires 'T : struct)&gt;" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Un type valeur.</param>
        <summary>Crée un objet <see cref="T:System.Nullable`1" /> initialisé à une valeur spécifiée.</summary>
        <returns>Objet <see cref="T:System.Nullable`1" /> dont la propriété <see cref="P:System.Nullable`1.Value" /> est initialisée avec le paramètre <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le `value` paramètre n’est pas `null`, le <xref:System.Nullable%601.Value%2A> propriété du nouveau <xref:System.Nullable%601> valeur est initialisée à la `value` paramètre et le <xref:System.Nullable%601.HasValue%2A> propriété est initialisée avec `true`.  
  
 Si le `value` paramètre est `null`, le <xref:System.Nullable%601.Value%2A> propriété du nouveau <xref:System.Nullable%601> valeur est initialisée à la valeur par défaut, qui est la valeur de zéros binaires, et le <xref:System.Nullable%601.HasValue%2A> propriété est initialisée avec `false` .  
  
 La méthode équivalente pour cet opérateur est <xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="nullable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne la représentation textuelle de la valeur de l'objet <see cref="T:System.Nullable`1" /> actuel.</summary>
        <returns>Représentation textuelle de la valeur de l'objet <see cref="T:System.Nullable`1" /> actuel si la propriété <see cref="P:System.Nullable`1.HasValue" /> est <see langword="true" /> ou une chaîne vide ("") si la propriété <see cref="P:System.Nullable`1.HasValue" /> est <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Nullable%601.ToString%2A> propriété retourne la chaîne obtenue en appelant le `ToString` propriété de l’objet retourné par la <xref:System.Nullable%601.Value%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant affiche la valeur de cours <xref:System.Nullable%601> objet.  
  
 [!code-csharp[system.nullableOfT.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.ToString/cs/ts.cs#1)]
 [!code-vb[system.nullableOfT.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.ToString/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'T" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur de l'objet <see cref="T:System.Nullable`1" /> actuel si une valeur sous-jacente valide lui a été assignée.</summary>
        <value>Valeur de l'objet <see cref="T:System.Nullable`1" /> actuel si la propriété <see cref="P:System.Nullable`1.HasValue" /> est <see langword="true" />. Une exception est levée si la propriété <see cref="P:System.Nullable`1.HasValue" /> est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si une valeur de type `T` n’a pas été affecté à la <xref:System.Nullable%601> de l’objet, vous pouvez la comparer à `null` et récupérer ses <xref:System.Nullable%601.HasValue%2A> propriété, mais vous ne pouvez pas accéder à ses <xref:System.Nullable%601.Value%2A> propriété ou l’appel de ses autres membres.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Nullable%601.HasValue%2A> propriété d’un `Nullable<int>` (`Nullable(Of Integer)` en Visual Basic) objet afin de déterminer s’il doit afficher l’objet <xref:System.Nullable%601.Value%2A> propriété ou son <xref:System.Nullable%601.GetValueOrDefault%2A> propriété.  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Nullable`1.HasValue" /> a la valeur <see langword="false" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>