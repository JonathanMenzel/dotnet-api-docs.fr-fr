<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Nullable`1.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52d5b9220d8b4b5f94e9ef38c32c3cb9e2d9476b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d5b9220d8b4b5f94e9ef38c32c3cb9e2d9476b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The underlying value type of the <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> generic type.</source>
          <target state="translated">Type valeur sous-jacent du type <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> générique.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Nullable`1">
          <source>Represents a value type that can be assigned <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Représente un type valeur qui peut avoir la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>A type is said to be nullable if it can be assigned a value or can be assigned <ph id="ph1">`null`</ph>, which means the type has no value whatsoever.</source>
          <target state="translated">Un type est dit nullable si elle peut être affectée à une valeur ou peut être affecté <ph id="ph1">`null`</ph>, ce qui signifie que le type n’a aucune valeur.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>By default, all reference types, such as <ph id="ph1">&lt;xref:System.String&gt;</ph>, are nullable, but all value types, such as <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, are not.</source>
          <target state="translated">Par défaut, tous les types référencent, tels que <ph id="ph1">&lt;xref:System.String&gt;</ph>, sont nullable, mais la valeur de tous les types, tels que <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, ne sont pas.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>In C# and Visual Basic, you mark a value type as nullable by using the <ph id="ph1">`?`</ph> notation after the value type.</source>
          <target state="translated">En c# et Visual Basic, vous marquez un type valeur Nullable à l’aide de la <ph id="ph1">`?`</ph> notation après le type de valeur.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>For example, <ph id="ph1">`int?`</ph> in C# or <ph id="ph2">`Integer?`</ph> in Visual Basic declares an integer value type that can be assigned <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Par exemple, <ph id="ph1">`int?`</ph> en c# ou <ph id="ph2">`Integer?`</ph> en Visual Basic déclare un type de valeur d’entier qui peut être affecté <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure supports using only a value type as a nullable type because reference types are nullable by design.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> prend en charge uniquement un type valeur comme un type nullable, car les types référence sont nullables de conception de la structure.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> class provides complementary support for the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> classe fournit la prise en charge complémentaire pour le <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> classe prend en charge l’obtention du type sous-jacent d’un type nullable, et les opérations de comparaison et d’égalité sur les paires de types nullable, le type valeur dont sous-jacent ne prend pas en charge les opérations de comparaison et d’égalité générique.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Fundamental Properties</source>
          <target state="translated">Propriétés fondamentales</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The two fundamental members of the <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure are the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> properties.</source>
          <target state="translated">Les deux membres fondamentaux de la <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure sont les <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property for a <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object is <ph id="ph3">`true`</ph>, the value of the object can be accessed with the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété pour un <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> objet est <ph id="ph3">`true`</ph>, la valeur de l’objet est accessible avec la <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the value of the object is undefined and an attempt to access the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property throws an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété est <ph id="ph2">`false`</ph>, la valeur de l’objet n’est pas définie et une tentative d’accès à la <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété lève une <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Boxing and Unboxing</source>
          <target state="translated">Conversion boxing et unboxing</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object, not the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object itself.</source>
          <target state="translated">Lorsqu’un type nullable est boxed, le common language runtime zones automatiquement la valeur sous-jacente de la <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de l’objet, pas le <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> objet lui-même.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>That is, if the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the contents of the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property is boxed.</source>
          <target state="translated">Autrement dit, si le <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété <ph id="ph2">`true`</ph>, le contenu de la <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété est convertie (boxed).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When the underlying value of a nullable type is unboxed, the common language runtime creates a new <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure initialized to the underlying value.</source>
          <target state="translated">Lorsque la valeur sous-jacente d’un type nullable est unboxed, le common language runtime crée un nouveau <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure initialisée à la valeur sous-jacente.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">`HasValue`</ph> property of a nullable type is <ph id="ph2">`false`</ph>, the result of a boxing operation is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">`HasValue`</ph> propriété d’un type nullable est <ph id="ph2">`false`</ph>, le résultat d’une opération boxing est <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Consequently, if a boxed nullable type is passed to a method that expects an object argument, that method must be prepared to handle the case where the argument is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Par conséquent, si un type nullable boxed est passé à une méthode qui attend un argument d’objet, cette méthode doit être prête à gérer le cas où l’argument est <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When <ph id="ph1">`null`</ph> is unboxed into a nullable type, the common language runtime creates a new <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure and initializes its <ph id="ph3">`HasValue`</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Lorsque <ph id="ph1">`null`</ph> est unboxed dans un type nullable, le common language runtime crée un <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure et initialise ses <ph id="ph3">`HasValue`</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source><ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> and Windows Runtime Components</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> et les composants Windows Runtime</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph>, you can include a <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> type as a member of a structure exported in a WinMD library.</source>
          <target state="translated">En commençant par le <ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph>, vous pouvez inclure un <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> type en tant que membre d’une structure exportée dans une bibliothèque WinMD.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Previously, this was not supported.</source>
          <target state="translated">Auparavant, cela n’est pas géré.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The following code example defines three rows of a table in the Microsoft Pubs sample database.</source>
          <target state="translated">L’exemple de code suivant définit trois lignes d’une table dans la base de données Pubs de Microsoft.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The table contains two columns that are not nullable and two columns that are nullable.</source>
          <target state="translated">La table contient deux colonnes qui ne sont pas nullables et deux colonnes qui acceptent des valeurs NULL.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.#ctor(`0)">
          <source>A value type.</source>
          <target state="translated">Un type valeur.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.#ctor(`0)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure to the specified value.</source>
          <target state="translated">Initialise une nouvelle instance de la structure <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> avec la valeur spécifiée.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.#ctor(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%2A&gt;</ph> constructor initializes the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of the new <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> object to <ph id="ph4">`true`</ph>, and the <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property to the value of the <ph id="ph6">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%2A&gt;</ph> constructeur initialise le <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété de la nouvelle <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> à l’objet <ph id="ph4">`true`</ph>et le <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété à la valeur de la <ph id="ph6">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>An object.</source>
          <target state="translated">Objet.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>Indicates whether the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Indique si l'objet <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel est égal à un objet spécifié.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parameter is equal to the current <ph id="ph3">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le paramètre <ph id="ph2">&lt;paramref name="other" /&gt;</ph> est égal à l'objet <ph id="ph3">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>This table describes how equality is defined for the compared values:</source>
          <target state="translated">Cette table décrit la façon dont l'égalité est définie pour les valeurs comparées :</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valeur renvoyée</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="true" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and the <ph id="ph8">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph9">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="true" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> La propriété <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> est <ph id="ph7">&lt;see langword="false" /&gt;</ph>, et le paramètre <ph id="ph8">&lt;paramref name="other" /&gt;</ph> est <ph id="ph9">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>That is, two null values are equal by definition.</source>
          <target state="translated">Autrement dit, deux valeurs null sont égales par définition.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, and the value returned by the <ph id="ph3">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is equal to the <ph id="ph4">&lt;paramref name="other" /&gt;</ph> parameter.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>, et la valeur retournée par la propriété <ph id="ph3">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> est égale au paramètre <ph id="ph4">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="false" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph7">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph8">&lt;see langword="true" /&gt;</ph>, and the <ph id="ph9">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph10">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="false" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> La propriété <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> de la structure <ph id="ph7">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuelle a la valeur <ph id="ph8">&lt;see langword="true" /&gt;</ph>, et le paramètre <ph id="ph9">&lt;paramref name="other" /&gt;</ph> est <ph id="ph10">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph3">&lt;see langword="false" /&gt;</ph>, and the <ph id="ph4">&lt;paramref name="other" /&gt;</ph> parameter is not <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> de la structure <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> en cours a la valeur <ph id="ph3">&lt;see langword="false" /&gt;</ph>, et le paramètre <ph id="ph4">&lt;paramref name="other" /&gt;</ph> n'est pas <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, and the value returned by the <ph id="ph4">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is not equal to the <ph id="ph5">&lt;paramref name="other" /&gt;</ph> parameter.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> de la structure <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> en cours a la valeur <ph id="ph3">&lt;see langword="true" /&gt;</ph>, et la valeur retournée par la propriété <ph id="ph4">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> n'est pas égale au paramètre <ph id="ph5">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of the current <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure is <ph id="ph3">`true`</ph> and the <ph id="ph4">`other`</ph> argument is not <ph id="ph5">`null`</ph>, equality is determined by passing the <ph id="ph6">`other`</ph> parameter to the <ph id="ph7">`Equals`</ph> method of the underlying value of the current <ph id="ph8">&lt;xref:System.Nullable%601&gt;</ph> structure.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété actuelles <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure est <ph id="ph3">`true`</ph> et le <ph id="ph4">`other`</ph> argument n’est pas <ph id="ph5">`null`</ph>, l’égalité est déterminée en passant le <ph id="ph6">`other`</ph> paramètre à la <ph id="ph7">`Equals`</ph> méthode de la sous-jacent de valeur de la <ph id="ph8">&lt;xref:System.Nullable%601&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The following code example determines whether an object and a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object are equal to the current <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant détermine si un objet et une <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> objet sont égales à actuel <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetHashCode">
          <source>Retrieves the hash code of the object returned by the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property.</source>
          <target state="translated">Récupère le code de hachage de l'objet retourné par la propriété <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetHashCode">
          <source>The hash code of the object returned by the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, or zero if the <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Code de hachage de l'objet retourné par la propriété <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> si la propriété <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> est <ph id="ph3">&lt;see langword="true" /&gt;</ph> ou zéro si la propriété <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> est <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Nullable`1">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or a default value.</source>
          <target state="translated">Récupère la valeur de l'objet <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel ou une valeur par défaut.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or the object's default value.</source>
          <target state="translated">Récupère la valeur de l'objet <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel ou la valeur par défaut de l'objet.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the  <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, the default value of the current <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object.</source>
          <target state="translated">Valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> si la propriété <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> est <ph id="ph3">&lt;see langword="true" /&gt;</ph> ; sinon, la valeur par défaut de l'objet <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The type of the default value is the type argument of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, and the value of the default value consists solely of binary zeroes.</source>
          <target state="translated">Le type de la valeur par défaut est l'argument de type de l'objet <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel et la valeur par défaut se compose uniquement de zéros binaires.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> method returns a value even if the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph3">`false`</ph> (unlike the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property, which throws an exception).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> méthode retourne une valeur, même si le <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété est <ph id="ph3">`false`</ph> (contrairement à la <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété, qui lève une exception).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The following code example retrieves the value of a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object if that value is defined; otherwise, it retrieves the default value or a specific default value.</source>
          <target state="translated">L’exemple de code suivant récupère la valeur d’un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> si cette valeur est définie ; sinon, il récupère la valeur par défaut ou une valeur par défaut spécifiques de l’objet.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>A value to return if the <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Valeur à retourner si la propriété <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> est <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or the specified default value.</source>
          <target state="translated">Récupère la valeur de l'objet <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel ou la valeur par défaut spécifiée.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, the <ph id="ph4">&lt;paramref name="defaultValue" /&gt;</ph> parameter.</source>
          <target state="translated">Valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> si la propriété <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> est <ph id="ph3">&lt;see langword="true" /&gt;</ph> ; sinon, paramètre <ph id="ph4">&lt;paramref name="defaultValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> method returns a value even if the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph3">`false`</ph> (unlike the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property, which throws an exception).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> méthode retourne une valeur, même si le <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété est <ph id="ph3">`false`</ph> (contrairement à la <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété, qui lève une exception).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The following code example retrieves the value of a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object if that value is defined; otherwise, it retrieves the default value or a specific default value.</source>
          <target state="translated">L’exemple de code suivant récupère la valeur d’un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> si cette valeur est définie ; sinon, il récupère la valeur par défaut ou une valeur par défaut spécifiques de l’objet.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.HasValue">
          <source>Gets a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has a valid value of its underlying type.</source>
          <target state="translated">Obtient une valeur indiquant si l'objet <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel a une valeur valide de son type sous-jacent.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has a value; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the current <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has no value.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel a une valeur ; <ph id="ph3">&lt;see langword="false" /&gt;</ph> si l'objet <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel n'a aucune valeur.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the value of the current <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> object can be accessed with the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété <ph id="ph2">`true`</ph>, la valeur de la <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> objet est accessible avec la <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>Otherwise, attempting to access its value throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Dans le cas contraire, tente d’accéder à sa valeur de lève une <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of a <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> object to determine whether it should display the object's <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or its <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété d’un <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> objet afin de déterminer s’il doit afficher l’objet <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété ou son <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>A nullable value.</source>
          <target state="translated">Valeur de type nullable.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> instance to its underlying value.</source>
          <target state="translated">Définit une conversion explicite d'une instance <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> à sa valeur sous-jacente.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property for the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> pour le paramètre <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>This operator supports the explicit conversion of the current <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> instance to type <ph id="ph2">`T`</ph>, the type of <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>.</source>
          <target state="translated">Cet opérateur prend en charge la conversion explicite d’actuel <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> instance vers le type <ph id="ph2">`T`</ph>, le type de <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The syntax for such explicit conversions is language-dependent.</source>
          <target state="translated">La syntaxe de ces conversions explicites dépend du langage.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>You may also be able to perform the conversion by calling the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Vous pouvez également être en mesure d’effectuer la conversion en appelant le <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Nullable%601.Value?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Nullable%601.Value?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.op_Explicit%2A&gt;</ph> operator enables code such as the following, which converts a <ph id="ph2">`Nullable(Of Int32)`</ph> value to an <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Nullable%601.op_Explicit%2A&gt;</ph> opérateur permet le code suivant, qui convertit un <ph id="ph2">`Nullable(Of Int32)`</ph> valeur un <ph id="ph3">&lt;xref:System.Int32&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>A value type.</source>
          <target state="translated">Un type valeur.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object initialized to a specified value.</source>
          <target state="translated">Crée un objet <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> initialisé à une valeur spécifiée.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object whose <ph id="ph2">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is initialized with the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> dont la propriété <ph id="ph2">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> est initialisée avec le paramètre <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>If the <ph id="ph1">`value`</ph> parameter is not <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property of the new <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> value is initialized to the <ph id="ph5">`value`</ph> parameter and the <ph id="ph6">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is initialized to <ph id="ph7">`true`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">`value`</ph> paramètre n’est pas <ph id="ph2">`null`</ph>, le <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété du nouveau <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> valeur est initialisée à la <ph id="ph5">`value`</ph> paramètre et le <ph id="ph6">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété est initialisée à <ph id="ph7">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>If the <ph id="ph1">`value`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property of the new <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> value is initialized to the default value, which is the value that is all binary zeroes, and the <ph id="ph5">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is initialized to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">`value`</ph> paramètre est <ph id="ph2">`null`</ph>, le <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété du nouveau <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> valeur est initialisée à la valeur par défaut, qui est la valeur de zéros binaires, et le <ph id="ph5">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété est initialisée à <ph id="ph6">`false`</ph> .</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.ToString">
          <source>Returns the text representation of the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object.</source>
          <target state="translated">Retourne la représentation textuelle de la valeur de l'objet <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.ToString">
          <source>The text representation of the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, or an empty string ("") if the <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Représentation textuelle de la valeur de l'objet <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel si la propriété <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> est <ph id="ph3">&lt;see langword="true" /&gt;</ph> ou une chaîne vide ("") si la propriété <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> est <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.ToString%2A&gt;</ph> property returns the string yielded by calling the <ph id="ph2">`ToString`</ph> property of the object returned by the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Nullable%601.ToString%2A&gt;</ph> propriété retourne la chaîne obtenue en appelant le <ph id="ph2">`ToString`</ph> propriété de l’objet retourné par la <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.ToString">
          <source>The following code example displays the value of the current <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant affiche la valeur de la <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.Value">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if it has been assigned a valid underlying value.</source>
          <target state="translated">Obtient la valeur de l'objet <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel si une valeur sous-jacente valide lui a été assignée.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Valeur de l'objet <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> actuel si la propriété <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> est <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>An exception is thrown if the <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Une exception est levée si la propriété <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> est <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>If a value of type <ph id="ph1">`T`</ph> has not been assigned to the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object, you can compare it to <ph id="ph3">`null`</ph> and retrieve its <ph id="ph4">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property, but you cannot access its <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or call its other members.</source>
          <target state="translated">Si une valeur de type <ph id="ph1">`T`</ph> n’a pas été affecté à la <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> de l’objet, vous pouvez comparer à <ph id="ph3">`null`</ph> et récupérer ses <ph id="ph4">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété, mais vous ne pouvez pas accéder à ses <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété ou l’appel de ses autres membres.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of a <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> object to determine whether it should display the object's <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or its <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> propriété d’un <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> objet afin de déterminer s’il doit afficher l’objet <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> propriété ou son <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>