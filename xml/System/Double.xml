<Type Name="Double" FullName="System.Double">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c15da40cd4c6f9918c0ee1953e5b3d059b86e2bb" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34255139" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Double : IComparable, IComparable&lt;double&gt;, IConvertible, IEquatable&lt;double&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit float64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;float64&gt;, class System.IConvertible, class System.IEquatable`1&lt;float64&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Double" />
  <TypeSignature Language="VB.NET" Value="Public Structure Double&#xA;Implements IComparable, IComparable(Of Double), IConvertible, IEquatable(Of Double), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Double : IComparable, IComparable&lt;double&gt;, IConvertible, IEquatable&lt;double&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Double&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Double&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4c931-101">Représente un nombre à virgule flottante double précision.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c931-101">Represents a double-precision floating-point number.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-102">Le <xref:System.Double> type de valeur représente un nombre de 64 bits double précision avec des valeurs comprises entre moins 1, 79769313486232E308 et plus 1, 79769313486232E308, ainsi que le zéro positif ou négatif, <xref:System.Double.PositiveInfinity>, <xref:System.Double.NegativeInfinity>et pas un nombre (<xref:System.Double.NaN>).</span><span class="sxs-lookup"><span data-stu-id="4c931-102">The <xref:System.Double> value type represents a double-precision 64-bit number with values ranging from negative 1.79769313486232e308 to positive 1.79769313486232e308, as well as positive or negative zero, <xref:System.Double.PositiveInfinity>, <xref:System.Double.NegativeInfinity>, and not a number (<xref:System.Double.NaN>).</span></span> <span data-ttu-id="4c931-103">Il est destiné à représenter des valeurs que sont extrêmement volumineux (par exemple, les distances entre les planètes ou galaxies) ou très petite (masse moléculaire de substance dans kg) et qui sont souvent imprécises (par exemple la distance à partir de la terre à un autre système solaire), le <xref:System.Double> type est conforme à la IEC 60559 : 1989 (IEEE 754) standard pour les opérateurs d’arithmétique binaire à virgule flottante.</span><span class="sxs-lookup"><span data-stu-id="4c931-103">It is intended to represent values that are extremely large (such as distances between planets or galaxies) or extremely small (the molecular mass of a substance in kilograms) and that often are imprecise (such as the distance from earth to another solar system), The <xref:System.Double> type complies with the IEC 60559:1989 (IEEE 754) standard for binary floating-point arithmetic.</span></span>  
  
 <span data-ttu-id="4c931-104">Cette rubrique contient les sections suivantes :</span><span class="sxs-lookup"><span data-stu-id="4c931-104">This topic consists of the following sections:</span></span>  
  
-   [<span data-ttu-id="4c931-105">Précision et une représentation à virgule flottante</span><span class="sxs-lookup"><span data-stu-id="4c931-105">Floating-point representation and precision</span></span>](#Precision)  
  
-   [<span data-ttu-id="4c931-106">Test d’égalité</span><span class="sxs-lookup"><span data-stu-id="4c931-106">Testing for equality</span></span>](#Equality)  
  
-   [<span data-ttu-id="4c931-107">Exceptions et les valeurs à virgule flottante</span><span class="sxs-lookup"><span data-stu-id="4c931-107">Floating-point values and exceptions</span></span>](#Exceptions)  
  
-   [<span data-ttu-id="4c931-108">Conversions de type et la structure Double</span><span class="sxs-lookup"><span data-stu-id="4c931-108">Type conversions and the Double structure</span></span>](#Conversions)  
  
-   [<span data-ttu-id="4c931-109">Fonctionnalité à virgule flottante</span><span class="sxs-lookup"><span data-stu-id="4c931-109">Floating-point functionality</span></span>](#Functionality)  
  
<a name="Precision"></a>   
## <a name="floating-point-representation-and-precision"></a><span data-ttu-id="4c931-110">Précision et une représentation à virgule flottante</span><span class="sxs-lookup"><span data-stu-id="4c931-110">Floating-Point Representation and Precision</span></span>  
 <span data-ttu-id="4c931-111">Le <xref:System.Double> type de données stocke les valeurs à virgule flottante double précision dans un format binaire 64 bits, comme indiqué dans le tableau suivant :</span><span class="sxs-lookup"><span data-stu-id="4c931-111">The <xref:System.Double> data type stores double-precision floating-point values in a 64-bit binary format, as shown in the following table:</span></span>  
  
|<span data-ttu-id="4c931-112">Élément</span><span class="sxs-lookup"><span data-stu-id="4c931-112">Part</span></span>|<span data-ttu-id="4c931-113">Bits</span><span class="sxs-lookup"><span data-stu-id="4c931-113">Bits</span></span>|  
|----------|----------|  
|<span data-ttu-id="4c931-114">Mantisse ou mantisse</span><span class="sxs-lookup"><span data-stu-id="4c931-114">Significand or mantissa</span></span>|<span data-ttu-id="4c931-115">0-51</span><span class="sxs-lookup"><span data-stu-id="4c931-115">0-51</span></span>|  
|<span data-ttu-id="4c931-116">Exposant</span><span class="sxs-lookup"><span data-stu-id="4c931-116">Exponent</span></span>|<span data-ttu-id="4c931-117">52-62</span><span class="sxs-lookup"><span data-stu-id="4c931-117">52-62</span></span>|  
|<span data-ttu-id="4c931-118">Signe (0 = positifs, 1 = négatif)</span><span class="sxs-lookup"><span data-stu-id="4c931-118">Sign (0 = Positive, 1 = Negative)</span></span>|<span data-ttu-id="4c931-119">63</span><span class="sxs-lookup"><span data-stu-id="4c931-119">63</span></span>|  
  
 <span data-ttu-id="4c931-120">Tout comme les fractions décimales sont ne peut pas représenter précisément de certaines valeurs fractionnaires (tels que 1/3 ou <xref:System.Math.PI?displayProperty=nameWithType>), fractions binaires ne peuvent pas représenter des valeurs fractionnaires.</span><span class="sxs-lookup"><span data-stu-id="4c931-120">Just as decimal fractions are unable to precisely represent some fractional values (such as 1/3 or <xref:System.Math.PI?displayProperty=nameWithType>), binary fractions are unable to represent some fractional values.</span></span> <span data-ttu-id="4c931-121">Par exemple, 1/10, qui est représentée avec précision par.1 comme une fraction décimale, est représenté par.001100110011 sous forme de fraction binaire, avec le modèle « 0011 » extensible à l’infini.</span><span class="sxs-lookup"><span data-stu-id="4c931-121">For example, 1/10, which is represented precisely by .1 as a decimal fraction, is represented by .001100110011 as a binary fraction, with the pattern "0011" repeating to infinity.</span></span> <span data-ttu-id="4c931-122">Dans ce cas, la valeur à virgule flottante fournit une représentation imprécise du nombre qu’il représente.</span><span class="sxs-lookup"><span data-stu-id="4c931-122">In this case, the floating-point value provides an imprecise representation of the number that it represents.</span></span> <span data-ttu-id="4c931-123">Exécution souvent d’autres opérations mathématiques sur la valeur à virgule flottante d’origine a tendance à augmenter son manque de précision.</span><span class="sxs-lookup"><span data-stu-id="4c931-123">Performing additional mathematical operations on the original floating-point value often tends to increase its lack of precision.</span></span> <span data-ttu-id="4c931-124">Par exemple, si nous comparer le résultat de la multiplication.1 par 10 et ajout de.1 à.1 neuf fois, nous voir cet ajout, car il a impliqué huit davantage d’opérations, a a produit le résultat moins précis.</span><span class="sxs-lookup"><span data-stu-id="4c931-124">For example, if we compare the result of multiplying .1 by 10 and adding .1 to .1 nine times, we see that addition, because it has involved eight more operations, has produced the less precise result.</span></span> <span data-ttu-id="4c931-125">Notez que cette disparité est visible uniquement si les deux, nous affichons <xref:System.Double> valeurs à l’aide de « R » [chaîne de format numérique standard](~/docs/standard/base-types/standard-numeric-format-strings.md), qui si nécessaire affiche toutes les 17 chiffres de précision pris en charge par le <xref:System.Double> type.</span><span class="sxs-lookup"><span data-stu-id="4c931-125">Note that this disparity is apparent only if we display the two <xref:System.Double> values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md), which if necessary displays all 17 digits of precision supported by the <xref:System.Double> type.</span></span>  
  
 [!code-csharp[System.Double.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/representation1.cs#3)]
 [!code-vb[System.Double.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/representation1.vb#3)]  
  
 <span data-ttu-id="4c931-126">Étant donné que des nombres ne peut pas être représentés exactement comme des valeurs binaires fractions de seconde, des nombres à virgule flottante peuvent uniquement des nombres réels approximatives.</span><span class="sxs-lookup"><span data-stu-id="4c931-126">Because some numbers cannot be represented exactly as fractional binary values, floating-point numbers can only approximate real numbers.</span></span>  
  
 <span data-ttu-id="4c931-127">Tous les nombres à virgule flottante ont également un nombre limité de chiffres significatifs, qui détermine également la façon dont une valeur à virgule flottante s’apparentent précisément un nombre réel.</span><span class="sxs-lookup"><span data-stu-id="4c931-127">All floating-point numbers also have a limited number of significant digits, which also determines how accurately a floating-point value approximates a real number.</span></span>   <span data-ttu-id="4c931-128">A <xref:System.Double> valeur a 15 chiffres décimaux de précision, bien qu’un maximum de 17 chiffres soit conservé en interne.</span><span class="sxs-lookup"><span data-stu-id="4c931-128">A <xref:System.Double> value has up to 15 decimal digits of precision, although a maximum of 17 digits is maintained internally.</span></span> <span data-ttu-id="4c931-129">Cela signifie que certaines opérations à virgule flottante n’ont peut-être pas la précision pour modifier une variable la valeur de points.</span><span class="sxs-lookup"><span data-stu-id="4c931-129">This means that some floating-point operations may lack the precision to change a floating point value.</span></span> <span data-ttu-id="4c931-130">L'exemple suivant illustre cette situation.</span><span class="sxs-lookup"><span data-stu-id="4c931-130">The following example provides an illustration.</span></span> <span data-ttu-id="4c931-131">Il définit une valeur à virgule flottante très volumineuse, puis ajoute le produit de <xref:System.Double.Epsilon?displayProperty=nameWithType> et quadrillion d’un à celui-ci.</span><span class="sxs-lookup"><span data-stu-id="4c931-131">It defines a very large floating-point value, and then adds the product of <xref:System.Double.Epsilon?displayProperty=nameWithType> and one quadrillion to it.</span></span> <span data-ttu-id="4c931-132">Toutefois, le produit est trop petit pour modifier la valeur à virgule flottante d’origine.</span><span class="sxs-lookup"><span data-stu-id="4c931-132">The product, however, is too small to modify the original floating-point value.</span></span> <span data-ttu-id="4c931-133">Son chiffre le moins significatif est millièmes, tandis que le chiffre le plus significatif dans le produit est 1<sup>valeur -312</sup>.</span><span class="sxs-lookup"><span data-stu-id="4c931-133">Its least significant digit is thousandths, whereas the most significant digit in the product is 1<sup>-312</sup>.</span></span>  
  
 [!code-csharp[System.Double.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/representation2.cs#4)]
 [!code-vb[System.Double.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/representation2.vb#4)]  
  
 <span data-ttu-id="4c931-134">La précision limitée d’un nombre à virgule flottante a plusieurs conséquences :</span><span class="sxs-lookup"><span data-stu-id="4c931-134">The limited precision of a floating-point number has several consequences:</span></span>  
  
-   <span data-ttu-id="4c931-135">Deux nombres à virgule flottante qui apparaissent égaux pour une précision particulière ne peuvent pas considérés comme égaux parce que leurs chiffres les moins significatifs sont différents.</span><span class="sxs-lookup"><span data-stu-id="4c931-135">Two floating-point numbers that appear equal for a particular precision might not compare equal because their least significant digits are different.</span></span> <span data-ttu-id="4c931-136">Dans l’exemple suivant, une série de nombres sont additionnés et leur total est comparé à leur total attendu.</span><span class="sxs-lookup"><span data-stu-id="4c931-136">In the following example, a series of numbers are added together, and their total is compared with their expected total.</span></span> <span data-ttu-id="4c931-137">Bien que les deux valeurs semblent être identiques, un appel à la `Equals` méthode indique qu’ils ne sont pas.</span><span class="sxs-lookup"><span data-stu-id="4c931-137">Although the two values appear to be the same, a call to the `Equals` method indicates that they are not.</span></span>  
  
     [!code-csharp[System.Double.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist3.cs#6)]
     [!code-vb[System.Double.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist3.vb#6)]  
  
     <span data-ttu-id="4c931-138">Si vous modifiez les éléments de format dans le <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType> instruction à partir de `{0}` et `{1}` à `{0:R}` et `{1:R}` pour afficher tous les chiffres significatifs des deux <xref:System.Double> valeurs, il est clair que les deux valeurs sont inégales, car d’une perte de précision pendant les opérations d’addition.</span><span class="sxs-lookup"><span data-stu-id="4c931-138">If you change the format items in the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType> statement from `{0}` and `{1}` to `{0:R}` and `{1:R}` to display all significant digits of the two <xref:System.Double> values, it is clear that the two values are unequal because of a loss of precision during the addition operations.</span></span> <span data-ttu-id="4c931-139">Dans ce cas, le problème peut être résolu en appelant le <xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType> méthode pour arrondir le <xref:System.Double> valeurs à la précision souhaitée avant d’effectuer la comparaison.</span><span class="sxs-lookup"><span data-stu-id="4c931-139">In this case, the issue can be resolved by calling the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType> method to round the <xref:System.Double> values to the desired precision before performing the comparison.</span></span>  
  
-   <span data-ttu-id="4c931-140">Une opération mathématique ou de comparaison qui utilise un nombre à virgule flottante peut ne pas donne le même résultat si un nombre décimal est utilisé, car le nombre à virgule flottante binaire ne peut pas égal au nombre décimal.</span><span class="sxs-lookup"><span data-stu-id="4c931-140">A mathematical or comparison operation that uses a floating-point number might not yield the same result if a decimal number is used, because the binary floating-point number might not equal the decimal number.</span></span> <span data-ttu-id="4c931-141">Un exemple précédent illustré cela en affichant le résultat de la multiplication.1 par 10 et ajoutant.1 fois.</span><span class="sxs-lookup"><span data-stu-id="4c931-141">A previous example illustrated this by displaying the result of multiplying .1 by 10 and adding .1 times.</span></span>  
  
     <span data-ttu-id="4c931-142">Lorsque la précision dans les opérations numériques avec les valeurs fractionnaires est importante, vous pouvez utiliser la <xref:System.Decimal> plutôt que <xref:System.Double> type.</span><span class="sxs-lookup"><span data-stu-id="4c931-142">When accuracy in numeric operations with fractional values is important, you can use the <xref:System.Decimal> rather than the <xref:System.Double> type.</span></span> <span data-ttu-id="4c931-143">Lors de la précision dans les opérations numériques avec des valeurs intégrales au-delà de la plage de la <xref:System.Int64> ou <xref:System.UInt64> types est important, utilisez le <xref:System.Numerics.BigInteger> type.</span><span class="sxs-lookup"><span data-stu-id="4c931-143">When accuracy in numeric operations with integral values beyond the range of the <xref:System.Int64> or <xref:System.UInt64> types is important, use the <xref:System.Numerics.BigInteger> type.</span></span>  
  
-   <span data-ttu-id="4c931-144">Une valeur ne peut pas effectuer un aller-retour si un nombre à virgule flottante est impliqué.</span><span class="sxs-lookup"><span data-stu-id="4c931-144">A value might not round-trip if a floating-point number is involved.</span></span> <span data-ttu-id="4c931-145">Une valeur est dite d’aller-retour si une opération convertit un nombre à virgule flottante d’origine dans un autre format, l’opération inverse retransforme la forme convertie en nombre à virgule flottante et le nombre à virgule flottante final n’est pas égal à celle d’origine nombre à virgule flottante.</span><span class="sxs-lookup"><span data-stu-id="4c931-145">A value is said to round-trip if an operation converts an original floating-point number to another form, an inverse operation transforms the converted form back to a floating-point number, and the final floating-point number is not equal to the original floating-point number.</span></span> <span data-ttu-id="4c931-146">L’aller-retour peut échouer, car un ou plusieurs chiffres les moins significatifs sont perdus ou ont changé dans une conversion.</span><span class="sxs-lookup"><span data-stu-id="4c931-146">The round trip might fail because one or more least significant digits are lost or changed in a conversion.</span></span> <span data-ttu-id="4c931-147">Dans l’exemple suivant, trois <xref:System.Double> valeurs sont converties en chaînes et enregistrés dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="4c931-147">In the following example, three <xref:System.Double> values are converted to strings and saved in a file.</span></span> <span data-ttu-id="4c931-148">Comme le montre la sortie, cependant, même si les valeurs semblent être identiques, les valeurs restaurées ne sont pas égales aux valeurs d’origine.</span><span class="sxs-lookup"><span data-stu-id="4c931-148">As the output shows, however, even though the values appear to be identical, the restored values are not equal to the original values.</span></span>  
  
     [!code-csharp[System.Double.Structure#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist4.cs#7)]
     [!code-vb[System.Double.Structure#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist4.vb#7)]  
  
     <span data-ttu-id="4c931-149">Dans ce cas, les valeurs peuvent être le correctement un aller-retour à l’aide de la « G17 » [chaîne de format numérique standard](~/docs/standard/base-types/standard-numeric-format-strings.md) pour conserver la précision de <xref:System.Double> valeurs, comme le montre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="4c931-149">In this case, the values can be successfully round-tripped by using the "G17" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to preserve the full precision of <xref:System.Double> values, as the following example shows.</span></span>  
  
     [!code-csharp[System.Double.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist5.cs#8)]
     [!code-vb[System.Double.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist5.vb#8)]  

   > [!IMPORTANT]
   >  <span data-ttu-id="4c931-150">Lorsqu’il est utilisé avec un <xref:System.Double> valeur, le spécificateur de format « R » dans certains cas ne parvient pas à un aller-retour de la valeur d’origine.</span><span class="sxs-lookup"><span data-stu-id="4c931-150">When used with a <xref:System.Double> value, the "R" format specifier in some cases fails to successfully round-trip the original value.</span></span> <span data-ttu-id="4c931-151">Pour vous assurer que <xref:System.Double> valeurs aller-retour, utiliser le spécificateur de format « G17 ».</span><span class="sxs-lookup"><span data-stu-id="4c931-151">To ensure that <xref:System.Double> values successfully round-trip, use the "G17" format specifier.</span></span>

-   <span data-ttu-id="4c931-152"><xref:System.Single> les valeurs ont moins de précision que <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-152"><xref:System.Single> values have less precision than <xref:System.Double> values.</span></span> <span data-ttu-id="4c931-153">A <xref:System.Single> valeur est convertie en un équivalent apparemment <xref:System.Double> souvent n’est pas égale la <xref:System.Double> valeur en raison de différences de précision.</span><span class="sxs-lookup"><span data-stu-id="4c931-153">A <xref:System.Single> value that is converted to a seemingly equivalent <xref:System.Double> often does not equal the <xref:System.Double> value because of differences in precision.</span></span> <span data-ttu-id="4c931-154">Dans l’exemple suivant, le résultat des opérations de division identique est assigné à un <xref:System.Double> et un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4c931-154">In the following example, the result of identical division operations is assigned to a <xref:System.Double> and a <xref:System.Single> value.</span></span> <span data-ttu-id="4c931-155">Après le <xref:System.Single> valeur est effectuée en une <xref:System.Double>, une comparaison des deux valeurs indique qu’elles sont inégales.</span><span class="sxs-lookup"><span data-stu-id="4c931-155">After the <xref:System.Single> value is cast to a <xref:System.Double>, a comparison of the two values shows that they are unequal.</span></span>  
  
     [!code-csharp[System.Double.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist1.cs#5)]
     [!code-vb[System.Double.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist1.vb#5)]  
  
     <span data-ttu-id="4c931-156">Pour éviter ce problème, utilisez le <xref:System.Double> à la place de la <xref:System.Single> type de données, ou utilisez le <xref:System.Math.Round%2A> (méthode) afin que les deux valeurs ont la même précision.</span><span class="sxs-lookup"><span data-stu-id="4c931-156">To avoid this problem, use either the <xref:System.Double> in place of the <xref:System.Single> data type, or use the <xref:System.Math.Round%2A> method so that both values have the same precision.</span></span>  
  
 <span data-ttu-id="4c931-157">En outre, le résultat des opérations arithmétiques et d’assignation avec <xref:System.Double> valeurs peuvent différer légèrement selon la plateforme en raison de la perte de précision de la <xref:System.Double> type.</span><span class="sxs-lookup"><span data-stu-id="4c931-157">In addition, the result of arithmetic and assignment operations with <xref:System.Double> values may differ slightly by platform because of the loss of precision of the <xref:System.Double> type.</span></span> <span data-ttu-id="4c931-158">Par exemple, le résultat de l’affectation d’un littéral <xref:System.Double> valeur peut être différente dans les versions 32 bits et 64 bits de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4c931-158">For example, the result of assigning a literal <xref:System.Double> value may differ in the 32-bit and 64-bit versions of the .NET Framework.</span></span> <span data-ttu-id="4c931-159">L’exemple suivant illustre cette différence lorsque le littéral valeur - 4.42330604244772E-305 et une variable dont la valeur est - 4.42330604244772E-305 sont assignées à un <xref:System.Double> variable.</span><span class="sxs-lookup"><span data-stu-id="4c931-159">The following example illustrates this difference when the literal value -4.42330604244772E-305 and a variable whose value is -4.42330604244772E-305 are assigned to a <xref:System.Double> variable.</span></span> <span data-ttu-id="4c931-160">Notez que le résultat de la <xref:System.Double.Parse%28System.String%29> méthode dans ce cas ne sont pas affectées à partir d’une perte de précision.</span><span class="sxs-lookup"><span data-stu-id="4c931-160">Note that the result of the <xref:System.Double.Parse%28System.String%29> method in this case does not suffer from a loss of precision.</span></span>  
  
 [!code-csharp[System.Double.Class.Precision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.class.precision/cs/precision1.cs#1)]
 [!code-vb[System.Double.Class.Precision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.class.precision/vb/precision1.vb#1)]  
  
<a name="Equality"></a>   
## <a name="testing-for-equality"></a><span data-ttu-id="4c931-161">Test d’égalité</span><span class="sxs-lookup"><span data-stu-id="4c931-161">Testing for Equality</span></span>  
 <span data-ttu-id="4c931-162">Pour être considérées comme égales, deux <xref:System.Double> valeurs doivent représenter des valeurs identiques.</span><span class="sxs-lookup"><span data-stu-id="4c931-162">To be considered equal, two <xref:System.Double> values must represent identical values.</span></span> <span data-ttu-id="4c931-163">Toutefois, en raison de différences de précision entre les valeurs, ou en raison d’une perte de précision par une ou deux valeurs, les valeurs à virgule flottante qui doivent être identiques souvent activer accentuées en raison de différences dans leurs chiffres les moins significatifs.</span><span class="sxs-lookup"><span data-stu-id="4c931-163">However, because of differences in precision between values, or because of a loss of precision by one or both values, floating-point values that are expected to be identical often turn out to be unequal because of differences in their least significant digits.</span></span> <span data-ttu-id="4c931-164">Par conséquent, les appels à la <xref:System.Double.Equals%2A> méthode pour déterminer si deux valeurs sont égales ou les appels à la <xref:System.Double.CompareTo%2A> méthode pour déterminer la relation entre deux <xref:System.Double> valeurs, souvent provoquer des résultats inattendus.</span><span class="sxs-lookup"><span data-stu-id="4c931-164">As a result, calls to the <xref:System.Double.Equals%2A> method to determine whether two values are equal, or calls to the <xref:System.Double.CompareTo%2A> method to determine the relationship between two <xref:System.Double> values, often yield unexpected results.</span></span> <span data-ttu-id="4c931-165">Ceci est évident dans l’exemple suivant, où deux égal apparemment <xref:System.Double> valeurs semblent pour être inégaux, car le premier a 15 chiffres de précision, alors que la seconde a 17.</span><span class="sxs-lookup"><span data-stu-id="4c931-165">This is evident in the following example, where two apparently equal <xref:System.Double> values turn out to be unequal because the first has 15 digits of precision, while the second has 17.</span></span>  
  
 [!code-csharp[System.Double.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/comparison1.cs#9)]
 [!code-vb[System.Double.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/comparison1.vb#9)]  
  
 <span data-ttu-id="4c931-166">Les valeurs calculées qui suivent des chemins de code différents, et qui sont manipulés de différentes façons, souvent s’avérer inégaux.</span><span class="sxs-lookup"><span data-stu-id="4c931-166">Calculated values that follow different code paths and that are manipulated in different ways often prove to be unequal.</span></span> <span data-ttu-id="4c931-167">Dans l’exemple suivant, un <xref:System.Double> carrée de la valeur, puis la racine carrée est calculée pour restaurer la valeur d’origine.</span><span class="sxs-lookup"><span data-stu-id="4c931-167">In the following example, one <xref:System.Double> value is squared, and then the square root is calculated to restore the original value.</span></span> <span data-ttu-id="4c931-168">Une seconde <xref:System.Double> est multipliée par 3.51 et carré avant la racine carrée du résultat est divisée par 3.51 pour restaurer la valeur d’origine.</span><span class="sxs-lookup"><span data-stu-id="4c931-168">A second <xref:System.Double> is multiplied by 3.51 and squared before the square root of the result is divided by 3.51 to restore the original value.</span></span> <span data-ttu-id="4c931-169">Bien que les deux valeurs semblent identiques, un appel à la <xref:System.Double.Equals%28System.Double%29> méthode indique qu’ils ne sont pas égaux.</span><span class="sxs-lookup"><span data-stu-id="4c931-169">Although the two values appear to be identical, a call to the <xref:System.Double.Equals%28System.Double%29> method indicates that they are not equal.</span></span> <span data-ttu-id="4c931-170">Pour retourner une chaîne de résultat qui affiche tous les chiffres significatifs de chaque valeur Double à l’aide de la chaîne de format standard « R » indique que la deuxième valeur est.0000000000001 inférieure à la première.</span><span class="sxs-lookup"><span data-stu-id="4c931-170">Using the "R" standard format string to return a result string that displays all the significant digits of each Double value shows that the second value is .0000000000001 less than the first.</span></span>  
  
 [!code-csharp[System.Double.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/comparison2.cs#10)]
 [!code-vb[System.Double.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/comparison2.vb#10)]  
  
 <span data-ttu-id="4c931-171">Dans les cas où une perte de précision est susceptible d’affecter le résultat d’une comparaison, vous pouvez adopter une des méthodes suivantes pour appeler le <xref:System.Double.Equals%2A> ou <xref:System.Double.CompareTo%2A> méthode :</span><span class="sxs-lookup"><span data-stu-id="4c931-171">In cases where a loss of precision is likely to affect the result of a comparison, you can adopt any of the following alternatives to calling the <xref:System.Double.Equals%2A> or <xref:System.Double.CompareTo%2A> method:</span></span>  
  
-   <span data-ttu-id="4c931-172">Appelez le <xref:System.Math.Round%2A?displayProperty=nameWithType> pour s’assurer que les deux valeurs ont la même précision.</span><span class="sxs-lookup"><span data-stu-id="4c931-172">Call the <xref:System.Math.Round%2A?displayProperty=nameWithType> method to ensure that both values have the same precision.</span></span> <span data-ttu-id="4c931-173">L’exemple suivant modifie un exemple précédent pour utiliser cette approche afin que les deux valeurs fractionnaires sont équivalents.</span><span class="sxs-lookup"><span data-stu-id="4c931-173">The following example modifies a previous example to use this approach so that two fractional values are equivalent.</span></span>  
  
     [!code-csharp[System.Double.Structure#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/comparison3.cs#11)]
     [!code-vb[System.Double.Structure#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/comparison3.vb#11)]  
  
     <span data-ttu-id="4c931-174">Notez, cependant, que le problème de précision s’applique toujours à l’arrondi des valeurs du milieu.</span><span class="sxs-lookup"><span data-stu-id="4c931-174">Note, though, that the problem of precision still applies to rounding of midpoint values.</span></span> <span data-ttu-id="4c931-175">Pour plus d'informations, voir la méthode <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4c931-175">For more information, see the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="4c931-176">Test d’égalité approximative plutôt que d’égalité.</span><span class="sxs-lookup"><span data-stu-id="4c931-176">Test for approximate equality rather than equality.</span></span> <span data-ttu-id="4c931-177">Cela nécessite que vous définissez soit absolu montant par lequel les deux valeurs peuvent différer mais toujours être égal ou que vous définissez une quantité relative par lequel la plus petite valeur peut différer de la plus grande valeur.</span><span class="sxs-lookup"><span data-stu-id="4c931-177">This requires that you define either an absolute amount by which the two values can differ but still be equal, or that you define a relative amount by which the smaller value can diverge from the larger value.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="4c931-178"><xref:System.Double.Epsilon?displayProperty=nameWithType> est parfois utilisé en tant qu’une mesure absolue de la distance entre deux <xref:System.Double> lors du test d’égalité des valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-178"><xref:System.Double.Epsilon?displayProperty=nameWithType> is sometimes used as an absolute measure of the distance between two <xref:System.Double> values when testing for equality.</span></span>  <span data-ttu-id="4c931-179">Toutefois, <xref:System.Double.Epsilon?displayProperty=nameWithType> mesure la plus petite valeur possible qui peut être ajoutée à ou soustrait de, un <xref:System.Double> dont la valeur est égale à zéro.</span><span class="sxs-lookup"><span data-stu-id="4c931-179">However, <xref:System.Double.Epsilon?displayProperty=nameWithType> measures the smallest possible value that can be added to, or subtracted from, a <xref:System.Double> whose value is zero.</span></span> <span data-ttu-id="4c931-180">Pour la plupart des nombres positifs et négatifs <xref:System.Double> valeurs, la valeur de <xref:System.Double.Epsilon?displayProperty=nameWithType> est trop petite pour être détecté.</span><span class="sxs-lookup"><span data-stu-id="4c931-180">For most positive and negative <xref:System.Double> values, the value of <xref:System.Double.Epsilon?displayProperty=nameWithType> is too small to be detected.</span></span> <span data-ttu-id="4c931-181">Par conséquent, à l’exception des valeurs qui sont égales à zéro, nous déconseillons son utilisation dans les tests d’égalité.</span><span class="sxs-lookup"><span data-stu-id="4c931-181">Therefore, except for values that are zero, we do not recommend its use in tests for equality.</span></span>  
  
     <span data-ttu-id="4c931-182">L’exemple suivant utilise cette dernière approche pour définir un `IsApproximatelyEqual` méthode qui teste la différence relative entre deux valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-182">The following example uses the latter approach to define an `IsApproximatelyEqual` method that tests the relative difference between two values.</span></span> <span data-ttu-id="4c931-183">Il compare également le résultat d’appels à la `IsApproximatelyEqual` (méthode) et le <xref:System.Double.Equals%28System.Double%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-183">It also contrasts the result of calls to the `IsApproximatelyEqual` method and the <xref:System.Double.Equals%28System.Double%29> method.</span></span>  
  
     [!code-csharp[System.Double.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/comparison4.cs#12)]
     [!code-vb[System.Double.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/comparison4.vb#12)]  
  
<a name="Exceptions"></a>   
## <a name="floating-point-values-and-exceptions"></a><span data-ttu-id="4c931-184">Exceptions et les valeurs à virgule flottante</span><span class="sxs-lookup"><span data-stu-id="4c931-184">Floating-Point Values and Exceptions</span></span>  
 <span data-ttu-id="4c931-185">Contrairement aux opérations avec les types intégraux, ce qui permet de lever des exceptions en cas de dépassement de capacité ou des opérations illégales telles que la division par zéro, les opérations avec des valeurs à virgule flottante ne lèvent pas d’exceptions.</span><span class="sxs-lookup"><span data-stu-id="4c931-185">Unlike operations with integral types, which throw exceptions in cases of overflow or illegal operations such as division by zero, operations with floating-point values do not throw exceptions.</span></span> <span data-ttu-id="4c931-186">Au lieu de cela, dans des cas exceptionnels, le résultat d’une opération à virgule flottante est zéro, l’infini positif, l’infini négatif ou une valeur non numérique (NaN) :</span><span class="sxs-lookup"><span data-stu-id="4c931-186">Instead, in exceptional situations, the result of a floating-point operation is zero, positive infinity, negative infinity, or not a number (NaN):</span></span>  
  
-   <span data-ttu-id="4c931-187">Si le résultat d’une opération à virgule flottante est trop petit pour le format de destination, le résultat est zéro.</span><span class="sxs-lookup"><span data-stu-id="4c931-187">If the result of a floating-point operation is too small for the destination format, the result is zero.</span></span> <span data-ttu-id="4c931-188">Cela peut se produire lorsque deux nombres très petits sont multipliés, comme le montre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="4c931-188">This can occur when two very small numbers are multiplied, as the following example shows.</span></span>  
  
     [!code-csharp[System.Double.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/exceptional1.cs#1)]
     [!code-vb[System.Double.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/exceptional1.vb#1)]  
  
-   <span data-ttu-id="4c931-189">Si la grandeur du résultat d’une opération à virgule flottante dépasse la plage du format de destination, le résultat de l’opération est <xref:System.Double.PositiveInfinity> ou <xref:System.Double.NegativeInfinity>, selon le cas pour le signe du résultat.</span><span class="sxs-lookup"><span data-stu-id="4c931-189">If the magnitude of the result of a floating-point operation exceeds the range of the destination format, the result of the operation is <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity>, as appropriate for the sign of the result.</span></span> <span data-ttu-id="4c931-190">Le résultat d’une opération qui déborde <xref:System.Double.MaxValue?displayProperty=nameWithType> est <xref:System.Double.PositiveInfinity>et le résultat d’une opération qui déborde <xref:System.Double.MinValue?displayProperty=nameWithType> est <xref:System.Double.NegativeInfinity>, comme le montre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="4c931-190">The result of an operation that overflows <xref:System.Double.MaxValue?displayProperty=nameWithType> is <xref:System.Double.PositiveInfinity>, and the result of an operation that overflows <xref:System.Double.MinValue?displayProperty=nameWithType> is <xref:System.Double.NegativeInfinity>, as the following example shows.</span></span>  
  
     [!code-csharp[System.Double.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/exceptional2.cs#2)]
     [!code-vb[System.Double.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/exceptional2.vb#2)]  
  
     <span data-ttu-id="4c931-191"><xref:System.Double.PositiveInfinity> également des résultats à partir d’une division par zéro avec un dividende positif, et <xref:System.Double.NegativeInfinity> résultant d’une division par zéro avec un dividende négatif.</span><span class="sxs-lookup"><span data-stu-id="4c931-191"><xref:System.Double.PositiveInfinity> also results from a division by zero with a positive dividend, and <xref:System.Double.NegativeInfinity> results from a division by zero with a negative dividend.</span></span>  
  
-   <span data-ttu-id="4c931-192">Si une opération en virgule flottante n’est pas valide, le résultat de l’opération est <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="4c931-192">If a floating-point operation is invalid, the result of the operation is <xref:System.Double.NaN>.</span></span> <span data-ttu-id="4c931-193">Par exemple, <xref:System.Double.NaN> des résultats des opérations suivantes :</span><span class="sxs-lookup"><span data-stu-id="4c931-193">For example, <xref:System.Double.NaN> results from the following operations:</span></span>  
  
    -   <span data-ttu-id="4c931-194">Division par zéro avec un dividende égale à zéro.</span><span class="sxs-lookup"><span data-stu-id="4c931-194">Division by zero with a dividend of zero.</span></span> <span data-ttu-id="4c931-195">Notez que les autres cas de division par zéro résultat, que ce soit <xref:System.Double.PositiveInfinity> ou <xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="4c931-195">Note that other cases of division by zero result in either <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity>.</span></span>  
  
-   <span data-ttu-id="4c931-196">Toute opération à virgule flottante avec une entrée non valide.</span><span class="sxs-lookup"><span data-stu-id="4c931-196">Any floating-point operation with an invalid input.</span></span> <span data-ttu-id="4c931-197">Par exemple, l’appel du <xref:System.Math.Sqrt%2A?displayProperty=nameWithType> méthode avec une valeur négative est retournée <xref:System.Double.NaN>, comme le fait d’appeler le <xref:System.Math.Acos%2A?displayProperty=nameWithType> méthode avec une valeur supérieure à 1 ou inférieure à 1 négatif.</span><span class="sxs-lookup"><span data-stu-id="4c931-197">For example, calling the <xref:System.Math.Sqrt%2A?displayProperty=nameWithType> method with a negative value returns <xref:System.Double.NaN>, as does calling the <xref:System.Math.Acos%2A?displayProperty=nameWithType> method with a value that is greater than one or less than negative one.</span></span>  
  
-   <span data-ttu-id="4c931-198">Toute opération avec un argument dont la valeur est <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4c931-198">Any operation with an argument whose value is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
<a name="Conversions"></a>   
## <a name="type-conversions-and-the-double-structure"></a><span data-ttu-id="4c931-199">Conversions de type et la structure Double</span><span class="sxs-lookup"><span data-stu-id="4c931-199">Type conversions and the Double structure</span></span>  
 <span data-ttu-id="4c931-200">Le <xref:System.Double> structure ne définit pas de tous les opérateurs de conversion explicite ou implicite ; au lieu de cela, les conversions sont implémentées par le compilateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-200">The <xref:System.Double> structure does not define any explicit or implicit conversion operators; instead, conversions are implemented by the compiler.</span></span>  
  
 <span data-ttu-id="4c931-201">La conversion de la valeur de tout type numérique primitif à un <xref:System.Double> est une conversion étendue et par conséquent, ne requiert pas un opérateur de conversion explicite ou appel à une méthode de conversion, sauf si un compilateur exige explicitement.</span><span class="sxs-lookup"><span data-stu-id="4c931-201">The conversion of the value of any primitive numeric type to a <xref:System.Double> is a widening conversion and therefore does not require an explicit cast operator or call to a conversion method unless a compiler explicitly requires it.</span></span> <span data-ttu-id="4c931-202">Par exemple, le compilateur c# nécessite un opérateur de cast pour les conversions entre <xref:System.Decimal> à <xref:System.Double>, tandis que le compilateur Visual Basic n’est pas.</span><span class="sxs-lookup"><span data-stu-id="4c931-202">For example, the C# compiler requires a casting operator for conversions from <xref:System.Decimal> to <xref:System.Double>, while the Visual Basic compiler does not.</span></span> <span data-ttu-id="4c931-203">L’exemple suivant convertit la valeur minimale ou maximale d’autres types numériques primitifs à un <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="4c931-203">The following example converts the minimum or maximum value of other primitive numeric types to a <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Double.Structure#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/convert1.cs#20)]
 [!code-vb[System.Double.Structure#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/convert1.vb#20)]  
  
 <span data-ttu-id="4c931-204">En outre, le <xref:System.Single> valeurs <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, et <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> cachées à <xref:System.Double.NaN?displayProperty=nameWithType>, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, et <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectivement.</span><span class="sxs-lookup"><span data-stu-id="4c931-204">In addition, the <xref:System.Single> values <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> covert to <xref:System.Double.NaN?displayProperty=nameWithType>, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="4c931-205">Notez que la conversion de la valeur de certains types numériques à un <xref:System.Double> valeur peut entraîner une perte de précision.</span><span class="sxs-lookup"><span data-stu-id="4c931-205">Note that the conversion of the value of some numeric types to a <xref:System.Double> value can involve a loss of precision.</span></span> <span data-ttu-id="4c931-206">Comme l’illustre l’exemple, une perte de précision est possible lors de la conversion <xref:System.Decimal>, <xref:System.Int64>, <xref:System.Single>, et <xref:System.UInt64> valeurs <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-206">As the example illustrates, a loss of precision is possible when converting <xref:System.Decimal>, <xref:System.Int64>, <xref:System.Single>, and <xref:System.UInt64> values to <xref:System.Double> values.</span></span>  
  
 <span data-ttu-id="4c931-207">La conversion d’un <xref:System.Double> à une valeur d’un autre type de données numérique primitif est une conversion restrictive et nécessite un opérateur de conversion (en c#), une méthode de conversion (en Visual Basic) ou un appel à une <xref:System.Convert> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-207">The conversion of a <xref:System.Double> value to a value of any other primitive numeric data type is a narrowing conversion and requires a cast operator (in C#), a conversion method (in Visual Basic), or a call to a <xref:System.Convert> method.</span></span> <span data-ttu-id="4c931-208">Les valeurs sont en dehors de la plage du type de données cible, qui sont définies par le type de cible `MinValue` et `MaxValue` se comportent des propriétés, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="4c931-208">Values that are outside the range of the target data type, which are defined by the target type's `MinValue` and `MaxValue` properties, behave as shown in the following table.</span></span>  
  
|<span data-ttu-id="4c931-209">Type cible</span><span class="sxs-lookup"><span data-stu-id="4c931-209">Target type</span></span>|<span data-ttu-id="4c931-210">Résultat</span><span class="sxs-lookup"><span data-stu-id="4c931-210">Result</span></span>|  
|-----------------|------------|  
|<span data-ttu-id="4c931-211">Tout type intégral</span><span class="sxs-lookup"><span data-stu-id="4c931-211">Any integral type</span></span>|<span data-ttu-id="4c931-212">Un <xref:System.OverflowException> exception si la conversion se produit dans un contexte vérifié.</span><span class="sxs-lookup"><span data-stu-id="4c931-212">An <xref:System.OverflowException> exception if the conversion occurs in a checked context.</span></span><br /><br /> <span data-ttu-id="4c931-213">Si la conversion se produit dans un contexte non vérifié (la valeur par défaut en c#), l’opération de conversion réussit, mais la valeur dépasse.</span><span class="sxs-lookup"><span data-stu-id="4c931-213">If the conversion occurs in an unchecked context (the default in C#), the conversion operation succeeds but the value overflows.</span></span>|  
|<xref:System.Decimal>|<span data-ttu-id="4c931-214">Exception <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4c931-214">An <xref:System.OverflowException> exception.</span></span>|  
|<xref:System.Single>|<span data-ttu-id="4c931-215"><xref:System.Single.NegativeInfinity?displayProperty=nameWithType> pour les valeurs négatives.</span><span class="sxs-lookup"><span data-stu-id="4c931-215"><xref:System.Single.NegativeInfinity?displayProperty=nameWithType> for negative values.</span></span><br /><br /> <span data-ttu-id="4c931-216"><xref:System.Single.PositiveInfinity?displayProperty=nameWithType> pour les valeurs positives.</span><span class="sxs-lookup"><span data-stu-id="4c931-216"><xref:System.Single.PositiveInfinity?displayProperty=nameWithType> for positive values.</span></span>|  
  
 <span data-ttu-id="4c931-217">En outre, <xref:System.Double.NaN?displayProperty=nameWithType>, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, et <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> lever un <xref:System.OverflowException> pour les conversions de nombres entiers dans un contexte vérifié, mais ces dépassement des valeurs lorsque convertis en entiers dans un contexte non vérifié.</span><span class="sxs-lookup"><span data-stu-id="4c931-217">In addition, <xref:System.Double.NaN?displayProperty=nameWithType>, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> throw an <xref:System.OverflowException> for conversions to integers in a checked context, but these values overflow when converted to integers in an unchecked context.</span></span> <span data-ttu-id="4c931-218">Pour les conversions <xref:System.Decimal>, elles lèvent toujours un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4c931-218">For conversions to <xref:System.Decimal>, they always throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="4c931-219">Pour les conversions <xref:System.Single>, ils convertissent <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, et <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectivement.</span><span class="sxs-lookup"><span data-stu-id="4c931-219">For conversions to <xref:System.Single>, they convert to <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="4c931-220">Notez qu’une perte de précision peut entraîner de convertir un <xref:System.Double> valeur à un autre type numérique.</span><span class="sxs-lookup"><span data-stu-id="4c931-220">Note that a loss of precision may result from converting a <xref:System.Double> value to another numeric type.</span></span> <span data-ttu-id="4c931-221">Dans le cas de conversion non intégral <xref:System.Double> valeurs, comme le montre la sortie de l’exemple, la partie fractionnaire est perdue lorsque le <xref:System.Double> valeur est arrondie (comme dans Visual Basic) ou tronqué (comme dans c#).</span><span class="sxs-lookup"><span data-stu-id="4c931-221">In the case of converting non-integral <xref:System.Double> values, as the output from the example shows, the fractional component is lost when the <xref:System.Double> value is either rounded (as in Visual Basic) or truncated (as in C#).</span></span> <span data-ttu-id="4c931-222">Pour les conversions <xref:System.Decimal> et <xref:System.Single> valeurs, le <xref:System.Double> valeur ne peut pas avoir de représentation précise dans le type de données cible.</span><span class="sxs-lookup"><span data-stu-id="4c931-222">For conversions to <xref:System.Decimal> and <xref:System.Single> values, the <xref:System.Double> value may not have a precise representation in the target data type.</span></span>  
  
 <span data-ttu-id="4c931-223">L’exemple suivant convertit un nombre de <xref:System.Double> valeurs à plusieurs autres types numériques.</span><span class="sxs-lookup"><span data-stu-id="4c931-223">The following example converts a number of <xref:System.Double> values to several other numeric types.</span></span> <span data-ttu-id="4c931-224">Les conversions se produisent dans un contexte vérifié en Visual Basic (la valeur par défaut) et en c# (raison de la [vérifiée](~/docs/csharp/language-reference/keywords/checked.md) mot clé).</span><span class="sxs-lookup"><span data-stu-id="4c931-224">The conversions occur in a checked context in Visual Basic (the default) and in C# (because of the [checked](~/docs/csharp/language-reference/keywords/checked.md) keyword).</span></span> <span data-ttu-id="4c931-225">La sortie de l’exemple montre le résultat des conversions a été archivé à la fois un contexte non vérifié.</span><span class="sxs-lookup"><span data-stu-id="4c931-225">The output from the example shows the result for conversions in both a checked an unchecked context.</span></span> <span data-ttu-id="4c931-226">Vous pouvez effectuer des conversions dans un contexte unchecked en Visual Basic en compilant avec le `/removeintchecks+` commutateur de compilateur et en c#, en supprimant la `checked` instruction.</span><span class="sxs-lookup"><span data-stu-id="4c931-226">You can perform conversions in an unchecked context in Visual Basic by compiling with the `/removeintchecks+` compiler switch and in C# by commenting out the `checked` statement.</span></span>  
  
 [!code-csharp[System.Double.Structure#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/convert2.cs#21)]
 [!code-vb[System.Double.Structure#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/convert2.vb#21)]  
  
 <span data-ttu-id="4c931-227">Pour plus d’informations sur la conversion des types numériques, consultez [Conversion de Type dans le .NET Framework](~/docs/standard/base-types/type-conversion.md) et [tableaux de Conversion de Type](~/docs/standard/base-types/conversion-tables.md).</span><span class="sxs-lookup"><span data-stu-id="4c931-227">For more information on the conversion of numeric types, see [Type Conversion in the .NET Framework](~/docs/standard/base-types/type-conversion.md) and [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md).</span></span>  
  
<a name="Functionality"></a>   
## <a name="floating-point-functionality"></a><span data-ttu-id="4c931-228">Fonctionnalité à virgule flottante</span><span class="sxs-lookup"><span data-stu-id="4c931-228">Floating-Point Functionality</span></span>  
 <span data-ttu-id="4c931-229">Le <xref:System.Double> structure et les types associés fournissent des méthodes pour effectuer des opérations dans les domaines suivants :</span><span class="sxs-lookup"><span data-stu-id="4c931-229">The <xref:System.Double> structure and related types provide methods to perform operations in the following areas:</span></span>  
  
-   <span data-ttu-id="4c931-230">**Comparaison de valeurs**.</span><span class="sxs-lookup"><span data-stu-id="4c931-230">**Comparison of values**.</span></span> <span data-ttu-id="4c931-231">Vous pouvez appeler la <xref:System.Double.Equals%2A> méthode pour déterminer si deux <xref:System.Double> valeurs sont égales, ou le <xref:System.Double.CompareTo%2A> méthode pour déterminer la relation entre deux valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-231">You can call the <xref:System.Double.Equals%2A> method to determine whether two <xref:System.Double> values are equal, or the <xref:System.Double.CompareTo%2A> method to determine the relationship between two values.</span></span>  
  
     <span data-ttu-id="4c931-232">Le <xref:System.Double> prend également en charge un jeu complet d’opérateurs de comparaison.</span><span class="sxs-lookup"><span data-stu-id="4c931-232">The <xref:System.Double> structure also supports a complete set of comparison operators.</span></span> <span data-ttu-id="4c931-233">Par exemple, vous pouvez tester l’égalité ou d’inégalité, ou déterminer si une valeur est supérieure ou égale à un autre.</span><span class="sxs-lookup"><span data-stu-id="4c931-233">For example, you can test for equality or inequality, or determine whether one value is greater than or equal to another.</span></span> <span data-ttu-id="4c931-234">Si l’un des opérandes est de type numérique autre qu’un <xref:System.Double>, il est converti en un <xref:System.Double> avant d’effectuer la comparaison.</span><span class="sxs-lookup"><span data-stu-id="4c931-234">If one of the operands is a numeric type other than a <xref:System.Double>, it is converted to a <xref:System.Double> before performing the comparison.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="4c931-235">En raison de différences de précision, deux <xref:System.Double> les valeurs que vous pensez être égal peuvent s’avérer pour être égaux, ce qui affecte le résultat de la comparaison.</span><span class="sxs-lookup"><span data-stu-id="4c931-235">Because of differences in precision, two <xref:System.Double> values that you expect to be equal may turn out to be unequal, which affects the result of the comparison.</span></span> <span data-ttu-id="4c931-236">Consultez le [test d’égalité](#Equality) section pour plus d’informations sur la comparaison de deux <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-236">See the [Testing for Equality](#Equality) section for more information about comparing two <xref:System.Double> values.</span></span>  
  
     <span data-ttu-id="4c931-237">Vous pouvez également appeler le <xref:System.Double.IsNaN%2A>, <xref:System.Double.IsInfinity%2A>, <xref:System.Double.IsPositiveInfinity%2A>, et <xref:System.Double.IsNegativeInfinity%2A> méthodes pour tester ces valeurs spéciales.</span><span class="sxs-lookup"><span data-stu-id="4c931-237">You can also call the <xref:System.Double.IsNaN%2A>, <xref:System.Double.IsInfinity%2A>, <xref:System.Double.IsPositiveInfinity%2A>, and <xref:System.Double.IsNegativeInfinity%2A> methods to test for these special values.</span></span>  
  
-   <span data-ttu-id="4c931-238">**Opérations mathématiques**.</span><span class="sxs-lookup"><span data-stu-id="4c931-238">**Mathematical operations**.</span></span> <span data-ttu-id="4c931-239">Les opérations arithmétiques courantes, telles que l’addition, soustraction, multiplication et division, sont implémentées par les compilateurs de langage et les instructions du langage CIL (Common Intermediate), plutôt que par <xref:System.Double> méthodes.</span><span class="sxs-lookup"><span data-stu-id="4c931-239">Common arithmetic operations, such as addition, subtraction, multiplication, and division, are implemented by language compilers and Common Intermediate Language (CIL) instructions, rather than by <xref:System.Double> methods.</span></span> <span data-ttu-id="4c931-240">Si un des opérandes d’une opération mathématique est un type numérique autre qu’un <xref:System.Double>, il est converti en un <xref:System.Double> avant d’effectuer l’opération.</span><span class="sxs-lookup"><span data-stu-id="4c931-240">If one of the operands in a mathematical operation is a numeric type other than a <xref:System.Double>, it is converted to a <xref:System.Double> before performing the operation.</span></span> <span data-ttu-id="4c931-241">Le résultat de l’opération est également un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4c931-241">The result of the operation is also a <xref:System.Double> value.</span></span>  
  
     <span data-ttu-id="4c931-242">Autres opérations mathématiques peuvent être effectuées en appelant `static` (`Shared` en Visual Basic) les méthodes dans la <xref:System.Math?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="4c931-242">Other mathematical operations can be performed by calling `static` (`Shared` in Visual Basic) methods in the <xref:System.Math?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="4c931-243">Il inclut des méthodes supplémentaires utilisés pour les opérations arithmétiques (tels que <xref:System.Math.Abs%2A?displayProperty=nameWithType>, <xref:System.Math.Sign%2A?displayProperty=nameWithType>, et <xref:System.Math.Sqrt%2A?displayProperty=nameWithType>), géométrie (tel que <xref:System.Math.Cos%2A?displayProperty=nameWithType> et <xref:System.Math.Sin%2A?displayProperty=nameWithType>) et le calcul (tels que <xref:System.Math.Log%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="4c931-243">It includes additional methods commonly used for arithmetic (such as <xref:System.Math.Abs%2A?displayProperty=nameWithType>, <xref:System.Math.Sign%2A?displayProperty=nameWithType>, and <xref:System.Math.Sqrt%2A?displayProperty=nameWithType>), geometry (such as <xref:System.Math.Cos%2A?displayProperty=nameWithType> and <xref:System.Math.Sin%2A?displayProperty=nameWithType>), and calculus (such as <xref:System.Math.Log%2A?displayProperty=nameWithType>).</span></span>  
  
     <span data-ttu-id="4c931-244">Vous pouvez également manipuler les bits individuels d’un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4c931-244">You can also manipulate the individual bits in a <xref:System.Double> value.</span></span> <span data-ttu-id="4c931-245">Le <xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType> méthode conserve un <xref:System.Double> modèle de valeur de bit dans un entier 64 bits.</span><span class="sxs-lookup"><span data-stu-id="4c931-245">The <xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType> method preserves a <xref:System.Double> value's bit pattern in a 64-bit integer.</span></span> <span data-ttu-id="4c931-246">Le <xref:System.BitConverter.GetBytes%28System.Double%29?displayProperty=nameWithType> méthode retourne son modèle de bits dans un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="4c931-246">The <xref:System.BitConverter.GetBytes%28System.Double%29?displayProperty=nameWithType> method returns its bit pattern in a byte array.</span></span>  
  
-   <span data-ttu-id="4c931-247">**Arrondi**.</span><span class="sxs-lookup"><span data-stu-id="4c931-247">**Rounding**.</span></span> <span data-ttu-id="4c931-248">Arrondi est souvent utilisé comme une technique permettant de réduire l’impact des différences entre les valeurs provoquées par les problèmes de représentation à virgule flottante et de précision.</span><span class="sxs-lookup"><span data-stu-id="4c931-248">Rounding is often used as a technique for reducing the impact of differences between values caused by problems of floating-point representation and precision.</span></span> <span data-ttu-id="4c931-249">Vous pouvez arrondir un <xref:System.Double> valeur en appelant le <xref:System.Math.Round%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-249">You can round a <xref:System.Double> value by calling the <xref:System.Math.Round%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="4c931-250">**Mise en forme**.</span><span class="sxs-lookup"><span data-stu-id="4c931-250">**Formatting**.</span></span> <span data-ttu-id="4c931-251">Vous pouvez convertir un <xref:System.Double> valeur à sa représentation sous forme de chaîne en appelant le <xref:System.Double.ToString%2A> méthode ou à l’aide de la fonctionnalité de mise en forme composite.</span><span class="sxs-lookup"><span data-stu-id="4c931-251">You can convert a <xref:System.Double> value to its string representation by calling the <xref:System.Double.ToString%2A> method or by using the composite formatting feature.</span></span> <span data-ttu-id="4c931-252">Pour plus d’informations sur la façon dont les chaînes de format contrôlent la représentation sous forme de chaîne de valeurs à virgule flottante, consultez le [des chaînes de Format numériques Standard](~/docs/standard/base-types/standard-numeric-format-strings.md) et [les chaînes de Format numériques personnalisées](~/docs/standard/base-types/custom-numeric-format-strings.md) rubriques.</span><span class="sxs-lookup"><span data-stu-id="4c931-252">For information about how format strings control the string representation of floating-point values, see the [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md) topics.</span></span>  
  
-   <span data-ttu-id="4c931-253">**Analyser des chaînes**.</span><span class="sxs-lookup"><span data-stu-id="4c931-253">**Parsing strings**.</span></span> <span data-ttu-id="4c931-254">Vous pouvez convertir la représentation sous forme de chaîne d’une valeur à virgule flottante à un <xref:System.Double> valeur en appelant le <xref:System.Double.Parse%2A> ou <xref:System.Double.TryParse%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-254">You can convert the string representation of a floating-point value to a <xref:System.Double> value by calling either the <xref:System.Double.Parse%2A> or <xref:System.Double.TryParse%2A> method.</span></span> <span data-ttu-id="4c931-255">Si l’opération d’analyse échoue, le <xref:System.Double.Parse%2A> méthode lève une exception, tandis que la <xref:System.Double.TryParse%2A> méthode renvoie `false`.</span><span class="sxs-lookup"><span data-stu-id="4c931-255">If the parse operation fails, the <xref:System.Double.Parse%2A> method throws an exception, whereas the <xref:System.Double.TryParse%2A> method returns `false`.</span></span>  
  
-   <span data-ttu-id="4c931-256">**Conversion de type**.</span><span class="sxs-lookup"><span data-stu-id="4c931-256">**Type conversion**.</span></span> <span data-ttu-id="4c931-257">Le <xref:System.Double> structure fournit une implémentation d’interface explicite pour le <xref:System.IConvertible> interface, qui prend en charge la conversion entre les deux types de données .NET Framework standards.</span><span class="sxs-lookup"><span data-stu-id="4c931-257">The <xref:System.Double> structure provides an explicit interface implementation for the <xref:System.IConvertible> interface, which supports conversion between any two standard .NET Framework data types.</span></span> <span data-ttu-id="4c931-258">Compilateurs de langage prennent également en charge la conversion implicite des valeurs de tous les autres types numériques standards à <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-258">Language compilers also support the implicit conversion of values of all other standard numeric types to <xref:System.Double> values.</span></span> <span data-ttu-id="4c931-259">Conversion d’une valeur de n’importe quel type numérique standard à un <xref:System.Double> est une conversion étendue et ne nécessite pas de l’utilisateur d’une méthode d’opérateur ou une conversion de conversion,</span><span class="sxs-lookup"><span data-stu-id="4c931-259">Conversion of a value of any standard numeric type to a <xref:System.Double> is a widening conversion and does not require the user of a casting operator or conversion method,</span></span>  
  
     <span data-ttu-id="4c931-260">Toutefois, la conversion de <xref:System.Int64> et <xref:System.Single> valeurs peuvent entraîner une perte de précision.</span><span class="sxs-lookup"><span data-stu-id="4c931-260">However, conversion of <xref:System.Int64> and <xref:System.Single> values can involve a loss of precision.</span></span> <span data-ttu-id="4c931-261">Le tableau suivant répertorie les différences de précision pour chacun de ces types :</span><span class="sxs-lookup"><span data-stu-id="4c931-261">The following table lists the differences in precision for each of these types:</span></span>  
  
    |<span data-ttu-id="4c931-262">Type</span><span class="sxs-lookup"><span data-stu-id="4c931-262">Type</span></span>|<span data-ttu-id="4c931-263">Précision maximale</span><span class="sxs-lookup"><span data-stu-id="4c931-263">Maximum precision</span></span>|<span data-ttu-id="4c931-264">Précision interne</span><span class="sxs-lookup"><span data-stu-id="4c931-264">Internal precision</span></span>|  
    |----------|-----------------------|------------------------|  
    |<xref:System.Double>|<span data-ttu-id="4c931-265">15</span><span class="sxs-lookup"><span data-stu-id="4c931-265">15</span></span>|<span data-ttu-id="4c931-266">17</span><span class="sxs-lookup"><span data-stu-id="4c931-266">17</span></span>|  
    |<xref:System.Int64>|<span data-ttu-id="4c931-267">19 chiffres décimaux</span><span class="sxs-lookup"><span data-stu-id="4c931-267">19 decimal digits</span></span>|<span data-ttu-id="4c931-268">19 chiffres décimaux</span><span class="sxs-lookup"><span data-stu-id="4c931-268">19 decimal digits</span></span>|  
    |<xref:System.Single>|<span data-ttu-id="4c931-269">7 chiffres décimaux</span><span class="sxs-lookup"><span data-stu-id="4c931-269">7 decimal digits</span></span>|<span data-ttu-id="4c931-270">9 chiffres décimaux</span><span class="sxs-lookup"><span data-stu-id="4c931-270">9 decimal digits</span></span>|  
  
     <span data-ttu-id="4c931-271">Le problème de précision affecte plus fréquemment <xref:System.Single> les valeurs sont converties en <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-271">The problem of precision most frequently affects <xref:System.Single> values that are converted to <xref:System.Double> values.</span></span> <span data-ttu-id="4c931-272">Dans l’exemple suivant, deux valeurs produites par des opérations de division identiques sont inégales, car une des valeurs est une valeur à virgule flottante simple précision convertie en un <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="4c931-272">In the following example, two values produced by identical division operations are unequal because one of the values is a single-precision floating point value converted to a <xref:System.Double>.</span></span>  
  
     [!code-csharp[System.Double.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/representation1.cs#3)]
     [!code-vb[System.Double.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/representation1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="4c931-273">L’exemple de code suivant illustre l’utilisation de <xref:System.Double>:</span><span class="sxs-lookup"><span data-stu-id="4c931-273">The following code example illustrates the use of <xref:System.Double>:</span></span>  
  
 [!code-cpp[Double Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#1)]
 [!code-csharp[Double Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#1)]
 [!code-vb[Double Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="4c931-274">Tous les membres de ce type sont thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c931-274">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="4c931-275">Les membres qui semblent modifier l’état de l’instance retournent en fait une nouvelle instance initialisée avec la nouvelle valeur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c931-275">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="4c931-276">Comme avec tout autre type, la lecture et en écriture à une variable partagée qui contient une instance de ce type doivent être protégées par un verrou pour garantir la sécurité des threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c931-276">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Decimal" />
    <altmember cref="T:System.Single" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c931-277">Compare cette instance à un objet spécifié ou un objet <see cref="T:System.Double" /> et retourne un entier qui indique si la valeur de cette instance est inférieure, égale ou supérieure à la valeur de l'objet spécifié ou de l'objet <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-277">Compares this instance to a specified object or <see cref="T:System.Double" /> object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object or <see cref="T:System.Double" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.CompareTo(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(double value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4c931-278">Nombre à virgule flottante double précision à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-278">A double-precision floating-point number to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-279">Compare cette instance à un nombre à virgule flottante double précision spécifié et retourne un entier qui indique si la valeur de cette instance est inférieure, égale ou supérieure à celle du nombre à virgule flottante double précision spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-279">Compares this instance to a specified double-precision floating-point number and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-280">Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-280">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4c931-281">
            <list type="table">
              <listheader>
                <term> Valeur renvoyée  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Inférieur à zéro  </term>
                <description> Cette instance est inférieure à <paramref name="value" />.  -ou-  Cette instance n’est pas un nombre (<see cref="F:System.Double.NaN" />) et <paramref name="value" /> est un nombre.  </description>
              </item>
              <item>
                <term> Zéro  </term>
                <description> Cette instance est égale à <paramref name="value" />.  -ou- Cette instance et <paramref name="value" /> ne sont pas un nombre (<see cref="F:System.Double.NaN" />), <see cref="F:System.Double.PositiveInfinity" /> ou <see cref="F:System.Double.NegativeInfinity" />.  </description>
              </item>
              <item>
                <term> Supérieur à zéro  </term>
                <description> Cette instance est supérieure à <paramref name="value" />.  -ou-  Cette instance est un nombre et <paramref name="value" /> n’est pas un nombre (<see cref="F:System.Double.NaN" />).  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-281">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is less than <paramref name="value" />.  -or-  This instance is not a number (<see cref="F:System.Double.NaN" />) and <paramref name="value" /> is a number.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  -or-  Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Double.NaN" />), <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is greater than <paramref name="value" />.  -or-  This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Double.NaN" />).  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-282">Les valeurs doivent être identiques pour être considérées comme égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-282">Values must be identical to be considered equal.</span></span> <span data-ttu-id="4c931-283">En particulier lorsque les valeurs à virgule flottante dépendent de plusieurs opérations mathématiques, il est courant pour des pertes de précision et de leurs valeurs sont presque identiques à l’exception de leurs chiffres les moins significatifs.</span><span class="sxs-lookup"><span data-stu-id="4c931-283">Particularly when floating-point values depend on multiple mathematical operations, it is common for them to lose precision and for their values to be nearly identical except for their least significant digits.</span></span> <span data-ttu-id="4c931-284">Pour cette raison, la valeur de retour de la <xref:System.Double.CompareTo%2A> méthode peut parfois sembler étonnant.</span><span class="sxs-lookup"><span data-stu-id="4c931-284">Because of this, the return value of the <xref:System.Double.CompareTo%2A> method at times may seem surprising.</span></span> <span data-ttu-id="4c931-285">Par exemple, la multiplication par une valeur particulière, suivie de division par la même valeur doit produire la valeur d’origine.</span><span class="sxs-lookup"><span data-stu-id="4c931-285">For example, multiplication by a particular value followed by division by the same value should produce the original value.</span></span> <span data-ttu-id="4c931-286">Dans l’exemple suivant, toutefois, la valeur calculée s’avère pour être supérieure à la valeur d’origine.</span><span class="sxs-lookup"><span data-stu-id="4c931-286">In the following example, however, the computed value turns out to be greater than the original value.</span></span> <span data-ttu-id="4c931-287">Affichage de tous les chiffres significatifs des deux valeurs à l’aide de « R » [chaîne de format numérique standard](~/docs/standard/base-types/standard-numeric-format-strings.md) indique que la valeur calculée diffère de la valeur d’origine dans ses chiffres les moins significatifs.</span><span class="sxs-lookup"><span data-stu-id="4c931-287">Showing all significant digits of the two values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) indicates that the computed value differs from the original value in its least significant digits.</span></span> <span data-ttu-id="4c931-288">Pour plus d’informations sur la gestion de ces comparaisons, consultez la section Notes de la <xref:System.Double.Equals%28System.Double%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-288">For information on handling such comparisons, see the Remarks section of the <xref:System.Double.Equals%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Double.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.compareto/cs/compareto2.cs#1)]
 [!code-vb[System.Double.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.compareto/vb/compareto2.vb#1)]  
  
 <span data-ttu-id="4c931-289">Cette méthode implémente la <xref:System.IComparable%601?displayProperty=nameWithType> de l’interface et effectue légèrement meilleures que les <xref:System.Double.CompareTo%2A?displayProperty=nameWithType> (méthode), car il n’a pas à convertir le `value` paramètre à un objet.</span><span class="sxs-lookup"><span data-stu-id="4c931-289">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Double.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="4c931-290">Notez que, même si un objet dont la valeur est <xref:System.Double.NaN> n’est pas considéré comme égal à un autre objet dont la valeur est <xref:System.Double.NaN> (y compris lui-même), le <xref:System.IComparable%601> interface requiert que `A.CompareTo(A)` retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="4c931-290">Note that, although an object whose value is <xref:System.Double.NaN> is not considered equal to another object whose value is <xref:System.Double.NaN> (even itself), the <xref:System.IComparable%601> interface requires that `A.CompareTo(A)` return zero.</span></span>  
  
## <a name="widening-conversions"></a><span data-ttu-id="4c931-291">conversions étendues</span><span class="sxs-lookup"><span data-stu-id="4c931-291">Widening Conversions</span></span>  
 <span data-ttu-id="4c931-292">Selon votre langage de programmation, il est possible au code un <xref:System.Double.CompareTo%2A> méthode dans laquelle le type de paramètre comporte moins de bits (est plus restreint) que le type d’instance.</span><span class="sxs-lookup"><span data-stu-id="4c931-292">Depending on your programming language, it might be possible to code a <xref:System.Double.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="4c931-293">Cela est possible, car certains langages de programmation effectuent une conversion étendue implicite qui représente le paramètre en tant que type avec autant de bits que l’instance.</span><span class="sxs-lookup"><span data-stu-id="4c931-293">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="4c931-294">Par exemple, supposons que le type d’instance est <xref:System.Double> et le type de paramètre est <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="4c931-294">For example, suppose the instance type is <xref:System.Double> and the parameter type is <xref:System.Int32>.</span></span> <span data-ttu-id="4c931-295">Le compilateur Microsoft c# génère des instructions pour représenter la valeur du paramètre comme un <xref:System.Double> de l’objet, puis génère un <xref:System.Double.CompareTo%28System.Double%29?displayProperty=nameWithType> méthode qui compare les valeurs de l’instance et la représentation étendue du paramètre.</span><span class="sxs-lookup"><span data-stu-id="4c931-295">The Microsoft C# compiler generates instructions to represent the value of the parameter as a <xref:System.Double> object, then generates a <xref:System.Double.CompareTo%28System.Double%29?displayProperty=nameWithType> method that compares the values of the instance and the widened representation of the parameter.</span></span>  
  
 <span data-ttu-id="4c931-296">Consultez la documentation de votre langage de programmation pour déterminer si son compilateur exécute des conversions étendues implicites des types numériques.</span><span class="sxs-lookup"><span data-stu-id="4c931-296">Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</span></span> <span data-ttu-id="4c931-297">Pour plus d’informations, consultez la [tableaux de Conversion de Type](~/docs/standard/base-types/conversion-tables.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="4c931-297">For more information, see the [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md) topic.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="4c931-298">Précision dans les comparaisons</span><span class="sxs-lookup"><span data-stu-id="4c931-298">Precision in Comparisons</span></span>  
 <span data-ttu-id="4c931-299">La précision des nombres à virgule flottante au-delà de la précision documentée est spécifique à l’implémentation et la version du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4c931-299">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="4c931-300">Par conséquent, une comparaison de deux nombres particuliers peut changer entre les versions du .NET Framework, car la précision de la représentation interne des nombres peut changer.</span><span class="sxs-lookup"><span data-stu-id="4c931-300">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-301">L’exemple de code suivant montre les versions génériques et non génériques de la <xref:System.Double.CompareTo%2A> méthode pour plusieurs types valeur et référence.</span><span class="sxs-lookup"><span data-stu-id="4c931-301">The following code example demonstrates generic and nongeneric versions of the <xref:System.Double.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4c931-302">Objet à comparer ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-302">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-303">Compare cette instance à un objet spécifié et retourne un entier qui indique si la valeur de cette instance est inférieure, égale ou supérieure à la valeur de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-303">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-304">Nombre signé indiquant les valeurs relatives de cette instance et <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-304">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4c931-305">
            <list type="table">
              <listheader>
                <term> Valeur  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Un entier négatif  </term>
                <description> Cette instance est inférieure à <paramref name="value" />.  -ou-  Cette instance n’est pas un nombre (<see cref="F:System.Double.NaN" />) et <paramref name="value" /> est un nombre.  </description>
              </item>
              <item>
                <term> Zéro  </term>
                <description> Cette instance est égale à <paramref name="value" />.  -ou-  Cette instance et <paramref name="value" /> sont tous deux <see langword="Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> ou <see cref="F:System.Double.NegativeInfinity" /></description>
              </item>
              <item>
                <term> Un entier positif </term>
                <description> Cette instance dest supérieure à <paramref name="value" />.  -ou-  Cette instance est un nombre et <paramref name="value" /> n’est pas un nombre (<see cref="F:System.Double.NaN" />).  -ou-  <paramref name="value" /> is <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-305">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> A negative integer  </term>
                  <description> This instance is less than <paramref name="value" />.  -or-  This instance is not a number (<see cref="F:System.Double.NaN" />) and <paramref name="value" /> is a number.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  -or-  This instance and <paramref name="value" /> are both <see langword="Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" /></description>
                </item>
                <item>
                  <term> A positive integer  </term>
                  <description> This instance is greater than <paramref name="value" />.  -or-  This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Double.NaN" />).  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-306">Le `value` le paramètre doit être `null` ou une instance de `Double`; sinon, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="4c931-306">The `value` parameter must be `null` or an instance of `Double`; otherwise, an exception is thrown.</span></span> <span data-ttu-id="4c931-307">N’importe quelle instance de <xref:System.Double>, quelle que soit sa valeur, est considéré comme supérieur à `null`.</span><span class="sxs-lookup"><span data-stu-id="4c931-307">Any instance of <xref:System.Double>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="4c931-308">Les valeurs doivent être identiques pour être considérées comme égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-308">Values must be identical to be considered equal.</span></span> <span data-ttu-id="4c931-309">En particulier lorsque les valeurs à virgule flottante dépendent de plusieurs opérations mathématiques, il est courant pour des pertes de précision et de leurs valeurs sont presque identiques à l’exception de leurs chiffres les moins significatifs.</span><span class="sxs-lookup"><span data-stu-id="4c931-309">Particularly when floating-point values depend on multiple mathematical operations, it is common for them to lose precision and for their values to be nearly identical except for their least significant digits.</span></span> <span data-ttu-id="4c931-310">Pour cette raison, la valeur de retour de la <xref:System.Double.CompareTo%2A> méthode peut parfois sembler étonnant.</span><span class="sxs-lookup"><span data-stu-id="4c931-310">Because of this, the return value of the <xref:System.Double.CompareTo%2A> method at times may seem surprising.</span></span> <span data-ttu-id="4c931-311">Par exemple, la multiplication par une valeur particulière, suivie de division par la même valeur doit produire la valeur d’origine.</span><span class="sxs-lookup"><span data-stu-id="4c931-311">For example, multiplication by a particular value followed by division by the same value should produce the original value.</span></span> <span data-ttu-id="4c931-312">Dans l’exemple suivant, toutefois, la valeur calculée s’avère pour être supérieure à la valeur d’origine.</span><span class="sxs-lookup"><span data-stu-id="4c931-312">In the following example, however, the computed value turns out to be greater than the original value.</span></span> <span data-ttu-id="4c931-313">Affichage de tous les chiffres significatifs des deux valeurs à l’aide de « R » [chaîne de format numérique standard](~/docs/standard/base-types/standard-numeric-format-strings.md) indique que la valeur calculée diffère de la valeur d’origine dans ses chiffres les moins significatifs.</span><span class="sxs-lookup"><span data-stu-id="4c931-313">Showing all significant digits of the two values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) indicates that the computed value differs from the original value in its least significant digits.</span></span> <span data-ttu-id="4c931-314">Pour plus d’informations sur la gestion de ces comparaisons, consultez la section Notes de la <xref:System.Double.Equals%28System.Double%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-314">For information on handling such comparisons, see the Remarks section of the <xref:System.Double.Equals%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Double.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.compareto/cs/compareto3.cs#2)]
 [!code-vb[System.Double.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.compareto/vb/compareto3.vb#2)]  
  
 <span data-ttu-id="4c931-315">Cette méthode est implémentée pour prendre en charge la <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="4c931-315">This method is implemented to support the <xref:System.IComparable> interface.</span></span> <span data-ttu-id="4c931-316">Notez que, bien qu’un <xref:System.Double.NaN> n’est pas considéré comme égal à un autre <xref:System.Double.NaN> (y compris lui-même), le <xref:System.IComparable> interface requiert que `A.CompareTo(A)` retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="4c931-316">Note that, although a <xref:System.Double.NaN> is not considered to be equal to another <xref:System.Double.NaN> (even itself), the <xref:System.IComparable> interface requires that `A.CompareTo(A)` return zero.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="4c931-317">Précision dans les comparaisons</span><span class="sxs-lookup"><span data-stu-id="4c931-317">Precision in Comparisons</span></span>  
 <span data-ttu-id="4c931-318">La précision des nombres à virgule flottante au-delà de la précision documentée est spécifique à l’implémentation et la version du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4c931-318">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="4c931-319">Par conséquent, une comparaison de deux nombres particuliers peut changer entre les versions du .NET Framework, car la précision de la représentation interne des nombres peut changer.</span><span class="sxs-lookup"><span data-stu-id="4c931-319">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-320">L’exemple de code suivant illustre l’utilisation de `CompareTo` dans le contexte de `Double`.</span><span class="sxs-lookup"><span data-stu-id="4c931-320">The following code example illustrates the use of `CompareTo` in the context of `Double`.</span></span>  
  
 [!code-cpp[System.Double#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#16)]
 [!code-csharp[System.Double#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#16)]
 [!code-vb[System.Double#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c931-321">
            <paramref name="value" /> n'est pas un <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-321">
              <paramref name="value" /> is not a <see cref="T:System.Double" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Double.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Epsilon">
      <MemberSignature Language="C#" Value="public const double Epsilon = 4.94065645841247E-324;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 Epsilon = float64(4.94065645841247E-324)" />
      <MemberSignature Language="DocId" Value="F:System.Double.Epsilon" />
      <MemberSignature Language="VB.NET" Value="Public Const Epsilon As Double  = 4.94065645841247E-324" />
      <MemberSignature Language="C++ CLI" Value="public: double Epsilon = 4.94065645841247E-324;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>4.94065645841247E-324</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c931-322">Représente la valeur <see cref="T:System.Double" /> positive la plus petite qui est supérieure à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-322">Represents the smallest positive <see cref="T:System.Double" /> value that is greater than zero.</span>
          </span>
          <span data-ttu-id="4c931-323">Ce champ est constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-323">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-324">La valeur de la <xref:System.Double.Epsilon> propriété reflète la positive la plus petite <xref:System.Double> qui est significative dans les opérations numériques ou les comparaisons lorsque la valeur de la <xref:System.Double> instance est égale à zéro.</span><span class="sxs-lookup"><span data-stu-id="4c931-324">The value of the <xref:System.Double.Epsilon> property reflects the smallest positive <xref:System.Double> value that is significant in numeric operations or comparisons when the value of the <xref:System.Double> instance is zero.</span></span> <span data-ttu-id="4c931-325">Par exemple, le code suivant montre que zéro et <xref:System.Double.Epsilon> sont considérés comme des valeurs inégales, alors que zéro et la moitié de la valeur de <xref:System.Double.Epsilon> sont considérées comme égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-325">For example, the following code shows that zero and <xref:System.Double.Epsilon> are considered to be unequal values, whereas zero and half the value of <xref:System.Double.Epsilon> are considered to be equal.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/epsilon.cs#5)]
 [!code-vb[System.Double.Epsilon#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/epsilon.vb#5)]  
  
 <span data-ttu-id="4c931-326">Plus précisément, flottante point format se compose d’un signe, une mantisse 52 bits ou mantisse et un exposant de 11 bits.</span><span class="sxs-lookup"><span data-stu-id="4c931-326">More precisely, the floating point format consists of a sign, a 52-bit mantissa or significand, and an 11-bit exponent.</span></span> <span data-ttu-id="4c931-327">Comme le montre l’exemple suivant, le zéro a un exposant de -1022 et une mantisse de 0.</span><span class="sxs-lookup"><span data-stu-id="4c931-327">As the following example shows, zero has an exponent of -1022 and a mantissa of 0.</span></span> <span data-ttu-id="4c931-328"><xref:System.Double.Epsilon> a un exposant de -1022 et une mantisse de 1.</span><span class="sxs-lookup"><span data-stu-id="4c931-328"><xref:System.Double.Epsilon> has an exponent of -1022 and a mantissa of 1.</span></span> <span data-ttu-id="4c931-329">Cela signifie que <xref:System.Double.Epsilon> est une valeur positive la plus petite <xref:System.Double> valeur supérieure à zéro et représente la plus petite valeur possible et le plus petit incrément possible pour un <xref:System.Double> dont exposant est 1022.</span><span class="sxs-lookup"><span data-stu-id="4c931-329">This means that <xref:System.Double.Epsilon> is the smallest positive <xref:System.Double> value greater than zero and represents the smallest possible value and the smallest possible increment for a <xref:System.Double> whose exponent is -1022.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/epsilon1.cs#6)]
 [!code-vb[System.Double.Epsilon#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/epsilon1.vb#6)]  
  
 <span data-ttu-id="4c931-330">Toutefois, le <xref:System.Double.Epsilon> propriété n’est pas une mesure générale de précision de la <xref:System.Double> type ; elle s’applique uniquement aux <xref:System.Double> instances qui ont une valeur égale à zéro ou un exposant de -1022.</span><span class="sxs-lookup"><span data-stu-id="4c931-330">However, the <xref:System.Double.Epsilon> property is not a general measure of precision of the <xref:System.Double> type; it applies only to <xref:System.Double> instances that have a value of zero or an exponent of -1022.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c931-331">La valeur de la <xref:System.Double.Epsilon> propriété n’est pas équivalente à l’epsilon d’ordinateur, qui représente la limite supérieure de l’erreur relative en raison de l’arrondi dans l’arithmétique à virgule flottante.</span><span class="sxs-lookup"><span data-stu-id="4c931-331">The value of the <xref:System.Double.Epsilon> property is not equivalent to machine epsilon, which represents the upper bound of the relative error due to rounding in floating-point arithmetic.</span></span>  
  
 <span data-ttu-id="4c931-332">La valeur de cette constante est 4, 94065645841247E-324.</span><span class="sxs-lookup"><span data-stu-id="4c931-332">The value of this constant is 4.94065645841247e-324.</span></span>  
  
 <span data-ttu-id="4c931-333">Deux nombres à virgule flottante apparemment équivalentes peuvent ne pas être considérés comme égaux en raison de différences dans leurs chiffres les moins significatifs.</span><span class="sxs-lookup"><span data-stu-id="4c931-333">Two apparently equivalent floating-point numbers might not compare equal because of differences in their least significant digits.</span></span> <span data-ttu-id="4c931-334">Par exemple, l’expression c# `(double)1/3 == (double)0.33333`, ne pas être égaux, car l’opération de division sur le côté gauche présente une précision maximale alors que la constante située à droite est uniquement pour les chiffres spécifiés.</span><span class="sxs-lookup"><span data-stu-id="4c931-334">For example, the C# expression, `(double)1/3 == (double)0.33333`, does not compare equal because the division operation on the left side has maximum precision while the constant on the right side is precise only to the specified digits.</span></span> <span data-ttu-id="4c931-335">Si vous créez un algorithme personnalisé qui détermine si deux nombres à virgule flottante peuvent être considérés comme égaux, nous ne recommandons pas que vous baser votre algorithme sur la valeur de la <xref:System.Double.Epsilon> pour établir la marge absolue acceptable de différence pour (constante) les deux valeurs devant être considérées comme égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-335">If you create a custom algorithm that determines whether two floating-point numbers can be considered equal, we do not recommend that you base your algorithm on the value of the <xref:System.Double.Epsilon> constant to establish the acceptable absolute margin of difference for the two values to be considered equal.</span></span>  <span data-ttu-id="4c931-336">(En général, la marge de différence est plusieurs fois supérieure à <xref:System.Double.Epsilon>.) Pour plus d’informations sur la comparaison des deux valeurs à virgule flottante double précision, consultez <xref:System.Double> et <xref:System.Double.Equals%28System.Double%29>.</span><span class="sxs-lookup"><span data-stu-id="4c931-336">(Typically, that margin of difference is many times greater than <xref:System.Double.Epsilon>.) For information about comparing two double-precision floating-point values, see <xref:System.Double> and <xref:System.Double.Equals%28System.Double%29>.</span></span>  
  
## <a name="platform-notes"></a><span data-ttu-id="4c931-337">Notes sur les plateformes</span><span class="sxs-lookup"><span data-stu-id="4c931-337">Platform Notes</span></span>  
 <span data-ttu-id="4c931-338">Sur les systèmes ARM, la valeur de la <xref:System.Double.Epsilon> constante est trop petite pour être détecté, elle est égale à zéro.</span><span class="sxs-lookup"><span data-stu-id="4c931-338">On ARM systems, the value of the <xref:System.Double.Epsilon> constant is too small to be detected, so it equates to zero.</span></span> <span data-ttu-id="4c931-339">Vous pouvez définir une valeur de remplacement epsilon égal à 2,2250738585072014E-308 à la place.</span><span class="sxs-lookup"><span data-stu-id="4c931-339">You can define an alternative epsilon value that equals 2.2250738585072014E-308 instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c931-340">Retourne une valeur indiquant si deux instances de <see cref="T:System.Double" /> représentent la même valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-340">Returns a value indicating whether two instances of <see cref="T:System.Double" /> represent the same value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (double obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(float64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Equals(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(double obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="4c931-341">Objet <see cref="T:System.Double" /> à comparer à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-341">A <see cref="T:System.Double" /> object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-342">Retourne une valeur indiquant si cette instance et un objet <see cref="T:System.Double" /> spécifié représentent la même valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-342">Returns a value indicating whether this instance and a specified <see cref="T:System.Double" /> object represent the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-343">
            <see langword="true" /> si <paramref name="obj" /> est égal à cette instance ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-343">
              <see langword="true" /> if <paramref name="obj" /> is equal to this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-344">Cette méthode implémente la <xref:System.IEquatable%601?displayProperty=nameWithType> de l’interface et effectue légèrement meilleures que <xref:System.Double.Equals%2A> , car il n’a pas à convertir le `obj` paramètre d’objet.</span><span class="sxs-lookup"><span data-stu-id="4c931-344">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Double.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
## <a name="widening-conversions"></a><span data-ttu-id="4c931-345">conversions étendues</span><span class="sxs-lookup"><span data-stu-id="4c931-345">Widening Conversions</span></span>  
 <span data-ttu-id="4c931-346">Selon votre langage de programmation, il est possible au code un <xref:System.Double.Equals%2A> méthode dans laquelle le type de paramètre comporte moins de bits (est plus restreint) que le type d’instance.</span><span class="sxs-lookup"><span data-stu-id="4c931-346">Depending on your programming language, it might be possible to code a <xref:System.Double.Equals%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="4c931-347">Cela est possible, car certains langages de programmation effectuent une conversion étendue implicite qui représente le paramètre en tant que type avec autant de bits que l’instance.</span><span class="sxs-lookup"><span data-stu-id="4c931-347">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="4c931-348">Par exemple, supposons que le type d’instance est <xref:System.Double> et le type de paramètre est <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="4c931-348">For example, suppose the instance type is <xref:System.Double> and the parameter type is <xref:System.Int32>.</span></span> <span data-ttu-id="4c931-349">Le compilateur Microsoft c# génère des instructions pour représenter la valeur du paramètre comme un <xref:System.Double> de l’objet, puis génère un <xref:System.Double.Equals%28System.Double%29?displayProperty=nameWithType> méthode qui compare les valeurs de l’instance et la représentation étendue du paramètre.</span><span class="sxs-lookup"><span data-stu-id="4c931-349">The Microsoft C# compiler generates instructions to represent the value of the parameter as a <xref:System.Double> object, then generates a <xref:System.Double.Equals%28System.Double%29?displayProperty=nameWithType> method that compares the values of the instance and the widened representation of the parameter.</span></span>  
  
 <span data-ttu-id="4c931-350">Consultez la documentation de votre langage de programmation pour déterminer si son compilateur exécute des conversions étendues implicites des types numériques.</span><span class="sxs-lookup"><span data-stu-id="4c931-350">Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</span></span> <span data-ttu-id="4c931-351">Pour plus d’informations, consultez la [tableaux de Conversion de Type](~/docs/standard/base-types/conversion-tables.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="4c931-351">For more information, see the [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md) topic.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="4c931-352">Précision dans les comparaisons</span><span class="sxs-lookup"><span data-stu-id="4c931-352">Precision in Comparisons</span></span>  
 <span data-ttu-id="4c931-353">Le <xref:System.Double.Equals%2A> méthode doit être utilisée avec précaution, car les deux valeurs apparemment équivalentes peuvent être différentes en raison de leur différence de précision des deux valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-353">The <xref:System.Double.Equals%2A> method should be used with caution, because two apparently equivalent values can be unequal due to the differing precision of the two values.</span></span> <span data-ttu-id="4c931-354">L’exemple suivant indique que le <xref:System.Double> valeur.333333 et le <xref:System.Double> valeur retournée en divisant 1 par 3 ne sont pas égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-354">The following example reports that the <xref:System.Double> value .333333 and the <xref:System.Double> value returned by dividing 1 by 3 are unequal.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/Equals_25051.cs#1)]
 [!code-vb[System.Double.Epsilon#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/Equals_25051.vb#1)]  
  
 <span data-ttu-id="4c931-355">Au lieu de la comparaison d’égalité, l’une des techniques consiste à définir une marge acceptable de différence entre deux valeurs (tel que. % 001 d’une des valeurs).</span><span class="sxs-lookup"><span data-stu-id="4c931-355">Rather than comparing for equality, one technique involves defining an acceptable relative margin of difference between two values (such as .001% of one of the values).</span></span> <span data-ttu-id="4c931-356">Si la valeur absolue de la différence entre les deux valeurs est inférieure ou égale à cette marge, la différence est probablement en raison de différences de précision et, par conséquent, les valeurs sont susceptibles d’être égale.</span><span class="sxs-lookup"><span data-stu-id="4c931-356">If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to differences in precision and, therefore, the values are likely to be equal.</span></span> <span data-ttu-id="4c931-357">L’exemple suivant utilise cette technique pour comparer.33333 et 1/3, les deux <xref:System.Double> valeurs que l’exemple de code précédent a détectées accentuées.</span><span class="sxs-lookup"><span data-stu-id="4c931-357">The following example uses this technique to compare .33333 and 1/3, the two <xref:System.Double> values that the previous code example found to be unequal.</span></span> <span data-ttu-id="4c931-358">Dans ce cas, les valeurs sont égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-358">In this case, the values are equal.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/Equals_25051.cs#2)]
 [!code-vb[System.Double.Epsilon#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/Equals_25051.vb#2)]  
  
> [!NOTE]
>  <span data-ttu-id="4c931-359">Étant donné que <xref:System.Double.Epsilon> définit l’expression minimum d’une valeur positive dont la plage est proche de zéro, la marge de différence entre deux valeurs semblables doit être supérieure à <xref:System.Double.Epsilon>.</span><span class="sxs-lookup"><span data-stu-id="4c931-359">Because <xref:System.Double.Epsilon> defines the minimum expression of a positive value whose range is near zero, the margin of difference between two similar values must be greater than <xref:System.Double.Epsilon>.</span></span> <span data-ttu-id="4c931-360">En règle générale, il est plusieurs fois supérieure à <xref:System.Double.Epsilon>.</span><span class="sxs-lookup"><span data-stu-id="4c931-360">Typically, it is many times greater than <xref:System.Double.Epsilon>.</span></span> <span data-ttu-id="4c931-361">Pour cette raison, nous vous recommandons de ne pas utiliser <xref:System.Double.Epsilon> lors de la comparaison <xref:System.Double> valeurs sont égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-361">Because of this, we recommend that you do not use <xref:System.Double.Epsilon> when comparing <xref:System.Double> values for equality.</span></span>  
  
 <span data-ttu-id="4c931-362">Une seconde technique implique la comparaison de la différence entre deux nombres à virgule flottante avec une valeur absolue.</span><span class="sxs-lookup"><span data-stu-id="4c931-362">A second technique involves comparing the difference between two floating-point numbers with some absolute value.</span></span> <span data-ttu-id="4c931-363">Si la différence est inférieure ou égale à cette valeur absolue, les nombres sont égaux.</span><span class="sxs-lookup"><span data-stu-id="4c931-363">If the difference is less than or equal to that absolute value, the numbers are equal.</span></span> <span data-ttu-id="4c931-364">Si elle est supérieure, les nombres ne sont pas égaux.</span><span class="sxs-lookup"><span data-stu-id="4c931-364">If it is greater, the numbers are not equal.</span></span> <span data-ttu-id="4c931-365">Une autre solution consiste à arbitrairement sélectionner une valeur absolue.</span><span class="sxs-lookup"><span data-stu-id="4c931-365">One alternative is to arbitrarily select an absolute value.</span></span> <span data-ttu-id="4c931-366">Cela peut être problématique, toutefois, car une marge acceptable de différence dépend de la grandeur de la <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-366">This is problematic, however, because an acceptable margin of difference depends on the magnitude of the <xref:System.Double> values.</span></span> <span data-ttu-id="4c931-367">Une deuxième solution tire parti d’une fonctionnalité de conception du format à virgule flottante : la différence entre la représentation sous forme d’entier de deux valeurs à virgule flottante indique le nombre de valeurs à virgule flottante possibles qui les sépare.</span><span class="sxs-lookup"><span data-stu-id="4c931-367">A second alternative takes advantage of a design feature of the floating-point format: The difference between the integer representation of two floating-point values indicates the number of possible floating-point values that separates them.</span></span> <span data-ttu-id="4c931-368">Par exemple, la différence entre 0,0 et <xref:System.Double.Epsilon> est 1, car <xref:System.Double.Epsilon> est la plus petite valeur représentable lorsque vous travaillez avec un <xref:System.Double> dont la valeur est égale à zéro.</span><span class="sxs-lookup"><span data-stu-id="4c931-368">For example, the difference between 0.0 and <xref:System.Double.Epsilon> is 1, because <xref:System.Double.Epsilon> is the smallest representable value when working with a <xref:System.Double> whose value is zero.</span></span> <span data-ttu-id="4c931-369">L’exemple suivant utilise cette technique pour comparer.33333 et 1/3, qui sont les deux <xref:System.Double> les valeurs que l’exemple de code précédent avec le <xref:System.Double.Equals%28System.Double%29> méthode trouvée accentuées.</span><span class="sxs-lookup"><span data-stu-id="4c931-369">The following example uses this technique to compare .33333 and 1/3, which are the two <xref:System.Double> values that the previous code example with the <xref:System.Double.Equals%28System.Double%29> method found to be unequal.</span></span> <span data-ttu-id="4c931-370">Notez que l’exemple utilise le <xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType> méthode pour convertir une valeur à virgule flottante double précision en sa représentation sous forme d’entier.</span><span class="sxs-lookup"><span data-stu-id="4c931-370">Note that the example uses the <xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType> method to convert a double-precision floating-point value to its integer representation.</span></span>  
  
 [!code-csharp[System.Double.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsabs1.cs#1)]
 [!code-vb[System.Double.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsabs1.vb#1)]  
  
 <span data-ttu-id="4c931-371">La précision des nombres à virgule flottante au-delà de la précision documentée est spécifique à l’implémentation et la version du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4c931-371">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="4c931-372">Par conséquent, une comparaison de deux nombres particuliers peut changer entre les versions du .NET Framework, car la précision de la représentation interne des nombres peut changer.</span><span class="sxs-lookup"><span data-stu-id="4c931-372">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
 <span data-ttu-id="4c931-373">Si deux <xref:System.Double.NaN?displayProperty=nameWithType> les valeurs sont testées pour l’égalité en appelant le <xref:System.Double.Equals%2A> (méthode), la méthode retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="4c931-373">If two <xref:System.Double.NaN?displayProperty=nameWithType> values are tested for equality by calling the <xref:System.Double.Equals%2A> method, the method returns `true`.</span></span> <span data-ttu-id="4c931-374">Toutefois, si deux <xref:System.Double.NaN> d’égalité, les valeurs sont testées à l’aide de l’opérateur d’égalité, l’opérateur retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="4c931-374">However, if two <xref:System.Double.NaN> values are tested for equality by using the equality operator, the operator returns `false`.</span></span> <span data-ttu-id="4c931-375">Lorsque vous souhaitez déterminer si la valeur d’un <xref:System.Double> n’est pas un nombre (NaN), une alternative consiste à appeler le <xref:System.Double.IsNaN%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-375">When you want to determine whether the value of a <xref:System.Double> is not a number (NaN), an alternative is to call the <xref:System.Double.IsNaN%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="4c931-376">
            <para>La résolution de surcharge du compilateur peut-être représenter une différence apparente le comportement des deux <see cref="M:System.Double.Equals(System.Object)" /> surcharges de méthode. Si une conversion implicite entre les <paramref name="obj" /> argument et un <see cref="T:System.Double" /> est défini et l’argument n’est pas typé comme un <see cref="T:System.Object" />, compilateurs peuvent effectuer une conversion implicite et l’appel de la <see cref="M:System.Double.Equals(System.Double)" /> (méthode). Sinon, elles appellent la <see cref="M:System.Double.Equals(System.Object)" /> (méthode), qui retourne toujours <see langword="false" /> si son <paramref name="obj" /> argument n’est pas un <see cref="T:System.Double" /> valeur. L’exemple suivant illustre la différence de comportement entre les surcharges de deux méthode. Dans le cas de tous les types numériques primitifs à l’exception de <see cref="T:System.Decimal" /> et en c#, la première comparaison retourne <see langword="true" /> , car le compilateur effectue automatiquement une conversion étendue et appelle le <see cref="M:System.Double.Equals(System.Double)" /> (méthode), tandis que la deuxième comparaison Retourne <see langword="false" /> , car le compilateur appelle le <see cref="M:System.Double.Equals(System.Object)" /> (méthode).  [ ! code-csharp[System.Double.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsoverl.cs#2)] [ ! code-vb[System.Double.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsoverl.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-376">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Double.Equals(System.Object)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Double" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Double.Equals(System.Double)" /> method. Otherwise, they call the <see cref="M:System.Double.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Double" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of all primitive numeric types except for <see cref="T:System.Decimal" /> and in C#, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Double.Equals(System.Double)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Double.Equals(System.Object)" /> method.  [!code-csharp[System.Double.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Double.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsoverl.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Double.Equals(System.Object)" />
        <altmember cref="Overload:System.Double.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="4c931-377">Objet à comparer à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-377">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-378">Retourne une valeur indiquant si cette instance équivaut à un objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-378">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-379">
            <see langword="true" /> si <paramref name="obj" /> est une instance de <see cref="T:System.Double" /> et est égal à la valeur de cette instance ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-379">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Double" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-380">Le <xref:System.Double.Equals%2A> méthode doit être utilisée avec précaution, car les deux valeurs apparemment équivalentes peuvent être différentes en raison de leur différence de précision des deux valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-380">The <xref:System.Double.Equals%2A> method should be used with caution, because two apparently equivalent values can be unequal due to the differing precision of the two values.</span></span> <span data-ttu-id="4c931-381">L’exemple suivant indique que le <xref:System.Double> valeur.3333 et <xref:System.Double> retournée en divisant 1 par 3 ne sont pas égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-381">The following example reports that the <xref:System.Double> value .3333 and the <xref:System.Double> returned by dividing 1 by 3 are unequal.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/Equals_25051.cs#3)]
 [!code-vb[System.Double.Epsilon#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/Equals_25051.vb#3)]  
  
 <span data-ttu-id="4c931-382">Pour des alternatives à l’appel le <xref:System.Double.Equals%2A> (méthode), consultez la documentation relative à la <xref:System.Double.Equals%28System.Double%29> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="4c931-382">For alternatives to calling the <xref:System.Double.Equals%2A> method, see the documentation for the <xref:System.Double.Equals%28System.Double%29> overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c931-383">Étant donné que <xref:System.Double.Epsilon> définit l’expression minimum d’une valeur positive dont la plage est proche de zéro, la marge de différence entre deux valeurs semblables doit être supérieure à <xref:System.Double.Epsilon>.</span><span class="sxs-lookup"><span data-stu-id="4c931-383">Because <xref:System.Double.Epsilon> defines the minimum expression of a positive value whose range is near zero, the margin of difference between two similar values must be greater than <xref:System.Double.Epsilon>.</span></span> <span data-ttu-id="4c931-384">En règle générale, il est plusieurs fois supérieure à <xref:System.Double.Epsilon>.</span><span class="sxs-lookup"><span data-stu-id="4c931-384">Typically, it is many times greater than <xref:System.Double.Epsilon>.</span></span>  
  
 <span data-ttu-id="4c931-385">La précision des nombres à virgule flottante au-delà de la précision documentée est spécifique à l’implémentation et la version du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4c931-385">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="4c931-386">Par conséquent, une comparaison de deux nombres particuliers peut changer entre les versions du .NET Framework, car la précision de la représentation interne des nombres peut changer.</span><span class="sxs-lookup"><span data-stu-id="4c931-386">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
 <span data-ttu-id="4c931-387">Si deux <xref:System.Double.NaN?displayProperty=nameWithType> les valeurs sont testées pour l’égalité en appelant le <xref:System.Double.Equals%2A> (méthode), la méthode retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="4c931-387">If two <xref:System.Double.NaN?displayProperty=nameWithType> values are tested for equality by calling the <xref:System.Double.Equals%2A> method, the method returns `true`.</span></span> <span data-ttu-id="4c931-388">Toutefois, si deux <xref:System.Double.NaN> d’égalité, les valeurs sont testées à l’aide de l’opérateur d’égalité, l’opérateur retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="4c931-388">However, if two <xref:System.Double.NaN> values are tested for equality by using the equality operator, the operator returns `false`.</span></span> <span data-ttu-id="4c931-389">Lorsque vous souhaitez déterminer si la valeur d’un <xref:System.Double> n’est pas un nombre (NaN), une alternative consiste à appeler le <xref:System.Double.IsNaN%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-389">When you want to determine whether the value of a <xref:System.Double> is not a number (NaN), an alternative is to call the <xref:System.Double.IsNaN%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="4c931-390">
            <para>La résolution de surcharge du compilateur peut-être représenter une différence apparente le comportement des deux <see cref="M:System.Double.Equals(System.Object)" /> surcharges de méthode. Si une conversion implicite entre les <paramref name="obj" /> argument et un <see cref="T:System.Double" /> est défini et l’argument n’est pas typé comme un <see cref="T:System.Object" />, compilateurs peuvent effectuer une conversion implicite et l’appel de la <see cref="M:System.Double.Equals(System.Double)" /> (méthode). Sinon, elles appellent la <see cref="M:System.Double.Equals(System.Object)" /> (méthode), qui retourne toujours <see langword="false" /> si son <paramref name="obj" /> argument n’est pas un <see cref="T:System.Double" /> valeur. L’exemple suivant illustre la différence de comportement entre les surcharges de deux méthode. Dans le cas de tous les types numériques primitifs à l’exception de <see cref="T:System.Decimal" /> et en c#, la première comparaison retourne <see langword="true" /> , car le compilateur effectue automatiquement une conversion étendue et appelle le <see cref="M:System.Double.Equals(System.Double)" /> (méthode), tandis que la deuxième comparaison Retourne <see langword="false" /> , car le compilateur appelle le <see cref="M:System.Double.Equals(System.Object)" /> (méthode).  [ ! code-csharp[System.Double.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsoverl.cs#2)] [ ! code-vb[System.Double.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsoverl.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-390">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Double.Equals(System.Object)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Double" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Double.Equals(System.Double)" /> method. Otherwise, they call the <see cref="M:System.Double.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Double" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of all primitive numeric types except for <see cref="T:System.Decimal" /> and in C#, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Double.Equals(System.Double)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Double.Equals(System.Object)" /> method.  [!code-csharp[System.Double.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Double.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsoverl.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Double.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c931-391">Retourne le code de hachage de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-391">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-392">Code de hachage d'un entier signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-392">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c931-393">Retourne le <see cref="T:System.TypeCode" /> du type valeur <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-393">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-394">Constante énumérée, <see cref="F:System.TypeCode.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-394">The enumerated constant, <see cref="F:System.TypeCode.Double" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="IsFinite">
      <MemberSignature Language="C#" Value="public static bool IsFinite (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFinite(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsFinite(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFinite (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFinite(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinity">
      <MemberSignature Language="C#" Value="public static bool IsInfinity (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsInfinity(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsInfinity(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInfinity (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsInfinity(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="4c931-395">Nombre à virgule flottante double précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-395">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-396">Retourne une valeur indiquant si le nombre spécifié a pour valeur l'infini négatif ou positif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-396">Returns a value indicating whether the specified number evaluates to negative or positive infinity</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-397">
            <see langword="true" /> si <paramref name="d" /> a la valeur <see cref="F:System.Double.PositiveInfinity" /> ou <see cref="F:System.Double.NegativeInfinity" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-397">
              <see langword="true" /> if <paramref name="d" /> evaluates to <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-398">Les opérations à virgule flottante retournent <xref:System.Double.PositiveInfinity> ou <xref:System.Double.NegativeInfinity> pour signaler une condition de dépassement de capacité.</span><span class="sxs-lookup"><span data-stu-id="4c931-398">Floating-point operations return <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-399">L’exemple de code suivant illustre l’utilisation de <xref:System.Double.IsInfinity%2A>:</span><span class="sxs-lookup"><span data-stu-id="4c931-399">The following code example illustrates the use of <xref:System.Double.IsInfinity%2A>:</span></span>  
  
 [!code-cpp[System.Double#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#11)]
 [!code-csharp[System.Double#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#11)]
 [!code-vb[System.Double#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsPositiveInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsNegativeInfinity(System.Double)" />
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsNaN">
      <MemberSignature Language="C#" Value="public static bool IsNaN (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNaN(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsNaN(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNaN (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNaN(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="4c931-400">Nombre à virgule flottante double précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-400">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-401">Retourne une valeur qui indique si la valeur spécifiée n'est pas un nombre (<see cref="F:System.Double.NaN" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-401">Returns a value that indicates whether the specified value is not a number (<see cref="F:System.Double.NaN" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-402">
            <see langword="true" /> si <paramref name="d" /> a la valeur <see cref="F:System.Double.NaN" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-402">
              <see langword="true" /> if <paramref name="d" /> evaluates to <see cref="F:System.Double.NaN" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-403">Les opérations à virgule flottante retournent <xref:System.Double.NaN> pour signaler que le résultat de l’opération est non défini.</span><span class="sxs-lookup"><span data-stu-id="4c931-403">Floating-point operations return <xref:System.Double.NaN> to signal that that result of the operation is undefined.</span></span> <span data-ttu-id="4c931-404">Par exemple, la division de 0,0 par 0,0 entraîne <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="4c931-404">For example, dividing 0.0 by 0.0 results in <xref:System.Double.NaN>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c931-405"><xref:System.Double.IsNaN%2A> Retourne `false` si un <xref:System.Double> valeur est soit <xref:System.Double.PositiveInfinity> ou <xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="4c931-405"><xref:System.Double.IsNaN%2A> returns `false` if a <xref:System.Double> value is either <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="4c931-406">Pour tester ces valeurs, utilisez la <xref:System.Double.IsInfinity%2A>, <xref:System.Double.IsPositiveInfinity%2A>, et <xref:System.Double.IsNegativeInfinity%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="4c931-406">To test for these values, use the <xref:System.Double.IsInfinity%2A>, <xref:System.Double.IsPositiveInfinity%2A>, and <xref:System.Double.IsNegativeInfinity%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-407">L’exemple de code suivant illustre l’utilisation de <xref:System.Double.IsNaN%2A>:</span><span class="sxs-lookup"><span data-stu-id="4c931-407">The following code example illustrates the use of <xref:System.Double.IsNaN%2A>:</span></span>  
  
 [!code-cpp[System.Double#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#8)]
 [!code-csharp[System.Double#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#8)]
 [!code-vb[System.Double#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Double.NaN" />
      </Docs>
    </Member>
    <Member MemberName="IsNegative">
      <MemberSignature Language="C#" Value="public static bool IsNegative (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegative(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsNegative(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegative (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegative(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegativeInfinity">
      <MemberSignature Language="C#" Value="public static bool IsNegativeInfinity (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegativeInfinity(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsNegativeInfinity(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegativeInfinity (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegativeInfinity(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="4c931-408">Nombre à virgule flottante double précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-408">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-409">Retourne une valeur indiquant si le nombre spécifié est équivalent à l'infini négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-409">Returns a value indicating whether the specified number evaluates to negative infinity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-410">
            <see langword="true" /> si <paramref name="d" /> a la valeur <see cref="F:System.Double.NegativeInfinity" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-410">
              <see langword="true" /> if <paramref name="d" /> evaluates to <see cref="F:System.Double.NegativeInfinity" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-411">Les opérations à virgule flottante retournent <xref:System.Double.NegativeInfinity> pour signaler une condition de dépassement de capacité.</span><span class="sxs-lookup"><span data-stu-id="4c931-411">Floating-point operations return <xref:System.Double.NegativeInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-412">L’exemple de code suivant illustre l’utilisation de <xref:System.Double.IsNegativeInfinity%2A>:</span><span class="sxs-lookup"><span data-stu-id="4c931-412">The following code example illustrates the use of <xref:System.Double.IsNegativeInfinity%2A>:</span></span>  
  
 [!code-cpp[System.Double#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#13)]
 [!code-csharp[System.Double#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#13)]
 [!code-vb[System.Double#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#13)]  
[!code-cpp[System.Double#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#4)]
[!code-csharp[System.Double#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#4)]
[!code-vb[System.Double#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#4)]  
[!code-cpp[System.Double#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#9)]
[!code-csharp[System.Double#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#9)]
[!code-vb[System.Double#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsPositiveInfinity(System.Double)" />
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsNormal">
      <MemberSignature Language="C#" Value="public static bool IsNormal (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNormal(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsNormal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNormal (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNormal(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPositiveInfinity">
      <MemberSignature Language="C#" Value="public static bool IsPositiveInfinity (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPositiveInfinity(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsPositiveInfinity(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPositiveInfinity (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPositiveInfinity(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="4c931-413">Nombre à virgule flottante double précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-413">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-414">Retourne une valeur indiquant si le nombre spécifié est équivalent à l'infini positif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-414">Returns a value indicating whether the specified number evaluates to positive infinity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-415">
            <see langword="true" /> si <paramref name="d" /> a la valeur <see cref="F:System.Double.PositiveInfinity" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-415">
              <see langword="true" /> if <paramref name="d" /> evaluates to <see cref="F:System.Double.PositiveInfinity" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-416">Les opérations à virgule flottante retournent <xref:System.Double.PositiveInfinity> pour signaler une condition de dépassement de capacité.</span><span class="sxs-lookup"><span data-stu-id="4c931-416">Floating-point operations return <xref:System.Double.PositiveInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-417">L’exemple de code suivant illustre l’utilisation de <xref:System.Double.IsPositiveInfinity%2A>:</span><span class="sxs-lookup"><span data-stu-id="4c931-417">The following code example illustrates the use of <xref:System.Double.IsPositiveInfinity%2A>:</span></span>  
  
 [!code-cpp[System.Double#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#12)]
 [!code-csharp[System.Double#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#12)]
 [!code-vb[System.Double#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsNegativeInfinity(System.Double)" />
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsSubnormal">
      <MemberSignature Language="C#" Value="public static bool IsSubnormal (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSubnormal(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsSubnormal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSubnormal (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSubnormal(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const double MaxValue = 1.79769313486232E+308;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 MaxValue = float64(1.79769313486232E+308)" />
      <MemberSignature Language="DocId" Value="F:System.Double.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Double  = 1.79769313486232E+308" />
      <MemberSignature Language="C++ CLI" Value="public: double MaxValue = 1.79769313486232E+308;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>1.79769313486232E+308</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c931-418">Représente la plus grande valeur possible d'un <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-418">Represents the largest possible value of a <see cref="T:System.Double" />.</span>
          </span>
          <span data-ttu-id="4c931-419">Ce champ est constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-419">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-420">La valeur de cette constante est positive 1.7976931348623157E + 308.</span><span class="sxs-lookup"><span data-stu-id="4c931-420">The value of this constant is positive 1.7976931348623157E+308.</span></span>  
  
 <span data-ttu-id="4c931-421">Le résultat d’une opération qui dépasse <xref:System.Double.MaxValue?displayProperty=nameWithType> est <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4c931-421">The result of an operation that exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType> is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4c931-422">Dans l’exemple suivant, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> entraîne des opérations d’addition, la multiplication et élévation lorsque le résultat dépasse <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4c931-422">In the following example, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> results from addition, multiplication, and exponentiation operations when the result exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Double.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.maxvalue/cs/maxvalueex.cs#1)]
 [!code-vb[System.Double.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.maxvalue/vb/maxvalueex.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="4c931-423">L’exemple de code suivant illustre l’utilisation de <xref:System.Double.MaxValue>:</span><span class="sxs-lookup"><span data-stu-id="4c931-423">The following code example illustrates the use of <xref:System.Double.MaxValue>:</span></span>  
  
 [!code-cpp[Double Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#2)]
 [!code-csharp[Double Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#2)]
 [!code-vb[Double Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const double MinValue = -1.79769313486232E+308;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 MinValue = float64(-1.79769313486232E+308)" />
      <MemberSignature Language="DocId" Value="F:System.Double.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Double  = -1.79769313486232E+308" />
      <MemberSignature Language="C++ CLI" Value="public: double MinValue = -1.79769313486232E+308;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>-1.79769313486232E+308</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c931-424">Représente la plus petite valeur possible de <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-424">Represents the smallest possible value of a <see cref="T:System.Double" />.</span>
          </span>
          <span data-ttu-id="4c931-425">Ce champ est constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-425">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-426">La valeur de cette constante est négative 1.7976931348623157E + 308.</span><span class="sxs-lookup"><span data-stu-id="4c931-426">The value of this constant is negative 1.7976931348623157E+308.</span></span>  
  
 <span data-ttu-id="4c931-427">Le résultat d’une opération qui est inférieur à <xref:System.Double.MinValue?displayProperty=nameWithType> est <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4c931-427">The result of an operation that is less than <xref:System.Double.MinValue?displayProperty=nameWithType> is <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4c931-428">Dans l’exemple suivant, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> résultant d’opérations de soustraction et multiplication lorsque le résultat est inférieur à <xref:System.Double.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4c931-428">In the following example, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> results from subtraction and multiplication operations when the result is less than <xref:System.Double.MinValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Double.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.minvalue/cs/minvalueex.cs#1)]
 [!code-vb[System.Double.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.minvalue/vb/minvalueex.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="4c931-429">L’exemple de code suivant illustre l’utilisation de <xref:System.Double.MinValue>:</span><span class="sxs-lookup"><span data-stu-id="4c931-429">The following code example illustrates the use of <xref:System.Double.MinValue>:</span></span>  
  
 [!code-cpp[Double Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#2)]
 [!code-csharp[Double Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#2)]
 [!code-vb[Double Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaN">
      <MemberSignature Language="C#" Value="public const double NaN = NaN;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 NaN = float64(NaN)" />
      <MemberSignature Language="DocId" Value="F:System.Double.NaN" />
      <MemberSignature Language="VB.NET" Value="Public Const NaN As Double  = NaN" />
      <MemberSignature Language="C++ CLI" Value="public: double NaN = NaN;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>NaN</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c931-430">Représente une valeur qui n'est pas un nombre (<see langword="NaN" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-430">Represents a value that is not a number (<see langword="NaN" />).</span>
          </span>
          <span data-ttu-id="4c931-431">Ce champ est constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-431">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-432">Une méthode ou un opérateur retourne <xref:System.Double.NaN> lorsque le résultat d’une opération n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="4c931-432">A method or operator returns <xref:System.Double.NaN> when the result of an operation is undefined.</span></span> <span data-ttu-id="4c931-433">Par exemple, le résultat de la division de zéro par zéro est <xref:System.Double.NaN>, comme le montre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="4c931-433">For example, the result of dividing zero by zero is <xref:System.Double.NaN>, as the following example shows.</span></span> <span data-ttu-id="4c931-434">(Toutefois, notez que la division d’un nombre différent de zéro par zéro retourne <xref:System.Double.PositiveInfinity> ou <xref:System.Double.NegativeInfinity>, selon le signe du diviseur.)</span><span class="sxs-lookup"><span data-stu-id="4c931-434">(But note that dividing a non-zero number by zero returns either <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity>, depending on the sign of the divisor.)</span></span>  
  
 [!code-csharp[System.Double.NaN#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.nan/cs/nan1.cs#1)]
 [!code-vb[System.Double.NaN#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.nan/vb/nan1.vb#1)]  
  
 <span data-ttu-id="4c931-435">En outre, un appel de méthode avec un <xref:System.Double.NaN> valeur ou une opération sur un <xref:System.Double.NaN> retourne la valeur <xref:System.Double.NaN>, comme le montre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="4c931-435">In addition, a method call with a <xref:System.Double.NaN> value or an operation on a <xref:System.Double.NaN> value returns <xref:System.Double.NaN>, as the following example shows.</span></span>  
  
 [!code-csharp[System.Double.NaN#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.nan/cs/nan1.cs#2)]
 [!code-vb[System.Double.NaN#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.nan/vb/nan1.vb#2)]  
  
 <span data-ttu-id="4c931-436">Utilisez la <xref:System.Double.IsNaN%2A> méthode pour déterminer si une valeur n’est pas un nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-436">Use the <xref:System.Double.IsNaN%2A> method to determine whether a value is not a number.</span></span> <span data-ttu-id="4c931-437">Le <xref:System.Double.op_Equality%2A> opérateur considère deux <xref:System.Double.NaN> valeurs japonaises entre eux.</span><span class="sxs-lookup"><span data-stu-id="4c931-437">The <xref:System.Double.op_Equality%2A> operator considers two <xref:System.Double.NaN> values to be unequal to one another.</span></span> <span data-ttu-id="4c931-438">En général, <xref:System.Double> opérateurs ne peut pas être utilisés pour comparer <xref:System.Double.NaN?displayProperty=nameWithType> avec d’autres <xref:System.Double> valeurs, bien que les méthodes de comparaison (tels que <xref:System.Double.Equals%2A> et <xref:System.Double.CompareTo%2A>) peut.</span><span class="sxs-lookup"><span data-stu-id="4c931-438">In general, <xref:System.Double> operators cannot be used to compare <xref:System.Double.NaN?displayProperty=nameWithType> with other <xref:System.Double> values, although comparison methods (such as <xref:System.Double.Equals%2A> and <xref:System.Double.CompareTo%2A>) can.</span></span> <span data-ttu-id="4c931-439">L’exemple suivant illustre la différence de comportement entre les <xref:System.Double> les méthodes et les opérateurs de comparaison.</span><span class="sxs-lookup"><span data-stu-id="4c931-439">The following example illustrates the difference in behavior between <xref:System.Double> comparison operators and methods.</span></span>  
  
 [!code-csharp[System.Double.NaN#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.nan/cs/double.nan4.cs#4)]
 [!code-vb[System.Double.NaN#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.nan/vb/double.nan4.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="4c931-440">L'exemple suivant illustre l'utilisation de <xref:System.Double.NaN> :</span><span class="sxs-lookup"><span data-stu-id="4c931-440">The following example illustrates the use of <xref:System.Double.NaN>:</span></span>  
  
 [!code-cpp[System.Double#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#7)]
 [!code-csharp[System.Double#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#7)]
 [!code-vb[System.Double#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsNaN(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinity">
      <MemberSignature Language="C#" Value="public const double NegativeInfinity = -Infinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 NegativeInfinity = float64(-Infinity)" />
      <MemberSignature Language="DocId" Value="F:System.Double.NegativeInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Const NegativeInfinity As Double  = -Infinity" />
      <MemberSignature Language="C++ CLI" Value="public: double NegativeInfinity = -Infinity;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>-Infinity</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c931-441">Représente l'infini négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-441">Represents negative infinity.</span>
          </span>
          <span data-ttu-id="4c931-442">Ce champ est constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-442">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-443">La valeur de cette constante est le résultat de la division par zéro d’un nombre négatif.</span><span class="sxs-lookup"><span data-stu-id="4c931-443">The value of this constant is the result of dividing a negative number by zero.</span></span>  
  
 <span data-ttu-id="4c931-444">Cette constante est retournée quand le résultat d’une opération est inférieur à <xref:System.Double.MinValue>.</span><span class="sxs-lookup"><span data-stu-id="4c931-444">This constant is returned when the result of an operation is less than <xref:System.Double.MinValue>.</span></span>  
  
 <span data-ttu-id="4c931-445">Utilisez <xref:System.Double.IsNegativeInfinity%2A> pour déterminer si une valeur correspond à l’infini négatif.</span><span class="sxs-lookup"><span data-stu-id="4c931-445">Use <xref:System.Double.IsNegativeInfinity%2A> to determine whether a value evaluates to negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-446">L’exemple de code suivant illustre l’utilisation de <xref:System.Double.NegativeInfinity>:</span><span class="sxs-lookup"><span data-stu-id="4c931-446">The following code example illustrates the use of <xref:System.Double.NegativeInfinity>:</span></span>  
  
 [!code-cpp[System.Double#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#9)]
 [!code-csharp[System.Double#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#9)]
 [!code-vb[System.Double#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsNegativeInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsInfinity(System.Double)" />
        <altmember cref="F:System.Double.PositiveInfinity" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_Equality(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(double left, double right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4c931-447">Première valeur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-447">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4c931-448">Deuxième valeur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-448">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-449">Retourne une valeur qui indique si deux valeurs <see cref="T:System.Double" /> spécifiées sont égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-449">Returns a value that indicates whether two specified <see cref="T:System.Double" /> values are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-450">
            <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> sont égales ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-450">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-451">Le <xref:System.Double.op_Equality%2A> méthode définit l’opérateur d’égalité pour <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-451">The <xref:System.Double.op_Equality%2A> method defines the equality operator for <xref:System.Double> values.</span></span>  
  
 <span data-ttu-id="4c931-452">Si deux <xref:System.Double.NaN?displayProperty=nameWithType> égalité les valeurs sont testées à l’aide de l’opérateur d’égalité, le résultat est `false`; deux <xref:System.Double.NaN?displayProperty=nameWithType> valeurs ne sont pas considérées comme égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-452">If two <xref:System.Double.NaN?displayProperty=nameWithType> values are tested for equality by using the equality operator, the result is `false`; two <xref:System.Double.NaN?displayProperty=nameWithType> values are not considered equal.</span></span> <span data-ttu-id="4c931-453">Si elles sont testées pour l’égalité en appelant le <xref:System.Double.Equals%2A> (méthode), le résultat est `true`.</span><span class="sxs-lookup"><span data-stu-id="4c931-453">If they are tested for equality by calling the <xref:System.Double.Equals%2A> method, the result is `true`.</span></span>  <span data-ttu-id="4c931-454">Lorsque vous souhaitez déterminer si la valeur d’un <xref:System.Double> n’est pas un nombre (NaN), une alternative consiste à appeler le <xref:System.Double.IsNaN%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-454">When you want to determine whether the value of a <xref:System.Double> is not a number (NaN), an alternative is to call the <xref:System.Double.IsNaN%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_GreaterThan(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(double left, double right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4c931-455">Première valeur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-455">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4c931-456">Deuxième valeur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-456">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-457">Retourne une valeur qui indique si une valeur <see cref="T:System.Double" /> spécifique est supérieure à une autre valeur <see cref="T:System.Double" /> spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-457">Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is greater than another specified <see cref="T:System.Double" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-458">
            <see langword="true" /> si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-458">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-459">Le <xref:System.Double.op_GreaterThan%2A> méthode définit l’opération de la plus grande-que l’opérateur pour <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-459">The <xref:System.Double.op_GreaterThan%2A> method defines the operation of the greater-than operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(double left, double right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4c931-460">Première valeur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-460">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4c931-461">Deuxième valeur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-461">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-462">Retourne une valeur qui indique si une valeur <see cref="T:System.Double" /> spécifique est supérieure ou égale à une autre valeur <see cref="T:System.Double" /> spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-462">Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is greater than or equal to another specified <see cref="T:System.Double" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-463">
            <see langword="true" /> si <paramref name="left" /> est supérieur ou égal à <paramref name="right" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-463">
              <see langword="true" /> if <paramref name="left" /> is greater than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-464">Le <xref:System.Double.op_GreaterThanOrEqual%2A> méthode définit l’opération de l’opérateur supérieur ou égal pour <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-464">The <xref:System.Double.op_GreaterThanOrEqual%2A> method defines the operation of the greater-than-or-equal operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_Inequality(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(double left, double right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4c931-465">Première valeur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-465">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4c931-466">Deuxième valeur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-466">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-467">Retourne une valeur qui indique si deux valeurs <see cref="T:System.Double" /> spécifiées sont différentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-467">Returns a value that indicates whether two specified <see cref="T:System.Double" /> values are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-468">
            <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ne sont pas égales ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-468">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-469">Le <xref:System.Double.op_Inequality%2A> méthode définit l’opérateur d’inégalité pour <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-469">The <xref:System.Double.op_Inequality%2A> method defines the inequality operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_LessThan(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(double left, double right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4c931-470">Première valeur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-470">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4c931-471">Deuxième valeur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-471">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-472">Retourne une valeur qui indique si une valeur <see cref="T:System.Double" /> spécifique est inférieure à une autre valeur <see cref="T:System.Double" /> spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-472">Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is less than another specified <see cref="T:System.Double" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-473">
            <see langword="true" /> si <paramref name="left" /> est inférieur à <paramref name="right" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-473">
              <see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-474">Le <xref:System.Double.op_LessThan%2A> méthode définit l’opération moins-que l’opérateur pour <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-474">The <xref:System.Double.op_LessThan%2A> method defines the operation of the less-than operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(double left, double right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4c931-475">Première valeur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-475">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4c931-476">Deuxième valeur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-476">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-477">Retourne une valeur qui indique si une valeur <see cref="T:System.Double" /> spécifique est inférieure ou égale à une autre valeur <see cref="T:System.Double" /> spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-477">Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is less than or equal to another specified <see cref="T:System.Double" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-478">
            <see langword="true" /> si <paramref name="left" /> est inférieur ou égal à <paramref name="right" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-478">
              <see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-479">Le <xref:System.Double.op_LessThanOrEqual%2A> méthode définit l’opération de l’opérateur inférieur ou égal pour <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-479">The <xref:System.Double.op_LessThanOrEqual%2A> method defines the operation of the less-than-or-equal operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c931-480">Convertit la représentation sous forme de chaîne d'un nombre en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-480">Converts the string representation of a number to its double-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Double.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4c931-481">Chaîne contenant un nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-481">A string that contains a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-482">Convertit la représentation sous forme de chaîne d'un nombre en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-482">Converts the string representation of a number to its double-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-483">Nombre à virgule flottante double précision équivalant à la valeur numérique ou au symbole spécifié dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-483">A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-484">Le `s` paramètre peut contenir de la culture actuelle <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>, ou une chaîne sous la forme :</span><span class="sxs-lookup"><span data-stu-id="4c931-484">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>, or a string of the form:</span></span>  
  
 <span data-ttu-id="4c931-485">[*ws*] [*signe*] [*chiffres intégraux*[*,*]]*chiffres intégraux*[*.* [*chiffres fractionnaires*]] [E [*signe*]*chiffres exponentiels*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="4c931-485">[*ws*][*sign*][*integral-digits*[*,*]]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="4c931-486">Les éléments entre crochets ([ et ]) sont facultatifs.</span><span class="sxs-lookup"><span data-stu-id="4c931-486">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4c931-487">Le tableau suivant décrit chaque élément.</span><span class="sxs-lookup"><span data-stu-id="4c931-487">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4c931-488">Élément</span><span class="sxs-lookup"><span data-stu-id="4c931-488">Element</span></span>|<span data-ttu-id="4c931-489">Description </span><span class="sxs-lookup"><span data-stu-id="4c931-489">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4c931-490">*ws*</span><span class="sxs-lookup"><span data-stu-id="4c931-490">*ws*</span></span>|<span data-ttu-id="4c931-491">Une série de caractères d’espace blanc.</span><span class="sxs-lookup"><span data-stu-id="4c931-491">A series of white-space characters.</span></span>|  
|<span data-ttu-id="4c931-492">*sign*</span><span class="sxs-lookup"><span data-stu-id="4c931-492">*sign*</span></span>|<span data-ttu-id="4c931-493">Un symbole négatif (-) ou un signe positif (+) de symboles.</span><span class="sxs-lookup"><span data-stu-id="4c931-493">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="4c931-494">Peut être utilisé uniquement un signe de début.</span><span class="sxs-lookup"><span data-stu-id="4c931-494">Only a leading sign can be used.</span></span>|  
|<span data-ttu-id="4c931-495">*chiffres intégraux*</span><span class="sxs-lookup"><span data-stu-id="4c931-495">*integral-digits*</span></span>|<span data-ttu-id="4c931-496">Une série de chiffres allant de 0 à 9 qui spécifie la partie entière du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-496">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="4c931-497">S’exécute de *chiffres intégraux* peuvent être partitionnées par un symbole de séparateur de groupes.</span><span class="sxs-lookup"><span data-stu-id="4c931-497">Runs of *integral-digits* can be partitioned by a group-separator symbol.</span></span> <span data-ttu-id="4c931-498">Par exemple, dans certaines cultures une virgule (,) sépare les groupes de milliers.</span><span class="sxs-lookup"><span data-stu-id="4c931-498">For example, in some cultures a comma (,) separates groups of thousands.</span></span> <span data-ttu-id="4c931-499">Le *chiffres intégraux* élément peut être absent si la chaîne contient la *chiffres fractionnaires* élément.</span><span class="sxs-lookup"><span data-stu-id="4c931-499">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="4c931-500">,</span><span class="sxs-lookup"><span data-stu-id="4c931-500">,</span></span>|<span data-ttu-id="4c931-501">Spécifiques à la culture des milliers symbole de séparateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-501">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="4c931-502">.</span><span class="sxs-lookup"><span data-stu-id="4c931-502">.</span></span>|<span data-ttu-id="4c931-503">Un symbole décimal spécifiques à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-503">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="4c931-504">*chiffres fractionnaires*</span><span class="sxs-lookup"><span data-stu-id="4c931-504">*fractional-digits*</span></span>|<span data-ttu-id="4c931-505">Une série de chiffres allant de 0 à 9 qui spécifie la partie fractionnaire du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-505">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="4c931-506">E</span><span class="sxs-lookup"><span data-stu-id="4c931-506">E</span></span>|<span data-ttu-id="4c931-507">Le « e » ou un caractère « E », ce qui indique que la valeur est représentée dans la notation exponentielle (scientifique).</span><span class="sxs-lookup"><span data-stu-id="4c931-507">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="4c931-508">*chiffres exponentiels*</span><span class="sxs-lookup"><span data-stu-id="4c931-508">*exponential-digits*</span></span>|<span data-ttu-id="4c931-509">Une série de chiffres allant de 0 à 9 qui spécifie un exposant.</span><span class="sxs-lookup"><span data-stu-id="4c931-509">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="4c931-510">Le `s` paramètre est interprété à l’aide d’une combinaison de la <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> et <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> indicateurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-510">The `s` parameter is interpreted using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="4c931-511">Cela signifie que les espaces blancs et des milliers séparateurs sont autorisés, par exemple, tandis que les symboles monétaires ne sont pas.</span><span class="sxs-lookup"><span data-stu-id="4c931-511">This means that white space and thousands separators are allowed, for example, while currency symbols are not.</span></span> <span data-ttu-id="4c931-512">Pour un contrôle précis sur le style des éléments sont autorisés dans `s` pour l’opération d’analyse aboutisse, appelez le <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> ou <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-512">For finer control over which style elements are permitted in `s` for the parse operation to succeed, call the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4c931-513">Le `s` paramètre est interprété en utilisant les informations de mise en forme dans un <xref:System.Globalization.NumberFormatInfo> objet initialisé pour la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4c931-513">The `s` parameter is interpreted using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current thread culture.</span></span> <span data-ttu-id="4c931-514">Pour plus d'informations, consultez <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c931-514">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="4c931-515">Pour analyser une chaîne en utilisant les informations de mise en forme d’une autre culture, appelez le <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> ou <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-515">To parse a string using the formatting information of some other culture, call the <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4c931-516">En règle générale, si vous passez le <xref:System.Double.Parse%2A?displayProperty=nameWithType> méthode une chaîne qui est créé en appelant le <xref:System.Double.ToString%2A?displayProperty=nameWithType> , la méthode <xref:System.Double> valeur est retournée.</span><span class="sxs-lookup"><span data-stu-id="4c931-516">Ordinarily, if you pass the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="4c931-517">Toutefois, en raison d’une perte de précision, les valeurs ne peuvent pas être égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-517">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="4c931-518">En outre, une tentative d’analyser la représentation sous forme de chaîne d’un <xref:System.Double.MinValue> ou <xref:System.Double.MaxValue> lève une <xref:System.OverflowException>, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="4c931-518">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/parse2.cs#3)]
 [!code-vb[System.Double.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/parse2.vb#3)]  
  
 <span data-ttu-id="4c931-519">Si un séparateur est rencontré dans le `s` paramètre pendant une opération d’analyse et la devise ou un nombre décimal et les séparateurs de groupes sont identiques, l’opération d’analyse suppose que le séparateur est un séparateur décimal plutôt qu’un groupe séparateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-519">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="4c931-520">Pour plus d’informations sur les séparateurs, consultez <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, et <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c931-520">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-521">L'exemple suivant illustre l'utilisation de la méthode <xref:System.Double.Parse%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="4c931-521">The following example illustrates the use of the <xref:System.Double.Parse%28System.String%29> method.</span></span>  
  
 [!code-cpp[Double Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#5)]
 [!code-csharp[Double Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#5)]
 [!code-vb[Double Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c931-522">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-522">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4c931-523">
            <paramref name="s" /> ne représente pas un nombre au format valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-523">
              <paramref name="s" /> does not represent a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4c931-524">
            <paramref name="s" /> représente un nombre qui est inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-524">
              <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Double.ToString" />
        <altmember cref="M:System.Double.TryParse(System.String,System.Double@)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4c931-525">Chaîne contenant un nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-525">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="4c931-526">Combinaison au niveau du bit des valeurs d’énumération qui indiquent les éléments de style pouvant être présents dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-526">A bitwise combination of enumeration values that indicate the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="4c931-527">Une valeur typique à spécifier est une combinaison de <see cref="F:System.Globalization.NumberStyles.Float" /> combinée avec <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-527">A typical value to specify is a combination of <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-528">Convertit la représentation sous forme de chaîne d'un nombre dans un style spécifié en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-528">Converts the string representation of a number in a specified style to its double-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-529">Nombre à virgule flottante double précision équivalant à la valeur numérique ou au symbole spécifié dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-529">A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-530">Le `style` paramètre définit les éléments de style (tels que des espaces blancs, des milliers les séparateurs et les symboles monétaires) qui sont autorisés dans les `s` paramètre pour l’opération d’analyse.</span><span class="sxs-lookup"><span data-stu-id="4c931-530">The `style` parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="4c931-531">Il doit être une combinaison de bits indicateurs de le <xref:System.Globalization.NumberStyles> énumération.</span><span class="sxs-lookup"><span data-stu-id="4c931-531">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="4c931-532">Les éléments suivants <xref:System.Globalization.NumberStyles> membres ne sont pas pris en charge :</span><span class="sxs-lookup"><span data-stu-id="4c931-532">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="4c931-533">Le `s` paramètre peut contenir de la culture actuelle <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, ou <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4c931-533">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4c931-534">Selon la valeur de `style`, elle peut également prendre la forme :</span><span class="sxs-lookup"><span data-stu-id="4c931-534">Depending on the value of `style`, it can also take the form:</span></span>  
  
 <span data-ttu-id="4c931-535">[*ws*] [*$*] [*signe*] [*chiffres intégraux*[*,*]]* chiffres intégraux*[*.* [*chiffres fractionnaires*]] [E [*signe*]*chiffres exponentiels*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="4c931-535">[*ws*][*$*][*sign*][*integral-digits*[*,*]]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="4c931-536">Les éléments entre crochets ([ et ]) sont facultatifs.</span><span class="sxs-lookup"><span data-stu-id="4c931-536">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4c931-537">Le tableau suivant décrit chaque élément.</span><span class="sxs-lookup"><span data-stu-id="4c931-537">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4c931-538">Élément</span><span class="sxs-lookup"><span data-stu-id="4c931-538">Element</span></span>|<span data-ttu-id="4c931-539">Description </span><span class="sxs-lookup"><span data-stu-id="4c931-539">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4c931-540">*ws*</span><span class="sxs-lookup"><span data-stu-id="4c931-540">*ws*</span></span>|<span data-ttu-id="4c931-541">Une série de caractères d’espace blanc.</span><span class="sxs-lookup"><span data-stu-id="4c931-541">A series of white-space characters.</span></span> <span data-ttu-id="4c931-542">Espace blanc peut apparaître au début de `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> indicateur, qui peuvent apparaître à la fin de `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-542">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|$|<span data-ttu-id="4c931-543">Un symbole monétaire spécifique à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-543">A culture-specific currency symbol.</span></span> <span data-ttu-id="4c931-544">Sa position dans la chaîne est définie par le <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> et <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> propriétés de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4c931-544">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="4c931-545">Symbole de devise de la culture actuelle peut apparaître dans `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-545">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-546">*sign*</span><span class="sxs-lookup"><span data-stu-id="4c931-546">*sign*</span></span>|<span data-ttu-id="4c931-547">Un symbole négatif (-) ou un signe positif (+) de symboles.</span><span class="sxs-lookup"><span data-stu-id="4c931-547">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="4c931-548">Le signe peut apparaître au début de `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> indicateur, qui peuvent apparaître à la fin de `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-548">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4c931-549">Parenthèses peuvent être utilisées dans `s` pour indiquer une valeur négative si `style` inclut la <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-549">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-550">*chiffres intégraux*</span><span class="sxs-lookup"><span data-stu-id="4c931-550">*integral-digits*</span></span>|<span data-ttu-id="4c931-551">Une série de chiffres allant de 0 à 9 qui spécifie la partie entière du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-551">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="4c931-552">Le *chiffres intégraux* élément peut être absent si la chaîne contient la *chiffres fractionnaires* élément.</span><span class="sxs-lookup"><span data-stu-id="4c931-552">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="4c931-553">,</span><span class="sxs-lookup"><span data-stu-id="4c931-553">,</span></span>|<span data-ttu-id="4c931-554">Un séparateur de groupes spécifique à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-554">A culture-specific group separator.</span></span> <span data-ttu-id="4c931-555">Symbole de séparateur de groupes de la culture actuelle peut apparaître dans `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> indicateur</span><span class="sxs-lookup"><span data-stu-id="4c931-555">The current culture's group separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag</span></span>|  
|<span data-ttu-id="4c931-556">.</span><span class="sxs-lookup"><span data-stu-id="4c931-556">.</span></span>|<span data-ttu-id="4c931-557">Un symbole décimal spécifiques à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-557">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="4c931-558">Symbole de virgule décimale de la culture actuelle peut apparaître dans `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-558">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-559">*chiffres fractionnaires*</span><span class="sxs-lookup"><span data-stu-id="4c931-559">*fractional-digits*</span></span>|<span data-ttu-id="4c931-560">Une série de chiffres allant de 0 à 9 qui spécifie la partie fractionnaire du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-560">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="4c931-561">Chiffres fractionnaires peuvent apparaître dans `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-561">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-562">E</span><span class="sxs-lookup"><span data-stu-id="4c931-562">E</span></span>|<span data-ttu-id="4c931-563">Le « e » ou un caractère « E », ce qui indique que la valeur est représentée dans la notation exponentielle (scientifique).</span><span class="sxs-lookup"><span data-stu-id="4c931-563">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="4c931-564">Le `s` paramètre peut représenter un nombre en notation exponentielle si `style` inclut la <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-564">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-565">*chiffres exponentiels*</span><span class="sxs-lookup"><span data-stu-id="4c931-565">*exponential-digits*</span></span>|<span data-ttu-id="4c931-566">Une série de chiffres allant de 0 à 9 qui spécifie un exposant.</span><span class="sxs-lookup"><span data-stu-id="4c931-566">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="4c931-567">Une chaîne contenant uniquement des chiffres (qui correspond à la <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) toujours analysée avec succès.</span><span class="sxs-lookup"><span data-stu-id="4c931-567">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="4c931-568">Les autres <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> membres contrôlent des éléments qui peuvent être présents, mais ne doivent pas être présents dans la chaîne d’entrée.</span><span class="sxs-lookup"><span data-stu-id="4c931-568">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="4c931-569">Le tableau suivant indique comment chaque <xref:System.Globalization.NumberStyles> indicateurs affectent les éléments qui peuvent être présents dans `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-569">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="4c931-570">Valeur NumberStyles</span><span class="sxs-lookup"><span data-stu-id="4c931-570">NumberStyles value</span></span>|<span data-ttu-id="4c931-571">Éléments autorisés dans `s` en plus des chiffres</span><span class="sxs-lookup"><span data-stu-id="4c931-571">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="4c931-572">Le *chiffres intégraux* élément uniquement.</span><span class="sxs-lookup"><span data-stu-id="4c931-572">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="4c931-573">Le point décimal (*.*) et *chiffres fractionnaires* éléments.</span><span class="sxs-lookup"><span data-stu-id="4c931-573">The decimal point (*.*) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="4c931-574">Le « e » ou un caractère « E », ce qui indique la notation exponentielle.</span><span class="sxs-lookup"><span data-stu-id="4c931-574">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="4c931-575">Cet indicateur par lui-même prend en charge les valeurs sous la forme *chiffres*E*chiffres*; autres indicateurs sont nécessaires pour analyser correctement les chaînes avec des éléments tels que des signes positifs ou négatifs et des symboles de séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="4c931-575">This flag by itself supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="4c931-576">Le *ws* élément au début de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-576">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="4c931-577">Le *ws* élément à la fin de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-577">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="4c931-578">Le *signe* élément au début de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-578">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="4c931-579">Le *signe* élément à la fin de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-579">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="4c931-580">Le *signe* élément sous la forme de parenthèses entourant la valeur numérique.</span><span class="sxs-lookup"><span data-stu-id="4c931-580">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="4c931-581">Les milliers élément séparateur (,).</span><span class="sxs-lookup"><span data-stu-id="4c931-581">The thousands separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="4c931-582">Élément de devise ($).</span><span class="sxs-lookup"><span data-stu-id="4c931-582">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="4c931-583">Tous les éléments.</span><span class="sxs-lookup"><span data-stu-id="4c931-583">All elements.</span></span> <span data-ttu-id="4c931-584">Toutefois, `s` ne peut pas représenter un nombre hexadécimal ou un nombre en notation exponentielle.</span><span class="sxs-lookup"><span data-stu-id="4c931-584">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="4c931-585">Le *ws* élément au début ou à la fin de `s`, *signe* au début de `s`et le symbole de virgule décimale (.).</span><span class="sxs-lookup"><span data-stu-id="4c931-585">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="4c931-586">Le `s` paramètre peut également utiliser la notation exponentielle.</span><span class="sxs-lookup"><span data-stu-id="4c931-586">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="4c931-587">Le `ws`, `sign`, des milliers séparateur (,) et des éléments de virgule décimale (.).</span><span class="sxs-lookup"><span data-stu-id="4c931-587">The `ws`, `sign`, thousands separator (,) and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="4c931-588">Tous les éléments.</span><span class="sxs-lookup"><span data-stu-id="4c931-588">All elements.</span></span> <span data-ttu-id="4c931-589">Toutefois, `s` ne peut pas représenter un nombre hexadécimal.</span><span class="sxs-lookup"><span data-stu-id="4c931-589">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="4c931-590">Le `s` paramètre est analysé en utilisant les informations de mise en forme dans un <xref:System.Globalization.NumberFormatInfo> objet initialisé pour la culture système actuelle.</span><span class="sxs-lookup"><span data-stu-id="4c931-590">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="4c931-591">Pour plus d'informations, consultez <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c931-591">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="4c931-592">En règle générale, si vous passez le <xref:System.Double.Parse%2A?displayProperty=nameWithType> méthode une chaîne qui est créé en appelant le <xref:System.Double.ToString%2A?displayProperty=nameWithType> , la méthode <xref:System.Double> valeur est retournée.</span><span class="sxs-lookup"><span data-stu-id="4c931-592">Ordinarily, if you pass the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="4c931-593">Toutefois, en raison d’une perte de précision, les valeurs ne peuvent pas être égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-593">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="4c931-594">En outre, une tentative d’analyser la représentation sous forme de chaîne d’un <xref:System.Double.MinValue> ou <xref:System.Double.MaxValue> lève une <xref:System.OverflowException>, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="4c931-594">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/parse2.cs#3)]
 [!code-vb[System.Double.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/parse2.vb#3)]  
  
 <span data-ttu-id="4c931-595">Si un séparateur est rencontré dans le `s` paramètre pendant une opération d’analyse et la devise ou un nombre décimal et les séparateurs de groupes sont identiques, l’opération d’analyse suppose que le séparateur est un séparateur décimal plutôt qu’un groupe séparateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-595">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="4c931-596">Pour plus d’informations sur les séparateurs, consultez <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, et <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c931-596">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-597">L’exemple suivant utilise le <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> méthode pour analyser les représentations sous forme de chaîne de <xref:System.Double> à l’aide de la culture en-US.</span><span class="sxs-lookup"><span data-stu-id="4c931-597">The following example uses the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Double> values using the en-US culture.</span></span>  
  
 [!code-csharp[System.Double.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/Parse.cs#1)]
 [!code-vb[System.Double.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/Parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c931-598">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-598">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4c931-599">
            <paramref name="s" /> ne représente pas un nombre au format valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-599">
              <paramref name="s" /> does not represent a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4c931-600">
            <paramref name="s" /> représente un nombre qui est inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-600">
              <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c931-601">
            <paramref name="style" /> n’est pas une valeur <see cref="T:System.Globalization.NumberStyles" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-601">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="4c931-602">-ou-  <paramref name="style" /> inclut la valeur <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-602">-or-  <paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Double.ToString" />
        <altmember cref="Overload:System.Double.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4c931-603">Chaîne contenant un nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-603">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4c931-604">Objet qui fournit des informations de mise en forme propres à la culture sur <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-604">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-605">Convertit la représentation sous forme de chaîne d'un nombre dans un format propre à la culture spécifié en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-605">Converts the string representation of a number in a specified culture-specific format to its double-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-606">Nombre à virgule flottante double précision équivalant à la valeur numérique ou au symbole spécifié dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-606">A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-607">Cette surcharge de la <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29> méthode est généralement utilisée pour convertir du texte qui peut être mis en forme de différentes façons pour un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4c931-607">This overload of the <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to a <xref:System.Double> value.</span></span> <span data-ttu-id="4c931-608">Par exemple, il peut être utilisé pour convertir le texte entré par un utilisateur dans une zone de texte HTML à une valeur numérique.</span><span class="sxs-lookup"><span data-stu-id="4c931-608">For example, it can be used to convert the text that is entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="4c931-609">Le `s` paramètre est interprété à l’aide d’une combinaison de la <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> et <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> indicateurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-609">The `s` parameter is interpreted using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="4c931-610">Le `s` paramètre peut contenir <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, ou <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> pour la culture spécifiée par `provider`, ou il peut contenir une chaîne sous la forme :</span><span class="sxs-lookup"><span data-stu-id="4c931-610">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture specified by `provider`, or it can contain a string of the form:</span></span>  
  
 <span data-ttu-id="4c931-611">[*ws*] [*signe*]*chiffres intégraux*[*.* [*chiffres fractionnaires*]] [E [*signe*]*chiffres exponentiels*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="4c931-611">[*ws*][*sign*]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="4c931-612">Éléments facultatifs sont encadrés par des crochets ([et]).</span><span class="sxs-lookup"><span data-stu-id="4c931-612">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="4c931-613">Les éléments qui contiennent le terme « chiffres » sont constitués d’une série de chiffres allant de 0 à 9.</span><span class="sxs-lookup"><span data-stu-id="4c931-613">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span>  
  
|<span data-ttu-id="4c931-614">Élément</span><span class="sxs-lookup"><span data-stu-id="4c931-614">Element</span></span>|<span data-ttu-id="4c931-615">Description </span><span class="sxs-lookup"><span data-stu-id="4c931-615">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4c931-616">*ws*</span><span class="sxs-lookup"><span data-stu-id="4c931-616">*ws*</span></span>|<span data-ttu-id="4c931-617">Une série de caractères d’espace blanc.</span><span class="sxs-lookup"><span data-stu-id="4c931-617">A series of white-space characters.</span></span>|  
|<span data-ttu-id="4c931-618">*sign*</span><span class="sxs-lookup"><span data-stu-id="4c931-618">*sign*</span></span>|<span data-ttu-id="4c931-619">Un symbole négatif (-) ou un signe positif (+) de symboles.</span><span class="sxs-lookup"><span data-stu-id="4c931-619">A negative sign symbol (-) or a positive sign symbol (+).</span></span>|  
|<span data-ttu-id="4c931-620">*chiffres intégraux*</span><span class="sxs-lookup"><span data-stu-id="4c931-620">*integral-digits*</span></span>|<span data-ttu-id="4c931-621">Une série de chiffres allant de 0 à 9 qui spécifie la partie entière du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-621">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="4c931-622">S’exécute de *chiffres intégraux* peuvent être partitionnées par un symbole de séparateur de groupes.</span><span class="sxs-lookup"><span data-stu-id="4c931-622">Runs of *integral-digits* can be partitioned by a group-separator symbol.</span></span> <span data-ttu-id="4c931-623">Par exemple, dans certaines cultures une virgule (,) sépare les groupes de milliers.</span><span class="sxs-lookup"><span data-stu-id="4c931-623">For example, in some cultures a comma (,) separates groups of thousands.</span></span> <span data-ttu-id="4c931-624">Le *chiffres intégraux* élément peut être absent si la chaîne contient la *chiffres fractionnaires* élément.</span><span class="sxs-lookup"><span data-stu-id="4c931-624">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="4c931-625">.</span><span class="sxs-lookup"><span data-stu-id="4c931-625">.</span></span>|<span data-ttu-id="4c931-626">Un symbole décimal spécifiques à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-626">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="4c931-627">*chiffres fractionnaires*</span><span class="sxs-lookup"><span data-stu-id="4c931-627">*fractional-digits*</span></span>|<span data-ttu-id="4c931-628">Une série de chiffres allant de 0 à 9 qui spécifie la partie fractionnaire du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-628">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="4c931-629">E</span><span class="sxs-lookup"><span data-stu-id="4c931-629">E</span></span>|<span data-ttu-id="4c931-630">Le « e » ou un caractère « E », ce qui indique que la valeur est représentée dans la notation exponentielle (scientifique).</span><span class="sxs-lookup"><span data-stu-id="4c931-630">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="4c931-631">*chiffres exponentiels*</span><span class="sxs-lookup"><span data-stu-id="4c931-631">*exponential-digits*</span></span>|<span data-ttu-id="4c931-632">Une série de chiffres allant de 0 à 9 qui spécifie un exposant.</span><span class="sxs-lookup"><span data-stu-id="4c931-632">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="4c931-633">Pour plus d’informations sur les formats numériques, consultez la [mise en forme des Types](~/docs/standard/base-types/formatting-types.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="4c931-633">For more information about numeric formats, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span>  
  
 <span data-ttu-id="4c931-634">Le `provider` paramètre est un <xref:System.IFormatProvider> implémentation dont <xref:System.IFormatProvider.GetFormat%2A> méthode retourne un <xref:System.Globalization.NumberFormatInfo> objet qui fournit des informations spécifiques à la culture utilisées pour interpréter le format de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-634">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that supplies culture-specific information used in interpreting the format of `s`.</span></span> <span data-ttu-id="4c931-635">En règle générale, il est un <xref:System.Globalization.NumberFormatInfo> ou <xref:System.Globalization.CultureInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4c931-635">Typically, it is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="4c931-636">Si `provider` est `null` ou un <xref:System.Globalization.NumberFormatInfo> ne peut pas être obtenu, les informations de mise en forme pour la culture système en cours est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4c931-636">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> cannot be obtained, the formatting information for the current system culture is used.</span></span>  
  
 <span data-ttu-id="4c931-637">En règle générale, si vous passez le <xref:System.Double.Parse%2A?displayProperty=nameWithType> méthode une chaîne qui est créé en appelant le <xref:System.Double.ToString%2A?displayProperty=nameWithType> , la méthode <xref:System.Double> valeur est retournée.</span><span class="sxs-lookup"><span data-stu-id="4c931-637">Ordinarily, if you pass the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="4c931-638">Toutefois, en raison d’une perte de précision, les valeurs ne peuvent pas être égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-638">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="4c931-639">En outre, une tentative d’analyser la représentation sous forme de chaîne d’un <xref:System.Double.MinValue> ou <xref:System.Double.MaxValue> lève une <xref:System.OverflowException>, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="4c931-639">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/parse2.cs#3)]
 [!code-vb[System.Double.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/parse2.vb#3)]  
  
 <span data-ttu-id="4c931-640">Si un séparateur est rencontré dans le `s` paramètre pendant une opération d’analyse et la devise ou un nombre décimal et les séparateurs de groupes sont identiques, l’opération d’analyse suppose que le séparateur est un séparateur décimal plutôt qu’un groupe séparateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-640">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="4c931-641">Pour plus d’informations sur les séparateurs, consultez <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, et <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c931-641">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-642">L’exemple suivant est le bouton sur le Gestionnaire d’événements d’un formulaire Web.</span><span class="sxs-lookup"><span data-stu-id="4c931-642">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="4c931-643">Il utilise le tableau retourné par la <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> propriété pour déterminer les paramètres régionaux de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-643">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="4c931-644">Il instancie ensuite un <xref:System.Globalization.CultureInfo> objet qui correspond à ces paramètres régionaux.</span><span class="sxs-lookup"><span data-stu-id="4c931-644">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="4c931-645">Le <xref:System.Globalization.NumberFormatInfo> objet qui appartient à cet <xref:System.Globalization.CultureInfo> objet est ensuite transmis à la <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29> d’entrée de méthode pour convertir l’utilisateur à un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4c931-645">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[ParseMethod#2](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#2)]
 [!code-vb[ParseMethod#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c931-646">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-646">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4c931-647">
            <paramref name="s" /> ne représente pas un nombre au format valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-647">
              <paramref name="s" /> does not represent a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4c931-648">
            <paramref name="s" /> représente un nombre qui est inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-648">
              <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Double.ToString" />
        <altmember cref="Overload:System.Double.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.AllowDecimalPoint | System.Globalization.NumberStyles.AllowExponent | System.Globalization.NumberStyles.AllowLeadingSign | System.Globalization.NumberStyles.AllowLeadingWhite | System.Globalization.NumberStyles.AllowThousands | System.Globalization.NumberStyles.AllowTrailingWhite | System.Globalization.NumberStyles.Float | System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.AllowDecimalPoint | System.Globalization.NumberStyles.AllowExponent | System.Globalization.NumberStyles.AllowLeadingSign | System.Globalization.NumberStyles.AllowLeadingWhite | System.Globalization.NumberStyles.AllowThousands | System.Globalization.NumberStyles.AllowTrailingWhite | System.Globalization.NumberStyles.Float | System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4c931-649">Chaîne contenant un nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-649">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="4c931-650">Combinaison au niveau du bit des valeurs d’énumération qui indiquent les éléments de style pouvant être présents dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-650">A bitwise combination of enumeration values that indicate the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="4c931-651">Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Float" /> combinée avec <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-651">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4c931-652">Objet qui fournit des informations de mise en forme propres à la culture sur <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-652">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-653">Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à la culture spécifiés en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-653">Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-654">Nombre à virgule flottante double précision équivalant à la valeur numérique ou au symbole spécifié dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-654">A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-655">Le `style` paramètre définit les éléments de style (tels que des espaces blancs, des milliers les séparateurs et les symboles monétaires) qui sont autorisés dans les `s` paramètre pour l’opération d’analyse.</span><span class="sxs-lookup"><span data-stu-id="4c931-655">The `style` parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="4c931-656">Il doit être une combinaison de bits indicateurs de le <xref:System.Globalization.NumberStyles> énumération.</span><span class="sxs-lookup"><span data-stu-id="4c931-656">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="4c931-657">Les éléments suivants <xref:System.Globalization.NumberStyles> membres ne sont pas pris en charge :</span><span class="sxs-lookup"><span data-stu-id="4c931-657">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="4c931-658">Le `s` paramètre peut contenir <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, ou <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> pour la culture spécifiée par `provider`.</span><span class="sxs-lookup"><span data-stu-id="4c931-658">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture specified by `provider`.</span></span> <span data-ttu-id="4c931-659">Selon la valeur de `style`, elle peut également prendre la forme :</span><span class="sxs-lookup"><span data-stu-id="4c931-659">Depending on the value of `style`, it can also take the form:</span></span>  
  
 <span data-ttu-id="4c931-660">[*ws*] [*$*] [*signe*] [*chiffres intégraux*,]*chiffres intégraux*[. [ *chiffres fractionnaires*]] [E [*signe*]*chiffres exponentiels*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="4c931-660">[*ws*] [*$*] [*sign*][*integral-digits*,]*integral-digits*[.[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="4c931-661">Éléments encadrés par des crochets ([et]) sont facultatifs.</span><span class="sxs-lookup"><span data-stu-id="4c931-661">Elements framed in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4c931-662">Le tableau suivant décrit chaque élément.</span><span class="sxs-lookup"><span data-stu-id="4c931-662">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4c931-663">Élément</span><span class="sxs-lookup"><span data-stu-id="4c931-663">Element</span></span>|<span data-ttu-id="4c931-664">Description </span><span class="sxs-lookup"><span data-stu-id="4c931-664">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4c931-665">*ws*</span><span class="sxs-lookup"><span data-stu-id="4c931-665">*ws*</span></span>|<span data-ttu-id="4c931-666">Une série de caractères d’espace blanc.</span><span class="sxs-lookup"><span data-stu-id="4c931-666">A series of white-space characters.</span></span> <span data-ttu-id="4c931-667">Espace blanc peut apparaître au début de `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> indicateur, qui peuvent apparaître à la fin de `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-667">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|$|<span data-ttu-id="4c931-668">Un symbole monétaire spécifique à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-668">A culture-specific currency symbol.</span></span> <span data-ttu-id="4c931-669">Sa position dans la chaîne est définie par le <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> et <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> propriétés de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4c931-669">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="4c931-670">Symbole de devise de la culture actuelle peut apparaître dans `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-670">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-671">*sign*</span><span class="sxs-lookup"><span data-stu-id="4c931-671">*sign*</span></span>|<span data-ttu-id="4c931-672">Un symbole négatif (-) ou un signe positif (+) de symboles.</span><span class="sxs-lookup"><span data-stu-id="4c931-672">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="4c931-673">Le signe peut apparaître au début de `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> indicateur, qui peuvent apparaître à la fin de `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-673">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4c931-674">Parenthèses peuvent être utilisées dans `s` pour indiquer une valeur négative si `style` inclut la <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-674">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-675">*chiffres intégraux*</span><span class="sxs-lookup"><span data-stu-id="4c931-675">*integral-digits*</span></span>|<span data-ttu-id="4c931-676">Une série de chiffres allant de 0 à 9 qui spécifie la partie entière du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-676">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="4c931-677">Le *chiffres intégraux* élément peut être absent si la chaîne contient la *chiffres fractionnaires* élément.</span><span class="sxs-lookup"><span data-stu-id="4c931-677">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="4c931-678">,</span><span class="sxs-lookup"><span data-stu-id="4c931-678">,</span></span>|<span data-ttu-id="4c931-679">Un séparateur de groupes spécifique à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-679">A culture-specific group separator.</span></span> <span data-ttu-id="4c931-680">Symbole de séparateur de groupes de la culture actuelle peut apparaître dans `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> indicateur</span><span class="sxs-lookup"><span data-stu-id="4c931-680">The current culture's group separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag</span></span>|  
|<span data-ttu-id="4c931-681">.</span><span class="sxs-lookup"><span data-stu-id="4c931-681">.</span></span>|<span data-ttu-id="4c931-682">Un symbole décimal spécifiques à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-682">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="4c931-683">Symbole de virgule décimale de la culture actuelle peut apparaître dans `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-683">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-684">*chiffres fractionnaires*</span><span class="sxs-lookup"><span data-stu-id="4c931-684">*fractional-digits*</span></span>|<span data-ttu-id="4c931-685">Une série de chiffres allant de 0 à 9 qui spécifie la partie fractionnaire du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-685">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="4c931-686">Chiffres fractionnaires peuvent apparaître dans `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-686">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-687">E</span><span class="sxs-lookup"><span data-stu-id="4c931-687">E</span></span>|<span data-ttu-id="4c931-688">Le « e » ou un caractère « E », ce qui indique que la valeur est représentée dans la notation exponentielle (scientifique).</span><span class="sxs-lookup"><span data-stu-id="4c931-688">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="4c931-689">Le `s` paramètre peut représenter un nombre en notation exponentielle si `style` inclut la <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-689">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-690">*chiffres exponentiels*</span><span class="sxs-lookup"><span data-stu-id="4c931-690">*exponential-digits*</span></span>|<span data-ttu-id="4c931-691">Une série de chiffres allant de 0 à 9 qui spécifie un exposant.</span><span class="sxs-lookup"><span data-stu-id="4c931-691">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="4c931-692">Une chaîne contenant uniquement des chiffres (qui correspond à la <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) toujours analysée avec succès.</span><span class="sxs-lookup"><span data-stu-id="4c931-692">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="4c931-693">Les autres <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> membres contrôlent des éléments qui peuvent être présents, mais ne doivent pas être présents dans la chaîne d’entrée.</span><span class="sxs-lookup"><span data-stu-id="4c931-693">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="4c931-694">Le tableau suivant indique comment chaque <xref:System.Globalization.NumberStyles> indicateurs affectent les éléments qui peuvent être présents dans `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-694">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="4c931-695">Valeur NumberStyles</span><span class="sxs-lookup"><span data-stu-id="4c931-695">NumberStyles value</span></span>|<span data-ttu-id="4c931-696">Éléments autorisés dans `s` en plus des chiffres</span><span class="sxs-lookup"><span data-stu-id="4c931-696">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="4c931-697">Le *chiffres intégraux* élément uniquement.</span><span class="sxs-lookup"><span data-stu-id="4c931-697">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="4c931-698">Le point décimal (*.*) et *chiffres fractionnaires* éléments.</span><span class="sxs-lookup"><span data-stu-id="4c931-698">The decimal point (*.*) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="4c931-699">Le « e » ou un caractère « E », ce qui indique la notation exponentielle.</span><span class="sxs-lookup"><span data-stu-id="4c931-699">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="4c931-700">Cet indicateur par lui-même prend en charge les valeurs sous la forme *chiffres*E*chiffres*; autres indicateurs sont nécessaires pour analyser correctement les chaînes avec des éléments tels que des signes positifs ou négatifs et des symboles de séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="4c931-700">This flag by itself supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="4c931-701">Le *ws* élément au début de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-701">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="4c931-702">Le *ws* élément à la fin de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-702">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="4c931-703">Le *signe* élément au début de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-703">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="4c931-704">Le *signe* élément à la fin de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-704">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="4c931-705">Le *signe* élément sous la forme de parenthèses entourant la valeur numérique.</span><span class="sxs-lookup"><span data-stu-id="4c931-705">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="4c931-706">Les milliers élément séparateur (,).</span><span class="sxs-lookup"><span data-stu-id="4c931-706">The thousands separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="4c931-707">Élément de devise ($).</span><span class="sxs-lookup"><span data-stu-id="4c931-707">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="4c931-708">Tous les éléments.</span><span class="sxs-lookup"><span data-stu-id="4c931-708">All elements.</span></span> <span data-ttu-id="4c931-709">Toutefois, `s` ne peut pas représenter un nombre hexadécimal ou un nombre en notation exponentielle.</span><span class="sxs-lookup"><span data-stu-id="4c931-709">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="4c931-710">Le *ws* élément au début ou à la fin de `s`, *signe* au début de `s`et le symbole de virgule décimale (.).</span><span class="sxs-lookup"><span data-stu-id="4c931-710">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="4c931-711">Le `s` paramètre peut également utiliser la notation exponentielle.</span><span class="sxs-lookup"><span data-stu-id="4c931-711">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="4c931-712">Le `ws`, `sign`, des milliers séparateur (,) et des éléments de virgule décimale (.).</span><span class="sxs-lookup"><span data-stu-id="4c931-712">The `ws`, `sign`, thousands separator (,) and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="4c931-713">Tous les éléments.</span><span class="sxs-lookup"><span data-stu-id="4c931-713">All elements.</span></span> <span data-ttu-id="4c931-714">Toutefois, `s` ne peut pas représenter un nombre hexadécimal.</span><span class="sxs-lookup"><span data-stu-id="4c931-714">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="4c931-715">Le `provider` paramètre est un <xref:System.IFormatProvider> implémentation dont <xref:System.IFormatProvider.GetFormat%2A> méthode retourne un <xref:System.Globalization.NumberFormatInfo> objet qui fournit des informations spécifiques à la culture utilisées pour interpréter le format de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-715">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that supplies culture-specific information used in interpreting the format of `s`.</span></span> <span data-ttu-id="4c931-716">En règle générale, il est un <xref:System.Globalization.NumberFormatInfo> ou <xref:System.Globalization.CultureInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4c931-716">Typically, it is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="4c931-717">Si `provider` est `null` ou un <xref:System.Globalization.NumberFormatInfo> ne peut pas être obtenu, les informations de mise en forme pour la culture système en cours est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4c931-717">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> cannot be obtained, the formatting information for the current system culture is used.</span></span>  
  
 <span data-ttu-id="4c931-718">En règle générale, si vous passez le <xref:System.Double.Parse%2A?displayProperty=nameWithType> méthode une chaîne qui est créé en appelant le <xref:System.Double.ToString%2A?displayProperty=nameWithType> , la méthode <xref:System.Double> valeur est retournée.</span><span class="sxs-lookup"><span data-stu-id="4c931-718">Ordinarily, if you pass the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="4c931-719">Toutefois, en raison d’une perte de précision, les valeurs ne peuvent pas être égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-719">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="4c931-720">En outre, une tentative d’analyser la représentation sous forme de chaîne d’un <xref:System.Double.MinValue> ou <xref:System.Double.MaxValue> lève une <xref:System.OverflowException>, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="4c931-720">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/parse2.cs#3)]
 [!code-vb[System.Double.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/parse2.vb#3)]  
  
 <span data-ttu-id="4c931-721">Si un séparateur est rencontré dans le `s` paramètre pendant une opération d’analyse et la devise ou un nombre décimal et les séparateurs de groupes sont identiques, l’opération d’analyse suppose que le séparateur est un séparateur décimal plutôt qu’un groupe séparateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-721">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="4c931-722">Pour plus d’informations sur les séparateurs, consultez <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, et <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c931-722">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-723">L’exemple suivant illustre l’utilisation de la <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> méthode pour attribuer plusieurs représentations sous forme de chaîne de valeurs de température à un `Temperature` objet.</span><span class="sxs-lookup"><span data-stu-id="4c931-723">The following example illustrates the use of the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to assign several string representations of temperature values to a `Temperature` object.</span></span>  
  
 [!code-csharp[System.Double.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/Parse3.cs#2)]
 [!code-vb[System.Double.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/Parse3.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c931-724">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-724">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4c931-725">
            <paramref name="s" /> ne représente pas une valeur numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-725">
              <paramref name="s" /> does not represent a numeric value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c931-726">
            <paramref name="style" /> n’est pas une valeur <see cref="T:System.Globalization.NumberStyles" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-726">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="4c931-727">-ou-  <paramref name="style" /> est la valeur <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-727">-or-  <paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4c931-728">
            <paramref name="s" /> représente un nombre qui est inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-728">
              <paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Double.ToString" />
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinity">
      <MemberSignature Language="C#" Value="public const double PositiveInfinity = Infinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PositiveInfinity = float64(Infinity)" />
      <MemberSignature Language="DocId" Value="F:System.Double.PositiveInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Const PositiveInfinity As Double  = Infinity" />
      <MemberSignature Language="C++ CLI" Value="public: double PositiveInfinity = Infinity;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>Infinity</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c931-729">Représente l'infini positif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-729">Represents positive infinity.</span>
          </span>
          <span data-ttu-id="4c931-730">Ce champ est constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-730">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-731">La valeur de cette constante est le résultat de la division par zéro d’un nombre positif.</span><span class="sxs-lookup"><span data-stu-id="4c931-731">The value of this constant is the result of dividing a positive number by zero.</span></span>  
  
 <span data-ttu-id="4c931-732">Cette constante est retournée quand le résultat d’une opération est supérieur à <xref:System.Double.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="4c931-732">This constant is returned when the result of an operation is greater than <xref:System.Double.MaxValue>.</span></span>  
  
 <span data-ttu-id="4c931-733">Utilisez <xref:System.Double.IsPositiveInfinity%2A> pour déterminer si une valeur correspond à l’infini positif.</span><span class="sxs-lookup"><span data-stu-id="4c931-733">Use <xref:System.Double.IsPositiveInfinity%2A> to determine whether a value evaluates to positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-734">L’exemple de code suivant illustre l’utilisation de <xref:System.Double.PositiveInfinity>:</span><span class="sxs-lookup"><span data-stu-id="4c931-734">The following code example illustrates the use of <xref:System.Double.PositiveInfinity>:</span></span>  
  
 [!code-cpp[System.Double#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#10)]
 [!code-csharp[System.Double#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#10)]
 [!code-vb[System.Double#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsPositiveInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsInfinity(System.Double)" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-735">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-735">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-736">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-736">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-737">
            <see langword="true" /> si la valeur de l'instance actuelle est différente de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-737">
              <see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-738">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-738">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-739">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-739">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4c931-740">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToBoolean%28System.Double%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-740">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-741">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-741">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-742">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-742">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-743">Valeur de l'instance actuelle, convertie en <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-743">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-744">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-744">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-745">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-745">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4c931-746">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToByte%28System.Double%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-746">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-747">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-747">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-748">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-748">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4c931-749">Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-749">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-750">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-750">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4c931-751">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-751">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4c931-752">Dans tous les cas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-752">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-753">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-753">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-754">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-754">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4c931-755">Toute tentative d'utilisation de cette méthode lève une <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-755">Attempting to use this method throws an <see cref="T:System.InvalidCastException" /></span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-756">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-756">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4c931-757">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-757">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4c931-758">Dans tous les cas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-758">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-759">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-759">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-760">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-760">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-761">Valeur de l'instance actuelle, convertie en <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-761">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-762">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-762">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-763">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-763">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4c931-764">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-764">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-765">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-765">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-766">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-766">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-767">Valeur de l'instance actuelle, inchangée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-767">The value of the current instance, unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-768">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-768">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-769">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-769">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-770">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-770">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-771">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-771">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-772">Valeur de l'instance actuelle, convertie en <see cref="T:System.Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-772">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-773">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-773">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-774">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-774">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4c931-775">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToInt16%28System.Double%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-775">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-776">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-776">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-777">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-777">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-778">Valeur de l'instance actuelle, convertie en <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-778">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-779">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-779">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-780">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-780">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4c931-781">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToInt32%28System.Double%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-781">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-782">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-782">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-783">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-783">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-784">Valeur de l'instance actuelle, convertie en <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-784">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-785">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-785">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-786">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-786">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4c931-787">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToInt64%28System.Double%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-787">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-788">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-788">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-789">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-789">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-790">Valeur de l'instance actuelle, convertie en <see cref="T:System.SByte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-790">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-791">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-791">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-792">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-792">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4c931-793">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToSByte%28System.Double%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-793">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-794">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-794">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-795">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-795">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-796">Valeur de l'instance actuelle, convertie en <see cref="T:System.Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-796">The value of the current instance, converted to a <see cref="T:System.Single" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-797">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-797">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-798">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-798">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4c931-799">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToSingle%28System.Double%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-799">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4c931-800">Type dans lequel convertir cette valeur <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-800">The type to which to convert this <see cref="T:System.Double" /> value.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4c931-801">Implémentation de <see cref="T:System.IFormatProvider" /> qui fournit des informations propres à la culture sur le format de la valeur retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-801">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-802">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-802">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-803">Valeur de l'instance actuelle, convertie en <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-803">The value of the current instance, converted to <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-804">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-804">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-805">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-805">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4c931-806">L’alternative recommandée consiste à appeler la `static` (`Shared` en Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-806">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-807">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-807">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-808">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-808">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-809">Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-809">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-810">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-810">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-811">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-811">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4c931-812">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToUInt16%28System.Double%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-812">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-813">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-813">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-814">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-814">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-815">Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-815">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-816">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-816">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-817">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-817">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4c931-818">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToUInt32%28System.Double%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-818">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-819">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-819">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-820">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-820">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-821">Valeur de l'instance actuelle, convertie en <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-821">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-822">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4c931-822">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4c931-823">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Double> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4c931-823">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4c931-824">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToUInt64%28System.Double%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4c931-824">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c931-825">Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-825">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c931-826">Convertit la valeur numérique de cette instance en sa représentation équivalente sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-826">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-827">Représentation sous forme de chaîne de la valeur de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-827">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-828">Le <xref:System.Double.ToString> méthode formats un <xref:System.Double> valeur dans la valeur par défaut (« G » ou général) format de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4c931-828">The <xref:System.Double.ToString> method formats a <xref:System.Double> value in the default ("G", or general) format of the current culture.</span></span> <span data-ttu-id="4c931-829">Si vous souhaitez spécifier un autre format, la précision ou la culture, utilisez les autres surcharges de la <xref:System.Double.ToString%2A> méthode, comme suit :</span><span class="sxs-lookup"><span data-stu-id="4c931-829">If you want to specify a different format, precision, or culture, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="4c931-830">Pour utiliser le format</span><span class="sxs-lookup"><span data-stu-id="4c931-830">To use format</span></span>|<span data-ttu-id="4c931-831">Pour la culture</span><span class="sxs-lookup"><span data-stu-id="4c931-831">For culture</span></span>|<span data-ttu-id="4c931-832">Utilisez la surcharge</span><span class="sxs-lookup"><span data-stu-id="4c931-832">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="4c931-833">Format par défaut (« G »)</span><span class="sxs-lookup"><span data-stu-id="4c931-833">Default ("G") format</span></span>|<span data-ttu-id="4c931-834">Une culture spécifique</span><span class="sxs-lookup"><span data-stu-id="4c931-834">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="4c931-835">Un format spécifique ou précision</span><span class="sxs-lookup"><span data-stu-id="4c931-835">A specific format or precision</span></span>|<span data-ttu-id="4c931-836">Culture (actuel) par défaut</span><span class="sxs-lookup"><span data-stu-id="4c931-836">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
|<span data-ttu-id="4c931-837">Un format spécifique ou précision</span><span class="sxs-lookup"><span data-stu-id="4c931-837">A specific format or precision</span></span>|<span data-ttu-id="4c931-838">Une culture spécifique</span><span class="sxs-lookup"><span data-stu-id="4c931-838">A specific culture</span></span>|<xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="4c931-839">La valeur de retour peut être <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, ou une chaîne sous la forme :</span><span class="sxs-lookup"><span data-stu-id="4c931-839">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or a string of the form:</span></span>  
  
 <span data-ttu-id="4c931-840">[signe] chiffres intégraux [. [chiffres fractionnaires]] [e [signe] chiffres exponentiels]</span><span class="sxs-lookup"><span data-stu-id="4c931-840">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span></span>  
  
 <span data-ttu-id="4c931-841">Éléments facultatifs sont encadrés par des crochets ([et]).</span><span class="sxs-lookup"><span data-stu-id="4c931-841">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="4c931-842">Les éléments qui contiennent le terme « chiffres » sont constitués d’une série de chiffres allant de 0 à 9.</span><span class="sxs-lookup"><span data-stu-id="4c931-842">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span> <span data-ttu-id="4c931-843">Les éléments répertoriés dans le tableau suivant sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="4c931-843">The elements listed in the following table are supported.</span></span>  
  
|<span data-ttu-id="4c931-844">Élément</span><span class="sxs-lookup"><span data-stu-id="4c931-844">Element</span></span>|<span data-ttu-id="4c931-845">Description </span><span class="sxs-lookup"><span data-stu-id="4c931-845">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4c931-846">*sign*</span><span class="sxs-lookup"><span data-stu-id="4c931-846">*sign*</span></span>|<span data-ttu-id="4c931-847">Un signe négatif ou le symbole du signe positif.</span><span class="sxs-lookup"><span data-stu-id="4c931-847">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="4c931-848">*chiffres intégraux*</span><span class="sxs-lookup"><span data-stu-id="4c931-848">*integral-digits*</span></span>|<span data-ttu-id="4c931-849">Une série de chiffres spécifiant la partie entière du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-849">A series of digits specifying the integral part of the number.</span></span> <span data-ttu-id="4c931-850">Chiffres intégraux peuvent être absents s’il y a des chiffres fractionnaires.</span><span class="sxs-lookup"><span data-stu-id="4c931-850">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="4c931-851">'*. *'</span><span class="sxs-lookup"><span data-stu-id="4c931-851">'*.*'</span></span>|<span data-ttu-id="4c931-852">Un symbole décimal spécifiques à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-852">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="4c931-853">*chiffres fractionnaires*</span><span class="sxs-lookup"><span data-stu-id="4c931-853">*fractional-digits*</span></span>|<span data-ttu-id="4c931-854">Une série de chiffres spécifiant la partie fractionnaire du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-854">A series of digits specifying the fractional part of the number.</span></span>|  
|<span data-ttu-id="4c931-855">'*e*'</span><span class="sxs-lookup"><span data-stu-id="4c931-855">'*e*'</span></span>|<span data-ttu-id="4c931-856">Un caractère minuscule « e », indiquant la notation exponentielle (scientifique).</span><span class="sxs-lookup"><span data-stu-id="4c931-856">A lowercase character 'e', indicating exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="4c931-857">*chiffres exponentiels*</span><span class="sxs-lookup"><span data-stu-id="4c931-857">*exponential-digits*</span></span>|<span data-ttu-id="4c931-858">Une série de chiffres spécifiant un exposant.</span><span class="sxs-lookup"><span data-stu-id="4c931-858">A series of digits specifying an exponent.</span></span>|  
  
 <span data-ttu-id="4c931-859">Sont des exemples de la valeur de retour « 100 », «-123 456 789 », « 123.45e + 6 », « 500 », « 3,1416 », « 600 », « -0,123 », et «-Infinity ».</span><span class="sxs-lookup"><span data-stu-id="4c931-859">Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</span></span>  
  
 <span data-ttu-id="4c931-860">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</span><span class="sxs-lookup"><span data-stu-id="4c931-860">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="4c931-861">Pour plus d’informations sur les spécificateurs de format numérique, consultez [des chaînes de Format numériques Standard](~/docs/standard/base-types/standard-numeric-format-strings.md) et [les chaînes de Format numériques personnalisées](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="4c931-861">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4c931-862">Pour plus d’informations sur la mise en forme, consultez [mise en forme des Types](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="4c931-862">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-863">L’exemple suivant utilise la valeur par défaut <xref:System.Double.ToString?displayProperty=nameWithType> méthode pour afficher les représentations sous forme de chaîne d’un nombre de <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-863">The following example uses the default <xref:System.Double.ToString?displayProperty=nameWithType> method to display the string representations of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Double.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Double.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString1.vb#1)]  
  
 <span data-ttu-id="4c931-864">L’exemple suivant illustre l’utilisation de <xref:System.Double.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c931-864">The following example illustrates the use of <xref:System.Double.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Double#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#3)]
 [!code-csharp[System.Double#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#3)]
 [!code-vb[System.Double#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="4c931-865">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-865">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-866">Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide des informations de format spécifiques à la culture donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-866">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-867">Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-867">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-868">Le <xref:System.Double.ToString%28System.IFormatProvider%29> méthode formats un <xref:System.Double> valeur dans la valeur par défaut (« G » ou général) le format d’une culture spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4c931-868">The <xref:System.Double.ToString%28System.IFormatProvider%29> method formats a <xref:System.Double> value in the default ("G", or general) format of a specified culture.</span></span> <span data-ttu-id="4c931-869">Si vous souhaitez spécifier un autre format ou la culture, utilisez les autres surcharges de la <xref:System.Double.ToString%2A> méthode, comme suit :</span><span class="sxs-lookup"><span data-stu-id="4c931-869">If you want to specify a different format or culture, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="4c931-870">Pour utiliser le format</span><span class="sxs-lookup"><span data-stu-id="4c931-870">To use format</span></span>|<span data-ttu-id="4c931-871">Pour la culture</span><span class="sxs-lookup"><span data-stu-id="4c931-871">For culture</span></span>|<span data-ttu-id="4c931-872">Utilisez la surcharge</span><span class="sxs-lookup"><span data-stu-id="4c931-872">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="4c931-873">Format par défaut (« G »)</span><span class="sxs-lookup"><span data-stu-id="4c931-873">Default ("G") format</span></span>|<span data-ttu-id="4c931-874">Par défaut (actuelle)</span><span class="sxs-lookup"><span data-stu-id="4c931-874">Default (current)</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="4c931-875">Un format spécifique ou précision</span><span class="sxs-lookup"><span data-stu-id="4c931-875">A specific format or precision</span></span>|<span data-ttu-id="4c931-876">Culture (actuel) par défaut</span><span class="sxs-lookup"><span data-stu-id="4c931-876">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
|<span data-ttu-id="4c931-877">Un format spécifique ou précision</span><span class="sxs-lookup"><span data-stu-id="4c931-877">A specific format or precision</span></span>|<span data-ttu-id="4c931-878">Une culture spécifique</span><span class="sxs-lookup"><span data-stu-id="4c931-878">A specific culture</span></span>|<xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="4c931-879">La valeur de retour peut être <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, ou une chaîne sous la forme :</span><span class="sxs-lookup"><span data-stu-id="4c931-879">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or a string of the form:</span></span>  
  
 <span data-ttu-id="4c931-880">[signe] chiffres intégraux [. [chiffres fractionnaires]] [e [signe] chiffres exponentiels]</span><span class="sxs-lookup"><span data-stu-id="4c931-880">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span></span>  
  
 <span data-ttu-id="4c931-881">Éléments facultatifs sont encadrés par des crochets ([et]).</span><span class="sxs-lookup"><span data-stu-id="4c931-881">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="4c931-882">Les éléments qui contiennent le terme « chiffres » sont constitués d’une série de chiffres allant de 0 à 9.</span><span class="sxs-lookup"><span data-stu-id="4c931-882">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span> <span data-ttu-id="4c931-883">Les éléments répertoriés dans le tableau suivant sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="4c931-883">The elements listed in the following table are supported.</span></span>  
  
|<span data-ttu-id="4c931-884">Élément</span><span class="sxs-lookup"><span data-stu-id="4c931-884">Element</span></span>|<span data-ttu-id="4c931-885">Description </span><span class="sxs-lookup"><span data-stu-id="4c931-885">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4c931-886">*sign*</span><span class="sxs-lookup"><span data-stu-id="4c931-886">*sign*</span></span>|<span data-ttu-id="4c931-887">Un signe négatif ou le symbole du signe positif.</span><span class="sxs-lookup"><span data-stu-id="4c931-887">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="4c931-888">*chiffres intégraux*</span><span class="sxs-lookup"><span data-stu-id="4c931-888">*integral-digits*</span></span>|<span data-ttu-id="4c931-889">Une série de chiffres spécifiant la partie entière du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-889">A series of digits specifying the integral part of the number.</span></span> <span data-ttu-id="4c931-890">Chiffres intégraux peuvent être absents s’il y a des chiffres fractionnaires.</span><span class="sxs-lookup"><span data-stu-id="4c931-890">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="4c931-891">'*. *'</span><span class="sxs-lookup"><span data-stu-id="4c931-891">'*.*'</span></span>|<span data-ttu-id="4c931-892">Un symbole décimal spécifiques à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-892">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="4c931-893">*chiffres fractionnaires*</span><span class="sxs-lookup"><span data-stu-id="4c931-893">*fractional-digits*</span></span>|<span data-ttu-id="4c931-894">Une série de chiffres spécifiant la partie fractionnaire du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-894">A series of digits specifying the fractional part of the number.</span></span>|  
|<span data-ttu-id="4c931-895">'*e*'</span><span class="sxs-lookup"><span data-stu-id="4c931-895">'*e*'</span></span>|<span data-ttu-id="4c931-896">Un caractère minuscule « e », indiquant la notation exponentielle (scientifique).</span><span class="sxs-lookup"><span data-stu-id="4c931-896">A lowercase character 'e', indicating exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="4c931-897">*chiffres exponentiels*</span><span class="sxs-lookup"><span data-stu-id="4c931-897">*exponential-digits*</span></span>|<span data-ttu-id="4c931-898">Une série de chiffres spécifiant un exposant.</span><span class="sxs-lookup"><span data-stu-id="4c931-898">A series of digits specifying an exponent.</span></span>|  
  
 <span data-ttu-id="4c931-899">Sont des exemples de la valeur de retour « 100 », «-123 456 789 », « 123.45e + 6 », « 500 », « 3,1416 », « 600 », « -0,123 », et «-Infinity ».</span><span class="sxs-lookup"><span data-stu-id="4c931-899">Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</span></span>  
  
 <span data-ttu-id="4c931-900">Cette instance est mise en forme avec le spécificateur de format numérique général (« G »).</span><span class="sxs-lookup"><span data-stu-id="4c931-900">This instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="4c931-901">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</span><span class="sxs-lookup"><span data-stu-id="4c931-901">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="4c931-902">Pour plus d’informations sur les spécificateurs de format numérique, consultez [des chaînes de Format numériques Standard](~/docs/standard/base-types/standard-numeric-format-strings.md) et [les chaînes de Format numériques personnalisées](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="4c931-902">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4c931-903">Pour plus d’informations sur la mise en forme, consultez [mise en forme des Types](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="4c931-903">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4c931-904">Le `provider` paramètre est un <xref:System.IFormatProvider> implémentation dont <xref:System.IFormatProvider.GetFormat%2A> méthode retourne un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4c931-904">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4c931-905">En règle générale, `provider` est un <xref:System.Globalization.CultureInfo> objet ou un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4c931-905">Typically, `provider` is a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4c931-906">Le `provider` paramètre fournit des informations spécifiques à la culture utilisées dans la mise en forme.</span><span class="sxs-lookup"><span data-stu-id="4c931-906">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="4c931-907">Si `provider` est `null`, la valeur de retour est mise en forme à l’aide de la <xref:System.Globalization.NumberFormatInfo> objet pour la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4c931-907">If `provider` is `null`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-908">L’exemple suivant affiche la représentation sous forme de chaîne de deux <xref:System.Double> à l’aide des valeurs <xref:System.Globalization.CultureInfo> objets qui représentent plusieurs cultures différentes.</span><span class="sxs-lookup"><span data-stu-id="4c931-908">The following example displays the string representation of two <xref:System.Double> values using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Double.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString1.cs#2)]
 [!code-vb[System.Double.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString1.vb#2)]  
  
 <span data-ttu-id="4c931-909">L’exemple suivant illustre l’utilisation de <xref:System.Double.ToString%2A>, avec un <xref:System.String> et un <xref:System.IFormatProvider> en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="4c931-909">The following example illustrates the use of <xref:System.Double.ToString%2A>, taking a <xref:System.String> and an <xref:System.IFormatProvider> as parameters.</span></span>  
  
 [!code-cpp[Double Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#4)]
 [!code-csharp[Double Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#4)]
 [!code-vb[Double Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4c931-910">Chaîne de format numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-910">A numeric format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-911">Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente en utilisant le format spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-911">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-912">Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="format" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-912">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-913">Le <xref:System.Double.ToString%28System.String%29> méthode formats un <xref:System.Double> valeur dans un format spécifié en utilisant les conventions de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4c931-913">The <xref:System.Double.ToString%28System.String%29> method formats a <xref:System.Double> value in a specified format by using the conventions of the current culture.</span></span> <span data-ttu-id="4c931-914">Si vous souhaitez spécifier un autre format ou la culture, utilisez les autres surcharges de la <xref:System.Double.ToString%2A> méthode, comme suit :</span><span class="sxs-lookup"><span data-stu-id="4c931-914">If you want to specify a different format or culture, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="4c931-915">Pour utiliser le format</span><span class="sxs-lookup"><span data-stu-id="4c931-915">To use format</span></span>|<span data-ttu-id="4c931-916">Pour la culture</span><span class="sxs-lookup"><span data-stu-id="4c931-916">For culture</span></span>|<span data-ttu-id="4c931-917">Utilisez la surcharge</span><span class="sxs-lookup"><span data-stu-id="4c931-917">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="4c931-918">Format par défaut (« G »)</span><span class="sxs-lookup"><span data-stu-id="4c931-918">Default ("G") format</span></span>|<span data-ttu-id="4c931-919">Culture (actuel) par défaut</span><span class="sxs-lookup"><span data-stu-id="4c931-919">Default (current) culture</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="4c931-920">Format par défaut (« G »)</span><span class="sxs-lookup"><span data-stu-id="4c931-920">Default ("G") format</span></span>|<span data-ttu-id="4c931-921">Une culture spécifique</span><span class="sxs-lookup"><span data-stu-id="4c931-921">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="4c931-922">Un format spécifique ou précision</span><span class="sxs-lookup"><span data-stu-id="4c931-922">A specific format or precision</span></span>|<span data-ttu-id="4c931-923">Une culture spécifique</span><span class="sxs-lookup"><span data-stu-id="4c931-923">A specific culture</span></span>|<xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="4c931-924">La valeur de retour peut être <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, ou la représentation sous forme de chaîne d’un nombre, tel que spécifié par `format`.</span><span class="sxs-lookup"><span data-stu-id="4c931-924">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or the string representation of a number, as specified by `format`.</span></span>  
  
 <span data-ttu-id="4c931-925">Le `format` paramètre peut être n’importe quel spécificateur de format numérique standard valide à l’exception de D et X, ainsi que toute combinaison de spécificateurs de format numériques personnalisées.</span><span class="sxs-lookup"><span data-stu-id="4c931-925">The `format` parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="4c931-926">Si `format` est `null` ou une chaîne vide, la valeur de retour est mis en forme avec le spécificateur de format numérique général (« G »).</span><span class="sxs-lookup"><span data-stu-id="4c931-926">If `format` is `null` or an empty string, the return value is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="4c931-927">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</span><span class="sxs-lookup"><span data-stu-id="4c931-927">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="4c931-928">Pour plus d’informations sur les spécificateurs de format numérique, consultez [des chaînes de Format numériques Standard](~/docs/standard/base-types/standard-numeric-format-strings.md) et [les chaînes de Format numériques personnalisées](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="4c931-928">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4c931-929">Pour plus d’informations sur la mise en forme, consultez [mise en forme des Types](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="4c931-929">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4c931-930">Par défaut, la valeur de retour contient uniquement 15 chiffres de précision bien qu’un maximum de 17 chiffres soit conservé en interne.</span><span class="sxs-lookup"><span data-stu-id="4c931-930">By default, the return value only contains 15 digits of precision although a maximum of 17 digits is maintained internally.</span></span> <span data-ttu-id="4c931-931">Si la valeur de cette instance est supérieure à 15 chiffres, <xref:System.Double.ToString%2A> retourne <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> ou <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> au lieu du nombre attendu.</span><span class="sxs-lookup"><span data-stu-id="4c931-931">If the value of this instance has greater than 15 digits, <xref:System.Double.ToString%2A> returns <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> instead of the expected number.</span></span> <span data-ttu-id="4c931-932">Si vous avez besoin d’une plus grande précision, spécifiez `format` avec la spécification de format « G17 », qui retourne toujours 17 chiffres de précision, ou « R », qui retourne 15 chiffres si le nombre peut être représenté avec cette précision ou 17 chiffres si le nombre ne peut pas être représentées avec la précision maximale.</span><span class="sxs-lookup"><span data-stu-id="4c931-932">If you require more precision, specify `format` with the "G17" format specification, which always returns 17 digits of precision, or "R", which returns 15 digits if the number can be represented with that precision or 17 digits if the number can only be represented with maximum precision.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-933">L’exemple suivant définit une valeur numérique et la forme en tant que valeur monétaire en utilisant la chaîne de format numérique standard « C » et en tant que valeur numérique à trois décimales à l’aide de la chaîne de format numérique standard « N ».</span><span class="sxs-lookup"><span data-stu-id="4c931-933">The following example defines a numeric value and formats it as a currency value by using the "C" standard numeric format string and as a numeric value to three decimal places by using the "N" standard numeric format string.</span></span> <span data-ttu-id="4c931-934">Les chaînes résultantes sont mises en forme en utilisant les conventions de la culture en-US.</span><span class="sxs-lookup"><span data-stu-id="4c931-934">The result strings are formatted by using the conventions of the en-US culture.</span></span> <span data-ttu-id="4c931-935">Pour plus d’informations sur les chaînes de format numérique, consultez [des chaînes de Format numériques Standard](~/docs/standard/base-types/standard-numeric-format-strings.md) et [les chaînes de Format numériques personnalisées](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="4c931-935">For more information on numeric format strings, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
 [!code-csharp[System.Double.ToString#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString7.cs#7)]
 [!code-vb[System.Double.ToString#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString7.vb#7)]  
  
 <span data-ttu-id="4c931-936">L’exemple suivant affiche plusieurs <xref:System.Double> des valeurs en utilisant les spécificateurs de format numérique standard pris en charge avec trois chaînes de format numériques personnalisées.</span><span class="sxs-lookup"><span data-stu-id="4c931-936">The following example displays several <xref:System.Double> values using the supported standard numeric format specifiers together with three custom numeric format strings.</span></span> <span data-ttu-id="4c931-937">Une de ces chaînes de format personnalisées illustre comment remplir un <xref:System.Single> valeur avec des zéros non significatifs.</span><span class="sxs-lookup"><span data-stu-id="4c931-937">One of those custom format strings illustrates how to pad a <xref:System.Single> value with leading zeros.</span></span> <span data-ttu-id="4c931-938">En outre, l’exemple utilise le spécificateur de précision avec chaque spécificateur de format standard à l’exception de « R ».</span><span class="sxs-lookup"><span data-stu-id="4c931-938">In addition, the example uses precision specifiers with each standard format specifier except for "R".</span></span> <span data-ttu-id="4c931-939">Les valeurs de la plage de spécificateurs de précision de 0 à 3.</span><span class="sxs-lookup"><span data-stu-id="4c931-939">The values of the precision specifiers range from 0 to 3.</span></span> <span data-ttu-id="4c931-940">Pour convertir les valeurs numériques en chaînes, l’exemple utilise les conventions de mise en forme de la culture en-US.</span><span class="sxs-lookup"><span data-stu-id="4c931-940">To convert the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Double.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double.ToString/cpp/tostring3.cpp#3)]
 [!code-csharp[System.Double.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Double.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4c931-941">
            <paramref name="format" /> n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-941">
              <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="4c931-942">
            <para>Dans certains cas, <see cref="T:System.Double" /> valeurs mises en forme au ne de chaîne de format numérique standard « R » pas un aller-retour si elles sont compilées à l’aide de la <see langword="/platform:x64" /> ou <see langword="/platform:anycpu" /> commutateurs et exécutées sur des systèmes 64 bits. Pour contourner ce problème, vous pouvez mettre en forme les valeurs <see cref="T:System.Double" /> en utilisant la chaîne de format numérique standard "G17". L’exemple suivant utilise la chaîne de format « R » avec un <see cref="T:System.Double" /> qui ne fait pas un aller-retour de valeur avec succès, et également utilise le « G17 » chaîne de format pour un aller-retour la valeur d’origine.  [ ! csharp de code [System.Double.ToString#6] (~/samples/snippets/csharp/VS_Snippets_CLR_System/système. Double.ToString/cs/roundtripex2.cs#6)] [ !-code vb [System.Double.ToString#6] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/système. Double.ToString/vb/roundtripex2.vb#6)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-942">
              <para>In some cases, <see cref="T:System.Double" /> values formatted with the "R" standard numeric format string do not successfully round-trip if compiled using the <see langword="/platform:x64" /> or <see langword="/platform:anycpu" /> switches and run on 64-bit systems. To work around this problem, you can format <see cref="T:System.Double" /> values by using the "G17" standard numeric format string. The following example uses the "R" format string with a <see cref="T:System.Double" /> value that does not round-trip successfully, and also uses the "G17" format string to successfully round-trip the original value.  [!code-csharp[System.Double.ToString#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/roundtripex2.cs#6)] [!code-vb[System.Double.ToString#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/roundtripex2.vb#6)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Double.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4c931-943">Chaîne de format numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-943">A numeric format string.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4c931-944">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-944">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-945">Convertit la valeur numérique de cette instance en sa représentation sous forme de chaîne équivalente à l'aide du format spécifié et des informations de format spécifiques à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-945">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-946">Représentation sous forme de chaîne de la valeur de cette instance, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-946">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-947">Le <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> méthode formats un <xref:System.Double> valeur dans un format spécifié d’une culture spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4c931-947">The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture.</span></span> <span data-ttu-id="4c931-948">Si vous souhaitez spécifier un autre format ou la culture, utilisez les autres surcharges de la <xref:System.Double.ToString%2A> méthode, comme suit :</span><span class="sxs-lookup"><span data-stu-id="4c931-948">If you want to specify a different format or culture, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="4c931-949">Pour utiliser le format</span><span class="sxs-lookup"><span data-stu-id="4c931-949">To use format</span></span>|<span data-ttu-id="4c931-950">Pour la culture</span><span class="sxs-lookup"><span data-stu-id="4c931-950">For culture</span></span>|<span data-ttu-id="4c931-951">Utilisez la surcharge</span><span class="sxs-lookup"><span data-stu-id="4c931-951">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="4c931-952">Format par défaut (« G »)</span><span class="sxs-lookup"><span data-stu-id="4c931-952">Default ("G") format</span></span>|<span data-ttu-id="4c931-953">Culture (actuel) par défaut</span><span class="sxs-lookup"><span data-stu-id="4c931-953">Default (current) culture</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="4c931-954">Format par défaut (« G »)</span><span class="sxs-lookup"><span data-stu-id="4c931-954">Default ("G") format</span></span>|<span data-ttu-id="4c931-955">Une culture spécifique</span><span class="sxs-lookup"><span data-stu-id="4c931-955">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="4c931-956">Un format spécifique ou précision</span><span class="sxs-lookup"><span data-stu-id="4c931-956">A specific format or precision</span></span>|<span data-ttu-id="4c931-957">Culture (actuel) par défaut</span><span class="sxs-lookup"><span data-stu-id="4c931-957">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
  
 <span data-ttu-id="4c931-958">La valeur de retour peut être <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, ou la représentation sous forme de chaîne d’un nombre, tel que spécifié par `format`.</span><span class="sxs-lookup"><span data-stu-id="4c931-958">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or the string representation of a number, as specified by `format`.</span></span>  
  
 <span data-ttu-id="4c931-959">Le `format` paramètre peut être n’importe quel spécificateur de format numérique standard valide à l’exception de D et X, ainsi que toute combinaison de spécificateurs de format numériques personnalisées.</span><span class="sxs-lookup"><span data-stu-id="4c931-959">The `format` parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="4c931-960">Si `format` est `null` ou une chaîne vide, la valeur de retour de cette instance est mise en forme avec le spécificateur de format numérique général (« G »).</span><span class="sxs-lookup"><span data-stu-id="4c931-960">If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="4c931-961">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</span><span class="sxs-lookup"><span data-stu-id="4c931-961">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="4c931-962">Pour plus d’informations sur les spécificateurs de format numérique, consultez [des chaînes de Format numériques Standard](~/docs/standard/base-types/standard-numeric-format-strings.md) et [les chaînes de Format numériques personnalisées](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="4c931-962">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4c931-963">Pour plus d’informations sur la mise en forme, consultez [mise en forme des Types](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="4c931-963">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4c931-964">Le `provider` paramètre est un <xref:System.IFormatProvider> implémentation dont <xref:System.IFormatProvider.GetFormat%2A> méthode retourne un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4c931-964">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4c931-965">En règle générale, `provider` est un <xref:System.Globalization.CultureInfo> objet ou un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4c931-965">Typically, `provider` is a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4c931-966">Le `provider` paramètre fournit des informations spécifiques à la culture utilisées dans la mise en forme.</span><span class="sxs-lookup"><span data-stu-id="4c931-966">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="4c931-967">Si `provider` est `null`, la valeur de retour est mise en forme à l’aide de la <xref:System.Globalization.NumberFormatInfo> objet pour la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4c931-967">If `provider` is `null`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
 <span data-ttu-id="4c931-968">Par défaut, la valeur de retour contient uniquement 15 chiffres de précision bien qu’un maximum de 17 chiffres soit conservé en interne.</span><span class="sxs-lookup"><span data-stu-id="4c931-968">By default, the return value only contains 15 digits of precision although a maximum of 17 digits is maintained internally.</span></span> <span data-ttu-id="4c931-969">Si la valeur de cette instance est supérieure à 15 chiffres, <xref:System.Double.ToString%2A> retourne <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> ou <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> au lieu du nombre attendu.</span><span class="sxs-lookup"><span data-stu-id="4c931-969">If the value of this instance has greater than 15 digits, <xref:System.Double.ToString%2A> returns <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> instead of the expected number.</span></span> <span data-ttu-id="4c931-970">Si vous avez besoin d’une plus grande précision, spécifiez `format` avec la spécification de format « G17 », qui retourne toujours 17 chiffres de précision, ou « R », qui retourne 15 chiffres si le nombre peut être représenté avec cette précision ou 17 chiffres si le nombre ne peut pas être représentées avec la précision maximale.</span><span class="sxs-lookup"><span data-stu-id="4c931-970">If you require more precision, specify `format` with the "G17" format specification, which always returns 17 digits of precision, or "R", which returns 15 digits if the number can be represented with that precision or 17 digits if the number can only be represented with maximum precision.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-971">L’exemple suivant affiche un <xref:System.Double> valeur à l’aide de chacun des spécificateurs de format numérique standard pris en charge pour plusieurs cultures différentes.</span><span class="sxs-lookup"><span data-stu-id="4c931-971">The following example displays a <xref:System.Double> value using each of the supported standard numeric format specifiers for several different cultures.</span></span>  
  
 [!code-cpp[System.Double.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double.ToString/cpp/tostring1.cpp#4)]
 [!code-csharp[System.Double.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Double.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString1.vb#4)]  
  
 <span data-ttu-id="4c931-972">L’exemple suivant illustre l’utilisation de <xref:System.Double.ToString%2A>, avec un <xref:System.String> et un <xref:System.IFormatProvider> en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="4c931-972">The following example illustrates the use of <xref:System.Double.ToString%2A>, taking a <xref:System.String> and an <xref:System.IFormatProvider> as parameters.</span></span>  
  
 [!code-cpp[Double Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#4)]
 [!code-csharp[Double Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#4)]
 [!code-vb[Double Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="4c931-973">
            <para>Dans certains cas, <see cref="T:System.Double" /> valeurs mises en forme au ne de chaîne de format numérique standard « R » pas un aller-retour si elles sont compilées à l’aide de la <see langword="/platform:x64" /> ou <see langword="/platform:anycpu" /> commutateurs et exécutées sur des systèmes 64 bits. Pour contourner ce problème, vous pouvez mettre en forme les valeurs <see cref="T:System.Double" /> en utilisant la chaîne de format numérique standard "G17". L’exemple suivant utilise la chaîne de format « R » avec un <see cref="T:System.Double" /> qui ne fait pas un aller-retour de valeur avec succès, et également utilise le « G17 » chaîne de format pour un aller-retour la valeur d’origine.  [ ! csharp de code [System.Double.ToString#5] (~/samples/snippets/csharp/VS_Snippets_CLR_System/système. Double.ToString/cs/roundtripex1.cs#5)] [ !-code vb [System.Double.ToString#5] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/système. Double.ToString/vb/roundtripex1.vb#5)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-973">
              <para>In some cases, <see cref="T:System.Double" /> values formatted with the "R" standard numeric format string do not successfully round-trip if compiled using the <see langword="/platform:x64" /> or <see langword="/platform:anycpu" /> switches and run on 64-bit systems. To work around this problem, you can format <see cref="T:System.Double" /> values by using the "G17" standard numeric format string. The following example uses the "R" format string with a <see cref="T:System.Double" /> value that does not round-trip successfully, and also uses the "G17" format string to successfully round-trip the original value.  [!code-csharp[System.Double.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/roundtripex1.cs#5)] [!code-vb[System.Double.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/roundtripex1.vb#5)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Double.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c931-974">Convertit la représentation sous forme de chaîne d'un nombre en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-974">Converts the string representation of a number to its double-precision floating-point number equivalent.</span>
          </span>
          <span data-ttu-id="4c931-975">Une valeur de retour indique si la conversion a réussi ou a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-975">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Double.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] double % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryParse(System.String,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] double % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4c931-976">Chaîne contenant un nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-976">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="4c931-977">Quand cette méthode est retournée, contient le nombre à virgule flottante double précision équivalent au paramètre <c>s</c> si la conversion a réussi, ou zéro si elle a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-977">When this method returns, contains the double-precision floating-point number equivalent of the <c>s</c> parameter, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="4c931-978">La conversion échoue si le paramètre <c>s</c> est <see langword="null" /> ou <see cref="F:System.String.Empty" />, n’est pas un nombre dans un format valide ou représente un nombre inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-978">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a valid format, or represents a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
          <span data-ttu-id="4c931-979">Ce paramètre est passé sous forme non initialisée. Toute valeur fournie initialement dans <c>result</c> sera remplacée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-979">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-980">Convertit la représentation sous forme de chaîne d'un nombre en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-980">Converts the string representation of a number to its double-precision floating-point number equivalent.</span>
          </span>
          <span data-ttu-id="4c931-981">Une valeur de retour indique si la conversion a réussi ou a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-981">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-982">
            <see langword="true" /> si la conversion de <paramref name="s" /> est réussie ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-982">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-983">Cette surcharge diffère la <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> méthode en retournant une valeur booléenne qui indique si l’opération d’analyse a réussi au lieu de retourner la valeur numérique analysée.</span><span class="sxs-lookup"><span data-stu-id="4c931-983">This overload differs from the <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="4c931-984">Elle élimine la nécessité d’utiliser la gestion des exceptions pour tester un <xref:System.FormatException> dans le cas où `s` n’est pas valide et ne peut pas être analysée avec succès.</span><span class="sxs-lookup"><span data-stu-id="4c931-984">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="4c931-985">Le `s` paramètre peut contenir de la culture actuelle <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> (la comparaison de chaînes respecte la casse), ou une chaîne sous la forme :</span><span class="sxs-lookup"><span data-stu-id="4c931-985">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> (the string comparison is case-sensitive), or a string of the form:</span></span>  
  
 <span data-ttu-id="4c931-986">[ws] [connexion] [chiffres intégraux,] chiffres intégraux [. [chiffres fractionnaires]] [e [signe] chiffres exponentiels] [ws]</span><span class="sxs-lookup"><span data-stu-id="4c931-986">[ws][sign][integral-digits,]integral-digits[.[fractional-digits]][e[sign]exponential-digits][ws]</span></span>  
  
 <span data-ttu-id="4c931-987">Les éléments entre crochets sont facultatifs.</span><span class="sxs-lookup"><span data-stu-id="4c931-987">Elements in square brackets are optional.</span></span> <span data-ttu-id="4c931-988">Le tableau suivant décrit chaque élément.</span><span class="sxs-lookup"><span data-stu-id="4c931-988">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4c931-989">Élément</span><span class="sxs-lookup"><span data-stu-id="4c931-989">Element</span></span>|<span data-ttu-id="4c931-990">Description </span><span class="sxs-lookup"><span data-stu-id="4c931-990">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4c931-991">*ws*</span><span class="sxs-lookup"><span data-stu-id="4c931-991">*ws*</span></span>|<span data-ttu-id="4c931-992">Une série de caractères d’espace blanc.</span><span class="sxs-lookup"><span data-stu-id="4c931-992">A series of white-space characters.</span></span>|  
|<span data-ttu-id="4c931-993">*sign*</span><span class="sxs-lookup"><span data-stu-id="4c931-993">*sign*</span></span>|<span data-ttu-id="4c931-994">Un signe négatif ou le symbole du signe positif.</span><span class="sxs-lookup"><span data-stu-id="4c931-994">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="4c931-995">*chiffres intégraux*</span><span class="sxs-lookup"><span data-stu-id="4c931-995">*integral-digits*</span></span>|<span data-ttu-id="4c931-996">Une série de chiffres allant de 0 à 9 qui spécifie la partie entière du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-996">A series of numeric characters ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="4c931-997">Chiffres intégraux peuvent être absents s’il y a des chiffres fractionnaires.</span><span class="sxs-lookup"><span data-stu-id="4c931-997">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="4c931-998">*,*</span><span class="sxs-lookup"><span data-stu-id="4c931-998">*,*</span></span>|<span data-ttu-id="4c931-999">Un symbole de séparateur de groupes spécifique à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-999">A culture-specific group separator symbol.</span></span>|  
|<span data-ttu-id="4c931-1000">*.*</span><span class="sxs-lookup"><span data-stu-id="4c931-1000">*.*</span></span>|<span data-ttu-id="4c931-1001">Un symbole décimal spécifiques à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-1001">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="4c931-1002">*chiffres fractionnaires*</span><span class="sxs-lookup"><span data-stu-id="4c931-1002">*fractional-digits*</span></span>|<span data-ttu-id="4c931-1003">Une série de caractères numériques comprises entre 0 et 9 qui spécifie la partie fractionnaire du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-1003">A series of numeric characters ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="4c931-1004">*E*</span><span class="sxs-lookup"><span data-stu-id="4c931-1004">*E*</span></span>|<span data-ttu-id="4c931-1005">Un majuscule ou minuscule caractère 'e', qui indique la notation exponentielle (scientifique).</span><span class="sxs-lookup"><span data-stu-id="4c931-1005">An uppercase or lowercase character 'e', that indicates exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="4c931-1006">*chiffres exponentiels*</span><span class="sxs-lookup"><span data-stu-id="4c931-1006">*exponential-digits*</span></span>|<span data-ttu-id="4c931-1007">Une série de caractères numériques comprises entre 0 et 9 qui spécifie un exposant.</span><span class="sxs-lookup"><span data-stu-id="4c931-1007">A series of numeric characters ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="4c931-1008">Pour plus d’informations sur les formats numériques, consultez [mise en forme des Types](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="4c931-1008">For more information about numeric formats, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4c931-1009">Le `s` paramètre est interprété à l’aide d’une combinaison de la <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> et <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> indicateurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-1009">The `s` parameter is interpreted by using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="4c931-1010">Cela signifie que les espaces blancs et des milliers séparateurs sont autorisées mais ne sont pas les symboles monétaires.</span><span class="sxs-lookup"><span data-stu-id="4c931-1010">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="4c931-1011">Pour définir explicitement les éléments (tels que les symboles monétaires, des milliers séparateurs et espace blanc) qui peuvent être présents dans `s`, utilisez le <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="4c931-1011">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="4c931-1012">Le `s` paramètre est analysé en utilisant les informations de mise en forme dans un <xref:System.Globalization.NumberFormatInfo> objet initialisé pour la culture système actuelle.</span><span class="sxs-lookup"><span data-stu-id="4c931-1012">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="4c931-1013">Pour plus d'informations, consultez <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4c931-1013">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4c931-1014">Pour analyser une chaîne en utilisant les informations de mise en forme d’une autre culture spécifiée, utilisez la <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="4c931-1014">To parse a string using the formatting information of some other specified culture, use the <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="4c931-1015">En règle générale, si vous passez le <xref:System.Double.TryParse%2A?displayProperty=nameWithType> méthode une chaîne qui est créé en appelant le <xref:System.Double.ToString%2A?displayProperty=nameWithType> , la méthode <xref:System.Double> valeur est retournée.</span><span class="sxs-lookup"><span data-stu-id="4c931-1015">Ordinarily, if you pass the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="4c931-1016">Toutefois, en raison d’une perte de précision, les valeurs ne peuvent pas être égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-1016">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="4c931-1017">En outre, une tentative d’analyser la représentation sous forme de chaîne d’un <xref:System.Double.MinValue> ou <xref:System.Double.MaxValue> lève une <xref:System.OverflowException>, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="4c931-1017">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.TryParse/cs/tryparse2.cs#3)]
 [!code-vb[System.Double.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.TryParse/vb/tryparse2.vb#3)]  
  
 <span data-ttu-id="4c931-1018">Si un séparateur est rencontré dans le `s` paramètre pendant une opération d’analyse et les séparateurs décimaux et de groupe sont identiques, l’opération d’analyse suppose que le séparateur est un séparateur décimal plutôt qu’un séparateur de groupes.</span><span class="sxs-lookup"><span data-stu-id="4c931-1018">If a separator is encountered in the `s` parameter during a parse operation, and the decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="4c931-1019">Pour plus d’informations sur les séparateurs, consultez <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, et <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c931-1019">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-1020">L’exemple suivant utilise le <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29> méthode pour convertir les représentations sous forme de chaîne de valeurs numériques à <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4c931-1020">The following example uses the <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29> method to convert the string representations of numeric values to <xref:System.Double> values.</span></span> <span data-ttu-id="4c931-1021">Il suppose qu’en-US est la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4c931-1021">It assumes that en-US is the current culture.</span></span>  
  
 [!code-csharp[System.Double.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.TryParse/cs/tryparse1a.cs#1)]
 [!code-vb[System.Double.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.TryParse/vb/tryparse1a.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.Parse(System.String)" />
        <altmember cref="M:System.Double.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] double % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] double % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4c931-1022">Chaîne contenant un nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-1022">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="4c931-1023">Combinaison au niveau du bit des valeurs <see cref="T:System.Globalization.NumberStyles" /> qui indique le format autorisé de <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-1023">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the permitted format of <c>s</c>.</span>
          </span>
          <span data-ttu-id="4c931-1024">Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Float" /> combinée avec <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-1024">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4c931-1025">
            <see cref="T:System.IFormatProvider" /> qui fournit des informations de mise en forme propres à la culture sur <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-1025">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="4c931-1026">Quand cette méthode est retournée, contient un nombre à virgule flottante double précision équivalent à la valeur numérique ou au symbole contenu dans <c>s</c> si la conversion a réussi, ou zéro si elle a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-1026">When this method returns, contains a double-precision floating-point number equivalent of the numeric value or symbol contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="4c931-1027">La conversion échoue si le paramètre <c>s</c> est <see langword="null" /> ou <see cref="F:System.String.Empty" />, n’est pas dans un format conforme à <c>style</c>, représente un nombre inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />, ou encore si <c>style</c> n’est pas une combinaison valide de constantes énumérées <see cref="T:System.Globalization.NumberStyles" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-1027">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />, or if <c>style</c> is not a valid combination of <see cref="T:System.Globalization.NumberStyles" /> enumerated constants.</span>
          </span>
          <span data-ttu-id="4c931-1028">Ce paramètre est passé sous forme non initialisée. Toute valeur fournie initialement dans <c>result</c> sera remplacée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-1028">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c931-1029">Convertit la représentation sous forme de chaîne d'un nombre dans un style et un format propre à la culture spécifiés en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-1029">Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent.</span>
          </span>
          <span data-ttu-id="4c931-1030">Une valeur de retour indique si la conversion a réussi ou a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-1030">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c931-1031">
            <see langword="true" /> si la conversion de <paramref name="s" /> est réussie ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-1031">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c931-1032">Le <xref:System.Double.TryParse%2A> méthode est similaire à la <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> (méthode), mais cette méthode ne lève pas d’exception si la conversion échoue.</span><span class="sxs-lookup"><span data-stu-id="4c931-1032">The <xref:System.Double.TryParse%2A> method is like the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except this method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="4c931-1033">Si la conversion réussit, la valeur de retour est `true` et `result` est affectée au résultat de la conversion.</span><span class="sxs-lookup"><span data-stu-id="4c931-1033">If the conversion succeeds, the return value is `true` and the `result` parameter is set to the outcome of the conversion.</span></span> <span data-ttu-id="4c931-1034">Si la conversion échoue, la valeur de retour est `false` et `result` paramètre est défini à zéro.</span><span class="sxs-lookup"><span data-stu-id="4c931-1034">If the conversion fails, the return value is `false` and the `result` parameter is set to zero.</span></span> <span data-ttu-id="4c931-1035">Cela élimine la nécessité d’utiliser la gestion des exceptions pour tester un <xref:System.FormatException> dans le cas où `s` n’est pas valide et ne peut pas être analysée avec succès.</span><span class="sxs-lookup"><span data-stu-id="4c931-1035">This eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="4c931-1036">Le `style` paramètre définit le format autorisé de le `s` paramètre pour l’opération d’analyse.</span><span class="sxs-lookup"><span data-stu-id="4c931-1036">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="4c931-1037">Il doit être une combinaison de bits indicateurs de le <xref:System.Globalization.NumberStyles> énumération.</span><span class="sxs-lookup"><span data-stu-id="4c931-1037">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="4c931-1038">Les éléments suivants <xref:System.Globalization.NumberStyles> membres ne sont pas pris en charge :</span><span class="sxs-lookup"><span data-stu-id="4c931-1038">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>  
  
 <span data-ttu-id="4c931-1039">Le `s` paramètre peut contenir <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, ou <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> pour la culture indiquée par `provider`.</span><span class="sxs-lookup"><span data-stu-id="4c931-1039">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture indicated by `provider`.</span></span> <span data-ttu-id="4c931-1040">En outre, selon la valeur de `style`, le `s` paramètre peut inclure les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="4c931-1040">In addition, depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="4c931-1041">[ws] [$] [connexion] [chiffres intégraux,] chiffres intégraux [.chiffres fractionnaires] [e [signe] chiffres exponentiels] [ws]</span><span class="sxs-lookup"><span data-stu-id="4c931-1041">[ws] [$] [sign][integral-digits,]integral-digits[.fractional-digits][e[sign]exponential-digits][ws]</span></span>  
  
 <span data-ttu-id="4c931-1042">Les éléments entre crochets ([ et ]) sont facultatifs.</span><span class="sxs-lookup"><span data-stu-id="4c931-1042">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4c931-1043">Le tableau suivant décrit chaque élément.</span><span class="sxs-lookup"><span data-stu-id="4c931-1043">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4c931-1044">Élément</span><span class="sxs-lookup"><span data-stu-id="4c931-1044">Element</span></span>|<span data-ttu-id="4c931-1045">Description </span><span class="sxs-lookup"><span data-stu-id="4c931-1045">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4c931-1046">*ws*</span><span class="sxs-lookup"><span data-stu-id="4c931-1046">*ws*</span></span>|<span data-ttu-id="4c931-1047">Espace blanc facultatif.</span><span class="sxs-lookup"><span data-stu-id="4c931-1047">Optional white space.</span></span> <span data-ttu-id="4c931-1048">Espace blanc peut apparaître au début de `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-1048">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4c931-1049">Il peut apparaître à la fin de `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-1049">It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="4c931-1050">Un symbole monétaire spécifique à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-1050">A culture-specific currency symbol.</span></span> <span data-ttu-id="4c931-1051">Sa position dans la chaîne est définie par le <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> ou <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> propriétés de la <xref:System.Globalization.NumberFormatInfo> objet retourné par la <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> méthode de le `provider` paramètre.</span><span class="sxs-lookup"><span data-stu-id="4c931-1051">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of the `provider` parameter.</span></span> <span data-ttu-id="4c931-1052">Le symbole monétaire peut apparaître dans `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-1052">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-1053">*sign*</span><span class="sxs-lookup"><span data-stu-id="4c931-1053">*sign*</span></span>|<span data-ttu-id="4c931-1054">Un signe facultatif.</span><span class="sxs-lookup"><span data-stu-id="4c931-1054">An optional sign.</span></span> <span data-ttu-id="4c931-1055">Le signe peut apparaître au début de `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> indicateur, qui peuvent apparaître à la fin de `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-1055">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4c931-1056">Parenthèses peuvent être utilisées dans `s` pour indiquer une valeur négative si `style` inclut la <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-1056">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-1057">*chiffres intégraux*</span><span class="sxs-lookup"><span data-stu-id="4c931-1057">*integral-digits*</span></span>|<span data-ttu-id="4c931-1058">Une série de chiffres allant de 0 à 9 qui spécifie la partie entière du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-1058">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="4c931-1059">Chiffres intégraux peuvent être absents s’il y a des chiffres fractionnaires.</span><span class="sxs-lookup"><span data-stu-id="4c931-1059">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="4c931-1060">*,*</span><span class="sxs-lookup"><span data-stu-id="4c931-1060">*,*</span></span>|<span data-ttu-id="4c931-1061">Spécifiques à la culture des milliers symbole de séparateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-1061">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="4c931-1062">Des milliers de la culture actuelle symbole de séparateur peut apparaître dans `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-1062">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-1063">*.*</span><span class="sxs-lookup"><span data-stu-id="4c931-1063">*.*</span></span>|<span data-ttu-id="4c931-1064">Un symbole décimal spécifiques à la culture.</span><span class="sxs-lookup"><span data-stu-id="4c931-1064">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="4c931-1065">Symbole de virgule décimale de la culture actuelle peut apparaître dans `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-1065">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-1066">*chiffres fractionnaires*</span><span class="sxs-lookup"><span data-stu-id="4c931-1066">*fractional-digits*</span></span>|<span data-ttu-id="4c931-1067">Une série de chiffres allant de 0 à 9 qui spécifie la partie fractionnaire du nombre.</span><span class="sxs-lookup"><span data-stu-id="4c931-1067">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="4c931-1068">Chiffres fractionnaires peuvent apparaître dans `s` si `style` inclut la <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-1068">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-1069">*e*</span><span class="sxs-lookup"><span data-stu-id="4c931-1069">*e*</span></span>|<span data-ttu-id="4c931-1070">Le caractère e ou E, qui indique que `s` peut représenter un nombre en notation exponentielle.</span><span class="sxs-lookup"><span data-stu-id="4c931-1070">The e or E character, which indicates that `s` can represent a number using exponential notation.</span></span> <span data-ttu-id="4c931-1071">Le `s` paramètre peut représenter un nombre en notation exponentielle si le style inclut le <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-1071">The `s` parameter can represent a number in exponential notation if style includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4c931-1072">*chiffres exponentiels*</span><span class="sxs-lookup"><span data-stu-id="4c931-1072">*exponential-digits*</span></span>|<span data-ttu-id="4c931-1073">Une série de chiffres allant de 0 à 9 qui spécifie un exposant.</span><span class="sxs-lookup"><span data-stu-id="4c931-1073">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="4c931-1074">Une chaîne contenant uniquement des chiffres (qui correspond à la <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) toujours analysée avec succès.</span><span class="sxs-lookup"><span data-stu-id="4c931-1074">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="4c931-1075">Les autres <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> membres contrôlent des éléments qui peuvent être, mais ne doivent pas être présents dans la chaîne d’entrée.</span><span class="sxs-lookup"><span data-stu-id="4c931-1075">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="4c931-1076">Le tableau suivant indique comment chaque <xref:System.Globalization.NumberStyles> indicateurs affectent les éléments qui peuvent être présents dans `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-1076">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="4c931-1077">Valeur NumberStyles</span><span class="sxs-lookup"><span data-stu-id="4c931-1077">NumberStyles value</span></span>|<span data-ttu-id="4c931-1078">Éléments autorisés dans s en plus des chiffres</span><span class="sxs-lookup"><span data-stu-id="4c931-1078">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="4c931-1079">Le *chiffres intégraux* élément uniquement.</span><span class="sxs-lookup"><span data-stu-id="4c931-1079">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="4c931-1080">L’élément de langage *.*</span><span class="sxs-lookup"><span data-stu-id="4c931-1080">The *.*</span></span> <span data-ttu-id="4c931-1081">et *chiffres fractionnaires* éléments.</span><span class="sxs-lookup"><span data-stu-id="4c931-1081">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="4c931-1082">Le `s` paramètre peut également utiliser la notation exponentielle.</span><span class="sxs-lookup"><span data-stu-id="4c931-1082">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="4c931-1083">Cet indicateur par lui-même prend en charge les valeurs sous la forme *chiffres intégraux*E*chiffres exponentiels*; supplémentaires nécessaires pour analyser correctement les chaînes en notation exponentielle avec des éléments tels que les indicateurs signes positifs ou négatifs et des symboles de séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="4c931-1083">This flag by itself supports values in the form *integral-digits*E*exponential-digits*; additional flags are needed to successfully parse strings in exponential notation with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="4c931-1084">Le *ws* élément au début de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-1084">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="4c931-1085">Le *ws* élément à la fin de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-1085">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="4c931-1086">Le *signe* élément au début de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-1086">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="4c931-1087">Le *signe* élément à la fin de `s`.</span><span class="sxs-lookup"><span data-stu-id="4c931-1087">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="4c931-1088">Le *signe* élément sous la forme de parenthèses entourant la valeur numérique.</span><span class="sxs-lookup"><span data-stu-id="4c931-1088">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="4c931-1089">Le *,* élément.</span><span class="sxs-lookup"><span data-stu-id="4c931-1089">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="4c931-1090">Le * $ * élément.</span><span class="sxs-lookup"><span data-stu-id="4c931-1090">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="4c931-1091">Tout le monde.</span><span class="sxs-lookup"><span data-stu-id="4c931-1091">All.</span></span> <span data-ttu-id="4c931-1092">Le `s` paramètre ne peut pas représenter un nombre hexadécimal ou un nombre en notation exponentielle.</span><span class="sxs-lookup"><span data-stu-id="4c931-1092">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="4c931-1093">Le *ws* élément au début ou à la fin de `s`, *signe* au début de `s`et le *.*</span><span class="sxs-lookup"><span data-stu-id="4c931-1093">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="4c931-1094">symbole.</span><span class="sxs-lookup"><span data-stu-id="4c931-1094">symbol.</span></span> <span data-ttu-id="4c931-1095">Le `s` paramètre peut également utiliser la notation exponentielle.</span><span class="sxs-lookup"><span data-stu-id="4c931-1095">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="4c931-1096">Le `ws`, `sign`, des milliers séparateur (*,),* et séparateur décimal (*.*) éléments.</span><span class="sxs-lookup"><span data-stu-id="4c931-1096">The `ws`, `sign`, thousands separator (*,),* and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="4c931-1097">Tous les styles, à l’exception `s` ne peut pas représenter un nombre hexadécimal.</span><span class="sxs-lookup"><span data-stu-id="4c931-1097">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="4c931-1098">Le `provider` paramètre est un <xref:System.IFormatProvider> mise en oeuvre, comme un <xref:System.Globalization.NumberFormatInfo> ou <xref:System.Globalization.CultureInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4c931-1098">The `provider` parameter is a <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="4c931-1099">Le `provider` paramètre fournit des informations spécifiques à la culture utilisées dans l’analyse.</span><span class="sxs-lookup"><span data-stu-id="4c931-1099">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="4c931-1100">Si `provider` est `null` ou un <xref:System.Globalization.NumberFormatInfo> objet ne peut pas être obtenu, les informations de format pour la culture actuelle sont utilisées.</span><span class="sxs-lookup"><span data-stu-id="4c931-1100">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained, the format information for the current culture is used.</span></span>  
  
 <span data-ttu-id="4c931-1101">La conversion échoue si le `s` paramètre est `null` ou non une valeur numérique, la `provider` ne génère pas de paramètre un <xref:System.Globalization.NumberFormatInfo> objet, ou le `style` paramètre n’est pas une combinaison de bits indicateurs de le <xref:System.Globalization.NumberStyles> énumération.</span><span class="sxs-lookup"><span data-stu-id="4c931-1101">The conversion fails if the `s` parameter is `null` or not a numeric value, the `provider` parameter does not yield a <xref:System.Globalization.NumberFormatInfo> object, or the `style` parameter is not a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="4c931-1102">En règle générale, si vous passez le <xref:System.Double.TryParse%2A?displayProperty=nameWithType> méthode une chaîne qui est créé en appelant le <xref:System.Double.ToString%2A?displayProperty=nameWithType> , la méthode <xref:System.Double> valeur est retournée.</span><span class="sxs-lookup"><span data-stu-id="4c931-1102">Ordinarily, if you pass the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="4c931-1103">Toutefois, en raison d’une perte de précision, les valeurs ne peuvent pas être égales.</span><span class="sxs-lookup"><span data-stu-id="4c931-1103">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="4c931-1104">En outre, une tentative d’analyser la représentation sous forme de chaîne d’un <xref:System.Double.MinValue> ou <xref:System.Double.MaxValue> lève une <xref:System.OverflowException>, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="4c931-1104">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.TryParse/cs/tryparse2.cs#3)]
 [!code-vb[System.Double.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.TryParse/vb/tryparse2.vb#3)]  
  
 <span data-ttu-id="4c931-1105">Si un séparateur est rencontré dans le `s` paramètre pendant une opération d’analyse et la devise ou un nombre décimal et les séparateurs de groupes sont identiques, l’opération d’analyse suppose que le séparateur est un séparateur décimal plutôt qu’un groupe séparateur.</span><span class="sxs-lookup"><span data-stu-id="4c931-1105">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="4c931-1106">Pour plus d’informations sur les séparateurs, consultez <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, et <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c931-1106">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c931-1107">L’exemple suivant illustre l’utilisation de la <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> méthode pour analyser la représentation sous forme de chaîne de nombres qui ont un style spécifique en utilisant les conventions d’une culture particulière.</span><span class="sxs-lookup"><span data-stu-id="4c931-1107">The following example demonstrates the use of the <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> method to parse the string representation of numbers that have a particular style and are formatted using the conventions of a particular culture.</span></span>  
  
 [!code-csharp[System.Double.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.TryParse/cs/TryParse1.cs#2)]
 [!code-vb[System.Double.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.TryParse/vb/TryParse1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c931-1108">
            <paramref name="style" /> n’est pas une valeur <see cref="T:System.Globalization.NumberStyles" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-1108">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="4c931-1109">-ou-  <paramref name="style" /> inclut la valeur <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c931-1109">-or-  <paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Double.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>