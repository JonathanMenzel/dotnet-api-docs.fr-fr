<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResolveEventArgs.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53cb36bd1dd61eda00843f278887046151ea3c44b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cb36bd1dd61eda00843f278887046151ea3c44b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ResolveEventArgs">
          <source>Provides data for loader resolution events, such as the <ph id="ph1">&lt;see cref="E:System.AppDomain.TypeResolve" /&gt;</ph>, <ph id="ph2">&lt;see cref="E:System.AppDomain.ResourceResolve" /&gt;</ph>, <ph id="ph3">&lt;see cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" /&gt;</ph>, and <ph id="ph4">&lt;see cref="E:System.AppDomain.AssemblyResolve" /&gt;</ph> events.</source>
          <target state="translated">Fournit des données pour les événements de résolution du chargeur, par exemple les événements <ph id="ph1">&lt;see cref="E:System.AppDomain.TypeResolve" /&gt;</ph>, <ph id="ph2">&lt;see cref="E:System.AppDomain.ResourceResolve" /&gt;</ph>, <ph id="ph3">&lt;see cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" /&gt;</ph> et <ph id="ph4">&lt;see cref="E:System.AppDomain.AssemblyResolve" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ResolveEventArgs">
          <source>When the loader cannot resolve an assembly reference and a handler has been provided for the appropriate loader resolution event, the event is raised and the <ph id="ph1">&lt;xref:System.ResolveEventArgs&gt;</ph> contains information about the item to be resolved.</source>
          <target state="translated">Lorsque le chargeur ne peut pas résoudre une référence d’assembly et un gestionnaire a été fourni pour l’événement de résolution du chargeur approprié, l’événement est déclenché et le <ph id="ph1">&lt;xref:System.ResolveEventArgs&gt;</ph> contient des informations sur l’élément à résoudre.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ResolveEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> property contains the name of the item to be resolved.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> propriété contient le nom de l’élément à résoudre.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ResolveEventArgs">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property contains the assembly that requested an assembly that can provide the named item.</source>
          <target state="translated">Compter les <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, le <ph id="ph2">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> propriété contient l’assembly qui a demandé un assembly qui peut fournir l’élément nommé.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ResolveEventArgs">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property.</source>
          <target state="translated">Pour plus d'informations, consultez la propriété <ph id="ph1">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.ResolveEventArgs">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ResolveEventArgs" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ResolveEventArgs" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ResolveEventArgs.#ctor(System.String)">
          <source>The name of an item to resolve.</source>
          <target state="translated">Nom d'un élément à résoudre.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ResolveEventArgs.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ResolveEventArgs" /&gt;</ph> class, specifying the name of the item to resolve.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ResolveEventArgs" /&gt;</ph>, en spécifiant le nom de l'élément à résoudre.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ResolveEventArgs.#ctor(System.String)">
          <source>This constructor is typically called only by the common language runtime.</source>
          <target state="translated">Ce constructeur est généralement appelé uniquement par le common language runtime.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)">
          <source>The name of an item to resolve.</source>
          <target state="translated">Nom d'un élément à résoudre.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)">
          <source>The assembly whose dependency is being resolved.</source>
          <target state="translated">Assembly dont la dépendance est résolue.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ResolveEventArgs" /&gt;</ph> class, specifying the name of the item to resolve and the assembly whose dependency is being resolved.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ResolveEventArgs" /&gt;</ph>, en spécifiant le nom de l'élément à résoudre et l'assembly dont la dépendance est résolue.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.ResolveEventArgs.Name">
          <source>Gets the name of the item to resolve.</source>
          <target state="translated">Obtient le nom de l'élément à résoudre.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.Name">
          <source>The name of the item to resolve.</source>
          <target state="translated">Nom de l'élément à résoudre.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.Name">
          <source>For the <ph id="ph1">&lt;xref:System.AppDomain.AssemblyResolve&gt;</ph> event, <ph id="ph2">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> is the assembly name before policy is applied.</source>
          <target state="translated">Pour le <ph id="ph1">&lt;xref:System.AppDomain.AssemblyResolve&gt;</ph> événement, <ph id="ph2">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> est le nom de l’assembly avant de la stratégie est appliquée.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>Gets the assembly whose dependency is being resolved.</source>
          <target state="translated">Obtient l'assembly dont la dépendance est résolue.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>The assembly that requested the item specified by the <ph id="ph1">&lt;see cref="P:System.ResolveEventArgs.Name" /&gt;</ph> property.</source>
          <target state="translated">Assembly qui a demandé l'élément spécifié par la propriété <ph id="ph1">&lt;see cref="P:System.ResolveEventArgs.Name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>The assembly that is returned by this property is an assembly that was unable to resolve the item specified by the <ph id="ph1">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> property, because the item did not exist in that assembly, in any of its loaded dependencies, or in any dependencies the loader could find through probing.</source>
          <target state="translated">L’assembly retourné par cette propriété est un assembly qui n’a pas pu résoudre l’élément spécifié par le <ph id="ph1">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> propriété, car l’élément n’existait pas dans cet assembly, dans un de ses dépendances chargées ou dans les dépendances du chargeur a trouvé via la détection.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>For example, suppose the current assembly uses the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> method to load assembly A from a directory outside the probing path, in order to use class CA.</source>
          <target state="translated">Par exemple, supposons que l’assembly actuel utilise les <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> méthode pour charger l’assembly A à partir d’un répertoire en dehors du chemin d’accès de détection, pour pouvoir utiliser la classe d’autorité de certification.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>Suppose further that class CA uses class CB, in assembly B, and that assembly A has a compile-time reference to assembly B, also located outside the probing path.</source>
          <target state="translated">Supposons davantage que la classe CA utilise la classe CB, dans l’assembly B, et que l’assembly A a une référence de compilation à l’assembly B, également situé en dehors du chemin d’accès de détection.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> method, the loader cannot resolve the dependency.</source>
          <target state="translated">Lorsque l’assembly actuel essaie d’instancier l’autorité de certification, le chargeur essaie de résoudre la référence à l’assembly B. Toutefois, étant donné que l’assembly A a été chargé à l’aide de la <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> (méthode), le chargeur ne peut pas résoudre la dépendance.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>If there is a handler for the <ph id="ph1">&lt;xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType&gt;</ph> event, the event is raised, and the <ph id="ph2">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property of the resulting <ph id="ph3">&lt;xref:System.ResolveEventArgs&gt;</ph> object contains assembly A, because assembly A is the assembly that is missing a dependency.</source>
          <target state="translated">S’il existe un gestionnaire pour le <ph id="ph1">&lt;xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType&gt;</ph> , l’événement est déclenché et le <ph id="ph2">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> propriété des résultats de <ph id="ph3">&lt;xref:System.ResolveEventArgs&gt;</ph> objet contient l’assembly A, car l’assembly A est l’assembly auquel manque une dépendance.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>The semantics of the <ph id="ph1">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property vary, depending on how the requesting assembly was loaded:</source>
          <target state="translated">La sémantique de la <ph id="ph1">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> propriété varie selon la façon dont l’assembly demandeur a été chargé :</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>Load context: The value of the property might be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Contexte de chargement : la valeur de la propriété peut être <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>The load context is load-order independent, and the identity of the requesting assembly is not necessarily meaningful.</source>
          <target state="translated">Le contexte de chargement est indépendant de l’ordre de chargement et l’identité de la demande d’assembly n’est pas nécessairement explicite.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>A non-null example occurs when the <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph> method is called and the specified type is not known to the requesting assembly or any of its dependencies.</source>
          <target state="translated">Un exemple non null se produit lorsque le <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph> méthode est appelée et le type spécifié n’est pas connu à l’assembly demandeur ou une de ses dépendances.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>Load-from context: The property can be used as a probing hint, but the event handler should not get more than one request for a given assembly name.</source>
          <target state="translated">Contexte de chargement : la propriété peut être utilisée comme indicateur de détection, mais le Gestionnaire d’événements ne doit pas obtenir plus d’une demande pour un nom de l’assembly donné.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ResolveEventArgs.RequestingAssembly">
          <source>No context (that is, the requesting assembly was loaded by using the <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> method, or as a byte stream, or in mixed mode): The handler can use the <ph id="ph2">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property to load different implementations of the same assembly based on the identity of the requesting assembly.</source>
          <target state="translated">Aucun contexte (autrement dit, l’assembly demandeur a été chargé à l’aide de la <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType&gt;</ph> (méthode), comme un flux d’octets, ou en mode mixte) : le gestionnaire peut utiliser le <ph id="ph2">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> propriété pour charger des implémentations différentes du même assembly en fonction de l’identité de le demande d’assembly.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>