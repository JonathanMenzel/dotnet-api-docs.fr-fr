<Type Name="IEquatable&lt;T&gt;" FullName="System.IEquatable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f169ba3e3ec57eac1b6bb82d978c55c2b059e3fb" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52737427" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEquatable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEquatable`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IEquatable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEquatable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEquatable" />
  <TypeSignature Language="F#" Value="type IEquatable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="33de3-101">Type des objets à comparer.</span>
      <span class="sxs-lookup">
        <span data-stu-id="33de3-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="33de3-102">Définit une méthode généralisée qu'un type valeur ou une classe implémente pour créer une méthode spécifique au type permettant de déterminer l'égalité des instances.</span>
      <span class="sxs-lookup">
        <span data-stu-id="33de3-102">Defines a generalized method that a value type or class implements to create a type-specific method for determining equality of instances.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33de3-103">Cette interface est implémentée par les types dont les valeurs peuvent être comparées (pour les classes d’exemple, numérique et chaîne).</span><span class="sxs-lookup"><span data-stu-id="33de3-103">This interface is implemented by types whose values can be equated (for example, the numeric and string classes).</span></span> <span data-ttu-id="33de3-104">Un type valeur ou une classe implémente la <xref:System.IEquatable%601.Equals%2A> méthode pour créer une méthode spécifique au type permettant de déterminer l’égalité des instances.</span><span class="sxs-lookup"><span data-stu-id="33de3-104">A value type or class implements the <xref:System.IEquatable%601.Equals%2A> method to create a type-specific method suitable for determining equality of instances.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33de3-105">Le <xref:System.IComparable%601> interface définit le <xref:System.IComparable%601.CompareTo%2A> (méthode), qui détermine l’ordre de tri des instances du type d’implémentation.</span><span class="sxs-lookup"><span data-stu-id="33de3-105">The <xref:System.IComparable%601> interface defines the <xref:System.IComparable%601.CompareTo%2A> method, which determines the sort order of instances of the implementing type.</span></span> <span data-ttu-id="33de3-106">Le <xref:System.IEquatable%601> interface définit le <xref:System.IEquatable%601.Equals%2A> (méthode), qui détermine l’égalité des instances du type d’implémentation.</span><span class="sxs-lookup"><span data-stu-id="33de3-106">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="33de3-107">Le <xref:System.IEquatable%601> interface est utilisée par les objets de collection générique, tel que <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, et <xref:System.Collections.Generic.LinkedList%601> lors du test d’égalité dans des méthodes telles que `Contains`, `IndexOf`, `LastIndexOf`, et `Remove`.</span><span class="sxs-lookup"><span data-stu-id="33de3-107">The <xref:System.IEquatable%601> interface is used by generic collection objects such as <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, and <xref:System.Collections.Generic.LinkedList%601> when testing for equality in such methods as `Contains`, `IndexOf`, `LastIndexOf`, and `Remove`.</span></span> <span data-ttu-id="33de3-108">Elle doit être implémentée pour tout objet qui peut être stocké dans une collection générique.</span><span class="sxs-lookup"><span data-stu-id="33de3-108">It should be implemented for any object that might be stored in a generic collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33de3-109">Consultez l’exemple de la <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="33de3-109">See the example for the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="33de3-110">Remplacez le paramètre de type de la <see cref="T:System.IEquatable`1" /> interface avec le type qui implémente cette interface.</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-110">Replace the type parameter of the <see cref="T:System.IEquatable`1" /> interface with the type that is implementing this interface.</span>
        </span>
        <span data-ttu-id="33de3-111">Si vous implémentez <see cref="T:System.IEquatable`1" />, vous devez également remplacer les implémentations de classe de base de <see cref="M:System.Object.Equals(System.Object)" /> et <see cref="M:System.Object.GetHashCode" /> afin que leur comportement est cohérent avec celui de la <see cref="M:System.IEquatable`1.Equals(`0)" /> (méthode).</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-111">If you implement <see cref="T:System.IEquatable`1" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method.</span>
        </span>
        <span data-ttu-id="33de3-112">Si vous substituez <see cref="M:System.Object.Equals(System.Object)" />, votre implémentation substituée est également appelée dans les appels à la méthode statique <see langword="Equals(System.Object, System.Object)" /> méthode sur votre classe.</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-112">If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class.</span>
        </span>
        <span data-ttu-id="33de3-113">En outre, vous devez surcharger les <see langword="op_Equality" /> et <see langword="op_Inequality" /> opérateurs.</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-113">In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators.</span>
        </span>
        <span data-ttu-id="33de3-114">Cela garantit que tous les tests d’égalité retournent des résultats cohérents.</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-114">This ensures that all tests for equality return consistent results.</span>
        </span>
        <block subset="none" type="note">
          <para>
            <span data-ttu-id="33de3-115">Pour plus d’informations sur la substitution <see cref="M:System.Object.Equals(System.Object)" />, consultez le <see cref="M:System.Object.Equals(System.Object)" /> article.</span>
            <span class="sxs-lookup">
              <span data-stu-id="33de3-115">For information on overriding <see cref="M:System.Object.Equals(System.Object)" />, see the <see cref="M:System.Object.Equals(System.Object)" /> article.</span>
            </span>
          </para>
        </block>
        <span data-ttu-id="33de3-116">Pour un type valeur, vous devez toujours implémenter <see cref="T:System.IEquatable`1" /> et substituer <see cref="M:System.Object.Equals(System.Object)" /> pour de meilleures performances.</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-116">For a value type, you should always implement <see cref="T:System.IEquatable`1" /> and override <see cref="M:System.Object.Equals(System.Object)" /> for better performance.</span>
        </span>
        <span data-ttu-id="33de3-117">
          <see cref="M:System.Object.Equals(System.Object)" /> zones de types valeur et s’appuie sur la réflexion pour comparer deux valeurs sont égales.</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-117">
            <see cref="M:System.Object.Equals(System.Object)" /> boxes value types and relies on reflection to compare two values for equality.</span>
        </span>
        <span data-ttu-id="33de3-118">Votre mise en œuvre de <see cref="M:System.IEquatable`1.Equals(`0)" /> et votre substitution de <see cref="M:System.Object.Equals(System.Object)" /> doit retourner des résultats cohérents.</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-118">Both your implementation of <see cref="M:System.IEquatable`1.Equals(`0)" /> and your override of <see cref="M:System.Object.Equals(System.Object)" /> should return consistent results.</span>
        </span>
        <span data-ttu-id="33de3-119">Si vous implémentez <see cref="T:System.IEquatable`1" />, vous devez également implémenter <see cref="T:System.IComparable`1" /> si les instances de votre type peuvent être ordonnées ou triées.</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-119">If you implement <see cref="T:System.IEquatable`1" />, you should also implement <see cref="T:System.IComparable`1" /> if instances of your type can be ordered or sorted.</span>
        </span>
        <span data-ttu-id="33de3-120">Si votre type implémente <see cref="T:System.IComparable`1" />, vous implémentez également presque toujours <see cref="T:System.IEquatable`1" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-120">If your type implements <see cref="T:System.IComparable`1" />, you almost always also implement <see cref="T:System.IEquatable`1" />.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="33de3-121">Notez qu’il existe certaines conceptions où un type prend en charge une relation d’ordre, mais l’égalité peut être différente d’une relation de tri.</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-121">Note that there are some designs where a type supports an order relation, but equality may be distinct from an ordering relation.</span>
        </span>
        <span data-ttu-id="33de3-122">Envisagez un `Person` classe où vous triez par ordre alphabétique.</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-122">Consider a `Person` class where you sort alphabetically.</span>
        </span>
        <span data-ttu-id="33de3-123">Deux personnes avec le même nom trient les mêmes, mais ne sont pas la même personne.</span>
        <span class="sxs-lookup">
          <span data-stu-id="33de3-123">Two people with the same name sort the same, but are not the same person.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.IComparable" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IEquatable`1.Equals(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T -&gt; bool" Usage="iEquatable.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="33de3-124">Objet à comparer à cet objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33de3-124">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33de3-125">Indique si l'objet actuel est égal à un autre objet du même type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33de3-125">Indicates whether the current object is equal to another object of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33de3-126">
            <see langword="true" /> si l'objet actuel est égal au paramètre <paramref name="other" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33de3-126">
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33de3-127">L’implémentation de la <xref:System.IEquatable%601.Equals%2A> méthode est destinée à effectuer un test d’égalité avec un autre objet de type `T`, le même type que l’objet actuel.</span><span class="sxs-lookup"><span data-stu-id="33de3-127">The implementation of the <xref:System.IEquatable%601.Equals%2A> method is intended to perform a test for equality with another object of type `T`, the same type as the current object.</span></span> <span data-ttu-id="33de3-128">Le <xref:System.IEquatable%601.Equals(%600)> méthode est appelée dans les circonstances suivantes :</span><span class="sxs-lookup"><span data-stu-id="33de3-128">The <xref:System.IEquatable%601.Equals(%600)> method is called in the following circumstances:</span></span>  
  
-   <span data-ttu-id="33de3-129">Lorsque le `Equals` méthode est appelée et le `other` argument est un objet fortement typé de type `T`.</span><span class="sxs-lookup"><span data-stu-id="33de3-129">When the `Equals` method is called and the `other` argument is a strongly-typed object of type `T`.</span></span> <span data-ttu-id="33de3-130">(Si `other` n’est pas de type `T`, la base de <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="33de3-130">(If `other` is not of type `T`, the base <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="33de3-131">Des deux méthodes, <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> légèrement offre de meilleures performances.)</span><span class="sxs-lookup"><span data-stu-id="33de3-131">Of the two methods, <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> offers slightly better performance.)</span></span>  
  
-   <span data-ttu-id="33de3-132">Lorsque les méthodes de recherche d’un nombre d’objets de collection génériques sont appelées.</span><span class="sxs-lookup"><span data-stu-id="33de3-132">When the search methods of a number of generic collection objects are called.</span></span> <span data-ttu-id="33de3-133">Certaines de ces types et leurs méthodes sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="33de3-133">Some of these types and their methods include the following:</span></span>  
  
    -   <span data-ttu-id="33de3-134">Certaines surcharges génériques de la <xref:System.Array.BinarySearch%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="33de3-134">Some of the generic overloads of the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
    -   <span data-ttu-id="33de3-135">Les méthodes de recherche de la <xref:System.Collections.Generic.List%601> classe, y compris <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, et <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="33de3-135">The search methods of the <xref:System.Collections.Generic.List%601> class, including <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=nameWithType>, and <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="33de3-136">Les méthodes de recherche de la <xref:System.Collections.Generic.Dictionary%602> classe, y compris <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> et <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="33de3-136">The search methods of the <xref:System.Collections.Generic.Dictionary%602> class, including <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> and <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.</span></span>  
  
    -   <span data-ttu-id="33de3-137">Les méthodes de recherche du générique <xref:System.Collections.Generic.LinkedList%601> classe, y compris <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> et <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="33de3-137">The search methods of the generic <xref:System.Collections.Generic.LinkedList%601> class, including <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=nameWithType> and <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.</span></span>  
  
 <span data-ttu-id="33de3-138">En d’autres termes, pour gérer le stockage des objets d’une classe dans un tableau ou un objet de collection générique, il est judicieux d’implémenter <xref:System.IEquatable%601> afin que l’objet pouvant être facilement identifié et manipulée.</span><span class="sxs-lookup"><span data-stu-id="33de3-138">In other words, to handle the possibility that objects of a class will be stored in an array or a generic collection object, it is a good idea to implement <xref:System.IEquatable%601> so that the object can be easily identified and manipulated.</span></span>  
  
 <span data-ttu-id="33de3-139">Lorsque vous implémentez le <xref:System.IEquatable%601.Equals%2A> (méthode), définir une égalité de manière appropriée pour le type spécifié par l’argument de type générique.</span><span class="sxs-lookup"><span data-stu-id="33de3-139">When implementing the <xref:System.IEquatable%601.Equals%2A> method, define equality appropriately for the type specified by the generic type argument.</span></span> <span data-ttu-id="33de3-140">Par exemple, si l’argument de type est <xref:System.Int32>, définir une égalité de manière appropriée pour la comparaison de deux entiers signés 32 bits.</span><span class="sxs-lookup"><span data-stu-id="33de3-140">For example, if the type argument is <xref:System.Int32>, define equality appropriately for the comparison of two 32-bit signed integers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33de3-141">L’exemple suivant montre l’implémentation partielle d’un `Person` classe qui implémente <xref:System.IEquatable%601> et a deux propriétés, `LastName` et `SSN`.</span><span class="sxs-lookup"><span data-stu-id="33de3-141">The following example shows the partial implementation of a `Person` class that implements <xref:System.IEquatable%601> and has two properties, `LastName` and `SSN`.</span></span> <span data-ttu-id="33de3-142">Le <xref:System.IEquatable%601.Equals%2A> retourne de la méthode `True` si le `SSN` propriété de deux `Person` objets sont identiques ; sinon, elle retourne `False`.</span><span class="sxs-lookup"><span data-stu-id="33de3-142">The <xref:System.IEquatable%601.Equals%2A> method returns `True` if the `SSN` property of two `Person` objects is identical; otherwise, it returns `False`.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/EqualsEx2.cs#3)]
 [!code-vb[System.GenericIEquatable.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/EqualsEx2.vb#3)]  
  
 <span data-ttu-id="33de3-143">`Person` objets peuvent alors être stockées dans un <xref:System.Collections.Generic.List%601> de l’objet et peuvent être identifiés par le `Contains` (méthode), comme le montre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="33de3-143">`Person` objects can then be stored in a <xref:System.Collections.Generic.List%601> object and can be identified by the `Contains` method, as the following example shows.</span></span>  
  
 [!code-csharp[System.GenericIEquatable.Equals#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/Snippet12.cs#12)]
 [!code-vb[System.GenericIEquatable.Equals#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/Snippet12.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="33de3-144">Si vous implémentez <see cref="M:System.IEquatable`1.Equals(`0)" />, vous devez également remplacer les implémentations de classe de base de <see cref="M:System.Object.Equals(System.Object)" /> et <see cref="M:System.Object.GetHashCode" /> afin que leur comportement est cohérent avec celui de la <see cref="M:System.IEquatable`1.Equals(`0)" /> (méthode).</span>
            <span class="sxs-lookup">
              <span data-stu-id="33de3-144">If you implement <see cref="M:System.IEquatable`1.Equals(`0)" />, you should also override the base class implementations of <see cref="M:System.Object.Equals(System.Object)" /> and <see cref="M:System.Object.GetHashCode" /> so that their behavior is consistent with that of the <see cref="M:System.IEquatable`1.Equals(`0)" /> method.</span>
            </span>
            <span data-ttu-id="33de3-145">Si vous substituez <see cref="M:System.Object.Equals(System.Object)" />, votre implémentation substituée est également appelée dans les appels à la méthode statique <see langword="Equals(System.Object, System.Object)" /> méthode sur votre classe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="33de3-145">If you do override <see cref="M:System.Object.Equals(System.Object)" />, your overridden implementation is also called in calls to the static <see langword="Equals(System.Object, System.Object)" /> method on your class.</span>
            </span>
            <span data-ttu-id="33de3-146">En outre, vous devez surcharger les <see langword="op_Equality" /> et <see langword="op_Inequality" /> opérateurs.</span>
            <span class="sxs-lookup">
              <span data-stu-id="33de3-146">In addition, you should overload the <see langword="op_Equality" /> and <see langword="op_Inequality" /> operators.</span>
            </span>
            <span data-ttu-id="33de3-147">Cela garantit que tous les tests d’égalité des résultats cohérents, qui illustre l’exemple.</span>
            <span class="sxs-lookup">
              <span data-stu-id="33de3-147">This ensures that all tests for equality return consistent results, which the example illustrates.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>