<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OutOfMemoryException.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5910934c01288ec01071b99b363ba0c0e473ede08.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">910934c01288ec01071b99b363ba0c0e473ede08</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.OutOfMemoryException">
          <source>The exception that is thrown when there is not enough memory to continue the execution of a program.</source>
          <target state="translated">Exception levée quand il n'y a pas suffisamment de mémoire pour poursuivre l'exécution d'un programme.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>An <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception has two major causes:</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception a deux raisons principales :</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are attempting to expand a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object beyond the length defined by its <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Vous essayez de développer un <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> objet au-delà de la longueur définie par son <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The common language runtime cannot allocate enough contiguous memory to successfully perform an operation.</source>
          <target state="translated">Le common language runtime ne peut pas allouer suffisamment de mémoire contigu pour effectuer une opération.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>This exception can be thrown by any property assignment or method call that requires a memory allocation.</source>
          <target state="translated">Cette exception peut être levée par n’importe quel appel de l’attribution ou de la méthode de propriété nécessitant une allocation de mémoire.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For more information on the cause of the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, see <bpt id="p1">[</bpt>"Out of Memory" Does Not Refer to Physical Memory<ept id="p1">](http://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la cause de le <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, consultez <bpt id="p1">[</bpt>« mémoire insuffisante » ne fait pas référence à la mémoire physique<ept id="p1">](http://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>This type of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception represents a catastrophic failure.</source>
          <target state="translated">Ce type de <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception représente une défaillance catastrophique.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you choose to handle the exception, you should include a <ph id="ph1">`catch`</ph> block that calls the <ph id="ph2">&lt;xref:System.Environment.FailFast%2A?displayProperty=nameWithType&gt;</ph> method to terminate your app and add an entry to the system event log, as the following example does.</source>
          <target state="translated">Si vous choisissez de gérer l’exception, vous devez inclure un <ph id="ph1">`catch`</ph> bloc qui appelle le <ph id="ph2">&lt;xref:System.Environment.FailFast%2A?displayProperty=nameWithType&gt;</ph> méthode pour mettre fin à votre application et ajoutez une entrée au journal des événements système, comme dans l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Some of the conditions under which the exception is thrown and the actions you can take to eliminate it include the following:</source>
          <target state="translated">Certaines des conditions dans lesquelles l’exception est levée et les actions que vous pouvez prendre pour éliminer les suivants :</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Vous appelez le <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are attempting to increase the length of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object beyond the size specified by its <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Vous essayez d’augmenter la durée d’un <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> objet au-delà de la taille spécifiée par son <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception thrown by a call to the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method when the example tries to insert a string that would cause the object's <ph id="ph3">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property to exceed its maximum capacity.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception levée par un appel à la <ph id="ph2">&lt;xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> méthode lorsque l’exemple tente d’insérer une chaîne qui provoquerait l’objet <ph id="ph3">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> propriété dépasse sa capacité maximale.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You can do either of the following to address the error:</source>
          <target state="translated">Vous pouvez effectuer l’une des opérations suivantes pour résoudre l’erreur :</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Replace the call to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> constructor with a call any other <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> constructor overload.</source>
          <target state="translated">Remplacez l’appel à la <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> constructeur avec un appel de n’importe quel autre <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> surcharge de constructeur.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The maximum capacity of your <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object will be set to its default value, which is <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La capacité maximale de votre <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> objet sera défini à sa valeur par défaut, qui est <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> constructor with a <ph id="ph2">`maxCapacity`</ph> value that is large enough to accommodate any expansions to the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> constructeur avec un <ph id="ph2">`maxCapacity`</ph> valeur qui est assez grande pour contenir toutes les extensions pour le <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Your app runs as a 32-bit process.</source>
          <target state="translated">Votre application s’exécute comme un processus 32 bits.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>32-bit processes can allocate a maximum of 2GB of virtual user-mode memory on 32-bit systems, and 4GB of virtual user-mode memory on 64-bit systems.</source>
          <target state="translated">processus 32 bits peuvent allouer un maximum de 2 Go de mémoire virtuelle en mode utilisateur sur les systèmes 32 bits et 4 Go de mémoire virtuelle en mode utilisateur sur les systèmes 64 bits.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>This can make it more difficult for the common language runtime to allocate sufficient contiguous memory when a large allocation is needed.</source>
          <target state="translated">Cela peut rendre plus difficile pour le common language runtime à allouer suffisamment de mémoire contiguë lorsqu’une allocation volumineuse est nécessaire.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>In contrast, 64-bit processes can allocate up to 8TB of virtual memory.</source>
          <target state="translated">En revanche, les processus 64 bits peuvent allouer jusqu'à 8 To de mémoire virtuelle.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>To address this exception, recompile your app to target a 64-bit platform.</source>
          <target state="translated">Pour résoudre cette exception, recompiler votre application pour cibler une plateforme 64 bits.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For information on targeting specific platforms in Visual Studio, see <bpt id="p1">[</bpt>How to: Configure Projects to Target Platforms<ept id="p1">](http://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76)</ept>.</source>
          <target state="translated">Pour plus d’informations sur le ciblage des plateformes spécifiques dans Visual Studio, consultez <bpt id="p1">[</bpt>Comment : configurer des projets pour des plateformes cibles<ept id="p1">](http://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Your app is leaking unmanaged resources</source>
          <target state="translated">Votre application présente une fuite de ressources non managées</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Although the garbage collector is able to free memory allocated to managed types, it does not manage memory allocated to unmanaged resources such as operating system handles (including handles to files, memory-mapped files, pipes, registry keys, and wait handles) and memory blocks allocated directly by Windows API calls or by calls to memory allocation functions such as <ph id="ph1">`malloc`</ph>.</source>
          <target state="translated">Bien que le garbage collector ne peut libérer de la mémoire allouée à des types managés, il ne gère pas la mémoire allouée pour les ressources non managées, telles que les handles de système d’exploitation (y compris les handles de fichiers, les fichiers mappés en mémoire, les canaux, les clés de Registre et les handles d’attente) et les blocs de mémoire alloués directement par les appels d’API Windows ou par des appels aux fonctions d’allocation de mémoire de telles que <ph id="ph1">`malloc`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Types that consume unmanaged resources implement the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Les types qui consomment des ressources non managées implémentent le <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you are consuming a type that uses unmanaged resources, you should be sure to call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method when you have finished using it.</source>
          <target state="translated">Si vous consommez un type qui utilise des ressources non managées, vous devez veillez à appeler son <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> méthode lorsque vous avez terminé.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>(Some types also implement a <ph id="ph1">`Close`</ph> method that is identical in function to a <ph id="ph2">`Dispose`</ph> method.) For more information, see the <bpt id="p1">[</bpt>Using Objects That Implement IDisposable<ept id="p1">](~/docs/standard/garbage-collection/using-objects.md)</ept> topic.</source>
          <target state="translated">(Certains types implémentent également une <ph id="ph1">`Close`</ph> méthode est identique dans la fonction à un <ph id="ph2">`Dispose`</ph> méthode.) Pour plus d’informations, consultez la <bpt id="p1">[</bpt>à l’aide d’objets qu’implémenter IDisposable<ept id="p1">](~/docs/standard/garbage-collection/using-objects.md)</ept> rubrique.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you have created a type that uses unmanaged resources, make sure that you have implemented the Dispose pattern and, if necessary, supplied a finalizer.</source>
          <target state="translated">Si vous avez créé un type qui utilise des ressources non managées, assurez-vous que vous avez implémenté le modèle de suppression et, si nécessaire, fournir un finaliseur.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For more information, see the <bpt id="p1">[</bpt>Dispose Pattern<ept id="p1">](~/docs/standard/design-guidelines/dispose-pattern.md)</ept>, <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>, and <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph> topics.</source>
          <target state="translated">Pour plus d’informations, consultez la <bpt id="p1">[</bpt>modèle Dispose<ept id="p1">](~/docs/standard/design-guidelines/dispose-pattern.md)</ept>, <bpt id="p2">[</bpt>implémentant une méthode de suppression<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>, et <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph> rubriques.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are attempting to create a large array in a 64-bit process.</source>
          <target state="translated">Vous essayez de créer un grand tableau dans un processus 64 bits.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>By default, the common language runtime does not allow single objects whose size exceeds 2GB.</source>
          <target state="translated">Par défaut, le common language runtime n’autorise pas les objets uniques dont la taille est supérieure à 2 Go.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>To override this default, you can use the  configuration file setting to enable arrays whose total size exceeds 2 GB.</source>
          <target state="translated">Pour remplacer cette valeur par défaut, vous pouvez utiliser le paramètre de fichier de configuration pour activer les tableaux dont la taille totale dépasse 2 Go.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are working with very large sets of data (such as arrays, collections, or database data sets) in memory.</source>
          <target state="translated">Vous travaillez avec très grands ensembles de données (par exemple, les tableaux, les collections ou les jeux de données de base de données) dans la mémoire.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>When data structures or data sets that reside in memory become so large that the common language runtime is unable to allocate enough contiguous memory for them, an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception results.</source>
          <target state="translated">Lorsque les structures de données ou les jeux de données qui résident en mémoire deviennent tellement important que le common language runtime est impossible d’allouer suffisamment de mémoire contigu, un <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> résultats de l’exception.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>To prevent the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceptions, you must modify your application so that less data is resident in memory, or the data is divided into segments that require smaller memory allocations.</source>
          <target state="translated">Pour empêcher la <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> des exceptions, vous devez modifier votre application afin que moins de données réside en mémoire, ou les données sont divisées en segments qui nécessitent des allocations de mémoire plus petites.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For example:</source>
          <target state="translated">Exemple :</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you are retrieving all of the data from a database and then filtering it in your app to minimize trips to the server, you should modify your queries to return only the subset of data that your app needs.</source>
          <target state="translated">Si vous êtes la récupération de toutes les données à partir d’une base de données et puis de le filtrage dans votre application afin de réduire les allers-retours au serveur, vous devez modifier vos requêtes pour retourner uniquement le sous-ensemble de données dont votre application a besoin.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>When working with large tables, multiple queries are almost always more efficient than retrieving all of the data in a single table and then manipulating it.</source>
          <target state="translated">Lorsque vous travaillez avec des tables volumineuses, plusieurs requêtes sont presque toujours plus efficace que la récupération de toutes les données dans une table unique et puis de le manipuler.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you are executing queries that users create dynamically, you should ensure that the number of records returned by the query is limited.</source>
          <target state="translated">Si vous exécutez des requêtes que les utilisateurs créer dynamiquement, vous devez vous assurer que le nombre d’enregistrements renvoyés par la requête est limité.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you are using large arrays or other collection objects whose size results in an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, you should modify your application to work the data in subsets rather than to work with it all at once.</source>
          <target state="translated">Si à l’aide de tableaux volumineux ou toute autre collection des objets dont les résultats taille dans un <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, vous devez modifier votre application pour utiliser les données en sous-ensembles plutôt que de les utiliser à la fois.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The following example gets a array that consists of 200 million floating-point values and then calculates their mean.</source>
          <target state="translated">L’exemple suivant obtient un tableau qui se compose de valeurs à virgule flottante de 200 millions, puis calcule leur moyenne.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The output from the example shows that, because the example stores the entire array in memory before it calculates the mean, an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> is is thrown.</source>
          <target state="translated">La sortie de l’exemple montre que, étant donné que l’exemple stocke le tableau entier en mémoire avant qu’il calcule la moyenne, un <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The following example eliminates the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception by processing the incoming data without storing the entire data set in memory, serializing the data to a file if necessary to permit further processing (these lines are commented out in the example, since in this case they produce a file whose size is greater than 1GB), and returning the calculated mean and the number of cases to the calling routine.</source>
          <target state="translated">L’exemple suivant supprime le <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception lors du traitement des données entrantes sans stocker l’ensemble de données en mémoire, sérialiser les données dans un fichier si nécessaire pour permettre la poursuite du traitement (ces lignes doivent être commentées dans l’exemple, Étant donné que dans ce cas ils produisent un fichier dont la taille est supérieure à 1 Go) et en retournant la moyenne calculée et le nombre de cas à la routine d’appel.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You are repeatedly concatenating large strings.</source>
          <target state="translated">Vous concaténez des chaînes de grande taille à plusieurs reprises.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Because strings are immutable, each string concatenation operation creates a new string.</source>
          <target state="translated">Étant donné que les chaînes sont immuables, chaque opération de concaténation de chaînes crée une nouvelle chaîne.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The impact for small strings, or for a small number of concatenation operations, is negligible.</source>
          <target state="translated">L’impact pour les petites chaînes, ou pour un petit nombre d’opérations de concaténation, est négligeable.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>But for large strings or a very large number of concatenation operations, string concatenation can lead to a large number of memory allocations and memory fragmentation, poor performance, and possibly <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceptions.</source>
          <target state="translated">Mais pour les chaînes de grande taille ou un très grand nombre d’opérations de concaténation, concaténation de chaînes peut entraîner un grand nombre d’allocations de mémoire et de fragmentation de la mémoire, des performances médiocres et éventuellement <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exceptions.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>When concatenating large strings or performing a large number of concatenation operations, you should use the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class instead of the <ph id="ph2">&lt;xref:System.String&gt;</ph> class.</source>
          <target state="translated">Lorsque la concaténation de chaînes de grande taille ou d’effectuer un grand nombre d’opérations de concaténation, vous devez utiliser le <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> classe au lieu du <ph id="ph2">&lt;xref:System.String&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>When you have finished manipulating the string, convert the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance to a string by calling the <ph id="ph2">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Lorsque vous avez terminé de manipulation de la chaîne, de convertir la <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance en une chaîne en appelant le <ph id="ph2">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>You pin a large number of objects in memory.</source>
          <target state="translated">Vous épinglez un grand nombre d’objets en mémoire.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Pinning a large number of objects in memory for long periods can make it difficult for the garbage collector to allocate contiguous blocks of memory.</source>
          <target state="translated">Épinglage d’un grand nombre d’objets dans la mémoire pendant de longues périodes peut rendre difficile pour le garbage collector allouer les blocs de mémoire contigus.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>If you've pinned a large number of objects in memory, for example by using the <ph id="ph1">`fixed`</ph> statement in C# or by calling the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType&gt;</ph> method with a handle type of <ph id="ph3">&lt;xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType&gt;</ph>, you can do the following to address the <ph id="ph4">&lt;xref:System.OutOfMemoryException&gt;</ph> exception.</source>
          <target state="translated">Si vous avez épinglé un grand nombre d’objets en mémoire, par exemple à l’aide de la <ph id="ph1">`fixed`</ph> instruction en c# ou en appelant le <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType&gt;</ph> méthode avec un type de handle de <ph id="ph3">&lt;xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType&gt;</ph>, vous pouvez procéder à l’adresse du <ph id="ph4">&lt;xref:System.OutOfMemoryException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Evaluate whether each object really needs to be pinned,</source>
          <target state="translated">Déterminer si chaque objet doit vraiment être épinglé,</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Ensure that each object is unpinned as soon as possible.</source>
          <target state="translated">Assurez-vous que chaque objet est libéré dès que possible.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>Make sure that each call to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType&gt;</ph> method to pin memory has a corresponding call to the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType&gt;</ph> method to unpin that memory.</source>
          <target state="translated">Assurez-vous que chaque appel à la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType&gt;</ph> méthode à la mémoire de code confidentiel a un appel correspondant à la <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType&gt;</ph> méthode pour détacher un que la mémoire.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The following Microsoft intermediate (MSIL) instructions throw an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception:</source>
          <target state="translated">L’instructions Microsoft suivantes intermédiaires (MSIL) lèvent une <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception :</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source><bpt id="p1">[</bpt>box<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.box.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>box<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.box.aspx)</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source><bpt id="p1">[</bpt>newarr<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newarr.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>newarr<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newarr.aspx)</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source><bpt id="p1">[</bpt>newobj<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)</ept>newobj</source>
          <target state="translated"><bpt id="p1">[</bpt>newobj<ept id="p1">](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)</ept>newobj</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source><ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> uses the HRESULT <ph id="ph2">`COR_E_OUTOFMEMORY`</ph>, which has the value 0x8007000E.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> utilise le HRESULT <ph id="ph2">`COR_E_OUTOFMEMORY`</ph>, qui a la valeur 0x8007000E.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.OutOfMemoryException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">Pour obtenir la liste de valeurs de propriété initiales d’une instance de <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, consultez la <ph id="ph2">&lt;xref:System.OutOfMemoryException.%23ctor%2A&gt;</ph> constructeurs.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OutOfMemoryException">
          <source>The value of the inherited <ph id="ph1">&lt;xref:System.Exception.Data%2A&gt;</ph> property is always <ph id="ph2">`null`</ph>.</source>
          <target state="translated">La valeur de l’élément hérité <ph id="ph1">&lt;xref:System.Exception.Data%2A&gt;</ph> propriété est toujours <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.OutOfMemoryException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "There was not enough memory to continue the execution of the program."</source>
          <target state="translated">Ce constructeur initialise la <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> propriété de la nouvelle instance à un message système qui décrit l’erreur, tel que « mémoire insuffisante pour continuer l’exécution du programme. ».</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Ce message prend en compte la culture système en cours.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">Chaîne du message d'erreur localisé.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">Message décrivant l'erreur.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> avec un message d'erreur spécifié.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> parameter is intended to be understood by humans.</source>
          <target state="translated">Le contenu du paramètre <ph id="ph1">`message`</ph> doit être compréhensible par les utilisateurs.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Référence Null (<ph id="ph1">`Nothing`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">Chaîne du message d'erreur.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">Objet qui contient les données sérialisées de l'objet.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">Informations contextuelles sur la source ou la destination.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> avec des données sérialisées.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Ce constructeur est appelé lors de la désérialisation pour reconstituer l’objet exception transmis sur un flux.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>sérialisation XML et SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Message d'erreur qui explique la raison de l'exception.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Exception ayant provoqué l'exception actuelle.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Si le paramètre <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> n’est pas une référence Null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic), l’exception actuelle est levée dans un bloc <ph id="ph2">&lt;see langword="catch" /&gt;</ph> qui gère l’exception interne.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Une exception qui est levée en conséquence directe d'une exception précédente peut contenir une référence à l'exception précédente dans la propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> retourne la même valeur que celle qui a été passée dans le constructeur ou une référence Null (<ph id="ph2">`Nothing`</ph> en Visual Basic), si la propriété <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> ne fournit pas la valeur de l'exception interne au constructeur.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">La référence à l'exception interne.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">Chaîne du message d'erreur.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>