<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AggregateException.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a408cd8c65b6a1872bbc7ecc28fd7106d4fe9897.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a408cd8c65b6a1872bbc7ecc28fd7106d4fe9897</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AggregateException">
          <source>Represents one or more errors that occur during application execution.</source>
          <target state="translated">Représente une ou plusieurs erreurs qui se produisent pendant l'exécution de l'application.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source><ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> is used to consolidate multiple failures into a single, throwable exception object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> est utilisé pour consolider plusieurs échecs dans un objet exception levable unique.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>It is used extensively in the <bpt id="p1">[</bpt>Task Parallel Library (TPL)<ept id="p1">](~/docs/standard/parallel-programming/task-parallel-library-tpl.md)</ept> and <bpt id="p2">[</bpt>Parallel LINQ (PLINQ)<ept id="p2">](~/docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.</source>
          <target state="translated">Il est largement utilisé dans les <bpt id="p1">[</bpt>bibliothèque parallèle de tâches (TPL)<ept id="p1">](~/docs/standard/parallel-programming/task-parallel-library-tpl.md)</ept> et <bpt id="p2">[</bpt>Parallel LINQ (PLINQ)<ept id="p2">](~/docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>For additional information, see the <bpt id="p1">[</bpt>Aggregating Exceptions<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=259617)</ept> entry in the .NET Matters blog.</source>
          <target state="translated">Pour plus d’informations, consultez la <bpt id="p1">[</bpt>l’agrégation des Exceptions<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=259617)</ept> entrée dans le blog .NET a une incidence.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>For an example, see <bpt id="p1">[</bpt>NIB: How to: Handle Exceptions Thrown by Tasks<ept id="p1">](http://msdn.microsoft.com/library/d6c47ec8-9de9-4880-beb3-ff19ae51565d)</ept> and <bpt id="p2">[</bpt>How to: Handle Exceptions in a PLINQ Query<ept id="p2">](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md)</ept>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <bpt id="p1">[</bpt>NIB : Comment : Handle Exceptions Thrown by Tasks<ept id="p1">](http://msdn.microsoft.com/library/d6c47ec8-9de9-4880-beb3-ff19ae51565d)</ept> et <bpt id="p2">[</bpt>Comment : gérer des Exceptions dans une requête PLINQ<ept id="p2">](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>The following example catches the <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception and calls the <ph id="ph2">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method to handle each exception it contains.</source>
          <target state="translated">L’exemple suivant intercepte le <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception et appelle le <ph id="ph2">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> méthode pour gérer chaque exception qu’il contient.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>Compiling and running the example with the first <ph id="ph1">`task1`</ph> variable should result in an <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> object that contains an <ph id="ph3">&lt;xref:System.UnauthorizedAccessException&gt;</ph> exception.</source>
          <target state="translated">Compilation et exécution de l’exemple avec la première <ph id="ph1">`task1`</ph> variable doit entraîner une <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> objet qui contient un <ph id="ph3">&lt;xref:System.UnauthorizedAccessException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>Commenting out that line, uncommenting the second <ph id="ph1">`task1`</ph> variable, and compiling and running the example produces an <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> object that contains an <ph id="ph3">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">Commenter cette ligne, le commentaire de la deuxième <ph id="ph1">`task1`</ph> variable et de compiler et d’exécuter l’exemple produit un <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> objet qui contient un <ph id="ph3">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">Tous les membres publics et protégés de <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> sont thread-safe et peuvent être utilisés simultanément à partir de plusieurs threads.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.AggregateException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a system-supplied message that describes the error.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> avec un message système qui décrit l'erreur.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "System.AggregateException: One or more errors occurred."</source>
          <target state="translated">Ce constructeur initialise la <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> propriété de la nouvelle instance à un message système qui décrit l’erreur, tel que « System.AggregateException : une ou plusieurs erreurs se sont produites. »</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Ce message prend en compte la culture système en cours.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">Chaîne du message d'erreur localisé.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The exceptions that are the cause of the current exception.</source>
          <target state="translated">Exceptions qui ont provoqué l'exception actuelle.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with references to the inner exceptions that are the cause of this exception.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> avec des références aux exceptions internes qui sont la cause de cette exception.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
          <source>An element of <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> is null.</source>
          <target state="translated">Un élément d'<ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> est null.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Exception[])">
          <source>The exceptions that are the cause of the current exception.</source>
          <target state="translated">Exceptions qui ont provoqué l'exception actuelle.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Exception[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with references to the inner exceptions that are the cause of this exception.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> avec des références aux exceptions internes qui sont la cause de cette exception.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Exception[])">
          <source>The <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Exception[])">
          <source>An element of <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> is null.</source>
          <target state="translated">Un élément d'<ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> est null.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String)">
          <source>The message that describes the exception.</source>
          <target state="translated">Message décrivant l'exception.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a specified message that describes the error.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> avec un message spécifié décrivant l'erreur.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated">Chaîne de message d'erreur spécifiée dans <ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">Objet qui contient les données sérialisées de l'objet.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">Informations contextuelles sur la source ou la destination.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> avec des données sérialisées.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Ce constructeur est appelé lors de la désérialisation pour reconstituer l’objet exception transmis sur un flux.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>sérialisation XML et SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="info" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The exception could not be deserialized correctly.</source>
          <target state="translated">L’exception n’a pas pu être désérialisée correctement.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Message d'erreur qui explique la raison de l'exception.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The exceptions that are the cause of the current exception.</source>
          <target state="translated">Exceptions qui ont provoqué l'exception actuelle.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a specified error message and references to the inner exceptions that are the cause of this exception.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> avec un message d'erreur spécifié et des références aux exceptions internes qui sont la cause de cette exception.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>An element of <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> is null.</source>
          <target state="translated">Un élément d'<ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> est null.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The message that describes the exception.</source>
          <target state="translated">Message décrivant l'exception.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Exception ayant provoqué l'exception actuelle.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Si le paramètre <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> n’est pas <ph id="ph1">&lt;see langword="null" /&gt;</ph>, l’exception actuelle est levée dans un bloc <ph id="ph2">&lt;see langword="catch" /&gt;</ph> qui gère l’exception interne.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Une exception levée en conséquence directe d'une exception précédente doit contenir une référence à celle-ci dans la propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> retourne la même valeur que celle qui a été passée dans le constructeur ou retourne <ph id="ph2">`null`</ph> si la propriété <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> ne fournit pas la valeur d'exception interne au constructeur.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated">Chaîne de message d'erreur spécifiée dans <ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;paramref name="innerException" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="innerException" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Message d'erreur qui explique la raison de l'exception.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>The exceptions that are the cause of the current exception.</source>
          <target state="translated">Exceptions qui ont provoqué l'exception actuelle.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a specified error message and references to the inner exceptions that are the cause of this exception.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> avec un message d'erreur spécifié et des références aux exceptions internes qui sont la cause de cette exception.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>The <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>An element of <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> is null.</source>
          <target state="translated">Un élément d'<ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> est null.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Flatten">
          <source>Flattens an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> instances into a single, new instance.</source>
          <target state="translated">Aplatit des instances <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> en une nouvelle instance unique.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Flatten">
          <source>A new, flattened <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</source>
          <target state="translated">Nouvelle instance <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> aplatie.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>If a task has an attached child task that throws an exception, that exception is wrapped in an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception before it is propagated to the parent task, which wraps that exception in its own <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> exception before it propagates it back to the calling thread.</source>
          <target state="translated">Si une tâche a une tâche enfant attachée qui lève une exception, cette exception est encapsulée dans une <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception avant d’être propagée vers la tâche parent, qui encapsule cette exception dans son propre <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> exception avant de la propager sauvegarder sur le thread d’appel.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>In such cases, the <ph id="ph1">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> exception that is caught by the <ph id="ph3">&lt;xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Threading.Tasks.Task.Wait*&gt;</ph>, <ph id="ph5">&lt;xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph6">&lt;xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType&gt;</ph> method contains one or more <ph id="ph7">&lt;xref:System.AggregateException&gt;</ph> instances, not the original exceptions that caused the fault.</source>
          <target state="translated">Dans ce cas, le <ph id="ph1">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> propriété de la <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> exception est interceptée par le <ph id="ph3">&lt;xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Threading.Tasks.Task.Wait*&gt;</ph>, <ph id="ph5">&lt;xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph6">&lt;xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType&gt;</ph> méthode contient un ou plusieurs <ph id="ph7">&lt;xref:System.AggregateException&gt;</ph> pas les exceptions d’origine, les instances qui a provoqué l’erreur.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>To avoid having to iterate over nested <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exceptions, you can use the <ph id="ph2">&lt;xref:System.AggregateException.Flatten%2A&gt;</ph> method to remove all the nested <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> exceptions, so that the <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.AggregateException&gt;</ph> object contains the original exceptions.</source>
          <target state="translated">Pour éviter d’avoir à itérer imbriqués <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> des exceptions, vous pouvez utiliser la <ph id="ph2">&lt;xref:System.AggregateException.Flatten%2A&gt;</ph> méthode pour supprimer tous les imbriqué <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> des exceptions, afin que le <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> propriété retourné <ph id="ph5">&lt;xref:System.AggregateException&gt;</ph> objet contient la version d’origine exceptions.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>This method recursively flattens all instances of  <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exceptions that are inner exceptions of the current <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instance .</source>
          <target state="translated">Méthode récursive aplatit toutes les instances de <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> les exceptions qui sont des exceptions internes d’actuel <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>The inner exceptions returned in the new <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> are the union of all the inner exceptions from exception tree rooted at the current <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instance.</source>
          <target state="translated">Les exceptions internes retournées dans le nouveau <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> sont l’union de toutes les exceptions à partir de l’arborescence de l’exception internes ayant pour racine actuel <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>In the following example, nested <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> instances are flattened and handled in just one loop.</source>
          <target state="translated">Dans l’exemple suivant, les instances <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> imbriquées sont aplaties et gérées en une seule boucle.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>You can also use the <ph id="ph1">&lt;xref:System.AggregateException.Flatten%2A?displayProperty=nameWithType&gt;</ph> method to rethrow the inner exceptions from multiple <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instances thrown by multiple tasks in a single <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> instance, as the following example shows.</source>
          <target state="translated">Vous pouvez également utiliser la méthode <ph id="ph1">&lt;xref:System.AggregateException.Flatten%2A?displayProperty=nameWithType&gt;</ph> pour lever à nouveau les exceptions internes de plusieurs instances <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> levées par plusieurs tâches dans une seule instance <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph>, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetBaseException">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> that is the root cause of this exception.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> qui est la cause première de cette exception.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetBaseException">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> that is the root cause of this exception.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> qui est la cause première de cette exception.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">Objet qui contient les données sérialisées de l'objet.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">Informations contextuelles sur la source ou la destination.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> avec des données sérialisées.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Ce constructeur est appelé lors de la désérialisation pour reconstituer l’objet exception transmis sur un flux.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>sérialisation XML et SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="info" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>The predicate to execute for each exception.</source>
          <target state="translated">Prédicat à exécuter pour chaque exception.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>The predicate accepts as an argument the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> to be processed and returns a Boolean to indicate whether the exception was handled.</source>
          <target state="translated">Le prédicat accepte l'objet <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> à traiter en tant qu'argument et retourne une valeur booléenne pour indiquer si l'exception a été gérée.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Invokes a handler on each <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> contained by this <ph id="ph2">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</source>
          <target state="translated">Appelle un gestionnaire sur chaque <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> contenu par ce <ph id="ph2">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Each invocation of the <ph id="ph1">`predicate`</ph> returns true or false to indicate whether the <ph id="ph2">&lt;xref:System.Exception&gt;</ph> was handled.</source>
          <target state="translated">Chaque appel de la <ph id="ph1">`predicate`</ph> retourne la valeur true ou false pour indiquer si le <ph id="ph2">&lt;xref:System.Exception&gt;</ph> a été gérée.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> which will be thrown.</source>
          <target state="translated">Une fois tous les appels, si toutes les exceptions non gérées, toutes les exceptions non gérées sont placées dans un nouveau <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> qui sera levée.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method simply returns.</source>
          <target state="translated">Dans le cas contraire, la <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> méthode retourne simplement.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>If any invocations of the <ph id="ph1">`predicate`</ph> throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is.</source>
          <target state="translated">Si un appel de la <ph id="ph1">`predicate`</ph> lève une exception, il arrêtera le traitement des autres exceptions et propagera immédiatement l’exception levée comme-est.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Ordinarily, an exception handler that catches an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception uses a <ph id="ph2">`foreach`</ph> loop (in C#) or <ph id="ph3">`For Each`</ph> loop (in Visual Basic) to handle each exception in its <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> collection.</source>
          <target state="translated">En règle générale, un gestionnaire d’exceptions qui intercepte un <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception utilise un <ph id="ph2">`foreach`</ph> boucle (en c#) ou <ph id="ph3">`For Each`</ph> boucle (en Visual Basic) pour gérer chaque exception dans son <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> collection.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Instead, the following example uses the <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method to handle each exception, and only re-throws exceptions that are not <ph id="ph2">`CustomException`</ph> instances.</source>
          <target state="translated">Au lieu de cela, l’exemple suivant utilise le <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> méthode pour gérer chaque exception et les seules exceptions lève de nouveau qui ne sont pas <ph id="ph2">`CustomException`</ph> instances.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>The following is a more complete example that uses the <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method to provide special handling for an <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph> when enumerating files.</source>
          <target state="translated">Voici un exemple plus complet qui utilise le <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> méthode pour fournir une gestion spéciale pour un <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph> lors de l’énumération des fichiers.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>The <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>An exception contained by this <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> was not handled.</source>
          <target state="translated">Une exception contenue dans ce <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> n'a pas été gérée.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.AggregateException.InnerExceptions">
          <source>Gets a read-only collection of the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> instances that caused the current exception.</source>
          <target state="translated">Obtient une collection en lecture seule des instances <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> qui ont provoqué l'exception actuelle.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AggregateException.InnerExceptions">
          <source>Returns a read-only collection of the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> instances that caused the current exception.</source>
          <target state="translated">Retourne une collection en lecture seule des instances <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> qui ont provoqué l'exception actuelle.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.AggregateException.ToString">
          <source>Creates and returns a string representation of the current <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</source>
          <target state="translated">Crée et retourne une chaîne représentant la valeur <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> actuelle.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.AggregateException.ToString">
          <source>A string representation of the current exception.</source>
          <target state="translated">Représentation sous forme de chaîne de l'exception actuelle.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>