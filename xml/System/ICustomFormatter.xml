<Type Name="ICustomFormatter" FullName="System.ICustomFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a314918c1d567aa8e851e722e13a8cf0a79fc268" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48638252" /></Metadata><TypeSignature Language="C#" Value="public interface ICustomFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomFormatter" />
  <TypeSignature Language="DocId" Value="T:System.ICustomFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomFormatter" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICustomFormatter" />
  <TypeSignature Language="F#" Value="type ICustomFormatter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d775e-101">Définit une méthode qui prend en charge la mise en forme personnalisée de la valeur d'un objet.</span><span class="sxs-lookup"><span data-stu-id="d775e-101">Defines a method that supports custom formatting of the value of an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d775e-102">Le <xref:System.ICustomFormatter> interface inclut une méthode unique, <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d775e-102">The <xref:System.ICustomFormatter> interface includes a single method, <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d775e-103">Lorsque cette interface est implémentée par un type référence ou valeur, la <xref:System.ICustomFormatter.Format%2A> méthode retourne une représentation sous forme de chaîne mise en forme personnalisée de la valeur d’un objet.</span><span class="sxs-lookup"><span data-stu-id="d775e-103">When this interface is implemented by a reference or value type, the <xref:System.ICustomFormatter.Format%2A> method returns a custom-formatted string representation of an object's value.</span></span>  
  
 <span data-ttu-id="d775e-104">En règle générale, le <xref:System.ICustomFormatter> interface est implémentée avec le <xref:System.IFormatProvider> interface pour personnaliser le comportement de deux méthodes .NET Framework chaîne composite mise en forme qui incluent un <xref:System.IFormatProvider> paramètre.</span><span class="sxs-lookup"><span data-stu-id="d775e-104">Typically, the <xref:System.ICustomFormatter> interface is implemented with the <xref:System.IFormatProvider> interface to customize the behavior of two .NET Framework composite string formatting methods that include an <xref:System.IFormatProvider> parameter.</span></span> <span data-ttu-id="d775e-105">Plus précisément, le <xref:System.ICustomFormatter> interface peut fournir une mise en forme personnalisée de la valeur d’un objet passé à la <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> et <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="d775e-105">Specifically, the <xref:System.ICustomFormatter> interface can provide custom formatting of the value of an object passed to the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> and <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="d775e-106">En fournissant une représentation personnalisée de la valeur d’un objet nécessite que vous procédez comme suit :</span><span class="sxs-lookup"><span data-stu-id="d775e-106">Providing a custom representation of an object's value requires that you do the following:</span></span>  
  
1.  <span data-ttu-id="d775e-107">Définissez une classe qui implémente le <xref:System.ICustomFormatter> interface et son membre unique, la <xref:System.ICustomFormatter.Format%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d775e-107">Define a class that implements the <xref:System.ICustomFormatter> interface and its single member, the <xref:System.ICustomFormatter.Format%2A> method.</span></span>  
  
2.  <span data-ttu-id="d775e-108">Définissez une classe qui implémente le <xref:System.IFormatProvider> interface et son membre unique, la <xref:System.IFormatProvider.GetFormat%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d775e-108">Define a class that implements the <xref:System.IFormatProvider> interface and its single member, the <xref:System.IFormatProvider.GetFormat%2A> method.</span></span> <span data-ttu-id="d775e-109">Le <xref:System.IFormatProvider.GetFormat%2A> méthode retourne une instance de votre <xref:System.ICustomFormatter> implémentation.</span><span class="sxs-lookup"><span data-stu-id="d775e-109">The <xref:System.IFormatProvider.GetFormat%2A> method returns an instance of your <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="d775e-110">Souvent, une seule classe implémente à la fois <xref:System.ICustomFormatter> et <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="d775e-110">Often, a single class implements both <xref:System.ICustomFormatter> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d775e-111">Dans de ce cas, la classe `GetFormat` implémentation retourne simplement une instance d’elle-même.</span><span class="sxs-lookup"><span data-stu-id="d775e-111">In that case, the class's `GetFormat` implementation just returns an instance of itself.</span></span>  
  
3.  <span data-ttu-id="d775e-112">Passer le <xref:System.IFormatProvider> mise en œuvre en tant que le `provider` argument de la <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> méthode ou une méthode comparable.</span><span class="sxs-lookup"><span data-stu-id="d775e-112">Pass the <xref:System.IFormatProvider> implementation as the `provider` argument of the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method or a comparable method.</span></span>  
  
 <span data-ttu-id="d775e-113">La méthode .NET Framework utilise alors votre mise en forme personnalisée au lieu de son propre.</span><span class="sxs-lookup"><span data-stu-id="d775e-113">The .NET Framework method will then use your custom formatting instead of its own.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d775e-114">L’exemple suivant implémente <xref:System.ICustomFormatter> pour permettre la mise en forme binaire, octales et hexadécimales de valeurs intégrales.</span><span class="sxs-lookup"><span data-stu-id="d775e-114">The following example implements <xref:System.ICustomFormatter> to allow binary, octal, and hexadecimal formatting of integral values.</span></span> <span data-ttu-id="d775e-115">Dans cet exemple, une classe unique, `IBinaryFormatter`, implémente à la fois <xref:System.ICustomFormatter> et <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="d775e-115">In this example, a single class, `IBinaryFormatter`, implements both <xref:System.ICustomFormatter> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d775e-116">Son <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> méthode détermine si le `formatType` paramètre représente un <xref:System.ICustomFormatter> type.</span><span class="sxs-lookup"><span data-stu-id="d775e-116">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method determines whether the `formatType` parameter represents an <xref:System.ICustomFormatter> type.</span></span> <span data-ttu-id="d775e-117">Le cas échéant, `BinaryFormatter` retourne une instance de lui-même ; sinon, elle retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="d775e-117">If it does, `BinaryFormatter` returns an instance of itself; otherwise, it returns `null`.</span></span> <span data-ttu-id="d775e-118">Son <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implémentation détermine si le paramètre de format est un des trois chaînes de format pris en charge (« B » pour le fichier binaire, « O » pour octal et « H » pour hexadécimal) et met en forme le `arg` paramètre correctement.</span><span class="sxs-lookup"><span data-stu-id="d775e-118">Its <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implementation determines whether the format parameter is one of the three supported format strings ("B" for binary, "O" for octal, and "H" for hexadecimal) and formats the `arg` parameter appropriately.</span></span> <span data-ttu-id="d775e-119">Sinon, si `arg` n’est pas `null`, il appelle le `arg` du paramètre <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implémentation, s’il en existe, ou sa sans paramètre `ToString` méthode, si un n’est pas le cas.</span><span class="sxs-lookup"><span data-stu-id="d775e-119">Otherwise, if `arg` is not `null`, it calls the `arg` parameter's <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation, if one exists, or its parameterless `ToString` method, if one does not.</span></span> <span data-ttu-id="d775e-120">Si `arg` est `null`, la méthode retourne <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d775e-120">If `arg` is `null`, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#1)]
 [!code-vb[System.ICustomFormatter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#1)]  
  
 <span data-ttu-id="d775e-121">`BinaryFormatter` peut ensuite être utilisé pour fournir la mise en forme personnalisée en passant un `BinaryFormatter` de l’objet en tant que le `provider` paramètre de la <xref:System.String.Format%2A> méthode, comme le montre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="d775e-121">`BinaryFormatter` can then be used to provide custom formatting by passing a `BinaryFormatter` object as the `provider` parameter of the <xref:System.String.Format%2A> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#2)]
 [!code-vb[System.ICustomFormatter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="d775e-122">Le common language runtime tente d’utiliser votre <see cref="T:System.ICustomFormatter" /> implémentation pour chaque élément de format dans une chaîne de format composite.</span><span class="sxs-lookup"><span data-stu-id="d775e-122">The common language runtime attempts to use your <see cref="T:System.ICustomFormatter" /> implementation for every format item in a composite format string.</span></span> <span data-ttu-id="d775e-123">Par conséquent, vous devez vous attendre que votre <see cref="T:System.ICustomFormatter" /> implémentation sera appelée pour fournir des services de mise en forme aux objets ou de valeurs qu’il est pas conçue pour gérer.</span><span class="sxs-lookup"><span data-stu-id="d775e-123">As a result, you should expect that your <see cref="T:System.ICustomFormatter" /> implementation will be called to provide formatting services to objects or values that it is not designed to handle.</span></span> <span data-ttu-id="d775e-124">Dans ce cas, votre <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> méthode doit appeler la méthode de mise en forme appropriée pour cet objet ou une valeur.</span><span class="sxs-lookup"><span data-stu-id="d775e-124">In these cases, your <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> method must call the appropriate formatting method for that object or value.</span></span>  
  
<span data-ttu-id="d775e-125">Il existe deux types de <see cref="T:System.ICustomFormatter" /> implémentations : intrinsèque et l’extension.</span><span class="sxs-lookup"><span data-stu-id="d775e-125">There are two kinds of <see cref="T:System.ICustomFormatter" /> implementations: intrinsic and extension.</span></span>  
  
<span data-ttu-id="d775e-126">Les implémentations intrinsèques sont des implémentations qui fournissent la mise en forme personnalisée pour un objet défini par l’application.</span><span class="sxs-lookup"><span data-stu-id="d775e-126">Intrinsic implementations are implementations that provide custom formatting for an application-defined object.</span></span> <span data-ttu-id="d775e-127">Dans ce cas, votre implémentation doit inclure les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="d775e-127">In this case, your implementation should include the following:</span></span> 
<span data-ttu-id="d775e-128">-Définition de chaînes de format qui définissent la mise en forme de l’objet.</span><span class="sxs-lookup"><span data-stu-id="d775e-128">-   A definition of format strings that define the formatting of the object.</span></span> <span data-ttu-id="d775e-129">Chaînes de format sont facultatifs.</span><span class="sxs-lookup"><span data-stu-id="d775e-129">Format strings are optional.</span></span> <span data-ttu-id="d775e-130">En règle générale, une chaîne de format « G » ou « g » définit le format général (ou plus couramment utilisé).</span><span class="sxs-lookup"><span data-stu-id="d775e-130">Typically, a "G" or "g" format string defines the general (or most commonly used) format.</span></span> <span data-ttu-id="d775e-131">Toutefois, vous êtes libre de définir toutes les chaînes de format que vous choisissez.</span><span class="sxs-lookup"><span data-stu-id="d775e-131">However, you are free to define any format strings that you choose.</span></span> <span data-ttu-id="d775e-132">Vous pouvez également décider s’ils respectent la casse.</span><span class="sxs-lookup"><span data-stu-id="d775e-132">You are also free to decide whether they are case-sensitive or case-insensitive.</span></span>  
  
<span data-ttu-id="d775e-133">-Un test afin de garantir que le type de l’objet passé à votre <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> méthode est votre type défini par l’application.</span><span class="sxs-lookup"><span data-stu-id="d775e-133">-   A test to ensure that the type of the object passed to your <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> method is your application-defined type.</span></span> <span data-ttu-id="d775e-134">Si elle n’est pas le cas, vous devez appeler l’objet <see cref="T:System.IFormattable" /> implémentation, s’il en existe, ou son <see cref="M:System.Object.ToString" /> méthode, si elle n’est pas le cas.</span><span class="sxs-lookup"><span data-stu-id="d775e-134">If it is not, you should call the object's <see cref="T:System.IFormattable" /> implementation, if one exists, or its <see cref="M:System.Object.ToString" /> method, if it does not.</span></span> <span data-ttu-id="d775e-135">Il se peut que vous devez être prêt à gérer les exceptions à ces appels de méthode peuvent lever.</span><span class="sxs-lookup"><span data-stu-id="d775e-135">You should be prepared to handle any exceptions these method calls might throw.</span></span>  
  
<span data-ttu-id="d775e-136">-Code pour gérer une chaîne de format null, si votre implémentation prend en charge les chaînes de format.</span><span class="sxs-lookup"><span data-stu-id="d775e-136">-   Code to handle a null format string, if your implementation supports format strings.</span></span> <span data-ttu-id="d775e-137">L’approche la plus courante consiste à remplacer une chaîne de format null avec le spécificateur de format général.</span><span class="sxs-lookup"><span data-stu-id="d775e-137">The most common approach is to replace a null format string with the general format specifier.</span></span>  
  
<span data-ttu-id="d775e-138">-Code pour gérer toutes les chaînes de format qui prend en charge par votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="d775e-138">-   Code to handle any format strings that your implementation supports.</span></span>  
  
<span data-ttu-id="d775e-139">-Code pour gérer les chaînes de format que vous ne prennent pas en charge.</span><span class="sxs-lookup"><span data-stu-id="d775e-139">-   Code to handle format strings that you do not support.</span></span> <span data-ttu-id="d775e-140">L’approche la plus courante consiste à lever une <see cref="T:System.FormatException" />, bien que vous pouvez fournir la mise en forme par défaut.</span><span class="sxs-lookup"><span data-stu-id="d775e-140">The most common approach is to throw a <see cref="T:System.FormatException" />, although you can provide default formatting.</span></span>  
  
<span data-ttu-id="d775e-141">Implémentations d’extension sont des implémentations qui fournissent la mise en forme personnalisée pour un type qui a déjà la prise en charge la mise en forme.</span><span class="sxs-lookup"><span data-stu-id="d775e-141">Extension implementations are implementations that provide custom formatting for a type that already has formatting support.</span></span> <span data-ttu-id="d775e-142">Par exemple, vous pouvez définir un <c>CustomerNumberFormatter</c> qui met en forme un type intégral avec des traits d’union entre des chiffres spécifiques.</span><span class="sxs-lookup"><span data-stu-id="d775e-142">For example, you could define a <c>CustomerNumberFormatter</c> that formats an integral type with hyphens between specific digits.</span></span> <span data-ttu-id="d775e-143">Dans ce cas, votre implémentation doit inclure les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="d775e-143">In this case, your implementation should include the following:</span></span> 
<span data-ttu-id="d775e-144">-Définition de chaînes de format qui étendent la mise en forme de l’objet.</span><span class="sxs-lookup"><span data-stu-id="d775e-144">-   A definition of format strings that extend the formatting of the object.</span></span> <span data-ttu-id="d775e-145">Ces chaînes de format sont obligatoires, mais ils ne doivent pas entrer en conflit avec les chaînes de format existant du type.</span><span class="sxs-lookup"><span data-stu-id="d775e-145">These format strings are required, but they must not conflict with the type's existing format strings.</span></span> <span data-ttu-id="d775e-146">Par exemple, si vous étendez mise en forme pour le <see cref="T:System.Int32" /> type, vous ne devez pas implémenter les spécificateurs de format « C », « D », « E », « F » et « G », entre autres.</span><span class="sxs-lookup"><span data-stu-id="d775e-146">For example, if you are extending formatting for the <see cref="T:System.Int32" /> type, you should not implement the "C", "D", "E", "F", and "G" format specifiers, among others.</span></span>  
  
<span data-ttu-id="d775e-147">-Un test qui a le type de l’objet passé à votre <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> méthode est un type dont votre extension de mise en forme prend en charge.</span><span class="sxs-lookup"><span data-stu-id="d775e-147">-   A test that the type of the object passed to your <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" /> method is a type whose formatting your extension supports.</span></span> <span data-ttu-id="d775e-148">Si elle n’est pas le cas, appelez l’objet <see cref="T:System.IFormattable" /> implémentation, s’il en existe un, ou sans paramètre de l’objet <see cref="M:System.Object.ToString" /> méthode, si elle n’est pas le cas.</span><span class="sxs-lookup"><span data-stu-id="d775e-148">If it is not, call the object's <see cref="T:System.IFormattable" /> implementation, if one exists, or the object's parameterless <see cref="M:System.Object.ToString" /> method, if it does not.</span></span> <span data-ttu-id="d775e-149">Il se peut que vous devez être prêt à gérer les exceptions à ces appels de méthode peuvent lever.</span><span class="sxs-lookup"><span data-stu-id="d775e-149">You should be prepared to handle any exceptions these method calls might throw.</span></span>  
  
<span data-ttu-id="d775e-150">-Code pour gérer toutes les chaînes de format qui prend en charge par votre extension.</span><span class="sxs-lookup"><span data-stu-id="d775e-150">-   Code to handle any format strings that your extension supports.</span></span>  
  
<span data-ttu-id="d775e-151">-Code pour gérer toutes les chaînes de format que votre extension ne prend pas en charge.</span><span class="sxs-lookup"><span data-stu-id="d775e-151">-   Code to handle any format strings that your extension does not support.</span></span> <span data-ttu-id="d775e-152">Celles-ci doivent être transmises le type <see cref="T:System.IFormattable" /> implémentation.</span><span class="sxs-lookup"><span data-stu-id="d775e-152">These should be passed on to the type's <see cref="T:System.IFormattable" /> implementation.</span></span> <span data-ttu-id="d775e-153">Il se peut que vous devez être prêt à gérer les exceptions à ces appels de méthode peuvent lever.</span><span class="sxs-lookup"><span data-stu-id="d775e-153">You should be prepared to handle any exceptions these method calls might throw.</span></span></para></block>
    <altmember cref="T:System.IFormatProvider" />
  </Docs>
  <Members>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format (string format, object arg, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Format(string format, object arg, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (format As String, arg As Object, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Format(System::String ^ format, System::Object ^ arg, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="abstract member Format : string * obj * IFormatProvider -&gt; string" Usage="iCustomFormatter.Format (format, arg, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="d775e-154">Chaîne de format contenant des spécifications de mise en forme.</span><span class="sxs-lookup"><span data-stu-id="d775e-154">A format string containing formatting specifications.</span></span></param>
        <param name="arg"><span data-ttu-id="d775e-155">Objet à mettre en forme.</span><span class="sxs-lookup"><span data-stu-id="d775e-155">An object to format.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="d775e-156">Objet qui fournit les informations de format concernant l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="d775e-156">An object that supplies format information about the current instance.</span></span></param>
        <summary><span data-ttu-id="d775e-157">Convertit la valeur d'un objet spécifié en une chaîne équivalente à l'aide du format spécifié et des informations de mise en forme propres à la culture.</span><span class="sxs-lookup"><span data-stu-id="d775e-157">Converts the value of a specified object to an equivalent string representation using specified format and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d775e-158">Représentation sous forme de chaîne de la valeur de <paramref name="arg" />, mise en forme comme spécifié par <paramref name="format" /> et <paramref name="formatProvider" />.</span><span class="sxs-lookup"><span data-stu-id="d775e-158">The string representation of the value of <paramref name="arg" />, formatted as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d775e-159"><xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> est une méthode de rappel.</span><span class="sxs-lookup"><span data-stu-id="d775e-159"><xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> is a callback method.</span></span> <span data-ttu-id="d775e-160">Elle est appelée par une méthode qui prend en charge la mise en forme personnalisée, tel que <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> ou <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d775e-160">It is called by a method that supports custom formatting, such as <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> or <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d775e-161">L’implémentation est appelée une fois pour chaque élément de format dans un [chaîne de format composite](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="d775e-161">The implementation is called once for each format item in a [composite format string](~/docs/standard/base-types/composite-formatting.md).</span></span> <span data-ttu-id="d775e-162">Par exemple, dans l’instruction suivante, le <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> méthode est appelée trois fois.</span><span class="sxs-lookup"><span data-stu-id="d775e-162">For example, in the following statement, the <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> method is called three times.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#4)]
 [!code-vb[System.ICustomFormatter.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#4)]  
  
 <span data-ttu-id="d775e-163">Le `arg` paramètre est l’objet dans la liste d’objets dont la position de base zéro correspond à l’index d’un élément de format particulier.</span><span class="sxs-lookup"><span data-stu-id="d775e-163">The `arg` parameter is the object in the object list whose zero-based position corresponds to the index of a particular format item.</span></span>  
  
 <span data-ttu-id="d775e-164">Le `format` paramètre contient une chaîne de format, ce qui est le `formatString` composant d’un élément de format.</span><span class="sxs-lookup"><span data-stu-id="d775e-164">The `format` parameter contains a format string, which is the `formatString` component of a format item.</span></span> <span data-ttu-id="d775e-165">Si l’élément de format n’a pas `formatString` composant, la valeur de `format` est `null`.</span><span class="sxs-lookup"><span data-stu-id="d775e-165">If the format item has no `formatString` component, the value of `format` is `null`.</span></span> <span data-ttu-id="d775e-166">Si `format` est `null`, selon le type de `arg`, vous pourrez peut-être utiliser la spécification de format par défaut de votre choix.</span><span class="sxs-lookup"><span data-stu-id="d775e-166">If `format` is `null`, depending on the type of `arg`, you may be able to use the default format specification of your choice.</span></span>  
  
 <span data-ttu-id="d775e-167">Le `formatProvider` paramètre est le <xref:System.IFormatProvider> implémentation qui fournit la mise en forme pour `arg`.</span><span class="sxs-lookup"><span data-stu-id="d775e-167">The `formatProvider` parameter is the <xref:System.IFormatProvider> implementation that provides formatting for `arg`.</span></span> <span data-ttu-id="d775e-168">En règle générale, il s’agit d’une instance de votre <xref:System.ICustomFormatter> implémentation.</span><span class="sxs-lookup"><span data-stu-id="d775e-168">Typically, it is an instance of your <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="d775e-169">Si `formatProvider` est `null`, ignorez ce paramètre.</span><span class="sxs-lookup"><span data-stu-id="d775e-169">If `formatProvider` is `null`, ignore that parameter.</span></span>  
  
 <span data-ttu-id="d775e-170">Votre implémentation de la <xref:System.ICustomFormatter.Format%2A> méthode doit inclure les fonctionnalités suivantes pour le .NET Framework puissent fournir, vous ne prennent pas en charge de la mise en forme.</span><span class="sxs-lookup"><span data-stu-id="d775e-170">Your implementation of the <xref:System.ICustomFormatter.Format%2A> method must include the following functionality so the .NET Framework can provide formatting you do not support.</span></span> <span data-ttu-id="d775e-171">Si votre méthode de format ne prend pas en charge un format, déterminer si l’objet mis en forme implémente le <xref:System.IFormattable> interface.</span><span class="sxs-lookup"><span data-stu-id="d775e-171">If your format method does not support a format, determine whether the object being formatted implements the <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="d775e-172">Si ce cas, appelez le <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> méthode de cette interface.</span><span class="sxs-lookup"><span data-stu-id="d775e-172">If it does, invoke the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> method of that interface.</span></span> <span data-ttu-id="d775e-173">Appeler dans le cas contraire, la valeur par défaut <xref:System.Object.ToString%2A?displayProperty=nameWithType> méthode de l’objet sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="d775e-173">Otherwise, invoke the default <xref:System.Object.ToString%2A?displayProperty=nameWithType> method of the underlying object.</span></span> <span data-ttu-id="d775e-174">Le code suivant illustre ce modèle.</span><span class="sxs-lookup"><span data-stu-id="d775e-174">The following code illustrates this pattern.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#3)]
 [!code-vb[System.ICustomFormatter.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="d775e-175">L’exemple suivant implémente <xref:System.ICustomFormatter> pour permettre la mise en forme binaire, octales et hexadécimales de valeurs intégrales.</span><span class="sxs-lookup"><span data-stu-id="d775e-175">The following example implements <xref:System.ICustomFormatter> to allow binary, octal, and hexadecimal formatting of integral values.</span></span> <span data-ttu-id="d775e-176">Son <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implémentation détermine si le paramètre de format est un des trois chaînes de format pris en charge (« B » pour le fichier binaire, « O » pour octal et « H » pour hexadécimal) et met en forme le `arg` paramètre correctement.</span><span class="sxs-lookup"><span data-stu-id="d775e-176">Its <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implementation determines whether the format parameter is one of the three supported format strings ("B" for binary, "O" for octal, and "H" for hexadecimal) and formats the `arg` parameter appropriately.</span></span> <span data-ttu-id="d775e-177">Sinon, si `arg` n’est pas `null`, il appelle le `arg` du paramètre <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implémentation, s’il en existe, ou sa sans paramètre `ToString` méthode, si un n’est pas le cas.</span><span class="sxs-lookup"><span data-stu-id="d775e-177">Otherwise, if `arg` is not `null`, it calls the `arg` parameter's <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation, if one exists, or its parameterless `ToString` method, if one does not.</span></span> <span data-ttu-id="d775e-178">Si `arg` est `null`, la méthode retourne <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d775e-178">If `arg` is `null`, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#1)]
 [!code-vb[System.ICustomFormatter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#1)]  
  
 <span data-ttu-id="d775e-179">`BinaryFormatter` peut ensuite être utilisé pour fournir la mise en forme personnalisée en passant un `BinaryFormatter` de l’objet en tant que le `provider` paramètre de la <xref:System.String.Format%2A> méthode, comme le montre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="d775e-179">`BinaryFormatter` can then be used to provide custom formatting by passing a `BinaryFormatter` object as the `provider` parameter of the <xref:System.String.Format%2A> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.ICustomFormatter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.icustomformatter.class/cs/binaryformatter.cs#2)]
 [!code-vb[System.ICustomFormatter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.icustomformatter.class/vb/binaryformatter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="d775e-180">Mettre en forme des types dans .NET</span><span class="sxs-lookup"><span data-stu-id="d775e-180">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="d775e-181">Mise en forme composite</span><span class="sxs-lookup"><span data-stu-id="d775e-181">Composite Formatting</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>