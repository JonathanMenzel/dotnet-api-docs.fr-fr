<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IFormatProvider.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59c52ac56e9742cc73f06b705bf076675bb074c7a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c52ac56e9742cc73f06b705bf076675bb074c7a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IFormatProvider">
          <source>Provides a mechanism for retrieving an object to control formatting.</source>
          <target state="translated">Fournit un mécanisme pour récupérer un objet afin de contrôler la mise en forme.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface supplies an object that provides formatting information for formatting and parsing operations.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface fournit un objet qui fournit des informations de mise en forme pour la mise en forme et d’opérations d’analyse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Formatting operations convert the value of a type to the string representation of that value.</source>
          <target state="translated">Opérations de mise en forme convertissent la valeur d’un type en la représentation sous forme de chaîne de cette valeur.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Typical formatting methods are the <ph id="ph1">`ToString`</ph> methods of a type, as well as <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph>.</source>
          <target state="translated">Les méthodes de mise en forme typiques sont les <ph id="ph1">`ToString`</ph> méthodes d’un type, ainsi que <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Parsing operations convert the string representation of a value to a type with that value.</source>
          <target state="translated">Opérations d’analyse de convertir la représentation sous forme de chaîne d’une valeur à un type ayant cette valeur.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Typical parsing methods are <ph id="ph1">`Parse`</ph> and <ph id="ph2">`TryParse`</ph>.</source>
          <target state="translated">Méthodes d’analyse typiques sont <ph id="ph1">`Parse`</ph> et <ph id="ph2">`TryParse`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface consists of a single method, <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface se compose d’une méthode unique, <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> is a callback method: The parsing or formatting method calls it and passes it a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that represents the type of object that the formatting or parsing method expects will provide formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> est une méthode de rappel : l’analyse ou mise en forme de la méthode appelle et transmet un <ph id="ph2">&lt;xref:System.Type&gt;</ph> objet qui représente le type d’objet qui attend de la mise en forme ou la méthode d’analyse fournit des informations de mise en forme.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method is responsible for returning an object of that type.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> méthode est chargée de retourner un objet de ce type.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementations are often used implicitly by formatting and parsing methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> les implémentations sont souvent utilisées implicitement par la mise en forme et de méthodes d’analyse.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>For example, the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method implicitly uses an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that represents the system's current culture.</source>
          <target state="translated">Par exemple, le <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> méthode utilise implicitement une <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implémentation qui représente la culture du système en cours.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementations can also be specified explicitly by methods that have a parameter of type <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>, such as <ph id="ph3">&lt;xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> les implémentations peuvent également être spécifiées explicitement par les méthodes qui ont un paramètre de type <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>, tel que <ph id="ph3">&lt;xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> et <ph id="ph4">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The .NET Framework includes the following three predefined <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementations to provide culture-specific information that is used in formatting or parsing numeric and date and time values:</source>
          <target state="translated">Le .NET Framework inclut les trois suivantes prédéfinies <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implémentations pour fournir des informations spécifiques à la culture qui sont utilisées dans la mise en forme ou l’analyse des valeurs numériques, de date et d’heure :</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class, which provides information that is used to format numbers, such as the currency, thousands separator, and decimal separator symbols for a particular culture.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> (classe), qui fournit des informations qui sont utilisées pour mettre en forme des nombres, comme la devise, des milliers séparateur et des symboles de séparateur décimal pour une culture particulière.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>For information about the predefined format strings recognized by a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object and used in numeric formatting operations, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les chaînes de format prédéfinis reconnus par un <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> de l’objet et utilisées dans les opérations de mise en forme numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class, which provides information that is used to format dates and times, such as the date and time separator symbols for a particular culture or the order and format of a date's year, month, and day components.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> (classe), qui fournit des informations qui sont utilisées pour formater les dates et heures, tels que les symboles de séparateur de date et d’heure pour une culture particulière ou l’ordre et le format de l’année, mois et les composants de jour d’une date.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>For information about the predefined format strings recognized by a <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object and used in numeric formatting operations, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les chaînes de format prédéfinis reconnus par un <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> de l’objet et utilisées dans les opérations de mise en forme numérique, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>Date personnalisée et les chaînes de Format d’heure <ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class, which represents a particular culture.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> (classe), qui représente une culture particulière.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a culture-specific <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object, depending on whether the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object is used in a formatting or parsing operation that involves numbers or dates and times.</source>
          <target state="translated">Son <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> méthode retourne une culture spécifique <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> ou <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> objet, selon que le <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objet est utilisé dans une mise en forme ou de l’analyse d’opération qui implique des nombres ou des dates et heures.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The .NET Framework also supports custom formatting.</source>
          <target state="translated">Le .NET Framework prend également en charge la mise en forme personnalisée.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>This typically involves the creation of a formatting class that implements both <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> and <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph>.</source>
          <target state="translated">Cela implique généralement de la création d’une classe mise en forme qui implémente à la fois <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> et <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>An instance of this class is then passed as a parameter to a method that performs a custom formatting operation, such as <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> The example provides an illustration of such a custom implementation that formats a number as a 12-digit account number.</source>
          <target state="translated">Une instance de cette classe est ensuite passée en tant que paramètre à une méthode qui effectue une opération de mise en forme personnalisée, tel que <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> l’exemple fournit une illustration de ce type une implémentation personnalisée qui met en forme un nombre comme un numéro de compte à 12 chiffres.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The following example illustrates how an <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation can change the representation of a date and time value.</source>
          <target state="translated">L’exemple suivant illustre comment une <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implémentation peut modifier la représentation d’une valeur de date et d’heure.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>In this case, a single date is displayed by using <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects that represent four different cultures.</source>
          <target state="translated">Dans ce cas, une date unique est affichée à l’aide de <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objets qui représentent quatre cultures différentes.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The following example illustrates the use of a class that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre l’utilisation d’une classe qui implémente le <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface et le <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The <ph id="ph1">`AcctNumberFormat`</ph> class converts an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value that represents an account number to a formatted 12-digit account number.</source>
          <target state="translated">Le <ph id="ph1">`AcctNumberFormat`</ph> classe convertit un <ph id="ph2">&lt;xref:System.Int64&gt;</ph> valeur qui représente un numéro de compte à un numéro de compte à 12 chiffres mis en forme.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>Its <ph id="ph1">`GetFormat`</ph> method returns a reference to the current <ph id="ph2">`AcctNumberFormat`</ph> instance if the <ph id="ph3">`formatType`</ph> parameter refers to a class that implements <ph id="ph4">&lt;xref:System.ICustomFormatter&gt;</ph>; otherwise, <ph id="ph5">`GetFormat`</ph> returns <ph id="ph6">`null`</ph>.</source>
          <target state="translated">Son <ph id="ph1">`GetFormat`</ph> méthode retourne une référence à le <ph id="ph2">`AcctNumberFormat`</ph> de l’instance si le <ph id="ph3">`formatType`</ph> paramètre fait référence à une classe qui implémente <ph id="ph4">&lt;xref:System.ICustomFormatter&gt;</ph>; sinon, <ph id="ph5">`GetFormat`</ph> retourne <ph id="ph6">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>The class that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> can then be used in a call to a formatting and parsing operation.</source>
          <target state="translated">La classe qui implémente <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> peut ensuite être utilisé dans un appel à une mise en forme et l’opération d’analyse.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormatProvider">
          <source>For example, the following code calls the <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method to generate a string that contains a formatted 12-digit account number.</source>
          <target state="translated">Par exemple, le code suivant appelle la <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> méthode permettant de générer une chaîne qui contient un numéro de compte à 12 chiffres mis en forme.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>An object that specifies the type of format object to return.</source>
          <target state="translated">Objet qui spécifie le type d'objet de format à retourner.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>Returns an object that provides formatting services for the specified type.</source>
          <target state="translated">Retourne un objet qui assure des services de mise en forme pour le type spécifié.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>An instance of the object specified by <ph id="ph1">&lt;paramref name="formatType" /&gt;</ph>, if the <ph id="ph2">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> implementation can supply that type of object; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Une instance de l'objet spécifié par <ph id="ph1">&lt;paramref name="formatType" /&gt;</ph>, si l'implémentation <ph id="ph2">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> peut fournir ce type d'objet ; sinon, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> is a callback method that formatting and parsing methods invoke to retrieve information about the format of the input string in parsing operations or the format of the output string in formatting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> est une méthode de rappel qui appellent des méthodes d’analyse et de mise en forme pour récupérer des informations sur le format de la chaîne d’entrée, opérations d’analyse ou le format de la chaîne de sortie dans les opérations de mise en forme.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>In the <ph id="ph1">`formatType`</ph> parameter, the formatting or parsing method passes the type of object it requires to perform its operation.</source>
          <target state="translated">Dans la <ph id="ph1">`formatType`</ph> paramètre, la mise en forme ou analyse de méthode passe le type d’objet, elle a besoin pour effectuer son opération.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>If the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation can supply this formatting or parsing object, it returns that object.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implémentation peut fournir cette mise en forme ou l’objet d’analyse, elle retourne cet objet.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>If not, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si non, elle retourne <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>For example, in the call to the <ph id="ph1">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method, the method argument is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> object that provides information about how the string representation of the current integer instance might be formatted.</source>
          <target state="translated">Par exemple, dans l’appel à la <ph id="ph1">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> , l’argument de la méthode est un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> objet qui fournit des informations sur la mise en forme de la représentation sous forme de chaîne de l’instance actuelle de nombre entier.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>When the runtime executes the method, it calls the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> object's <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method and passes it a <ph id="ph3">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> type.</source>
          <target state="translated">Lorsque le runtime exécute la méthode, il appelle la <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> l’objet <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> (méthode) et lui passe un <ph id="ph3">&lt;xref:System.Type&gt;</ph> objet qui représente le <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> type.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>If the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> object can supply a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, it returns that object.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> objet peut fournir un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> de l’objet, elle retourne cet objet.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>If it cannot supply an object of that type, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si elle ne peut pas fournir un objet de ce type, elle retourne <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>You can implement the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method in classes that provide custom formatting or parsing services.</source>
          <target state="translated">Vous pouvez implémenter la <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface et <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> méthode dans les classes qui fournissent la mise en forme et d’analyse personnalisés services.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation is then passed as an argument to any overload of a parsing or formatting method that has a parameter of type <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>, such as <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implémentation est ensuite transmise en tant qu’argument à aucune surcharge de méthode qui a un paramètre de type de mise en forme ou d’une analyse <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>, tel que <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph5">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>The following example illustrates the use of a class that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre l’utilisation d’une classe qui implémente le <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface et le <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>The <ph id="ph1">`AcctNumberFormat`</ph> class converts an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value that represents an account number to a formatted 12-digit account number.</source>
          <target state="translated">Le <ph id="ph1">`AcctNumberFormat`</ph> classe convertit un <ph id="ph2">&lt;xref:System.Int64&gt;</ph> valeur qui représente un numéro de compte à un numéro de compte à 12 chiffres mis en forme.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>Its <ph id="ph1">`GetFormat`</ph> method returns a reference to itself if the <ph id="ph2">`formatType`</ph> parameter refers to a class that implements <ph id="ph3">&lt;xref:System.ICustomFormatter&gt;</ph>; otherwise, <ph id="ph4">`GetFormat`</ph> returns <ph id="ph5">`null`</ph>.</source>
          <target state="translated">Son <ph id="ph1">`GetFormat`</ph> méthode retourne une référence à elle-même si le <ph id="ph2">`formatType`</ph> paramètre fait référence à une classe qui implémente <ph id="ph3">&lt;xref:System.ICustomFormatter&gt;</ph>; sinon, <ph id="ph4">`GetFormat`</ph> retourne <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>An instance of the <ph id="ph1">`AcctNumberFormat`</ph> class can then be passed as an argument to a method that provides formatting or parsing services.</source>
          <target state="translated">Une instance de la <ph id="ph1">`AcctNumberFormat`</ph> classe peut ensuite être passée en tant qu’argument à une méthode qui fournit la mise en forme ou d’analyse des services.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormatProvider.GetFormat(System.Type)">
          <source>For example, the following code passes an <ph id="ph1">`AcctNumberFormat`</ph> class to the <ph id="ph2">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method to generate a formatted 12-digit account number.</source>
          <target state="translated">Par exemple, le code suivant passe un <ph id="ph1">`AcctNumberFormat`</ph> classe la <ph id="ph2">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> méthode pour générer un numéro de compte à 12 chiffres mis en forme.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>