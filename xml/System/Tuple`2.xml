<Type Name="Tuple&lt;T1,T2&gt;" FullName="System.Tuple&lt;T1,T2&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26ad2ab4e3870e25b240fa7803d26c63246ffd8f" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52733861" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`2&lt;T1, T2&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`2" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="90c89-101">Type du premier composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="90c89-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="90c89-102">Type du second composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="90c89-102">The type of the tuple's second component.</span></span></typeparam>
    <summary><span data-ttu-id="90c89-103">Représente un objet de 2 tuples, ou paire.</span><span class="sxs-lookup"><span data-stu-id="90c89-103">Represents a 2-tuple, or pair.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c89-104">Un tuple est une structure de données qui a un nombre spécifique et une séquence de valeurs.</span><span class="sxs-lookup"><span data-stu-id="90c89-104">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="90c89-105">Le <xref:System.Tuple%602> classe représente un 2-tuple, ou paire, qui est un tuple qui a deux composants.</span><span class="sxs-lookup"><span data-stu-id="90c89-105">The <xref:System.Tuple%602> class represents a 2-tuple, or pair, which is a tuple that has two components.</span></span> <span data-ttu-id="90c89-106">2 tuples est similaire à un <xref:System.Collections.Generic.KeyValuePair%602> structure.</span><span class="sxs-lookup"><span data-stu-id="90c89-106">A 2-tuple is similar to a <xref:System.Collections.Generic.KeyValuePair%602> structure.</span></span>  
  
 <span data-ttu-id="90c89-107">Vous pouvez instancier un <xref:System.Tuple%602> objet en appelant le <xref:System.Tuple%602.%23ctor%2A> constructeur ou la méthode statique <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="90c89-107">You can instantiate a <xref:System.Tuple%602> object by calling either the <xref:System.Tuple%602.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="90c89-108">Vous pouvez récupérer les valeurs des composants du tuple à l’aide en lecture seule <xref:System.Tuple%602.Item1%2A> et <xref:System.Tuple%602.Item2%2A> propriétés de l’instance.</span><span class="sxs-lookup"><span data-stu-id="90c89-108">You can retrieve the values of the tuple's components by using the read-only <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> instance properties.</span></span>  
  
 <span data-ttu-id="90c89-109">Tuples sont fréquemment utilisées dans quatre façons différentes :</span><span class="sxs-lookup"><span data-stu-id="90c89-109">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="90c89-110">Pour représenter un jeu unique de données.</span><span class="sxs-lookup"><span data-stu-id="90c89-110">To represent a single set of data.</span></span> <span data-ttu-id="90c89-111">Par exemple, un tuple peut représenter un enregistrement dans une base de données, et ses composants peuvent représenter des champs de cet enregistrement.</span><span class="sxs-lookup"><span data-stu-id="90c89-111">For example, a tuple can represent a record in a database, and its components can represent that record's fields.</span></span>  
  
-   <span data-ttu-id="90c89-112">Pour fournir un accès facile aux et manipulation d’un jeu de données.</span><span class="sxs-lookup"><span data-stu-id="90c89-112">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="90c89-113">L’exemple suivant définit un tableau de <xref:System.Tuple%602> les objets qui contiennent les noms des étudiants et leur correspondant des notes d’examens.</span><span class="sxs-lookup"><span data-stu-id="90c89-113">The following example defines an array of <xref:System.Tuple%602> objects that contain the names of students and their corresponding test scores.</span></span> <span data-ttu-id="90c89-114">Il effectue ensuite une itération du tableau pour calculer le score de test moyenne.</span><span class="sxs-lookup"><span data-stu-id="90c89-114">It then iterates the array to calculate the mean test score.</span></span>  
  
     [!code-csharp[System.Tuple\`2.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`2.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="90c89-115">Pour retourner plusieurs valeurs à partir d’une méthode sans utiliser de `out` paramètres (en c#) ou `ByRef` paramètres (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="90c89-115">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="90c89-116">Par exemple, l’exemple suivant utilise un <xref:System.Tuple%602> objet pour retourner le quotient et le reste qui résultent de la division d’entier.</span><span class="sxs-lookup"><span data-stu-id="90c89-116">For example, the following example uses a <xref:System.Tuple%602> object to return the quotient and the remainder that result from integer division.</span></span>  
  
     [!code-csharp[System.Tuple\`2.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.item1/cs/item1.cs#1)]
     [!code-vb[System.Tuple\`2.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.item1/vb/item1.vb#1)]  
  
-   <span data-ttu-id="90c89-117">Pour passer les valeurs multiples dans une méthode via un paramètre unique.</span><span class="sxs-lookup"><span data-stu-id="90c89-117">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="90c89-118">Par exemple, le <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> méthode possède un paramètre unique qui vous permet de fournir une valeur à la méthode que le thread exécute au démarrage.</span><span class="sxs-lookup"><span data-stu-id="90c89-118">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="90c89-119">Si vous fournissez un <xref:System.Tuple%602> de l’objet en tant qu’argument de méthode, vous pouvez fournir la routine de démarrage du thread avec deux éléments de données.</span><span class="sxs-lookup"><span data-stu-id="90c89-119">If you supply a <xref:System.Tuple%602> object as the method argument, you can supply the thread's startup routine with two items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.#ctor(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2&gt; : 'T1 * 'T2 -&gt; Tuple&lt;'T1, 'T2&gt;" Usage="new System.Tuple&lt;'T1, 'T2&gt; (item1, item2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="90c89-120">Valeur du premier composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="90c89-120">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="90c89-121">Valeur du second composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="90c89-121">The value of the tuple's second component.</span></span></param>
        <summary><span data-ttu-id="90c89-122">Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`2" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-122">Initializes a new instance of the <see cref="T:System.Tuple`2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c89-123">Vous pouvez également utiliser la méthode statique <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> méthode pour instancier un objet de 2 tuples sans devoir spécifier explicitement les types de ses composants.</span><span class="sxs-lookup"><span data-stu-id="90c89-123">You can also use the static <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> method to instantiate a 2-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="90c89-124">L’exemple suivant utilise le <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> méthode pour instancier un 2-tuple dont les composants sont de type <xref:System.String> et <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="90c89-124">The following example uses the <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> method to instantiate a 2-tuple whose components are of type <xref:System.String> and <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#3)]
 [!code-vb[System.Tuple.Create#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#3)]  
  
 <span data-ttu-id="90c89-125">Cela équivaut à l’appel suivant à la <xref:System.Tuple%602.%23ctor%2A> constructeur de classe.</span><span class="sxs-lookup"><span data-stu-id="90c89-125">This is equivalent to the following call to the <xref:System.Tuple%602.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#4)]
 [!code-vb[System.Tuple.Create#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="90c89-126">Objet à comparer avec cette instance.</span><span class="sxs-lookup"><span data-stu-id="90c89-126">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="90c89-127">Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`2" /> actuel est égal à un objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="90c89-127">Returns a value that indicates whether the current <see cref="T:System.Tuple`2" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="90c89-128"><see langword="true" /> si l'instance actuelle est égale à l'objet spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-128"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c89-129">Le `obj` paramètre est considéré comme égal à l’instance actuelle dans les conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="90c89-129">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="90c89-130">Il s’agit une <xref:System.Tuple%602> objet.</span><span class="sxs-lookup"><span data-stu-id="90c89-130">It is a <xref:System.Tuple%602> object.</span></span>  
  
-   <span data-ttu-id="90c89-131">Ses deux composants sont des mêmes types que l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="90c89-131">Its two components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="90c89-132">Ses deux composants sont égales à celles de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="90c89-132">Its two components are equal to those of the current instance.</span></span> <span data-ttu-id="90c89-133">L'égalité est déterminée par le comparateur d'égalité d'objet par défaut pour chaque composant.</span><span class="sxs-lookup"><span data-stu-id="90c89-133">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90c89-134">L’exemple suivant appelle la <xref:System.Tuple%602.Equals%28System.Object%29?displayProperty=nameWithType> méthode pour déterminer si les objets dans un tableau de <xref:System.Tuple%602> objets sont égaux entre eux.</span><span class="sxs-lookup"><span data-stu-id="90c89-134">The following example calls the <xref:System.Tuple%602.Equals%28System.Object%29?displayProperty=nameWithType> method to determine whether any of the objects in an array of <xref:System.Tuple%602> objects are equal to one another.</span></span> <span data-ttu-id="90c89-135">La sortie reflète le fait que le <xref:System.Tuple%602.Equals%28System.Object%29> retourne de la méthode `true` lors de la comparaison <xref:System.Tuple%602> objets dont les composants ont des valeurs égales.</span><span class="sxs-lookup"><span data-stu-id="90c89-135">The output reflects the fact that the <xref:System.Tuple%602.Equals%28System.Object%29> method returns `true` when comparing <xref:System.Tuple%602> objects whose components have equal values.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`2.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90c89-136">Retourne le code de hachage pour l'objet <see cref="T:System.Tuple`2" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="90c89-136">Returns the hash code for the current <see cref="T:System.Tuple`2" /> object.</span></span></summary>
        <returns><span data-ttu-id="90c89-137">Code de hachage d'un entier signé 32 bits.</span><span class="sxs-lookup"><span data-stu-id="90c89-137">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90c89-138">Obtient la valeur du premier composant de l'objet <see cref="T:System.Tuple`2" /> actif.</span><span class="sxs-lookup"><span data-stu-id="90c89-138">Gets the value of the current <see cref="T:System.Tuple`2" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="90c89-139">Valeur du premier composant de l'objet <see cref="T:System.Tuple`2" /> actif.</span><span class="sxs-lookup"><span data-stu-id="90c89-139">The value of the current <see cref="T:System.Tuple`2" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c89-140">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%602.Item1%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="90c89-140">You can dynamically determine the type of the <xref:System.Tuple%602.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="90c89-141">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%602.Item1%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="90c89-141">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%602.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="90c89-142">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%602> de l’objet et en extrayant le premier élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="90c89-142">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%602> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90c89-143">L’exemple illustre l’utilisation de la <xref:System.Tuple%602.Item1%2A> et <xref:System.Tuple%602.Item2%2A> propriétés pour définir une méthode qui retourne plusieurs valeurs sous la forme d’un tuple de 2.</span><span class="sxs-lookup"><span data-stu-id="90c89-143">The example illustrates the use of the <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> properties to define a method that returns multiple values in the form of a 2-tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`2.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90c89-144">Obtient la valeur du deuxième composant de l'objet <see cref="T:System.Tuple`2" /> actif.</span><span class="sxs-lookup"><span data-stu-id="90c89-144">Gets the value of the current <see cref="T:System.Tuple`2" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="90c89-145">Valeur du deuxième composant de l'objet <see cref="T:System.Tuple`2" /> actif.</span><span class="sxs-lookup"><span data-stu-id="90c89-145">The value of the current <see cref="T:System.Tuple`2" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c89-146">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%602.Item2%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="90c89-146">You can dynamically determine the type of the <xref:System.Tuple%602.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="90c89-147">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%602.Item2%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="90c89-147">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%602.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="90c89-148">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%602> de l’objet et en extrayant le deuxième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="90c89-148">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%602> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90c89-149">L’exemple illustre l’utilisation de la <xref:System.Tuple%602.Item1%2A> et <xref:System.Tuple%602.Item2%2A> propriétés pour définir une méthode qui retourne plusieurs valeurs sous la forme d’un tuple de 2.</span><span class="sxs-lookup"><span data-stu-id="90c89-149">The example illustrates the use of the <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> properties to define a method that returns multiple values in the form of a 2-tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`2.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="90c89-150">Objet à comparer à l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="90c89-150">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="90c89-151">Un objet qui fournit des règles personnalisées pour la comparaison.</span><span class="sxs-lookup"><span data-stu-id="90c89-151">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="90c89-152">Compare l'objet <see cref="T:System.Tuple`2" /> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="90c89-152">Compares the current <see cref="T:System.Tuple`2" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="90c89-153">Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="90c89-153">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="90c89-154">Value</span><span class="sxs-lookup"><span data-stu-id="90c89-154">Value</span></span> 
 </term><description> <span data-ttu-id="90c89-155">Description </span><span class="sxs-lookup"><span data-stu-id="90c89-155">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="90c89-156">Entier négatif</span><span class="sxs-lookup"><span data-stu-id="90c89-156">A negative integer</span></span> 
 </term><description> <span data-ttu-id="90c89-157">Cette instance précède <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-157">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="90c89-158">Zéro</span><span class="sxs-lookup"><span data-stu-id="90c89-158">Zero</span></span> 
 </term><description> <span data-ttu-id="90c89-159">Cette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="90c89-159">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="90c89-160">Entier positif</span><span class="sxs-lookup"><span data-stu-id="90c89-160">A positive integer</span></span> 
 </term><description> <span data-ttu-id="90c89-161">Cette instance suit <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-161">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c89-162">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="90c89-162">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="90c89-163">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%602> est castée en interface <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="90c89-163">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="90c89-164">Bien que cette méthode peut être appelée directement, elle est généralement appelée par les méthodes qui incluent de tri de collection <xref:System.Collections.IComparer> paramètres pour classer les membres d’une collection.</span><span class="sxs-lookup"><span data-stu-id="90c89-164">Although this method can be called directly, it is most commonly called by collection sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="90c89-165">Par exemple, elle est appelée par le <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> (méthode) et le <xref:System.Collections.SortedList.Add%2A> méthode d’un <xref:System.Collections.SortedList> objet est instancié à l’aide de la <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructeur.</span><span class="sxs-lookup"><span data-stu-id="90c89-165">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="90c89-166">Le <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> méthode est conçue pour une utilisation dans les opérations de tri.</span><span class="sxs-lookup"><span data-stu-id="90c89-166">The <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="90c89-167">Elle ne doit pas être utilisée lors de l’objectif principal d’une comparaison consiste à déterminer si deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="90c89-167">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="90c89-168">Pour déterminer si deux objets sont égales, appelez le <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="90c89-168">To determine whether two objects are equal, call the <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90c89-169">L’exemple suivant crée un tableau de <xref:System.Tuple%602> objets composé des noms des étudiants et tester le score.</span><span class="sxs-lookup"><span data-stu-id="90c89-169">The following example creates an array of <xref:System.Tuple%602> objects that consist of a student's name and test score.</span></span> <span data-ttu-id="90c89-170">Il affiche le composant de chaque tuple dans le tableau en ordre non trié, trie le tableau, puis appelle <xref:System.Tuple%602.ToString%2A> pour afficher la valeur de chaque tuple dans un ordre trié.</span><span class="sxs-lookup"><span data-stu-id="90c89-170">It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%602.ToString%2A> to display the value of each tuple in sorted order.</span></span> <span data-ttu-id="90c89-171">Pour trier le tableau, l’exemple définit un générique `ScoreComparer` classe qui implémente le <xref:System.Collections.IComparer> interface et trie le <xref:System.Tuple%602> objets dans l’ordre croissant par la valeur de leur deuxième composant plutôt que leur premier composant.</span><span class="sxs-lookup"><span data-stu-id="90c89-171">To sort the array, the example defines a generic `ScoreComparer` class that implements the <xref:System.Collections.IComparer> interface and sorts the <xref:System.Tuple%602> objects in ascending order by the value of their second component rather than their first component.</span></span> <span data-ttu-id="90c89-172">Notez que l’exemple n’appelle pas directement la <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="90c89-172">Note that the example does not directly call the <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> method.</span></span> <span data-ttu-id="90c89-173">Cette méthode est appelée implicitement par la <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> méthode pour chaque élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="90c89-173">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`2.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`2.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="90c89-174"><paramref name="other" /> n’est pas un objet <see cref="T:System.Tuple`2" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-174"><paramref name="other" /> is not a <see cref="T:System.Tuple`2" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="90c89-175">Objet à comparer avec cette instance.</span><span class="sxs-lookup"><span data-stu-id="90c89-175">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="90c89-176">Un objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="90c89-176">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="90c89-177">Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`2" /> actif est égal à un objet spécifié selon une méthode de comparaison spécifiée.</span><span class="sxs-lookup"><span data-stu-id="90c89-177">Returns a value that indicates whether the current <see cref="T:System.Tuple`2" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="90c89-178"><see langword="true" /> si l'instance actuelle est égale à l'objet spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-178"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c89-179">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="90c89-179">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="90c89-180">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%602> est castée en interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="90c89-180">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="90c89-181">Le <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> implémentation est appelée uniquement si `other` n’est pas `null`, et si elle peut être casté (en c#) ou converti (en Visual Basic) en un <xref:System.Tuple%602> objet dont les composants sont des mêmes types que l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="90c89-181">The <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%602> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="90c89-182">Le <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> passe en premier (méthode) le <xref:System.Tuple%602.Item1%2A> les valeurs de la <xref:System.Tuple%602> objets à comparer à la <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="90c89-182">The <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> method first passes the <xref:System.Tuple%602.Item1%2A> values of the <xref:System.Tuple%602> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="90c89-183">Si cet appel de méthode retourne `true`, la méthode est appelée à nouveau et passée le <xref:System.Tuple%602.Item2%2A> les valeurs des deux <xref:System.Tuple%602> objets.</span><span class="sxs-lookup"><span data-stu-id="90c89-183">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%602.Item2%2A> values of the two <xref:System.Tuple%602> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90c89-184">L’exemple suivant définit un `Item2Comparer` classe qui implémente le <xref:System.Collections.IEqualityComparer> interface et modifie la façon dont <xref:System.Tuple%602> objets sont évalués pour l’égalité.</span><span class="sxs-lookup"><span data-stu-id="90c89-184">The following example defines an `Item2Comparer` class that implements the <xref:System.Collections.IEqualityComparer> interface and changes the way in which <xref:System.Tuple%602> objects are evaluated for equality.</span></span> <span data-ttu-id="90c89-185">La méthode retourne toujours `true` lorsqu’il est passé le <xref:System.Tuple%602.Item1%2A> les valeurs de propriété de deux <xref:System.Tuple%602> objets et il appelle le <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> méthode pour évaluer leurs <xref:System.Tuple%602.Item2%2A> valeurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="90c89-185">The method always returns `true` when it is passed the <xref:System.Tuple%602.Item1%2A> property values of two <xref:System.Tuple%602> objects, and it calls the <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> method to evaluate their <xref:System.Tuple%602.Item2%2A> property values.</span></span> <span data-ttu-id="90c89-186">Par conséquent, la méthode teste l’égalité basée uniquement sur la valeur de la <xref:System.Tuple%602.Item2%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="90c89-186">As a result, the method tests for equality based only on the value of the <xref:System.Tuple%602.Item2%2A> property.</span></span> <span data-ttu-id="90c89-187">La sortie illustre le résultat pour un jeu de données de <xref:System.Tuple%602> objets qui enregistrent les noms des exécuteurs et les distances où ils ont exécuté.</span><span class="sxs-lookup"><span data-stu-id="90c89-187">The output illustrates the result for a data set of <xref:System.Tuple%602> objects that record the names of runners and the distances that they ran.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`2.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="90c89-188">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`2" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="90c89-188">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`2" /> object.</span></span></param>
        <summary><span data-ttu-id="90c89-189">Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`2" /> actif à l'aide d'une méthode de calcul spécifiée.</span><span class="sxs-lookup"><span data-stu-id="90c89-189">Calculates the hash code for the current <see cref="T:System.Tuple`2" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="90c89-190">Code de hachage d'un entier signé 32 bits.</span><span class="sxs-lookup"><span data-stu-id="90c89-190">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c89-191">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="90c89-191">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="90c89-192">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%602> est castée en interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="90c89-192">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="90c89-193">La méthode encapsule simplement un appel à la `comparer` l’objet <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="90c89-193">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="90c89-194">L’algorithme utilisé pour calculer le code de hachage doit retourner le même code de hachage pour deux <xref:System.Tuple%602> les objets qui sont considérées comme égales.</span><span class="sxs-lookup"><span data-stu-id="90c89-194">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%602> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="90c89-195">Objet à comparer à l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="90c89-195">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="90c89-196">Compare l’objet <see cref="T:System.Tuple`2" /> actuel à un objet spécifié et renvoie un entier qui indique si l’objet actuel est avant, après ou à la même position que l’objet spécifié dans l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="90c89-196">Compares the current <see cref="T:System.Tuple`2" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="90c89-197">Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="90c89-197">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="90c89-198">Value</span><span class="sxs-lookup"><span data-stu-id="90c89-198">Value</span></span> 
 </term><description> <span data-ttu-id="90c89-199">Description </span><span class="sxs-lookup"><span data-stu-id="90c89-199">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="90c89-200">Entier négatif</span><span class="sxs-lookup"><span data-stu-id="90c89-200">A negative integer</span></span> 
 </term><description> <span data-ttu-id="90c89-201">Cette instance précède <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-201">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="90c89-202">Zéro</span><span class="sxs-lookup"><span data-stu-id="90c89-202">Zero</span></span> 
 </term><description> <span data-ttu-id="90c89-203">Cette instance et <paramref name="obj" /> ont la même position dans l'ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="90c89-203">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="90c89-204">Entier positif</span><span class="sxs-lookup"><span data-stu-id="90c89-204">A positive integer</span></span> 
 </term><description> <span data-ttu-id="90c89-205">Cette instance suit <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-205">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c89-206">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="90c89-206">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="90c89-207">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%602> est castée en interface <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="90c89-207">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="90c89-208">Cette méthode fournit le <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implémentation pour la <xref:System.Tuple%602> classe.</span><span class="sxs-lookup"><span data-stu-id="90c89-208">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%602> class.</span></span> <span data-ttu-id="90c89-209">Bien que la méthode peut être appelée directement, elle est généralement appelée par les surcharges par défaut de collection telles que les méthodes, de tri <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> et <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, pour classer les membres d’une collection.</span><span class="sxs-lookup"><span data-stu-id="90c89-209">Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="90c89-210">Le <xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> méthode est conçue pour une utilisation dans les opérations de tri.</span><span class="sxs-lookup"><span data-stu-id="90c89-210">The <xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="90c89-211">Elle ne doit pas être utilisée lors de l’objectif principal d’une comparaison consiste à déterminer si deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="90c89-211">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="90c89-212">Pour déterminer si deux objets sont égales, appelez le <xref:System.Tuple%602.Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="90c89-212">To determine whether two objects are equal, call the <xref:System.Tuple%602.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="90c89-213">Le <xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> méthode utilise le comparateur d’objet par défaut pour comparer chaque composant.</span><span class="sxs-lookup"><span data-stu-id="90c89-213">The <xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90c89-214">L’exemple suivant crée un tableau de <xref:System.Tuple%602> objets composé des noms des étudiants et tester le score.</span><span class="sxs-lookup"><span data-stu-id="90c89-214">The following example creates an array of <xref:System.Tuple%602> objects that consist of a student's name and test score.</span></span> <span data-ttu-id="90c89-215">Il affiche le composant de chaque tuple dans le tableau en ordre non trié, trie le tableau, puis appelle <xref:System.Tuple%602.ToString%2A> pour afficher la valeur de chaque tuple dans un ordre trié.</span><span class="sxs-lookup"><span data-stu-id="90c89-215">It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%602.ToString%2A> to display the value of each tuple in sorted order.</span></span> <span data-ttu-id="90c89-216">La sortie montre que le tableau a été trié par son premier composant.</span><span class="sxs-lookup"><span data-stu-id="90c89-216">The output shows that the array has been sorted by its first component.</span></span> <span data-ttu-id="90c89-217">Notez que l’exemple n’appelle pas directement la <xref:System.Tuple%602.System%23IComparable%23CompareTo%28System.Object%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="90c89-217">Note that the example does not directly call the <xref:System.Tuple%602.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="90c89-218">Cette méthode est appelée implicitement par la <xref:System.Array.Sort%28System.Array%29> méthode pour chaque élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="90c89-218">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`2.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`2.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="90c89-219"><paramref name="obj" /> n’est pas un objet <see cref="T:System.Tuple`2" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-219"><paramref name="obj" /> is not a <see cref="T:System.Tuple`2" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`2.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="90c89-220">Index de l’élément <see langword="Tuple" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="90c89-220">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="90c89-221"><paramref name="index" /> peut être compris entre 0 et 1.</span><span class="sxs-lookup"><span data-stu-id="90c89-221"><paramref name="index" /> can range from 0 to 1.</span></span></param>
        <summary><span data-ttu-id="90c89-222">Obtient la valeur de l’élément <see langword="Tuple" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="90c89-222">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="90c89-223">Valeur de l’élément <see langword="Tuple" /> à la position spécifiée.</span><span class="sxs-lookup"><span data-stu-id="90c89-223">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c89-224">Le <xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propriété est une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="90c89-224">The <xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="90c89-225">Pour l’appeler, vous devez effectuer un cast ou convertir le <xref:System.Tuple%602> de l’objet à un <xref:System.Runtime.CompilerServices.ITuple> objet d’interface.</span><span class="sxs-lookup"><span data-stu-id="90c89-225">To call it, you must cast or convert the <xref:System.Tuple%602> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="90c89-226"><paramref name="index" /> est inférieur à 0 ou supérieur à 1.</span><span class="sxs-lookup"><span data-stu-id="90c89-226"><paramref name="index" /> is less than 0 or greater than 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90c89-227">Obtient le nombre d’éléments dans <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-227">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="90c89-228">2, le nombre d’éléments dans un objet <see cref="T:System.Tuple`2" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-228">2, the number of elements in a <see cref="T:System.Tuple`2" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c89-229">Le <xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> propriété est une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="90c89-229">The <xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="90c89-230">Pour l’appeler, vous devez effectuer un cast ou convertir le <xref:System.Tuple%602> de l’objet à un <xref:System.Runtime.CompilerServices.ITuple> objet d’interface.</span><span class="sxs-lookup"><span data-stu-id="90c89-230">To call it, you must cast or convert the <xref:System.Tuple%602> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90c89-231">Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`2" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-231">Returns a string that represents the value of this <see cref="T:System.Tuple`2" /> instance.</span></span></summary>
        <returns><span data-ttu-id="90c89-232">Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`2" />.</span><span class="sxs-lookup"><span data-stu-id="90c89-232">The string representation of this <see cref="T:System.Tuple`2" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c89-233">La chaîne retournée par cette méthode prend la forme (*Item1*, *Item2*), où *Item1* et *Item2* représentent les valeurs de la <xref:System.Tuple%602.Item1%2A> et <xref:System.Tuple%602.Item2%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="90c89-233">The string returned by this method takes the form (*Item1*, *Item2*), where *Item1* and *Item2* represent the values of the <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> properties.</span></span> <span data-ttu-id="90c89-234">Si la valeur de propriété est `null`, il est représenté en tant que <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="90c89-234">If either property value is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90c89-235">L’exemple suivant illustre la <xref:System.Tuple%602.ToString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="90c89-235">The following example illustrates the <xref:System.Tuple%602.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`2.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`2.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>