<Type Name="WeakReference" FullName="System.WeakReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0d4836429712734d47bb9c53ee59e9a0dd4d9f0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728593" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WeakReference : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WeakReference extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.WeakReference" />
  <TypeSignature Language="VB.NET" Value="Public Class WeakReference&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WeakReference : System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c6556-101">Représente une référence faible, qui référence un objet tout en autorisant toujours cet objet à être récupéré lors du garbage collection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6556-101">Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6556-102">Une référence faible autorise le garbage collector collecter un objet tout en autorisant toujours une application à accéder à l’objet.</span><span class="sxs-lookup"><span data-stu-id="c6556-102">A weak reference allows the garbage collector to collect an object while still allowing an application to access the object.</span></span> <span data-ttu-id="c6556-103">Si vous avez besoin de l’objet, vous pouvez toujours obtenir une référence forte à celui-ci et l’empêcher d’être collecté.</span><span class="sxs-lookup"><span data-stu-id="c6556-103">If you need the object, you can still obtain a strong reference to it and prevent it from being collected.</span></span> <span data-ttu-id="c6556-104">Pour plus d’informations sur l’utilisation de courte et références faibles longues, consultez [références faibles](~/docs/standard/garbage-collection/weak-references.md).</span><span class="sxs-lookup"><span data-stu-id="c6556-104">For more information about how to use short and long weak references, see [Weak References](~/docs/standard/garbage-collection/weak-references.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6556-105">L’exemple suivant montre comment vous pouvez utiliser des références faibles pour maintenir un cache d’objets en tant que ressource pour une application.</span><span class="sxs-lookup"><span data-stu-id="c6556-105">The following example demonstrates how you can use weak references to maintain a cache of objects as a resource for an application.</span></span> <span data-ttu-id="c6556-106">Le cache est construit en utilisant une <xref:System.Collections.Generic.IDictionary%602> de <xref:System.WeakReference> objets indexé par une valeur d’index.</span><span class="sxs-lookup"><span data-stu-id="c6556-106">The cache is constructed using an <xref:System.Collections.Generic.IDictionary%602> of <xref:System.WeakReference> objects keyed by an index value.</span></span> <span data-ttu-id="c6556-107">Le <xref:System.WeakReference.Target%2A> propriété pour la <xref:System.WeakReference> objets est un objet dans un tableau d’octets qui représente les données.</span><span class="sxs-lookup"><span data-stu-id="c6556-107">The <xref:System.WeakReference.Target%2A> property for the <xref:System.WeakReference> objects is an object in a byte array that represents data.</span></span>  
  
 <span data-ttu-id="c6556-108">L’exemple accède aléatoirement aux objets dans le cache.</span><span class="sxs-lookup"><span data-stu-id="c6556-108">The example randomly accesses objects in the cache.</span></span> <span data-ttu-id="c6556-109">Si un objet est récupéré pour le garbage collection, un nouvel objet de données est régénéré ; dans le cas contraire, l’objet est disponible pour accéder en raison de la référence faible.</span><span class="sxs-lookup"><span data-stu-id="c6556-109">If an object is reclaimed for garbage collection, a new data object is regenerated; otherwise, the object is available to access because of the weak reference.</span></span>  
  
 [!code-csharp[WeakReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#1)]
 [!code-vb[WeakReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="c6556-110">pour avoir la possibilité d’appeler du code non managé.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6556-110">for the ability to call unmanaged code.</span>
      </span>
      <span data-ttu-id="c6556-111">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="c6556-111">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
    <altmember cref="T:System.GC" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6556-112">Initialise une nouvelle instance de la classe <see cref="T:System.WeakReference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-112">Initializes a new instance of the <see cref="T:System.WeakReference" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WeakReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WeakReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReference (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakReference(System::Object ^ target);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="c6556-113">Objet à suivre ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-113">The object to track or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6556-114">Initialise une nouvelle instance de la classe <see cref="T:System.WeakReference" />, référençant l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-114">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, referencing the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6556-115">Ce constructeur crée une référence faible courte à `target`.</span><span class="sxs-lookup"><span data-stu-id="c6556-115">This constructor creates a short weak reference to `target`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReference (object target, bool trackResurrection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object target, bool trackResurrection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Object, trackResurrection As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakReference(System::Object ^ target, bool trackResurrection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="trackResurrection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="c6556-116">Objet à suivre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-116">An object to track.</span>
          </span>
        </param>
        <param name="trackResurrection">
          <span data-ttu-id="c6556-117">Indique où le suivi de l'objet doit être arrêté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-117">Indicates when to stop tracking the object.</span>
          </span>
          <span data-ttu-id="c6556-118">Si <see langword="true" />, l'objet est suivi après finalisation ; si <see langword="false" />, l'objet est suivi uniquement jusqu'à la finalisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-118">If <see langword="true" />, the object is tracked after finalization; if <see langword="false" />, the object is only tracked until finalization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6556-119">Initialise une nouvelle instance de la classe <see cref="T:System.WeakReference" />, référençant l'objet spécifié et utilisant le suivi d'activation spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-119">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, referencing the specified object and using the specified resurrection tracking.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6556-120">Si `trackResurrection` est `false`, une référence faible courte est créée.</span><span class="sxs-lookup"><span data-stu-id="c6556-120">If `trackResurrection` is `false`, a short weak reference is created.</span></span> <span data-ttu-id="c6556-121">Si `trackResurrection` est `true`, une référence faible longue est créée.</span><span class="sxs-lookup"><span data-stu-id="c6556-121">If `trackResurrection` is `true`, a long weak reference is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6556-122">L’exemple suivant crée un cache d’objets de données avec des références faibles courtes.</span><span class="sxs-lookup"><span data-stu-id="c6556-122">The following example creates a cache of data objects with short weak references.</span></span> <span data-ttu-id="c6556-123">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.WeakReference> classe.</span><span class="sxs-lookup"><span data-stu-id="c6556-123">This example is part of a larger example provided for the <xref:System.WeakReference> class.</span></span>  
  
 [!code-csharp[WeakReference#2](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#2)]
 [!code-vb[WeakReference#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WeakReference (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WeakReference(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="c6556-124">Objet contenant toutes les données nécessaires pour sérialiser ou désérialiser l'objet <see cref="T:System.WeakReference" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-124">An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c6556-125">(Réservé) Décrit la source et la destination du flux sérialisé spécifié par <c>info</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-125">(Reserved) Describes the source and destination of the serialized stream specified by <c>info</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6556-126">Initialise une nouvelle instance de la classe <see cref="T:System.WeakReference" />, à l'aide de données désérialisées provenant des objets de sérialisation et de flux spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-126">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, using deserialized data from the specified serialization and stream objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6556-127">Le `context` paramètre est réservé et ne participe actuellement pas à cette opération.</span><span class="sxs-lookup"><span data-stu-id="c6556-127">The `context` parameter is reserved, and does not currently participate in this operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c6556-128">
            <paramref name="info" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-128">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WeakReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WeakReference ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6556-129">Ignore la référence à la cible représentée par l'objet <see cref="T:System.WeakReference" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-129">Discards the reference to the target represented by the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.GC" />
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="c6556-130">Objet contenant toutes les données nécessaires pour sérialiser ou désérialiser l'objet <see cref="T:System.WeakReference" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-130">An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c6556-131">(Réservé) Emplacement où les données sérialisées sont stockées et récupérées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-131">(Reserved) The location where serialized data is stored and retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6556-132">Remplit un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> de toutes les données nécessaires à la sérialisation de l'objet <see cref="T:System.WeakReference" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-132">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with all the data needed to serialize the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6556-133">Cette méthode stocke toutes les informations de `info` nécessaires à la sérialisation actuel <xref:System.WeakReference> objet.</span><span class="sxs-lookup"><span data-stu-id="c6556-133">This method stores all the information in `info` necessary to serialize the current <xref:System.WeakReference> object.</span></span>  
  
 <span data-ttu-id="c6556-134">Le `context` paramètre est réservé et n’est pas utilisée actuellement dans l’exécution de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="c6556-134">The `context` parameter is reserved and is not currently used in the execution of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c6556-135">
            <paramref name="info" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-135">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="c6556-136">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-136">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c6556-137">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-137">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsAlive">
      <MemberSignature Language="C#" Value="public virtual bool IsAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlive" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.IsAlive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAlive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6556-138">Obtient une indication permettant de savoir si l'objet référencé par l'objet <see cref="T:System.WeakReference" /> a été récupéré par le garbage collector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-138">Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference" /> object has been garbage collected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6556-139">
            <see langword="true" /> si l'objet référencé par l'objet <see cref="T:System.WeakReference" /> actuel n'a pas été récupéré par le garbage collector et est toujours accessible ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-139">
              <see langword="true" /> if the object referenced by the current <see cref="T:System.WeakReference" /> object has not been garbage collected and is still accessible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6556-140">Car un objet peut être récupéré pour le garbage collection immédiatement après le <xref:System.WeakReference.IsAlive%2A> propriété renvoie `true`, à l’aide de cette propriété n’est pas recommandée, sauf si vous testez uniquement pour une `false` valeur de retour.</span><span class="sxs-lookup"><span data-stu-id="c6556-140">Because an object could potentially be reclaimed for garbage collection immediately after the <xref:System.WeakReference.IsAlive%2A> property returns `true`, using this property is not recommended unless you are testing only for a `false` return value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.GC" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public virtual object Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Target" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Target As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Target { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6556-141">Obtient ou définit l'objet (la cible) référencé par l'objet <see cref="T:System.WeakReference" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-141">Gets or sets the object (the target) referenced by the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6556-142">
            <see langword="null" /> si l'objet référencé par l'objet <see cref="T:System.WeakReference" /> actuel a été récupéré par le garbage collector ; sinon, une référence à l'objet référencé par l'objet <see cref="T:System.WeakReference" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-142">
              <see langword="null" /> if the object referenced by the current <see cref="T:System.WeakReference" /> object has been garbage collected; otherwise, a reference to the object referenced by the current <see cref="T:System.WeakReference" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6556-143">Après avoir défini cette propriété à l’objet cible, assurez-vous qu’il n’y a aucune autre référence forte à l’objet ; dans le cas contraire, elle n’est pas collecté.</span><span class="sxs-lookup"><span data-stu-id="c6556-143">After setting this property to the target object, make sure that there are no other strong references to the object; otherwise, it will not be collected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6556-144">L’exemple suivant tente d’obtenir un objet à partir d’un cache d’objets avec des références faibles.</span><span class="sxs-lookup"><span data-stu-id="c6556-144">The following example tries to obtain an object from a cache of objects with weak references.</span></span> <span data-ttu-id="c6556-145">Si l’objet a été récupéré pour le garbage collection, un nouvel objet est généré.</span><span class="sxs-lookup"><span data-stu-id="c6556-145">If the object was reclaimed for garbage collection, a new object is generated.</span></span> <span data-ttu-id="c6556-146">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.WeakReference> classe.</span><span class="sxs-lookup"><span data-stu-id="c6556-146">This example is part of a larger example provided for the <xref:System.WeakReference> class.</span></span>  
  
 [!code-csharp[WeakReference#3](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#3)]
 [!code-vb[WeakReference#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c6556-147">La référence à l’objet cible n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-147">The reference to the target object is invalid.</span>
          </span>
          <span data-ttu-id="c6556-148">Cette exception peut être levée lors de la définition de cette propriété si la valeur est une référence null ou si l’objet a été finalisé pendant l’opération de définition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-148">This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.GC" />
      </Docs>
    </Member>
    <Member MemberName="TrackResurrection">
      <MemberSignature Language="C#" Value="public virtual bool TrackResurrection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrackResurrection" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.TrackResurrection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TrackResurrection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TrackResurrection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6556-149">Indique si un suivi est effectué pour l'objet référencé par l'objet <see cref="T:System.WeakReference" /> en cours après sa finalisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-149">Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference" /> object is tracked after it is finalized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6556-150">
            <see langword="true" /> en cas de suivi de l'objet auquel l'objet <see cref="T:System.WeakReference" /> en cours fait référence après sa finalisation ou <see langword="false" /> s'il fait uniquement l'objet d'un suivi jusqu'à sa finalisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6556-150">
              <see langword="true" /> if the object the current <see cref="T:System.WeakReference" /> object refers to is tracked after finalization; or <see langword="false" /> if the object is only tracked until finalization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6556-151">Si `true`, la référence faible est une référence faible longue et `true` a été spécifié pour le `trackResurrection` paramètre dans le <xref:System.WeakReference> constructeur.</span><span class="sxs-lookup"><span data-stu-id="c6556-151">If `true`, the weak reference is a long weak reference and `true` was specified for the `trackResurrection` parameter in the <xref:System.WeakReference> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.GC" />
      </Docs>
    </Member>
  </Members>
</Type>