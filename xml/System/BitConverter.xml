<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BitConverter.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5634043b141f292fdef3d261c90aaf9f4bcb41a62.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">634043b141f292fdef3d261c90aaf9f4bcb41a62</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.BitConverter">
          <source>Converts base data types to an array of bytes, and an array of bytes to base data types.</source>
          <target state="translated">Convertit des types de données de base en un tableau d'octets, et un tableau d'octets en types de données de base.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> class helps manipulate value types in their fundamental form, as a series of bytes.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> classe facilite la manipulation des types valeur dans leur forme de base, comme une série d’octets.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>A byte is defined as an 8-bit unsigned integer.</source>
          <target state="translated">Un octet est défini comme un entier non signé 8 bits.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> class includes static methods to convert each of the primitive types to and from an array of bytes, as the following table illustrates.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> classe inclut des méthodes statiques pour convertir chacun des types primitifs vers et à partir d’un tableau d’octets, comme l’illustre le tableau suivant.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>Type</source>
          <target state="translated">Type</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>To byte conversion</source>
          <target state="translated">Pour la conversion d’octets</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>From byte conversion</source>
          <target state="translated">À partir de la conversion d’octets</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>If you use <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> methods to round-trip data, make sure that the <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> overload and the <ph id="ph3">`To`</ph><bpt id="p1">*</bpt>Type<ept id="p1">*</ept> method specify the same type.</source>
          <target state="translated">Si vous utilisez <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> méthodes aux données aller-retour, assurez-vous que le <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> de surcharge et la <ph id="ph3">`To`</ph> <bpt id="p1">*</bpt>Type<ept id="p1">*</ept> méthode spécifient le même type.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>As the following example illustrates, restoring an array that represents a signed integer by calling the <ph id="ph1">&lt;xref:System.BitConverter.ToUInt32%2A&gt;</ph> method can result in a value that is different from the original.</source>
          <target state="translated">Comme l’illustre l’exemple suivant, restaurer un tableau qui représente un entier signé en appelant le <ph id="ph1">&lt;xref:System.BitConverter.ToUInt32%2A&gt;</ph> méthode peut entraîner une valeur qui est différente de l’original.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>For more information, see the entry <bpt id="p1">[</bpt>Working with Signed Non-Decimal and Bitwise Values<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=186999)</ept> in the BCL Team Blog.</source>
          <target state="translated">Pour plus d’informations, consultez l’entrée <bpt id="p1">[</bpt>utilisation signées Non décimales et au niveau du bit des valeurs<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=186999)</ept> dans le Blog de l’équipe BCL.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>The order of bytes in the array returned by the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> method overloads (as well as the order of bits in the integer returned by the <ph id="ph2">&lt;xref:System.BitConverter.DoubleToInt64Bits%2A&gt;</ph> method and the order of hexadecimal strings returned by the <ph id="ph3">&lt;xref:System.BitConverter.ToString%28System.Byte%5B%5D%29&gt;</ph> method) depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des octets dans le tableau retourné par la <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> surcharges de méthode (ainsi que l’ordre des octets dans l’entier retourné par la <ph id="ph2">&lt;xref:System.BitConverter.DoubleToInt64Bits%2A&gt;</ph> (méthode) et l’ordre des chaînes hexadécimales retourné par le <ph id="ph3">&lt;xref:System.BitConverter.ToString%28System.Byte%5B%5D%29&gt;</ph> (méthode)) varie selon que le architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>Similarly, the order of bytes in the array and returned by the <ph id="ph1">`To`</ph><bpt id="p1">*</bpt>IntegerValue<ept id="p1">*</ept> methods and the <ph id="ph2">&lt;xref:System.BitConverter.ToChar%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">De même, l’ordre des octets dans le tableau et retournée par la <ph id="ph1">`To`</ph> <bpt id="p1">*</bpt>IntegerValue<ept id="p1">*</ept> méthodes et les <ph id="ph2">&lt;xref:System.BitConverter.ToChar%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>The endianness of an architecture is indicated by the <ph id="ph1">&lt;xref:System.BitConverter.IsLittleEndian&gt;</ph> property, which returns <ph id="ph2">`true`</ph> on little-endian systems and <ph id="ph3">`false`</ph> on big-endian systems.</source>
          <target state="translated">L’ordre primauté des octets d’une architecture sont indiqué par le <ph id="ph1">&lt;xref:System.BitConverter.IsLittleEndian&gt;</ph> propriété qui retourne <ph id="ph2">`true`</ph> sur les systèmes de little-endian et <ph id="ph3">`false`</ph> sur les systèmes de big-endian.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>On little-endian systems, lower-order bytes precede higher-order bytes.</source>
          <target state="translated">Sur les systèmes de primauté des octets de poids faible précèdent primauté des octets.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>On big-endian system, higher-order bytes precede lower-order bytes.</source>
          <target state="translated">Sur le système de big-endian, primauté des octets, faites précéder les octets de poids faible.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>The following table illustrates the difference in the byte arrays that result from passing the integer 1,234,567,890 (0x499602D2) to the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Int32%29&gt;</ph> method.</source>
          <target state="translated">Le tableau suivant illustre la différence dans les tableaux d’octets qui résultent du passage de l’entier 1 234 567 890 (0x499602D2) pour le <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Int32%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>The bytes are listed in order from the byte at index 0 to the byte at index 3.</source>
          <target state="translated">Les octets sont répertoriés dans l’ordre d’octet à partir de l’index 0 à l’octet à l’index 3.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>Little-endian</source>
          <target state="translated">Little-endian.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>D2-02-96-49</source>
          <target state="translated">D2-02-96-49</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>Big-endian</source>
          <target state="translated">Big-endian.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>49-96-02-D2</source>
          <target state="translated">49-96-02-D2</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>Because the return value of some methods depends on system architecture, be careful when transmitting byte data beyond machine boundaries:</source>
          <target state="translated">Étant donné que la valeur de retour de certaines méthodes dépend de l’architecture système, soyez prudent lors de la transmission des données de type octet au-delà des limites de l’ordinateur :</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>If all systems sending and receiving data are guaranteed to have the same endianness, nothing has be done to the data.</source>
          <target state="translated">Si tous les systèmes à envoyer et recevoir des données garanties que le même endianness, rien n’a effectué pour les données.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>If systems sending and receiving data can have different endianness, always transmit data in a particular order.</source>
          <target state="translated">Si les systèmes d’envoi et réception de données peuvent avoir différents endianismes, transmettez toujours les données dans un ordre particulier.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>This means that the order of bytes in the array may have to be reversed either before sending them or after receiving them.</source>
          <target state="translated">Cela signifie que l’ordre des octets dans le tableau peut avoir à être annulée avant leur envoi ou après leur réception.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>A common convention is to transmit data in network byte order (big-endian order).</source>
          <target state="translated">Il convient généralement de transmettre des données dans l’ordre d’octets réseau (ordre big-endian).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>The following example provides an implementation for sending an integer value in network byte order.</source>
          <target state="translated">L’exemple suivant fournit une implémentation pour l’envoi d’une valeur entière dans l’ordre d’octet du réseau.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>If systems sending and receiving data can have different endianness and the data to be transmitted consists of signed integers, call the <ph id="ph1">&lt;xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType&gt;</ph> method to convert the data to network byte order and the <ph id="ph2">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A?displayProperty=nameWithType&gt;</ph> method to convert it to the order required by the recipient.</source>
          <target state="translated">Si les systèmes d’envoi et réception de données peuvent disposer de différents endianismes et les données à transmettre se composent d’entiers signés, appelez le <ph id="ph1">&lt;xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType&gt;</ph> méthode pour convertir les données réseau et le <ph id="ph2">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A?displayProperty=nameWithType&gt;</ph> pour le convertir dans l’ordre requis (méthode) par le destinataire.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.BitConverter">
          <source>The following code example illustrates the use of several <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> class methods.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de plusieurs <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> méthodes de la classe.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.BitConverter.DoubleToInt64Bits(System.Double)">
          <source>The number to convert.</source>
          <target state="translated">Nombre à convertir.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.BitConverter.DoubleToInt64Bits(System.Double)">
          <source>Converts the specified double-precision floating point number to a 64-bit signed integer.</source>
          <target state="translated">Convertit le nombre à virgule flottante double précision spécifié en entier 64 bits signé.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.BitConverter.DoubleToInt64Bits(System.Double)">
          <source>A 64-bit signed integer whose value is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Entier 64 bits signé dont la valeur équivaut à <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.DoubleToInt64Bits(System.Double)">
          <source>The order of bits in the integer returned by the <ph id="ph1">&lt;xref:System.BitConverter.DoubleToInt64Bits%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des octets dans l’entier retourné par la <ph id="ph1">&lt;xref:System.BitConverter.DoubleToInt64Bits%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.DoubleToInt64Bits(System.Double)">
          <source>The following code example converts the bit patterns of several <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values with the <ph id="ph3">`DoubleToInt64Bits`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les modèles binaires de plusieurs <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Int64&gt;</ph> les valeurs de la <ph id="ph3">`DoubleToInt64Bits`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.BitConverter">
          <source>Converts the specified data to an array of bytes.</source>
          <target state="translated">Convertit les données spécifiées en tableau d'octets.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Boolean)">
          <source>A Boolean value.</source>
          <target state="translated">Valeur Boolean.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Boolean)">
          <source>Returns the specified Boolean value as a byte array.</source>
          <target state="translated">Retourne la valeur booléenne spécifiée sous la forme d’un tableau d’octets.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Boolean)">
          <source>A byte array with length 1.</source>
          <target state="translated">Tableau d’octets de longueur 1.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Boolean)">
          <source>You can convert a byte array back to a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value by calling the <ph id="ph2">&lt;xref:System.BitConverter.ToBoolean%2A&gt;</ph> method.</source>
          <target state="translated">Vous pouvez convertir un tableau d’octets à un <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> valeur en appelant le <ph id="ph2">&lt;xref:System.BitConverter.ToBoolean%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Boolean)">
          <source>The following example converts the bit patterns of <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> arrays with the <ph id="ph3">`GetBytes`</ph> method.</source>
          <target state="translated">L’exemple suivant convertit les modèles binaires des <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Byte&gt;</ph> les tableaux avec la <ph id="ph3">`GetBytes`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Char)">
          <source>A character to convert.</source>
          <target state="translated">Caractère à convertir.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Char)">
          <source>Returns the specified Unicode character value as an array of bytes.</source>
          <target state="translated">Retourne la valeur du caractère Unicode spécifié sous la forme d'un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Char)">
          <source>An array of bytes with length 2.</source>
          <target state="translated">Tableau d’octets de longueur 2.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Char)">
          <source>The order of bytes in the array returned by the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des octets dans le tableau retourné par la <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Char)">
          <source>The following code example converts the bit patterns of <ph id="ph1">&lt;xref:System.Char&gt;</ph> values (Unicode characters) to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> arrays with the <ph id="ph3">`GetBytes`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les modèles binaires des <ph id="ph1">&lt;xref:System.Char&gt;</ph> (caractères Unicode) pour les valeurs <ph id="ph2">&lt;xref:System.Byte&gt;</ph> les tableaux avec la <ph id="ph3">`GetBytes`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Double)">
          <source>The number to convert.</source>
          <target state="translated">Nombre à convertir.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Double)">
          <source>Returns the specified double-precision floating point value as an array of bytes.</source>
          <target state="translated">Retourne la valeur à virgule flottante double précision spécifiée sous la forme d'un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Double)">
          <source>An array of bytes with length 8.</source>
          <target state="translated">Tableau d’octets de longueur 8.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Double)">
          <source>The order of bytes in the array returned by the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des octets dans le tableau retourné par la <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Double)">
          <source>The following code example converts the bit patterns of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> arrays with the <ph id="ph3">`GetBytes`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les modèles binaires des <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Byte&gt;</ph> les tableaux avec la <ph id="ph3">`GetBytes`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Int16)">
          <source>The number to convert.</source>
          <target state="translated">Nombre à convertir.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Int16)">
          <source>Returns the specified 16-bit signed integer value as an array of bytes.</source>
          <target state="translated">Retourne la valeur de l'entier 16 bits signé spécifié sous la forme d'un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Int16)">
          <source>An array of bytes with length 2.</source>
          <target state="translated">Tableau d’octets de longueur 2.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Int16)">
          <source>The order of bytes in the array returned by the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des octets dans le tableau retourné par la <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Int16)">
          <source>The following code example converts the bit patterns of <ph id="ph1">&lt;xref:System.Int16&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> arrays with the <ph id="ph3">`GetBytes`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les modèles binaires des <ph id="ph1">&lt;xref:System.Int16&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Byte&gt;</ph> les tableaux avec la <ph id="ph3">`GetBytes`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Int32)">
          <source>The number to convert.</source>
          <target state="translated">Nombre à convertir.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Int32)">
          <source>Returns the specified 32-bit signed integer value as an array of bytes.</source>
          <target state="translated">Retourne la valeur de l’entier 32 bits signé spécifié sous la forme d’un tableau d’octets.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Int32)">
          <source>An array of bytes with length 4.</source>
          <target state="translated">Tableau d’octets de longueur 4.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Int32)">
          <source>The order of bytes in the array returned by the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des octets dans le tableau retourné par la <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Int32)">
          <source>The following code example converts the bit patterns of <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> arrays with the <ph id="ph3">`GetBytes`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les modèles binaires des <ph id="ph1">&lt;xref:System.Int32&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Byte&gt;</ph> les tableaux avec la <ph id="ph3">`GetBytes`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Int64)">
          <source>The number to convert.</source>
          <target state="translated">Nombre à convertir.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Int64)">
          <source>Returns the specified 64-bit signed integer value as an array of bytes.</source>
          <target state="translated">Retourne la valeur de l’entier signé 64 bits spécifié en tant que tableau d’octets.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Int64)">
          <source>An array of bytes with length 8.</source>
          <target state="translated">Tableau d’octets de longueur 8.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Int64)">
          <source>The order of bytes in the array returned by the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des octets dans le tableau retourné par la <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Int64)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> method to convert each element in an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> array to a <ph id="ph3">&lt;xref:System.Byte&gt;</ph> arrays.</source>
          <target state="translated">L’exemple suivant appelle la <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> méthode pour convertir chaque élément dans un <ph id="ph2">&lt;xref:System.Int64&gt;</ph> de tableau à un <ph id="ph3">&lt;xref:System.Byte&gt;</ph> tableaux.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Single)">
          <source>The number to convert.</source>
          <target state="translated">Nombre à convertir.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Single)">
          <source>Returns the specified single-precision floating point value as an array of bytes.</source>
          <target state="translated">Retourne la valeur à virgule flottante simple précision spécifiée sous la forme d'un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.Single)">
          <source>An array of bytes with length 4.</source>
          <target state="translated">Tableau d’octets de longueur 4.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Single)">
          <source>The order of bytes in the array returned by the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des octets dans le tableau retourné par la <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.Single)">
          <source>The following code example converts the bit patterns of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> arrays with the <ph id="ph3">`GetBytes`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les modèles binaires des <ph id="ph1">&lt;xref:System.Single&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Byte&gt;</ph> les tableaux avec la <ph id="ph3">`GetBytes`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.UInt16)">
          <source>The number to convert.</source>
          <target state="translated">Nombre à convertir.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.UInt16)">
          <source>Returns the specified 16-bit unsigned integer value as an array of bytes.</source>
          <target state="translated">Retourne la valeur de l'entier 16 bits non signé spécifié sous la forme d'un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.UInt16)">
          <source>An array of bytes with length 2.</source>
          <target state="translated">Tableau d’octets de longueur 2.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.UInt16)">
          <source>The order of bytes in the array returned by the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des octets dans le tableau retourné par la <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.UInt16)">
          <source>The following code example converts the bit patterns of <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> arrays with the <ph id="ph3">`GetBytes`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les modèles binaires des <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Byte&gt;</ph> les tableaux avec la <ph id="ph3">`GetBytes`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.UInt32)">
          <source>The number to convert.</source>
          <target state="translated">Nombre à convertir.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.UInt32)">
          <source>Returns the specified 32-bit unsigned integer value as an array of bytes.</source>
          <target state="translated">Retourne la valeur de l’entier 32 bits non signé spécifié sous la forme d’un tableau d’octets.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.UInt32)">
          <source>An array of bytes with length 4.</source>
          <target state="translated">Tableau d’octets de longueur 4.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.UInt32)">
          <source>The order of bytes in the array returned by the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des octets dans le tableau retourné par la <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.UInt32)">
          <source>The following code example converts the bit patterns of <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> arrays with the <ph id="ph3">`GetBytes`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les modèles binaires des <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Byte&gt;</ph> les tableaux avec la <ph id="ph3">`GetBytes`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.UInt64)">
          <source>The number to convert.</source>
          <target state="translated">Nombre à convertir.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.UInt64)">
          <source>Returns the specified 64-bit unsigned integer value as an array of bytes.</source>
          <target state="translated">Retourne la valeur de l’entier 64 bits non signé spécifié sous la forme d’un tableau d’octets.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.BitConverter.GetBytes(System.UInt64)">
          <source>An array of bytes with length 8.</source>
          <target state="translated">Tableau d’octets de longueur 8.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.UInt64)">
          <source>The order of bytes in the array returned by the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des octets dans le tableau retourné par la <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.GetBytes(System.UInt64)">
          <source>The following code example converts the bit patterns of <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> arrays with the <ph id="ph3">`GetBytes`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les modèles binaires des <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Byte&gt;</ph> les tableaux avec la <ph id="ph3">`GetBytes`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.BitConverter.Int64BitsToDouble(System.Int64)">
          <source>The number to convert.</source>
          <target state="translated">Nombre à convertir.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.BitConverter.Int64BitsToDouble(System.Int64)">
          <source>Converts the specified 64-bit signed integer to a double-precision floating point number.</source>
          <target state="translated">Convertit l'entier 64 bits signé spécifié en nombre à virgule flottante double précision.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.BitConverter.Int64BitsToDouble(System.Int64)">
          <source>A double-precision floating point number whose value is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Nombre à virgule flottante double précision dont la valeur équivaut à <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.Int64BitsToDouble(System.Int64)">
          <source>Typically, <ph id="ph1">`value`</ph> is an integer that is returned by the <ph id="ph2">&lt;xref:System.BitConverter.DoubleToInt64Bits%2A&gt;</ph> method.</source>
          <target state="translated">En règle générale, <ph id="ph1">`value`</ph> est un entier qui est retourné par la <ph id="ph2">&lt;xref:System.BitConverter.DoubleToInt64Bits%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.Int64BitsToDouble(System.Int64)">
          <source>The following code example converts the bit patterns of several <ph id="ph1">&lt;xref:System.Int64&gt;</ph> values to <ph id="ph2">&lt;xref:System.Double&gt;</ph> values with the <ph id="ph3">`Int64BitsToDouble`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les modèles binaires de plusieurs <ph id="ph1">&lt;xref:System.Int64&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Double&gt;</ph> les valeurs de la <ph id="ph3">`Int64BitsToDouble`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="F:System.BitConverter.IsLittleEndian">
          <source>Indicates the byte order ("endianness") in which data is stored in this computer architecture.</source>
          <target state="translated">Indique l’ordre d’octet (« endianness ») dans lequel les données sont stockées dans cette architecture d’ordinateur.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.BitConverter.IsLittleEndian">
          <source>Different computer architectures store data using different byte orders.</source>
          <target state="translated">Différentes architectures informatiques stockent des données à l’aide de primauté des octets différents.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.BitConverter.IsLittleEndian">
          <source>"Big-endian" means the most significant byte is on the left end of a word.</source>
          <target state="translated">« Big-endian » signifie l’octet le plus significatif de l’extrémité gauche d’un mot.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.BitConverter.IsLittleEndian">
          <source>"Little-endian" means the most significant byte is on the right end of a word.</source>
          <target state="translated">« Little-endian » signifie que l’octet le plus significatif est à l’extrémité droite d’un mot.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.BitConverter.IsLittleEndian">
          <source>You can convert from network byte order to the byte order of the host computer without retrieving  the value of the <ph id="ph1">&lt;xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType&gt;</ph> field by passing a 16-bit, 32-bit, or 64 bit integer to the <ph id="ph2">&lt;xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Vous pouvez convertir à partir de l’ordre d’octet du réseau, à l’ordre d’octet de l’ordinateur hôte, sans récupérer la valeur de la <ph id="ph1">&lt;xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType&gt;</ph> champ en passant un entier 16 bits, 32 bits ou 64 bits à le <ph id="ph2">&lt;xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.BitConverter.IsLittleEndian">
          <source>The following code example illustrates the use of the <ph id="ph1">`IsLittleEndian`</ph> field.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">`IsLittleEndian`</ph> champ.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
          <source>A byte array.</source>
          <target state="translated">Tableau d'octets.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
          <source>The index of the byte within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Index de l’octet compris dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
          <source>Returns a Boolean value converted from the byte at a specified position in a byte array.</source>
          <target state="translated">Retourne une valeur booléenne convertie à partir de l’octet, à une position spécifiée d’un tableau d’octets.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the byte at <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph> in <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is nonzero; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'octet situé à <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph> dans <ph id="ph3">&lt;paramref name="value" /&gt;</ph> est différent de zéro ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
          <source>To convert a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value to its byte representation, call the <ph id="ph2">&lt;xref:System.BitConverter.ToBoolean%2A&gt;</ph> method.</source>
          <target state="translated">Pour convertir un <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> valeur en sa représentation sous forme d’octets, appel le <ph id="ph2">&lt;xref:System.BitConverter.ToBoolean%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
          <source>The following code example converts elements of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> arrays to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values with the <ph id="ph3">`ToBoolean`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les éléments de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> tableaux <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> les valeurs de la <ph id="ph3">`ToBoolean`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero or greater than the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est inférieur à zéro ou supérieur à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
          <source>An array.</source>
          <target state="translated">Tableau.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
          <source>The starting position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
          <source>Returns a Unicode character converted from two bytes at a specified position in a byte array.</source>
          <target state="translated">Retourne un caractère Unicode converti à partir de deux octets à une position spécifiée dans un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
          <source>A character formed by two bytes beginning at <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</source>
          <target state="translated">Caractère composé de deux octets, à partir de <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter.ToChar%2A&gt;</ph> method converts the bytes from index <ph id="ph2">`startIndex`</ph> to <ph id="ph3">`startIndex`</ph> + 1 to a <ph id="ph4">&lt;xref:System.Char&gt;</ph> value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.BitConverter.ToChar%2A&gt;</ph> méthode convertit les octets à partir de l’index <ph id="ph2">`startIndex`</ph> à <ph id="ph3">`startIndex`</ph> + 1 et un <ph id="ph4">&lt;xref:System.Char&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
          <source>The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> class topic.</source>
          <target state="translated">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> rubrique de la classe.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
          <source>The following code example converts elements of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> arrays to <ph id="ph2">&lt;xref:System.Char&gt;</ph> values (Unicode characters) with the <ph id="ph3">`ToChar`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les éléments de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> tableaux <ph id="ph2">&lt;xref:System.Char&gt;</ph> valeurs (caractères Unicode) avec le <ph id="ph3">`ToChar`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> equals the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est égal à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero or greater than the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est inférieur à zéro ou supérieur à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">Tableau d'octets.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
          <source>The starting position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
          <source>Returns a double-precision floating point number converted from eight bytes at a specified position in a byte array.</source>
          <target state="translated">Retourne un nombre à virgule flottante double précision converti à partir de huit octets à une position spécifiée dans un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
          <source>A double precision floating point number formed by eight bytes beginning at <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</source>
          <target state="translated">Nombre à virgule flottante double précision composé de huit octets, à partir de <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter.ToDouble%2A&gt;</ph> method converts the bytes from index <ph id="ph2">`startIndex`</ph> to <ph id="ph3">`startIndex`</ph> + 7 to a <ph id="ph4">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.BitConverter.ToDouble%2A&gt;</ph> méthode convertit les octets à partir de l’index <ph id="ph2">`startIndex`</ph> à <ph id="ph3">`startIndex`</ph> + 7 à un <ph id="ph4">&lt;xref:System.Double&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
          <source>The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> class topic.</source>
          <target state="translated">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> rubrique de la classe.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
          <source>The following code example converts elements of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> arrays to <ph id="ph2">&lt;xref:System.Double&gt;</ph> values with the <ph id="ph3">`ToDouble`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les éléments de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> tableaux <ph id="ph2">&lt;xref:System.Double&gt;</ph> les valeurs de la <ph id="ph3">`ToDouble`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is greater than or equal to the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 7, and is less than or equal to the length of <ph id="ph3">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est supérieur ou égal à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 7, et inférieur ou égal à la longueur de <ph id="ph3">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero or greater than the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est inférieur à zéro ou supérieur à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">Tableau d'octets.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
          <source>The starting position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
          <source>Returns a 16-bit signed integer converted from two bytes at a specified position in a byte array.</source>
          <target state="translated">Retourne un entier 16 bits signé converti à partir de deux octets à une position spécifiée dans un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
          <source>A 16-bit signed integer formed by two bytes beginning at <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</source>
          <target state="translated">Entier 16 bits signé composé de deux octets, à partir de <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter.ToInt16%2A&gt;</ph> method converts the bytes from index <ph id="ph2">`startIndex`</ph> to <ph id="ph3">`startIndex`</ph> + 1 to an <ph id="ph4">&lt;xref:System.Int16&gt;</ph> value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.BitConverter.ToInt16%2A&gt;</ph> méthode convertit les octets à partir de l’index <ph id="ph2">`startIndex`</ph> à <ph id="ph3">`startIndex`</ph> + 1 et un <ph id="ph4">&lt;xref:System.Int16&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
          <source>The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> class topic.</source>
          <target state="translated">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> rubrique de la classe.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
          <source>The following code example converts elements of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> arrays to <ph id="ph2">&lt;xref:System.Int16&gt;</ph> values with the <ph id="ph3">`ToInt16`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les éléments de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> tableaux <ph id="ph2">&lt;xref:System.Int16&gt;</ph> les valeurs de la <ph id="ph3">`ToInt16`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> equals the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est égal à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero or greater than the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est inférieur à zéro ou supérieur à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">Tableau d'octets.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
          <source>The starting position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
          <source>Returns a 32-bit signed integer converted from four bytes at a specified position in a byte array.</source>
          <target state="translated">Retourne un entier 32 bits signé converti à partir de quatre octets à une position spécifiée dans un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
          <source>A 32-bit signed integer formed by four bytes beginning at <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</source>
          <target state="translated">Entier 32 bits signé composé de quatre octets, à partir de <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter.ToInt32%2A&gt;</ph> method converts the bytes from index <ph id="ph2">`startIndex`</ph> to <ph id="ph3">`startIndex`</ph> + 3 to an <ph id="ph4">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.BitConverter.ToInt32%2A&gt;</ph> méthode convertit les octets à partir de l’index <ph id="ph2">`startIndex`</ph> à <ph id="ph3">`startIndex`</ph> + 3 pour un <ph id="ph4">&lt;xref:System.Int32&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
          <source>The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph>.</source>
          <target state="translated">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.BitConverter.ToInt32%2A&gt;</ph> method to create <ph id="ph2">&lt;xref:System.Int32&gt;</ph> values from a four-byte array and from the upper four bytes of an eight-byte array.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.BitConverter.ToInt32%2A&gt;</ph> méthode pour créer <ph id="ph2">&lt;xref:System.Int32&gt;</ph> valeurs à partir d’un tableau de quatre octets et depuis les quatre octets supérieurs d’un tableau de huit octets.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
          <source>It also uses the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Int32%29&gt;</ph> and <ph id="ph2">&lt;xref:System.BitConverter.ToInt32%2A&gt;</ph> methods to round-trip an <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated">Elle utilise également le <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Int32%29&gt;</ph> et <ph id="ph2">&lt;xref:System.BitConverter.ToInt32%2A&gt;</ph> méthodes pour effectuer un aller-retour un <ph id="ph3">&lt;xref:System.Int32&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is greater than or equal to the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 3, and is less than or equal to the length of <ph id="ph3">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est supérieur ou égal à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 3, et inférieur ou égal à la longueur de <ph id="ph3">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero or greater than the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est inférieur à zéro ou supérieur à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">Tableau d'octets.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
          <source>The starting position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
          <source>Returns a 64-bit signed integer converted from eight bytes at a specified position in a byte array.</source>
          <target state="translated">Retourne un entier 64 bits signé converti à partir de huit octets à une position spécifiée dans un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
          <source>A 64-bit signed integer formed by eight bytes beginning at <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</source>
          <target state="translated">Entier 64 bits signé composé de huit octets, à partir de <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter.ToInt64%2A&gt;</ph> method converts the bytes from index <ph id="ph2">`startIndex`</ph> to <ph id="ph3">`startIndex`</ph> + 7 to a <ph id="ph4">&lt;xref:System.Int64&gt;</ph> value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.BitConverter.ToInt64%2A&gt;</ph> méthode convertit les octets à partir de l’index <ph id="ph2">`startIndex`</ph> à <ph id="ph3">`startIndex`</ph> + 7 à un <ph id="ph4">&lt;xref:System.Int64&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
          <source>The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> class topic.</source>
          <target state="translated">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> rubrique de la classe.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
          <source>The following code example converts elements of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> arrays to <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values with the <ph id="ph3">`ToInt64`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les éléments de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> tableaux <ph id="ph2">&lt;xref:System.Int64&gt;</ph> les valeurs de la <ph id="ph3">`ToInt64`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is greater than or equal to the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 7, and is less than or equal to the length of <ph id="ph3">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est supérieur ou égal à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 7, et inférieur ou égal à la longueur de <ph id="ph3">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero or greater than the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est inférieur à zéro ou supérieur à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">Tableau d'octets.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
          <source>The starting position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
          <source>Returns a single-precision floating point number converted from four bytes at a specified position in a byte array.</source>
          <target state="translated">Retourne un nombre à virgule flottante simple précision converti à partir de quatre octets à une position spécifiée dans un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
          <source>A single-precision floating point number formed by four bytes beginning at <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</source>
          <target state="translated">Nombre à virgule flottante simple précision composé de quatre octets, à partir de <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter.ToSingle%2A&gt;</ph> method converts the bytes from index <ph id="ph2">`startIndex`</ph> to <ph id="ph3">`startIndex`</ph> + 3 to a <ph id="ph4">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.BitConverter.ToSingle%2A&gt;</ph> méthode convertit les octets à partir de l’index <ph id="ph2">`startIndex`</ph> à <ph id="ph3">`startIndex`</ph> + 3 pour un <ph id="ph4">&lt;xref:System.Single&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
          <source>The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph>.</source>
          <target state="translated">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
          <source>The following code example converts elements of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> arrays to <ph id="ph2">&lt;xref:System.Single&gt;</ph> values with the <ph id="ph3">`ToSingle`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les éléments de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> tableaux <ph id="ph2">&lt;xref:System.Single&gt;</ph> les valeurs de la <ph id="ph3">`ToSingle`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is greater than or equal to the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 3, and is less than or equal to the length of <ph id="ph3">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est supérieur ou égal à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 3, et inférieur ou égal à la longueur de <ph id="ph3">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero or greater than the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est inférieur à zéro ou supérieur à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="T:System.BitConverter">
          <source>Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.</source>
          <target state="translated">Convertit la valeur numérique de chaque élément contenu dans un tableau d'octets spécifié en sa représentation sous forme de chaîne hexadécimale équivalente.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[])">
          <source>An array of bytes.</source>
          <target state="translated">Tableau d'octets.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[])">
          <source>Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.</source>
          <target state="translated">Convertit la valeur numérique de chaque élément contenu dans un tableau d'octets spécifié en sa représentation sous forme de chaîne hexadécimale équivalente.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[])">
          <source>A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>; for example, "7F-2C-4A-00".</source>
          <target state="translated">Une chaîne qui contient des paires hexadécimales séparées par des tirets, où chaque paire représente l'élément correspondant dans <ph id="ph1">&lt;paramref name="value" /&gt;</ph> ; par exemple, "7F-2C-4A-00".</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToString(System.Byte[])">
          <source>All the elements of <ph id="ph1">`value`</ph> are converted.</source>
          <target state="translated">Tous les éléments de <ph id="ph1">`value`</ph> sont convertis.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToString(System.Byte[])">
          <source>The order of hexadecimal strings returned by the <ph id="ph1">&lt;xref:System.BitConverter.ToString%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des chaînes hexadécimales retourné par la <ph id="ph1">&lt;xref:System.BitConverter.ToString%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToString(System.Byte[])">
          <source>The following code example converts <ph id="ph1">&lt;xref:System.Byte&gt;</ph> arrays to <ph id="ph2">&lt;xref:System.String&gt;</ph> objects with the <ph id="ph3">`ToString`</ph> method.</source>
          <target state="translated">Le code suivant convertit d’exemple <ph id="ph1">&lt;xref:System.Byte&gt;</ph> tableaux <ph id="ph2">&lt;xref:System.String&gt;</ph> objets avec le <ph id="ph3">`ToString`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">Tableau d'octets.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
          <source>The starting position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
          <source>Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.</source>
          <target state="translated">Convertit la valeur numérique de chaque élément contenu dans un sous-tableau d'octets spécifié en sa représentation sous forme de chaîne hexadécimale équivalente.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
          <source>A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>; for example, "7F-2C-4A-00".</source>
          <target state="translated">Une chaîne qui contient des paires hexadécimales séparées par des tirets, où chaque paire représente l'élément correspondant dans un sous-tableau de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> ; par exemple, "7F-2C-4A-00".</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
          <source>The elements from array position <ph id="ph1">`startIndex`</ph> to the end of the array are converted.</source>
          <target state="translated">Les éléments à partir de la position du tableau <ph id="ph1">`startIndex`</ph> à la fin du tableau sont convertis.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
          <source>The order of hexadecimal strings returned by the <ph id="ph1">&lt;xref:System.BitConverter.ToString%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des chaînes hexadécimales retourné par la <ph id="ph1">&lt;xref:System.BitConverter.ToString%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
          <source>The following code example converts the part of a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array starting at the specified <ph id="ph2">`startIndex`</ph> to a <ph id="ph3">&lt;xref:System.String&gt;</ph> with the <ph id="ph4">`ToString`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit la partie d’un <ph id="ph1">&lt;xref:System.Byte&gt;</ph> tableau en commençant à la position spécifiée <ph id="ph2">`startIndex`</ph> à un <ph id="ph3">&lt;xref:System.String&gt;</ph> avec la <ph id="ph4">`ToString`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero or greater than the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est inférieur à zéro ou supérieur à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">Tableau d'octets.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source>The starting position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source>The number of array elements in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to convert.</source>
          <target state="translated">Nombre d’éléments de tableau dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> à convertir.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source>Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.</source>
          <target state="translated">Convertit la valeur numérique de chaque élément contenu dans un sous-tableau d'octets spécifié en sa représentation sous forme de chaîne hexadécimale équivalente.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source>A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>; for example, "7F-2C-4A-00".</source>
          <target state="translated">Une chaîne qui contient des paires hexadécimales séparées par des tirets, où chaque paire représente l'élément correspondant dans un sous-tableau de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> ; par exemple, "7F-2C-4A-00".</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`length`</ph> elements from array position <ph id="ph2">`startIndex`</ph> are converted.</source>
          <target state="translated">Le <ph id="ph1">`length`</ph> éléments à partir de la position du tableau <ph id="ph2">`startIndex`</ph> sont convertis.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source>If <ph id="ph1">`length`</ph> equals zero, the method returns <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`length`</ph> est égal à zéro, la méthode retourne <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source>The order of hexadecimal strings returned by the <ph id="ph1">&lt;xref:System.BitConverter.ToString%2A&gt;</ph> method depends on whether the computer architecture is little-endian or big-endian.</source>
          <target state="translated">L’ordre des chaînes hexadécimales retourné par la <ph id="ph1">&lt;xref:System.BitConverter.ToString%2A&gt;</ph> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.BitConverter.ToString%2A&gt;</ph> method to convert part of a byte array, starting at the specified <ph id="ph2">`startIndex`</ph> and with the specified <ph id="ph3">`length`</ph>, to a string.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.BitConverter.ToString%2A&gt;</ph> méthode pour convertir la partie d’un tableau d’octets, en commençant à la position spécifiée <ph id="ph2">`startIndex`</ph> et avec l’objet <ph id="ph3">`length`</ph>, en une chaîne.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="length" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is greater than zero and is greater than or equal to the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est supérieur à zéro et supérieur ou égal à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
          <source>The combination of <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="length" /&gt;</ph> does not specify a position within <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; that is, the <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph> parameter is greater than the length of <ph id="ph5">&lt;paramref name="value" /&gt;</ph> minus the <ph id="ph6">&lt;paramref name="length" /&gt;</ph> parameter.</source>
          <target state="translated">La combinaison de <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> et de <ph id="ph2">&lt;paramref name="length" /&gt;</ph> ne spécifie pas de position dans <ph id="ph3">&lt;paramref name="value" /&gt;</ph> ; en d'autres termes, le paramètre <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph> est supérieur à la longueur de <ph id="ph5">&lt;paramref name="value" /&gt;</ph> moins le paramètre <ph id="ph6">&lt;paramref name="length" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
          <source>The array of bytes.</source>
          <target state="translated">Tableau d'octets.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
          <source>The starting position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
          <source>Returns a 16-bit unsigned integer converted from two bytes at a specified position in a byte array.</source>
          <target state="translated">Retourne un entier 16 bits non signé converti à partir de deux octets à une position spécifiée dans un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
          <source>A 16-bit unsigned integer formed by two bytes beginning at <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</source>
          <target state="translated">Entier 16 bits non signé composé de deux octets, à partir de <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter.ToUInt16%2A&gt;</ph> method converts the bytes from index <ph id="ph2">`startIndex`</ph> to <ph id="ph3">`startIndex`</ph> + 1 to a <ph id="ph4">&lt;xref:System.UInt16&gt;</ph> value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.BitConverter.ToUInt16%2A&gt;</ph> méthode convertit les octets à partir de l’index <ph id="ph2">`startIndex`</ph> à <ph id="ph3">`startIndex`</ph> + 1 et un <ph id="ph4">&lt;xref:System.UInt16&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
          <source>The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> class topic.</source>
          <target state="translated">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> rubrique de la classe.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
          <source>The following code example converts elements of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> arrays to <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> values with the <ph id="ph3">`ToUInt16`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les éléments de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> tableaux <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> les valeurs de la <ph id="ph3">`ToUInt16`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> equals the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est égal à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero or greater than the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est inférieur à zéro ou supérieur à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">Tableau d'octets.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
          <source>The starting position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
          <source>Returns a 32-bit unsigned integer converted from four bytes at a specified position in a byte array.</source>
          <target state="translated">Retourne un entier 32 bits non signé converti à partir de quatre octets à une position spécifiée dans un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
          <source>A 32-bit unsigned integer formed by four bytes beginning at <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</source>
          <target state="translated">Entier 32 bits non signé composé de quatre octets, à partir de <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter.ToUInt32%2A&gt;</ph> method converts the bytes from index <ph id="ph2">`startIndex`</ph> to <ph id="ph3">`startIndex`</ph> + 3 to a <ph id="ph4">&lt;xref:System.UInt32&gt;</ph> value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.BitConverter.ToUInt32%2A&gt;</ph> méthode convertit les octets à partir de l’index <ph id="ph2">`startIndex`</ph> à <ph id="ph3">`startIndex`</ph> + 3 pour un <ph id="ph4">&lt;xref:System.UInt32&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
          <source>The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> class topic.</source>
          <target state="translated">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> rubrique de la classe.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
          <source>The following code example converts elements of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> arrays to <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> values with the <ph id="ph3">`ToUInt32`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les éléments de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> tableaux <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> les valeurs de la <ph id="ph3">`ToUInt32`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is greater than or equal to the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 3, and is less than or equal to the length of <ph id="ph3">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est supérieur ou égal à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 3, et inférieur ou égal à la longueur de <ph id="ph3">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero or greater than the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est inférieur à zéro ou supérieur à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">Tableau d'octets.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
          <source>The starting position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
          <source>Returns a 64-bit unsigned integer converted from eight bytes at a specified position in a byte array.</source>
          <target state="translated">Retourne un entier 64 bits non signé converti à partir de huit octets à une position spécifiée dans un tableau d'octets.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
          <source>A 64-bit unsigned integer formed by the eight bytes beginning at <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</source>
          <target state="translated">Entier 64 bits non signé composé de huit octets, à partir de <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter.ToUInt64%2A&gt;</ph> method converts the bytes from index <ph id="ph2">`startIndex`</ph> to <ph id="ph3">`startIndex`</ph> + 7 to a <ph id="ph4">&lt;xref:System.UInt64&gt;</ph> value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.BitConverter.ToUInt64%2A&gt;</ph> méthode convertit les octets à partir de l’index <ph id="ph2">`startIndex`</ph> à <ph id="ph3">`startIndex`</ph> + 7 à un <ph id="ph4">&lt;xref:System.UInt64&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
          <source>The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> class topic.</source>
          <target state="translated">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> rubrique de la classe.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
          <source>The following code example converts elements of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> arrays to <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> values with the <ph id="ph3">`ToUInt64`</ph> method.</source>
          <target state="translated">L’exemple de code suivant convertit les éléments de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> tableaux <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> les valeurs de la <ph id="ph3">`ToUInt64`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is greater than or equal to the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 7, and is less than or equal to the length of <ph id="ph3">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est supérieur ou égal à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 7, et inférieur ou égal à la longueur de <ph id="ph3">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero or greater than the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> minus 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> est inférieur à zéro ou supérieur à la longueur de <ph id="ph2">&lt;paramref name="value" /&gt;</ph> moins 1.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>