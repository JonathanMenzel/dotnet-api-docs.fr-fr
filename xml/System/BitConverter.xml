<Type Name="BitConverter" FullName="System.BitConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="634043b141f292fdef3d261c90aaf9f4bcb41a62" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30729953" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class BitConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BitConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.BitConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class BitConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitConverter abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3e77c-101">Convertit des types de données de base en un tableau d'octets, et un tableau d'octets en types de données de base.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3e77c-101">Converts base data types to an array of bytes, and an array of bytes to base data types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-102">La <xref:System.BitConverter> classe facilite la manipulation des types valeur dans leur forme de base, comme une série d’octets.</span><span class="sxs-lookup"><span data-stu-id="3e77c-102">The <xref:System.BitConverter> class helps manipulate value types in their fundamental form, as a series of bytes.</span></span> <span data-ttu-id="3e77c-103">Un octet est défini comme un entier non signé 8 bits.</span><span class="sxs-lookup"><span data-stu-id="3e77c-103">A byte is defined as an 8-bit unsigned integer.</span></span> <span data-ttu-id="3e77c-104">La <xref:System.BitConverter> classe inclut des méthodes statiques pour convertir chacun des types primitifs vers et à partir d’un tableau d’octets, comme l’illustre le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="3e77c-104">The <xref:System.BitConverter> class includes static methods to convert each of the primitive types to and from an array of bytes, as the following table illustrates.</span></span>  
  
|<span data-ttu-id="3e77c-105">Type</span><span class="sxs-lookup"><span data-stu-id="3e77c-105">Type</span></span>|<span data-ttu-id="3e77c-106">Pour la conversion d’octets</span><span class="sxs-lookup"><span data-stu-id="3e77c-106">To byte conversion</span></span>|<span data-ttu-id="3e77c-107">À partir de la conversion d’octets</span><span class="sxs-lookup"><span data-stu-id="3e77c-107">From byte conversion</span></span>|  
|----------|------------------------|--------------------------|  
|<xref:System.Boolean>|<xref:System.BitConverter.GetBytes%28System.Boolean%29>|<xref:System.BitConverter.ToBoolean%2A>|  
|<xref:System.Char>|<xref:System.BitConverter.GetBytes%28System.Char%29>|<xref:System.BitConverter.ToChar%2A>|  
|<xref:System.Double>|<xref:System.BitConverter.GetBytes%28System.Double%29><br /><br /> <span data-ttu-id="3e77c-108">- ou -</span><span class="sxs-lookup"><span data-stu-id="3e77c-108">-or-</span></span><br /><br /> <xref:System.BitConverter.DoubleToInt64Bits%28System.Double%29>|<xref:System.BitConverter.ToDouble%2A><br /><br /> <span data-ttu-id="3e77c-109">- ou -</span><span class="sxs-lookup"><span data-stu-id="3e77c-109">-or-</span></span><br /><br /> <xref:System.BitConverter.Int64BitsToDouble%2A>|  
|<xref:System.Int16>|<xref:System.BitConverter.GetBytes%28System.Int16%29>|<xref:System.BitConverter.ToInt16%2A>|  
|<xref:System.Int32>|<xref:System.BitConverter.GetBytes%28System.Int32%29>|<xref:System.BitConverter.ToInt32%2A>|  
|<xref:System.Int64>|<xref:System.BitConverter.GetBytes%28System.Int64%29>|<xref:System.BitConverter.ToInt64%2A>|  
|<xref:System.Single>|<xref:System.BitConverter.GetBytes%28System.Single%29>|<xref:System.BitConverter.ToSingle%2A>|  
|<xref:System.UInt16>|<xref:System.BitConverter.GetBytes%28System.UInt16%29>|<xref:System.BitConverter.ToUInt16%2A>|  
|<xref:System.UInt32>|<xref:System.BitConverter.GetBytes%28System.UInt32%29>|<xref:System.BitConverter.ToUInt32%2A>|  
|<xref:System.UInt64>|<xref:System.BitConverter.GetBytes%28System.UInt64%29>|<xref:System.BitConverter.ToUInt64%2A>|  
  
 <span data-ttu-id="3e77c-110">Si vous utilisez <xref:System.BitConverter> méthodes aux données aller-retour, assurez-vous que le <xref:System.BitConverter.GetBytes%2A> de surcharge et la `To` *Type* méthode spécifient le même type.</span><span class="sxs-lookup"><span data-stu-id="3e77c-110">If you use <xref:System.BitConverter> methods to round-trip data, make sure that the <xref:System.BitConverter.GetBytes%2A> overload and the `To`*Type* method specify the same type.</span></span> <span data-ttu-id="3e77c-111">Comme l’illustre l’exemple suivant, restaurer un tableau qui représente un entier signé en appelant le <xref:System.BitConverter.ToUInt32%2A> méthode peut entraîner une valeur qui est différente de l’original.</span><span class="sxs-lookup"><span data-stu-id="3e77c-111">As the following example illustrates, restoring an array that represents a signed integer by calling the <xref:System.BitConverter.ToUInt32%2A> method can result in a value that is different from the original.</span></span> <span data-ttu-id="3e77c-112">Pour plus d’informations, consultez l’entrée [utilisation signées Non décimales et au niveau du bit des valeurs](http://go.microsoft.com/fwlink/?LinkId=186999) dans le Blog de l’équipe BCL.</span><span class="sxs-lookup"><span data-stu-id="3e77c-112">For more information, see the entry [Working with Signed Non-Decimal and Bitwise Values](http://go.microsoft.com/fwlink/?LinkId=186999) in the BCL Team Blog.</span></span>  
  
 [!code-csharp[System.BitConverter.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/example1.cs#3)]
 [!code-vb[System.BitConverter.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/example1.vb#3)]  
  
 <span data-ttu-id="3e77c-113">L’ordre des octets dans le tableau retourné par la <xref:System.BitConverter.GetBytes%2A> surcharges de méthode (ainsi que l’ordre des octets dans l’entier retourné par la <xref:System.BitConverter.DoubleToInt64Bits%2A> (méthode) et l’ordre des chaînes hexadécimales retourné par le <xref:System.BitConverter.ToString%28System.Byte%5B%5D%29> (méthode)) varie selon que le architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-113">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method overloads (as well as the order of bits in the integer returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method and the order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%28System.Byte%5B%5D%29> method) depends on whether the computer architecture is little-endian or big-endian.</span></span> <span data-ttu-id="3e77c-114">De même, l’ordre des octets dans le tableau et retournée par la `To` *IntegerValue* méthodes et les <xref:System.BitConverter.ToChar%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-114">Similarly, the order of bytes in the array and returned by the `To`*IntegerValue* methods and the <xref:System.BitConverter.ToChar%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span> <span data-ttu-id="3e77c-115">L’ordre primauté des octets d’une architecture sont indiqué par le <xref:System.BitConverter.IsLittleEndian> propriété qui retourne `true` sur les systèmes de little-endian et `false` sur les systèmes de big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-115">The endianness of an architecture is indicated by the <xref:System.BitConverter.IsLittleEndian> property, which returns `true` on little-endian systems and `false` on big-endian systems.</span></span> <span data-ttu-id="3e77c-116">Sur les systèmes de primauté des octets de poids faible précèdent primauté des octets.</span><span class="sxs-lookup"><span data-stu-id="3e77c-116">On little-endian systems, lower-order bytes precede higher-order bytes.</span></span> <span data-ttu-id="3e77c-117">Sur le système de big-endian, primauté des octets, faites précéder les octets de poids faible.</span><span class="sxs-lookup"><span data-stu-id="3e77c-117">On big-endian system, higher-order bytes precede lower-order bytes.</span></span> <span data-ttu-id="3e77c-118">Le tableau suivant illustre la différence dans les tableaux d’octets qui résultent du passage de l’entier 1 234 567 890 (0x499602D2) pour le <xref:System.BitConverter.GetBytes%28System.Int32%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-118">The following table illustrates the difference in the byte arrays that result from passing the integer 1,234,567,890 (0x499602D2) to the <xref:System.BitConverter.GetBytes%28System.Int32%29> method.</span></span> <span data-ttu-id="3e77c-119">Les octets sont répertoriés dans l’ordre d’octet à partir de l’index 0 à l’octet à l’index 3.</span><span class="sxs-lookup"><span data-stu-id="3e77c-119">The bytes are listed in order from the byte at index 0 to the byte at index 3.</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e77c-120">Little-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-120">Little-endian</span></span>|<span data-ttu-id="3e77c-121">D2-02-96-49</span><span class="sxs-lookup"><span data-stu-id="3e77c-121">D2-02-96-49</span></span>|  
|<span data-ttu-id="3e77c-122">Big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-122">Big-endian</span></span>|<span data-ttu-id="3e77c-123">49-96-02-D2</span><span class="sxs-lookup"><span data-stu-id="3e77c-123">49-96-02-D2</span></span>|  
  
 <span data-ttu-id="3e77c-124">Étant donné que la valeur de retour de certaines méthodes dépend de l’architecture système, soyez prudent lors de la transmission des données de type octet au-delà des limites de l’ordinateur :</span><span class="sxs-lookup"><span data-stu-id="3e77c-124">Because the return value of some methods depends on system architecture, be careful when transmitting byte data beyond machine boundaries:</span></span>  
  
-   <span data-ttu-id="3e77c-125">Si tous les systèmes à envoyer et recevoir des données garanties que le même endianness, rien n’a effectué pour les données.</span><span class="sxs-lookup"><span data-stu-id="3e77c-125">If all systems sending and receiving data are guaranteed to have the same endianness, nothing has be done to the data.</span></span>  
  
-   <span data-ttu-id="3e77c-126">Si les systèmes d’envoi et réception de données peuvent avoir différents endianismes, transmettez toujours les données dans un ordre particulier.</span><span class="sxs-lookup"><span data-stu-id="3e77c-126">If systems sending and receiving data can have different endianness, always transmit data in a particular order.</span></span> <span data-ttu-id="3e77c-127">Cela signifie que l’ordre des octets dans le tableau peut avoir à être annulée avant leur envoi ou après leur réception.</span><span class="sxs-lookup"><span data-stu-id="3e77c-127">This means that the order of bytes in the array may have to be reversed either before sending them or after receiving them.</span></span> <span data-ttu-id="3e77c-128">Il convient généralement de transmettre des données dans l’ordre d’octets réseau (ordre big-endian).</span><span class="sxs-lookup"><span data-stu-id="3e77c-128">A common convention is to transmit data in network byte order (big-endian order).</span></span> <span data-ttu-id="3e77c-129">L’exemple suivant fournit une implémentation pour l’envoi d’une valeur entière dans l’ordre d’octet du réseau.</span><span class="sxs-lookup"><span data-stu-id="3e77c-129">The following example provides an implementation for sending an integer value in network byte order.</span></span>  
  
     [!code-csharp[System.BitConverter.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/networkorder1.cs#4)]
     [!code-vb[System.BitConverter.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/networkorder1.vb#4)]  
  
-   <span data-ttu-id="3e77c-130">Si les systèmes d’envoi et réception de données peuvent disposer de différents endianismes et les données à transmettre se composent d’entiers signés, appelez le <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> méthode pour convertir les données réseau et le <xref:System.Net.IPAddress.NetworkToHostOrder%2A?displayProperty=nameWithType> pour le convertir dans l’ordre requis (méthode) par le destinataire.</span><span class="sxs-lookup"><span data-stu-id="3e77c-130">If systems sending and receiving data can have different endianness and the data to be transmitted consists of signed integers, call the <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> method to convert the data to network byte order and the <xref:System.Net.IPAddress.NetworkToHostOrder%2A?displayProperty=nameWithType> method to convert it to the order required by the recipient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-131">L’exemple de code suivant illustre l’utilisation de plusieurs <xref:System.BitConverter> méthodes de la classe.</span><span class="sxs-lookup"><span data-stu-id="3e77c-131">The following code example illustrates the use of several <xref:System.BitConverter> class methods.</span></span>  
  
 [!code-cpp[System.BitConverter.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.Class/CPP/bitconv.cpp#1)]
 [!code-csharp[System.BitConverter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/bitconv.cs#1)]
 [!code-vb[System.BitConverter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/bitconv.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Byte" />
  </Docs>
  <Members>
    <Member MemberName="DoubleToInt64Bits">
      <MemberSignature Language="C#" Value="public static long DoubleToInt64Bits (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DoubleToInt64Bits(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.DoubleToInt64Bits(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DoubleToInt64Bits (value As Double) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DoubleToInt64Bits(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-132">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-132">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-133">Convertit le nombre à virgule flottante double précision spécifié en entier 64 bits signé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-133">Converts the specified double-precision floating point number to a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-134">Entier 64 bits signé dont la valeur équivaut à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-134">A 64-bit signed integer whose value is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-135">L’ordre des octets dans l’entier retourné par la <xref:System.BitConverter.DoubleToInt64Bits%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-135">The order of bits in the integer returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-136">L’exemple de code suivant convertit les modèles binaires de plusieurs <xref:System.Double> valeurs <xref:System.Int64> les valeurs de la `DoubleToInt64Bits` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-136">The following code example converts the bit patterns of several <xref:System.Double> values to <xref:System.Int64> values with the `DoubleToInt64Bits` method.</span></span>  
  
 [!code-cpp[System.BitConverter.DoubleInt64#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CPP/dbltobits.cpp#2)]
 [!code-csharp[System.BitConverter.DoubleInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CS/dbltobits.cs#2)]
 [!code-vb[System.BitConverter.DoubleInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/VB/dbltobits.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.Int64BitsToDouble(System.Int64)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e77c-137">Convertit les données spécifiées en tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-137">Converts the specified data to an array of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-138">Valeur Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-138">A Boolean value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-139">Retourne la valeur booléenne spécifiée sous la forme d’un tableau d’octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-139">Returns the specified Boolean value as a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-140">Tableau d’octets de longueur 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-140">A byte array with length 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-141">Vous pouvez convertir un tableau d’octets à un <xref:System.Boolean> valeur en appelant le <xref:System.BitConverter.ToBoolean%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-141">You can convert a byte array back to a <xref:System.Boolean> value by calling the <xref:System.BitConverter.ToBoolean%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-142">L’exemple suivant convertit les modèles binaires des <xref:System.Boolean> valeurs <xref:System.Byte> les tableaux avec la `GetBytes` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-142">The following example converts the bit patterns of <xref:System.Boolean> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytesbool.cpp#1)]
 [!code-csharp[System.BitConverter.GetBytes.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytesbool.cs#1)]
 [!code-vb[System.BitConverter.GetBytes.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytesbool.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Char) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-143">Caractère à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-143">A character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-144">Retourne la valeur du caractère Unicode spécifié sous la forme d'un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-144">Returns the specified Unicode character value as an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-145">Tableau d’octets de longueur 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-145">An array of bytes with length 2.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-146">L’ordre des octets dans le tableau retourné par la <xref:System.BitConverter.GetBytes%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-146">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-147">L’exemple de code suivant convertit les modèles binaires des <xref:System.Char> (caractères Unicode) pour les valeurs <xref:System.Byte> les tableaux avec la `GetBytes` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-147">The following code example converts the bit patterns of <xref:System.Char> values (Unicode characters) to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/byteschar.cpp#2)]
 [!code-csharp[System.BitConverter.GetBytes.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/byteschar.cs#2)]
 [!code-vb[System.BitConverter.GetBytes.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/byteschar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToChar(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Double) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-148">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-148">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-149">Retourne la valeur à virgule flottante double précision spécifiée sous la forme d'un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-149">Returns the specified double-precision floating point value as an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-150">Tableau d’octets de longueur 8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-150">An array of bytes with length 8.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-151">L’ordre des octets dans le tableau retourné par la <xref:System.BitConverter.GetBytes%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-151">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-152">L’exemple de code suivant convertit les modèles binaires des <xref:System.Double> valeurs <xref:System.Byte> les tableaux avec la `GetBytes` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-152">The following code example converts the bit patterns of <xref:System.Double> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytesdouble.cpp#4)]
 [!code-csharp[System.BitConverter.GetBytes.Others#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytesdouble.cs#4)]
 [!code-vb[System.BitConverter.GetBytes.Others#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytesdouble.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Short) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-153">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-153">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-154">Retourne la valeur de l'entier 16 bits signé spécifié sous la forme d'un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-154">Returns the specified 16-bit signed integer value as an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-155">Tableau d’octets de longueur 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-155">An array of bytes with length 2.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-156">L’ordre des octets dans le tableau retourné par la <xref:System.BitConverter.GetBytes%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-156">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-157">L’exemple de code suivant convertit les modèles binaires des <xref:System.Int16> valeurs <xref:System.Byte> les tableaux avec la `GetBytes` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-157">The following code example converts the bit patterns of <xref:System.Int16> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint16.cpp#3)]
 [!code-csharp[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint16.cs#3)]
 [!code-vb[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-158">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-158">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-159">Retourne la valeur de l’entier 32 bits signé spécifié sous la forme d’un tableau d’octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-159">Returns the specified 32-bit signed integer value as an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-160">Tableau d’octets de longueur 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-160">An array of bytes with length 4.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-161">L’ordre des octets dans le tableau retourné par la <xref:System.BitConverter.GetBytes%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-161">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-162">L’exemple de code suivant convertit les modèles binaires des <xref:System.Int32> valeurs <xref:System.Byte> les tableaux avec la `GetBytes` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-162">The following code example converts the bit patterns of <xref:System.Int32> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint32.cpp#2)]
 [!code-csharp[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint32.cs#2)]
 [!code-vb[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint32.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Long) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-163">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-163">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-164">Retourne la valeur de l’entier signé 64 bits spécifié en tant que tableau d’octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-164">Returns the specified 64-bit signed integer value as an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-165">Tableau d’octets de longueur 8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-165">An array of bytes with length 8.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-166">L’ordre des octets dans le tableau retourné par la <xref:System.BitConverter.GetBytes%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-166">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-167">L’exemple suivant appelle la <xref:System.BitConverter.GetBytes%2A> méthode pour convertir chaque élément dans un <xref:System.Int64> de tableau à un <xref:System.Byte> tableaux.</span><span class="sxs-lookup"><span data-stu-id="3e77c-167">The following example calls the <xref:System.BitConverter.GetBytes%2A> method to convert each element in an <xref:System.Int64> array to a <xref:System.Byte> arrays.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint64.cpp#1)]
 [!code-csharp[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint64.cs#1)]
 [!code-vb[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint64.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Single) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-168">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-168">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-169">Retourne la valeur à virgule flottante simple précision spécifiée sous la forme d'un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-169">Returns the specified single-precision floating point value as an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-170">Tableau d’octets de longueur 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-170">An array of bytes with length 4.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-171">L’ordre des octets dans le tableau retourné par la <xref:System.BitConverter.GetBytes%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-171">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-172">L’exemple de code suivant convertit les modèles binaires des <xref:System.Single> valeurs <xref:System.Byte> les tableaux avec la `GetBytes` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-172">The following code example converts the bit patterns of <xref:System.Single> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytessingle.cpp#3)]
 [!code-csharp[System.BitConverter.GetBytes.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytessingle.cs#3)]
 [!code-vb[System.BitConverter.GetBytes.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytessingle.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As UShort) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-173">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-173">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-174">Retourne la valeur de l'entier 16 bits non signé spécifié sous la forme d'un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-174">Returns the specified 16-bit unsigned integer value as an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-175">Tableau d’octets de longueur 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-175">An array of bytes with length 2.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-176">L’ordre des octets dans le tableau retourné par la <xref:System.BitConverter.GetBytes%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-176">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-177">L’exemple de code suivant convertit les modèles binaires des <xref:System.UInt16> valeurs <xref:System.Byte> les tableaux avec la `GetBytes` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-177">The following code example converts the bit patterns of <xref:System.UInt16> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint16.cpp#3)]
 [!code-csharp[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint16.cs#3)]
 [!code-vb[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As UInteger) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-178">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-178">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-179">Retourne la valeur de l’entier 32 bits non signé spécifié sous la forme d’un tableau d’octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-179">Returns the specified 32-bit unsigned integer value as an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-180">Tableau d’octets de longueur 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-180">An array of bytes with length 4.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-181">L’ordre des octets dans le tableau retourné par la <xref:System.BitConverter.GetBytes%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-181">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-182">L’exemple de code suivant convertit les modèles binaires des <xref:System.UInt32> valeurs <xref:System.Byte> les tableaux avec la `GetBytes` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-182">The following code example converts the bit patterns of <xref:System.UInt32> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint32.cpp#2)]
 [!code-csharp[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint32.cs#2)]
 [!code-vb[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint32.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As ULong) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-183">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-183">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-184">Retourne la valeur de l’entier 64 bits non signé spécifié sous la forme d’un tableau d’octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-184">Returns the specified 64-bit unsigned integer value as an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-185">Tableau d’octets de longueur 8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-185">An array of bytes with length 8.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-186">L’ordre des octets dans le tableau retourné par la <xref:System.BitConverter.GetBytes%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-186">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-187">L’exemple de code suivant convertit les modèles binaires des <xref:System.UInt64> valeurs <xref:System.Byte> les tableaux avec la `GetBytes` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-187">The following code example converts the bit patterns of <xref:System.UInt64> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint64.cpp#1)]
 [!code-csharp[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint64.cs#1)]
 [!code-vb[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint64.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Int32BitsToSingle">
      <MemberSignature Language="C#" Value="public static float Int32BitsToSingle (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Int32BitsToSingle(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.Int32BitsToSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Int32BitsToSingle (value As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Int32BitsToSingle(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Int64BitsToDouble">
      <MemberSignature Language="C#" Value="public static double Int64BitsToDouble (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Int64BitsToDouble(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.Int64BitsToDouble(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Int64BitsToDouble (value As Long) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Int64BitsToDouble(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-188">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-188">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-189">Convertit l'entier 64 bits signé spécifié en nombre à virgule flottante double précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-189">Converts the specified 64-bit signed integer to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-190">Nombre à virgule flottante double précision dont la valeur équivaut à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-190">A double-precision floating point number whose value is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-191">En règle générale, `value` est un entier qui est retourné par la <xref:System.BitConverter.DoubleToInt64Bits%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-191">Typically, `value` is an integer that is returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-192">L’exemple de code suivant convertit les modèles binaires de plusieurs <xref:System.Int64> valeurs <xref:System.Double> les valeurs de la `Int64BitsToDouble` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-192">The following code example converts the bit patterns of several <xref:System.Int64> values to <xref:System.Double> values with the `Int64BitsToDouble` method.</span></span>  
  
 [!code-cpp[System.BitConverter.DoubleInt64#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CPP/bitstodbl.cpp#1)]
 [!code-csharp[System.BitConverter.DoubleInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CS/bitstodbl.cs#1)]
 [!code-vb[System.BitConverter.DoubleInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/VB/bitstodbl.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.DoubleToInt64Bits(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IsLittleEndian">
      <MemberSignature Language="C#" Value="public static readonly bool IsLittleEndian;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsLittleEndian" />
      <MemberSignature Language="DocId" Value="F:System.BitConverter.IsLittleEndian" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsLittleEndian As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsLittleEndian;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e77c-193">Indique l’ordre d’octet (« endianness ») dans lequel les données sont stockées dans cette architecture d’ordinateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-193">Indicates the byte order ("endianness") in which data is stored in this computer architecture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-194">Différentes architectures informatiques stockent des données à l’aide de primauté des octets différents.</span><span class="sxs-lookup"><span data-stu-id="3e77c-194">Different computer architectures store data using different byte orders.</span></span> <span data-ttu-id="3e77c-195">« Big-endian » signifie l’octet le plus significatif de l’extrémité gauche d’un mot.</span><span class="sxs-lookup"><span data-stu-id="3e77c-195">"Big-endian" means the most significant byte is on the left end of a word.</span></span> <span data-ttu-id="3e77c-196">« Little-endian » signifie que l’octet le plus significatif est à l’extrémité droite d’un mot.</span><span class="sxs-lookup"><span data-stu-id="3e77c-196">"Little-endian" means the most significant byte is on the right end of a word.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3e77c-197">Vous pouvez convertir à partir de l’ordre d’octet du réseau, à l’ordre d’octet de l’ordinateur hôte, sans récupérer la valeur de la <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> champ en passant un entier 16 bits, 32 bits ou 64 bits à le <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-197">You can convert from network byte order to the byte order of the host computer without retrieving  the value of the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> field by passing a 16-bit, 32-bit, or 64 bit integer to the <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-198">L’exemple de code suivant illustre l’utilisation de la `IsLittleEndian` champ.</span><span class="sxs-lookup"><span data-stu-id="3e77c-198">The following code example illustrates the use of the `IsLittleEndian` field.</span></span>  
  
 [!code-cpp[System.BitConverter.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.Class/CPP/littleend.cpp#2)]
 [!code-csharp[System.BitConverter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/littleend.cs#2)]
 [!code-vb[System.BitConverter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/littleend.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleToInt32Bits">
      <MemberSignature Language="C#" Value="public static int SingleToInt32Bits (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SingleToInt32Bits(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.SingleToInt32Bits(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SingleToInt32Bits (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SingleToInt32Bits(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToBoolean(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Byte(), startIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-199">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-199">A byte array.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="3e77c-200">Index de l’octet compris dans <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-200">The index of the byte within <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-201">Retourne une valeur booléenne convertie à partir de l’octet, à une position spécifiée d’un tableau d’octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-201">Returns a Boolean value converted from the byte at a specified position in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-202">
            <see langword="true" /> si l'octet situé à <paramref name="startIndex" /> dans <paramref name="value" /> est différent de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-202">
              <see langword="true" /> if the byte at <paramref name="startIndex" /> in <paramref name="value" /> is nonzero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-203">Pour convertir un <xref:System.Boolean> valeur en sa représentation sous forme d’octets, appel le <xref:System.BitConverter.ToBoolean%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-203">To convert a <xref:System.Boolean> value to its byte representation, call the <xref:System.BitConverter.ToBoolean%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-204">L’exemple de code suivant convertit les éléments de <xref:System.Byte> tableaux <xref:System.Boolean> les valeurs de la `ToBoolean` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-204">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Boolean> values with the `ToBoolean` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batobool.cpp#1)]
 [!code-csharp[System.BitConverter.ToXXX.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batobool.cs#1)]
 [!code-vb[System.BitConverter.ToXXX.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batobool.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-205">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-205">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e77c-206">
            <paramref name="startIndex" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-206">
              <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToChar(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As ReadOnlySpan(Of Byte)) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToChar(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Byte(), startIndex As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-207">Tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-207">An array.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="3e77c-208">Position de départ dans <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-208">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-209">Retourne un caractère Unicode converti à partir de deux octets à une position spécifiée dans un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-209">Returns a Unicode character converted from two bytes at a specified position in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-210">Caractère composé de deux octets, à partir de <paramref name="startIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-210">A character formed by two bytes beginning at <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-211">Le <xref:System.BitConverter.ToChar%2A> méthode convertit les octets à partir de l’index `startIndex` à `startIndex` + 1 et un <xref:System.Char> valeur.</span><span class="sxs-lookup"><span data-stu-id="3e77c-211">The <xref:System.BitConverter.ToChar%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to a <xref:System.Char> value.</span></span> <span data-ttu-id="3e77c-212">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <xref:System.BitConverter> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="3e77c-212">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-213">L’exemple de code suivant convertit les éléments de <xref:System.Byte> tableaux <xref:System.Char> valeurs (caractères Unicode) avec le `ToChar` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-213">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Char> values (Unicode characters) with the `ToChar` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batochar.cpp#2)]
 [!code-csharp[System.BitConverter.ToXXX.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batochar.cs#2)]
 [!code-vb[System.BitConverter.ToXXX.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batochar.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e77c-214">
            <paramref name="startIndex" /> est égal à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-214">
              <paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-215">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-215">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e77c-216">
            <paramref name="startIndex" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-216">
              <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToDouble(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As ReadOnlySpan(Of Byte)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Byte(), startIndex As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-217">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-217">An array of bytes.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="3e77c-218">Position de départ dans <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-218">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-219">Retourne un nombre à virgule flottante double précision converti à partir de huit octets à une position spécifiée dans un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-219">Returns a double-precision floating point number converted from eight bytes at a specified position in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-220">Nombre à virgule flottante double précision composé de huit octets, à partir de <paramref name="startIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-220">A double precision floating point number formed by eight bytes beginning at <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-221">Le <xref:System.BitConverter.ToDouble%2A> méthode convertit les octets à partir de l’index `startIndex` à `startIndex` + 7 à un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="3e77c-221">The <xref:System.BitConverter.ToDouble%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.Double> value.</span></span> <span data-ttu-id="3e77c-222">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <xref:System.BitConverter> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="3e77c-222">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-223">L’exemple de code suivant convertit les éléments de <xref:System.Byte> tableaux <xref:System.Double> les valeurs de la `ToDouble` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-223">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Double> values with the `ToDouble` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batodouble.cpp#3)]
 [!code-csharp[System.BitConverter.ToXXX.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batodouble.cs#3)]
 [!code-vb[System.BitConverter.ToXXX.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batodouble.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e77c-224">
            <paramref name="startIndex" /> est supérieur ou égal à la longueur de <paramref name="value" /> moins 7, et inférieur ou égal à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-224">
              <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-225">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-225">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e77c-226">
            <paramref name="startIndex" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-226">
              <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt16(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As ReadOnlySpan(Of Byte)) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Byte(), startIndex As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-227">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-227">An array of bytes.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="3e77c-228">Position de départ dans <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-228">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-229">Retourne un entier 16 bits signé converti à partir de deux octets à une position spécifiée dans un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-229">Returns a 16-bit signed integer converted from two bytes at a specified position in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-230">Entier 16 bits signé composé de deux octets, à partir de <paramref name="startIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-230">A 16-bit signed integer formed by two bytes beginning at <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-231">Le <xref:System.BitConverter.ToInt16%2A> méthode convertit les octets à partir de l’index `startIndex` à `startIndex` + 1 et un <xref:System.Int16> valeur.</span><span class="sxs-lookup"><span data-stu-id="3e77c-231">The <xref:System.BitConverter.ToInt16%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to an <xref:System.Int16> value.</span></span> <span data-ttu-id="3e77c-232">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <xref:System.BitConverter> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="3e77c-232">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-233">L’exemple de code suivant convertit les éléments de <xref:System.Byte> tableaux <xref:System.Int16> les valeurs de la `ToInt16` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-233">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Int16> values with the `ToInt16` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CPP/batoint16.cpp#1)]
 [!code-csharp[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CS/batoint16.cs#1)]
 [!code-vb[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/VB/batoint16.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e77c-234">
            <paramref name="startIndex" /> est égal à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-234">
              <paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-235">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-235">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e77c-236">
            <paramref name="startIndex" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-236">
              <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Int16)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt32(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Byte(), startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-237">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-237">An array of bytes.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="3e77c-238">Position de départ dans <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-238">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-239">Retourne un entier 32 bits signé converti à partir de quatre octets à une position spécifiée dans un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-239">Returns a 32-bit signed integer converted from four bytes at a specified position in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-240">Entier 32 bits signé composé de quatre octets, à partir de <paramref name="startIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-240">A 32-bit signed integer formed by four bytes beginning at <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-241">Le <xref:System.BitConverter.ToInt32%2A> méthode convertit les octets à partir de l’index `startIndex` à `startIndex` + 3 pour un <xref:System.Int32> valeur.</span><span class="sxs-lookup"><span data-stu-id="3e77c-241">The <xref:System.BitConverter.ToInt32%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to an <xref:System.Int32> value.</span></span> <span data-ttu-id="3e77c-242">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de <xref:System.BitConverter>.</span><span class="sxs-lookup"><span data-stu-id="3e77c-242">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of <xref:System.BitConverter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-243">L’exemple suivant utilise le <xref:System.BitConverter.ToInt32%2A> méthode pour créer <xref:System.Int32> valeurs à partir d’un tableau de quatre octets et depuis les quatre octets supérieurs d’un tableau de huit octets.</span><span class="sxs-lookup"><span data-stu-id="3e77c-243">The following example uses the <xref:System.BitConverter.ToInt32%2A> method to create <xref:System.Int32> values from a four-byte array and from the upper four bytes of an eight-byte array.</span></span> <span data-ttu-id="3e77c-244">Elle utilise également le <xref:System.BitConverter.GetBytes%28System.Int32%29> et <xref:System.BitConverter.ToInt32%2A> méthodes pour effectuer un aller-retour un <xref:System.Int32> valeur.</span><span class="sxs-lookup"><span data-stu-id="3e77c-244">It also uses the <xref:System.BitConverter.GetBytes%28System.Int32%29> and <xref:System.BitConverter.ToInt32%2A> methods to round-trip an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[System.BitConverter.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.bitconverter.toint32/cs/toint32.cs#1)]
 [!code-vb[System.BitConverter.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.bitconverter.toint32/vb/toint32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e77c-245">
            <paramref name="startIndex" /> est supérieur ou égal à la longueur de <paramref name="value" /> moins 3, et inférieur ou égal à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-245">
              <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-246">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-246">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e77c-247">
            <paramref name="startIndex" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-247">
              <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt64(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As ReadOnlySpan(Of Byte)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Byte(), startIndex As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-248">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-248">An array of bytes.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="3e77c-249">Position de départ dans <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-249">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-250">Retourne un entier 64 bits signé converti à partir de huit octets à une position spécifiée dans un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-250">Returns a 64-bit signed integer converted from eight bytes at a specified position in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-251">Entier 64 bits signé composé de huit octets, à partir de <paramref name="startIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-251">A 64-bit signed integer formed by eight bytes beginning at <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-252">Le <xref:System.BitConverter.ToInt64%2A> méthode convertit les octets à partir de l’index `startIndex` à `startIndex` + 7 à un <xref:System.Int64> valeur.</span><span class="sxs-lookup"><span data-stu-id="3e77c-252">The <xref:System.BitConverter.ToInt64%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.Int64> value.</span></span> <span data-ttu-id="3e77c-253">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <xref:System.BitConverter> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="3e77c-253">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-254">L’exemple de code suivant convertit les éléments de <xref:System.Byte> tableaux <xref:System.Int64> les valeurs de la `ToInt64` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-254">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Int64> values with the `ToInt64` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CPP/batoint64.cpp#3)]
 [!code-csharp[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CS/batoint64.cs#3)]
 [!code-vb[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/VB/batoint64.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e77c-255">
            <paramref name="startIndex" /> est supérieur ou égal à la longueur de <paramref name="value" /> moins 7, et inférieur ou égal à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-255">
              <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-256">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-256">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e77c-257">
            <paramref name="startIndex" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-257">
              <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToSingle(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As ReadOnlySpan(Of Byte)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Byte(), startIndex As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-258">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-258">An array of bytes.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="3e77c-259">Position de départ dans <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-259">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-260">Retourne un nombre à virgule flottante simple précision converti à partir de quatre octets à une position spécifiée dans un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-260">Returns a single-precision floating point number converted from four bytes at a specified position in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-261">Nombre à virgule flottante simple précision composé de quatre octets, à partir de <paramref name="startIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-261">A single-precision floating point number formed by four bytes beginning at <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-262">Le <xref:System.BitConverter.ToSingle%2A> méthode convertit les octets à partir de l’index `startIndex` à `startIndex` + 3 pour un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="3e77c-262">The <xref:System.BitConverter.ToSingle%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to a <xref:System.Single> value.</span></span> <span data-ttu-id="3e77c-263">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de <xref:System.BitConverter>.</span><span class="sxs-lookup"><span data-stu-id="3e77c-263">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of <xref:System.BitConverter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-264">L’exemple de code suivant convertit les éléments de <xref:System.Byte> tableaux <xref:System.Single> les valeurs de la `ToSingle` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-264">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Single> values with the `ToSingle` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batosingle.cpp#4)]
 [!code-csharp[System.BitConverter.ToXXX.Others#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batosingle.cs#4)]
 [!code-vb[System.BitConverter.ToXXX.Others#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batosingle.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e77c-265">
            <paramref name="startIndex" /> est supérieur ou égal à la longueur de <paramref name="value" /> moins 3, et inférieur ou égal à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-265">
              <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-266">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-266">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e77c-267">
            <paramref name="startIndex" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-267">
              <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Single)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e77c-268">Convertit la valeur numérique de chaque élément contenu dans un tableau d'octets spécifié en sa représentation sous forme de chaîne hexadécimale équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-268">Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-269">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-269">An array of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-270">Convertit la valeur numérique de chaque élément contenu dans un tableau d'octets spécifié en sa représentation sous forme de chaîne hexadécimale équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-270">Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-271">Une chaîne qui contient des paires hexadécimales séparées par des tirets, où chaque paire représente l'élément correspondant dans <paramref name="value" /> ; par exemple, "7F-2C-4A-00".</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-271">A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in <paramref name="value" />; for example, "7F-2C-4A-00".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-272">Tous les éléments de `value` sont convertis.</span><span class="sxs-lookup"><span data-stu-id="3e77c-272">All the elements of `value` are converted.</span></span> <span data-ttu-id="3e77c-273">L’ordre des chaînes hexadécimales retourné par la <xref:System.BitConverter.ToString%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-273">The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-274">Le code suivant convertit d’exemple <xref:System.Byte> tableaux <xref:System.String> objets avec le `ToString` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-274">The following code example converts <xref:System.Byte> arrays to <xref:System.String> objects with the `ToString` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostring.cpp#1)]
 [!code-csharp[System.BitConverter.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostring.cs#1)]
 [!code-vb[System.BitConverter.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-275">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-275">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToString(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte(), startIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-276">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-276">An array of bytes.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="3e77c-277">Position de départ dans <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-277">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-278">Convertit la valeur numérique de chaque élément contenu dans un sous-tableau d'octets spécifié en sa représentation sous forme de chaîne hexadécimale équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-278">Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-279">Une chaîne qui contient des paires hexadécimales séparées par des tirets, où chaque paire représente l'élément correspondant dans un sous-tableau de <paramref name="value" /> ; par exemple, "7F-2C-4A-00".</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-279">A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <paramref name="value" />; for example, "7F-2C-4A-00".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-280">Les éléments à partir de la position du tableau `startIndex` à la fin du tableau sont convertis.</span><span class="sxs-lookup"><span data-stu-id="3e77c-280">The elements from array position `startIndex` to the end of the array are converted.</span></span> <span data-ttu-id="3e77c-281">L’ordre des chaînes hexadécimales retourné par la <xref:System.BitConverter.ToString%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-281">The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-282">L’exemple de code suivant convertit la partie d’un <xref:System.Byte> tableau en commençant à la position spécifiée `startIndex` à un <xref:System.String> avec la `ToString` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-282">The following code example converts the part of a <xref:System.Byte> array starting at the specified `startIndex` to a <xref:System.String> with the `ToString` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostringii.cpp#2)]
 [!code-csharp[System.BitConverter.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostringii.cs#2)]
 [!code-vb[System.BitConverter.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostringii.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-283">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-283">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e77c-284">
            <paramref name="startIndex" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-284">
              <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte[] value, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] value, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte(), startIndex As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ value, int startIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-285">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-285">An array of bytes.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="3e77c-286">Position de départ dans <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-286">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="3e77c-287">Nombre d’éléments de tableau dans <c>value</c> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-287">The number of array elements in <c>value</c> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-288">Convertit la valeur numérique de chaque élément contenu dans un sous-tableau d'octets spécifié en sa représentation sous forme de chaîne hexadécimale équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-288">Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-289">Une chaîne qui contient des paires hexadécimales séparées par des tirets, où chaque paire représente l'élément correspondant dans un sous-tableau de <paramref name="value" /> ; par exemple, "7F-2C-4A-00".</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-289">A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <paramref name="value" />; for example, "7F-2C-4A-00".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-290">Le `length` éléments à partir de la position du tableau `startIndex` sont convertis.</span><span class="sxs-lookup"><span data-stu-id="3e77c-290">The `length` elements from array position `startIndex` are converted.</span></span> <span data-ttu-id="3e77c-291">Si `length` est égal à zéro, la méthode retourne <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3e77c-291">If `length` equals zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3e77c-292">L’ordre des chaînes hexadécimales retourné par la <xref:System.BitConverter.ToString%2A> méthode varie selon que l’architecture de l’ordinateur est little-endian ou big-endian.</span><span class="sxs-lookup"><span data-stu-id="3e77c-292">The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-293">L’exemple suivant utilise le <xref:System.BitConverter.ToString%2A> méthode pour convertir la partie d’un tableau d’octets, en commençant à la position spécifiée `startIndex` et avec l’objet `length`, en une chaîne.</span><span class="sxs-lookup"><span data-stu-id="3e77c-293">The following example uses the <xref:System.BitConverter.ToString%2A> method to convert part of a byte array, starting at the specified `startIndex` and with the specified `length`, to a string.</span></span>  
  
 [!code-cpp[System.BitConverter.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostringii.cpp#2)]
 [!code-csharp[System.BitConverter.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostringii.cs#2)]
 [!code-vb[System.BitConverter.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostringii.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-294">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-294">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e77c-295">
            <paramref name="startIndex" /> ou <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-295">
              <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3e77c-296">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-296">-or-</span>
          </span>
          <span data-ttu-id="3e77c-297">
            <paramref name="startIndex" /> est supérieur à zéro et supérieur ou égal à la longueur de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-297">
              <paramref name="startIndex" /> is greater than zero and is greater than or equal to the length of <paramref name="value" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e77c-298">La combinaison de <paramref name="startIndex" /> et de <paramref name="length" /> ne spécifie pas de position dans <paramref name="value" /> ; en d'autres termes, le paramètre <paramref name="startIndex" /> est supérieur à la longueur de <paramref name="value" /> moins le paramètre <paramref name="length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-298">The combination of <paramref name="startIndex" /> and <paramref name="length" /> does not specify a position within <paramref name="value" />; that is, the <paramref name="startIndex" /> parameter is greater than the length of <paramref name="value" /> minus the <paramref name="length" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt16(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As ReadOnlySpan(Of Byte)) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Byte(), startIndex As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-299">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-299">The array of bytes.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="3e77c-300">Position de départ dans <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-300">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-301">Retourne un entier 16 bits non signé converti à partir de deux octets à une position spécifiée dans un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-301">Returns a 16-bit unsigned integer converted from two bytes at a specified position in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-302">Entier 16 bits non signé composé de deux octets, à partir de <paramref name="startIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-302">A 16-bit unsigned integer formed by two bytes beginning at <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-303">Le <xref:System.BitConverter.ToUInt16%2A> méthode convertit les octets à partir de l’index `startIndex` à `startIndex` + 1 et un <xref:System.UInt16> valeur.</span><span class="sxs-lookup"><span data-stu-id="3e77c-303">The <xref:System.BitConverter.ToUInt16%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="3e77c-304">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <xref:System.BitConverter> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="3e77c-304">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-305">L’exemple de code suivant convertit les éléments de <xref:System.Byte> tableaux <xref:System.UInt16> les valeurs de la `ToUInt16` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-305">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt16> values with the `ToUInt16` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint16.cpp#1)]
 [!code-csharp[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint16.cs#1)]
 [!code-vb[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint16.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e77c-306">
            <paramref name="startIndex" /> est égal à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-306">
              <paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-307">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-307">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e77c-308">
            <paramref name="startIndex" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-308">
              <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.UInt16)" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt32(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As ReadOnlySpan(Of Byte)) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Byte(), startIndex As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-309">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-309">An array of bytes.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="3e77c-310">Position de départ dans <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-310">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-311">Retourne un entier 32 bits non signé converti à partir de quatre octets à une position spécifiée dans un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-311">Returns a 32-bit unsigned integer converted from four bytes at a specified position in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-312">Entier 32 bits non signé composé de quatre octets, à partir de <paramref name="startIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-312">A 32-bit unsigned integer formed by four bytes beginning at <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-313">Le <xref:System.BitConverter.ToUInt32%2A> méthode convertit les octets à partir de l’index `startIndex` à `startIndex` + 3 pour un <xref:System.UInt32> valeur.</span><span class="sxs-lookup"><span data-stu-id="3e77c-313">The <xref:System.BitConverter.ToUInt32%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to a <xref:System.UInt32> value.</span></span> <span data-ttu-id="3e77c-314">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <xref:System.BitConverter> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="3e77c-314">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-315">L’exemple de code suivant convertit les éléments de <xref:System.Byte> tableaux <xref:System.UInt32> les valeurs de la `ToUInt32` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-315">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt32> values with the `ToUInt32` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint32.cpp#2)]
 [!code-csharp[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint32.cs#2)]
 [!code-vb[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint32.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e77c-316">
            <paramref name="startIndex" /> est supérieur ou égal à la longueur de <paramref name="value" /> moins 3, et inférieur ou égal à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-316">
              <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-317">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-317">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e77c-318">
            <paramref name="startIndex" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-318">
              <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.UInt32)" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt64(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As ReadOnlySpan(Of Byte)) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Byte(), startIndex As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e77c-319">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-319">An array of bytes.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="3e77c-320">Position de départ dans <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-320">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e77c-321">Retourne un entier 64 bits non signé converti à partir de huit octets à une position spécifiée dans un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-321">Returns a 64-bit unsigned integer converted from eight bytes at a specified position in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e77c-322">Entier 64 bits non signé composé de huit octets, à partir de <paramref name="startIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-322">A 64-bit unsigned integer formed by the eight bytes beginning at <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e77c-323">Le <xref:System.BitConverter.ToUInt64%2A> méthode convertit les octets à partir de l’index `startIndex` à `startIndex` + 7 à un <xref:System.UInt64> valeur.</span><span class="sxs-lookup"><span data-stu-id="3e77c-323">The <xref:System.BitConverter.ToUInt64%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="3e77c-324">L’ordre des octets dans le tableau doit refléter l’ordre primauté des octets de l’ordinateur architecture du système ; Pour plus d’informations, consultez la section Notes de la <xref:System.BitConverter> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="3e77c-324">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e77c-325">L’exemple de code suivant convertit les éléments de <xref:System.Byte> tableaux <xref:System.UInt64> les valeurs de la `ToUInt64` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e77c-325">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt64> values with the `ToUInt64` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint64.cpp#3)]
 [!code-csharp[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint64.cs#3)]
 [!code-vb[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint64.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e77c-326">
            <paramref name="startIndex" /> est supérieur ou égal à la longueur de <paramref name="value" /> moins 7, et inférieur ou égal à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-326">
              <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e77c-327">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-327">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e77c-328">
            <paramref name="startIndex" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="value" /> moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e77c-328">
              <paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.UInt64)" />
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>