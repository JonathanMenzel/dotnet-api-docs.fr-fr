<Type Name="EnvironmentVariableTarget" FullName="System.EnvironmentVariableTarget">
  <Metadata><Meta Name="ms.openlocfilehash" Value="35b8f0d5b4debc17bc81714e0a0ee7e3f6e08297" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48662921" /></Metadata><TypeSignature Language="C#" Value="public enum EnvironmentVariableTarget" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EnvironmentVariableTarget extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.EnvironmentVariableTarget" />
  <TypeSignature Language="VB.NET" Value="Public Enum EnvironmentVariableTarget" />
  <TypeSignature Language="C++ CLI" Value="public enum class EnvironmentVariableTarget" />
  <TypeSignature Language="F#" Value="type EnvironmentVariableTarget = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Spécifie l'emplacement où une variable d'environnement est stockée ou récupérée lors d'une opération de définition (set) ou d'obtention (get).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.EnvironmentVariableTarget> énumération est utilisée par certaines surcharges de la <xref:System.Environment.SetEnvironmentVariable%2A>, <xref:System.Environment.GetEnvironmentVariable%2A>, et <xref:System.Environment.GetEnvironmentVariables%2A> méthodes pour spécifier l’emplacement, ou cible, où le nom et la valeur de variable d’environnement est stockée ou récupérée.  
  
 La cible peut être un des trois emplacements : le bloc environnement associé le processus en cours, la clé de la Registre système d’exploitation Windows réservée pour les variables d’environnement associé à l’utilisateur actuel ou la clé de Registre réservée pour l’environnement variables associées à tous les utilisateurs sur l’ordinateur local.  
  
   
  
## Examples  
 L’exemple de code suivant montre le <xref:System.EnvironmentVariableTarget> énumération dans les méthodes pour créer, modifier et supprimer des variables d’environnement.  
  
 [!code-cpp[environment.getsetenvar#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.getsetenvar/CPP/source.cpp#1)]
 [!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs#1)]
 [!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Machine">
      <MemberSignature Language="C#" Value="Machine" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnvironmentVariableTarget Machine = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.EnvironmentVariableTarget.Machine" />
      <MemberSignature Language="VB.NET" Value="Machine" />
      <MemberSignature Language="C++ CLI" Value="Machine" />
      <MemberSignature Language="F#" Value="Machine = 2" Usage="System.EnvironmentVariableTarget.Machine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnvironmentVariableTarget</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>La variable d'environnement est stockée ou récupérée à partir de la clé <see langword="HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment" /> de la base de registres du système d'exploitation Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un utilisateur crée la variable d’environnement dans une opération ensembliste, le système d’exploitation stocke la variable d’environnement dans le Registre système, mais pas dans le processus en cours. Si n’importe quel utilisateur sur l’ordinateur local démarre un nouveau processus, le système d’exploitation copie la variable d’environnement à partir du Registre à ce processus.  
  
 Lorsque le processus se termine, le système d’exploitation détruit la variable d’environnement dans ce processus. Toutefois, la variable d’environnement dans le Registre persiste jusqu'à ce qu’un utilisateur supprime par programme ou au moyen d’un outil de système d’exploitation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="Process" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnvironmentVariableTarget Process = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.EnvironmentVariableTarget.Process" />
      <MemberSignature Language="VB.NET" Value="Process" />
      <MemberSignature Language="C++ CLI" Value="Process" />
      <MemberSignature Language="F#" Value="Process = 0" Usage="System.EnvironmentVariableTarget.Process" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnvironmentVariableTarget</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>La variable d'environnement est stockée ou récupérée à partir du bloc environnement associé au processus en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’utilisateur crée la variable d’environnement dans une opération ensembliste.  
  
 Lorsque le processus se termine, le système d’exploitation détruit la variable d’environnement dans ce processus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="User" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnvironmentVariableTarget User = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.EnvironmentVariableTarget.User" />
      <MemberSignature Language="VB.NET" Value="User" />
      <MemberSignature Language="C++ CLI" Value="User" />
      <MemberSignature Language="F#" Value="User = 1" Usage="System.EnvironmentVariableTarget.User" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnvironmentVariableTarget</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>La variable d'environnement est stockée ou récupérée à partir de la clé <see langword="HKEY_CURRENT_USER\Environment" /> de la base de registres du système d'exploitation Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque l’utilisateur crée la variable d’environnement dans une opération ensembliste, le système d’exploitation stocke la variable d’environnement dans le Registre système, mais pas dans le processus en cours. Si l’utilisateur démarre un nouveau processus, le système d’exploitation copie la variable d’environnement à partir du Registre à ce processus.  
  
 Lorsque le processus se termine, le système d’exploitation détruit la variable d’environnement dans ce processus. Toutefois, la variable d’environnement dans le Registre persiste jusqu'à ce que l’utilisateur supprime par programme ou au moyen d’un outil de système d’exploitation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>