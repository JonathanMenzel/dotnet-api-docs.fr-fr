<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InvalidOperationException.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57eef3c78c550cc2f6c9c891703b21cfbe65f49ec.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7eef3c78c550cc2f6c9c891703b21cfbe65f49ec</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.InvalidOperationException">
          <source>The exception that is thrown when a method call is invalid for the object's current state.</source>
          <target state="translated">Exception levée en cas d'appel de méthode non valide pour l'état actuel de l'objet.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is used in cases when the failure to invoke a method is caused by reasons other than invalid arguments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> est utilisé lorsque l’erreur pour appeler une méthode est provoquée par des raisons autres que des arguments non valides.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Typically, it is thrown when the state of an object cannot support the method call.</source>
          <target state="translated">En règle générale, elle est levée lorsque l’état d’un objet ne peut pas prendre en charge l’appel de méthode.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>For example, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown by methods such as:</source>
          <target state="translated">Par exemple, un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception est levée par les méthodes telles que :</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType&gt;</ph> if objects of a collection are modified after the enumerator is created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType&gt;</ph> Si les objets d’une collection sont modifiés après la création de l’énumérateur.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>For more information, see <bpt id="p1">[</bpt>Changing a collection while iterating it<ept id="p1">](#Iterating)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>modification d’une collection lors de l’itération il<ept id="p1">](#Iterating)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetString%2A?displayProperty=nameWithType&gt;</ph> if the resource set is closed before the method call is made.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetString%2A?displayProperty=nameWithType&gt;</ph> Si le jeu de ressources est fermé avant l’appel de méthode est effectué.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Add%2A?displayProperty=nameWithType&gt;</ph>, if the object or objects to be added would result in an incorrectly structured XML document.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Add%2A?displayProperty=nameWithType&gt;</ph>, si l’ou les objets à ajouter entraînerait un document XML structuré de manière incorrecte.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>A method that attempts to manipulate the UI from a thread that is not the main or UI thread.</source>
          <target state="translated">Une méthode qui tente de manipuler l’interface utilisateur à partir d’un thread qui n’est pas le principal ou le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Because the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception can be thrown in a wide variety of circumstances, it is important to read the exception message returned by the <ph id="ph2">&lt;xref:System.Exception.Message%2A&gt;</ph> property.</source>
          <target state="translated">Étant donné que la <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception peut être levée dans un large éventail de situations, il est important de lire le message d’exception retourné par la <ph id="ph2">&lt;xref:System.Exception.Message%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In this section:</source>
          <target state="translated">Dans cette section :</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Some common causes of InvalidOperationException exceptions<ept id="p1">](#Causes)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Certaines causes courantes des exceptions de l’exception InvalidOperationException<ept id="p1">](#Causes)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Updating a UI thread from a non-UI thread<ept id="p1">](#UI)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Mise à jour d’un thread d’interface utilisateur à partir d’un thread d’interface utilisateur<ept id="p1">](#UI)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Changing a collection while iterating it<ept id="p1">](#Iterating)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Modification d’une collection lors de l’itération il<ept id="p1">](#Iterating)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Sorting an array or collection whose objects cannot be compared<ept id="p1">](#Sorting)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tri d’un tableau ou une collection dont les objets ne peuvent pas être comparées.<ept id="p1">](#Sorting)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Casting a Nullable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph> that is null to its underlying type<ept id="p1">](#Nullable)</ept><ph id="ph3"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Conversion d’un Nullable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph> qui a la valeur null en son type sous-jacent<ept id="p1">](#Nullable)</ept><ph id="ph3"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Calling a System.Linq.Enumerable method on an empty collection<ept id="p1">](#Empty)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Appel d’une méthode System.Linq.Enumerable sur une collection vide<ept id="p1">](#Empty)</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Calling Enumerable.Single or Enumerable.SingleOrDefault on a sequence without one element<ept id="p1">](#Single)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Appel de Enumerable.Single ou Enumerable.SingleOrDefault sur une séquence sans un élément<ept id="p1">](#Single)</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Dynamic cross-application domain field access<ept id="p1">](#Emit)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Accès au champ de domaine d’applications croisées dynamiques<ept id="p1">](#Emit)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Throwing an InvalidOperationException exception<ept id="p1">](#Throwing)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Lever une exception InvalidOperationException<ept id="p1">](#Throwing)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">[</bpt>Miscellaneous information<ept id="p1">](#Misc)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Informations diverses<ept id="p1">](#Misc)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Some common causes of InvalidOperationException exceptions</source>
          <target state="translated">Certaines causes courantes des exceptions de l’exception InvalidOperationException</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following sections show how some common cases in which in <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown in an app.</source>
          <target state="translated">Les sections suivantes montrent comment courantes cas dans lequel dans <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception est levée dans une application.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>How you handle the issue depends on the specific situation.</source>
          <target state="translated">Manière dont vous gérez le problème dépend de la situation spécifique.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Most commonly, however, the exception results from developer error, and the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception can be anticipated and avoided.</source>
          <target state="translated">En règle générale, toutefois, l’exception résultant de l’erreur de développement et le <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception peut être anticipée et évitée.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Updating a UI thread from a non-UI thread</source>
          <target state="translated">Mise à jour d’un thread d’interface utilisateur à partir d’un thread d’interface utilisateur</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Often, worker threads are used to perform some background work that involves gathering data to be displayed in an application's user interface.</source>
          <target state="translated">Souvent, les threads de travail sont utilisés pour exécuter des tâches en arrière-plan qui implique la collecte de données à afficher dans l’interface utilisateur d’une application.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>However.</source>
          <target state="translated">Toutefois.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>most GUI (graphical user interface) application frameworks for the .NET Framework, such as Windows Forms and Windows Presentation Foundation (WPF),  let you access GUI objects only from the thread that creates and manages the UI (the Main or UI thread).</source>
          <target state="translated">la plupart des infrastructures d’application (l’interface graphique utilisateur) pour le .NET Framework, tels que Windows Forms et Windows Presentation Foundation (WPF) vous permettent d’accéder aux objets de l’interface graphique utilisateur uniquement à partir du thread qui crée et gère l’interface utilisateur (le thread principal ou de l’interface utilisateur).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when you try to access a UI element from a thread other than the UI thread.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque vous essayez d’accéder à un élément d’interface utilisateur à partir d’un thread autre que le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The text of the exception message is shown in the following table.</source>
          <target state="translated">Le texte du message d’exception est indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Application Type</source>
          <target state="translated">Type d'application</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Message</source>
          <target state="translated">Message</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>WPF app</source>
          <target state="translated">Application WPF</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>The calling thread cannot access this object because a different thread owns it.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Le thread appelant ne peut pas accéder à cet objet, car un autre thread en est propriétaire.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>UWP app</source>
          <target state="translated">Application UWP</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>The application called an interface that was marshalled for a different thread.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>L’application a appelé une interface qui était maintenue en ordre pour un thread différent.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Windows Forms app</source>
          <target state="translated">Application Windows Forms</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Cross-thread operation not valid: Control 'TextBox1' accessed from a thread other than the thread it was created on.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Opération inter-threads non valide : le contrôle 'TextBox1' accédé à partir d’un thread autre que le thread de création.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>UI frameworks for the .NET Framework implement a <bpt id="p1">*</bpt>dispatcher<ept id="p1">*</ept> pattern that includes a method to check whether a call to a member of a UI element is being executed on the UI thread, and other methods to schedule the call on the UI thread:</source>
          <target state="translated">Les infrastructures d’interface utilisateur pour le .NET Framework implémentent un <bpt id="p1">*</bpt>répartiteur<ept id="p1">*</ept> modèle qui inclut une méthode pour vérifier si un appel à un membre d’un élément d’interface utilisateur est en cours d’exécution sur le thread d’interface utilisateur et autres méthodes permettant de planifier l’appel sur le thread d’interface utilisateur :</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In WPF apps, call the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A?displayProperty=nameWithType&gt;</ph> method to determine if a method is running on a non-UI thread.</source>
          <target state="translated">Dans les applications WPF, appelez le <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A?displayProperty=nameWithType&gt;</ph> méthode pour déterminer si une méthode est en cours d’exécution sur un thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>It returns <ph id="ph1">`true`</ph> if the method is running on the UI thread and <ph id="ph2">`false`</ph> otherwise.</source>
          <target state="translated">Elle retourne <ph id="ph1">`true`</ph> si la méthode s’exécute sur le thread d’interface utilisateur et <ph id="ph2">`false`</ph> dans le cas contraire.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Call one of the overloads of the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=nameWithType&gt;</ph> method to schedule the call on the UI thread.</source>
          <target state="translated">Appelez l’une des surcharges de la <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=nameWithType&gt;</ph> méthode permettant de planifier l’appel sur le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In UWP apps, call the <bpt id="p1">[</bpt>CoreDispatcher.HasThreadAccess<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.hasthreadaccess.aspx)</ept> method to determine if a method is running on a non-UI thread.</source>
          <target state="translated">Dans les applications UWP, appelez le <bpt id="p1">[</bpt>CoreDispatcher.HasThreadAccess<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.hasthreadaccess.aspx)</ept> méthode pour déterminer si une méthode est en cours d’exécution sur un thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Call the  <bpt id="p1">[</bpt>CoreDispatcher.RunAsync<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.runasync.aspx)</ept> method to execute a delegate that updates the UI thread.</source>
          <target state="translated">Appelez le <bpt id="p1">[</bpt>CoreDispatcher.RunAsync<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.runasync.aspx)</ept> méthode à exécuter un délégué qui met à jour le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Use the</source>
          <target state="translated">Utilisez la commande</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In Windows Forms apps, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A?displayProperty=nameWithType&gt;</ph> property to determine if a method is running on a non-UI thread.</source>
          <target state="translated">Dans les applications Windows Forms, utilisez le <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A?displayProperty=nameWithType&gt;</ph> propriété pour déterminer si une méthode est en cours d’exécution sur un thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Call one of the overloads of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A?displayProperty=nameWithType&gt;</ph> method to execute a delegate that updates the UI thread.</source>
          <target state="translated">Appelez l’une des surcharges de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A?displayProperty=nameWithType&gt;</ph> méthode à exécuter un délégué qui met à jour le thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following examples illustrate the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception that is thrown when you attempt to update a UI element from a thread other than the thread that created it.</source>
          <target state="translated">Les exemples suivants illustrent la <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception qui est levée lorsque vous tentez de mettre à jour un élément d’interface utilisateur à partir d’un thread autre que le thread qui l’a créée.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Each example requires that you create two controls:</source>
          <target state="translated">Chaque exemple suppose que vous créez deux contrôles :</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>A text box control named <ph id="ph1">`textBox1`</ph>.</source>
          <target state="translated">Contrôle de zone de texte nommé <ph id="ph1">`textBox1`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In a Windows Forms app, you should set its <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Dans une application Windows Forms, vous devez définir son <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> propriété <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>A button  control named <ph id="ph1">`threadExampleBtn`</ph>.</source>
          <target state="translated">Un contrôle bouton nommé <ph id="ph1">`threadExampleBtn`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The example provides a handler, <ph id="ph1">`ThreadsExampleBtn_Click`</ph>, for the button's <ph id="ph2">`Click`</ph> event.</source>
          <target state="translated">L’exemple fournit un gestionnaire, <ph id="ph1">`ThreadsExampleBtn_Click`</ph>, pour du bouton <ph id="ph2">`Click`</ph> événements.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In each case, the <ph id="ph1">`threadExampleBtn_Click`</ph> event handler calls the <ph id="ph2">`DoSomeWork`</ph> method twice.</source>
          <target state="translated">Dans chaque cas, le <ph id="ph1">`threadExampleBtn_Click`</ph> Gestionnaire d’événements appelle la <ph id="ph2">`DoSomeWork`</ph> méthode deux fois.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The first call runs synchronously and succeeds.</source>
          <target state="translated">Le premier appel s’exécute de façon synchrone et réussit.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>But the second call, because it runs asynchronously on a thread pool thread, attempts to update the UI from a non-UI thread.</source>
          <target state="translated">Mais le deuxième appel, car il s’exécute en mode asynchrone sur un thread de pool de threads, tente de mettre à jour l’interface utilisateur à partir d’un thread d’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>This results in a <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Cela entraîne une <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>WPF and UWP apps</source>
          <target state="translated">Applications WPF et UWP</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following version of the <ph id="ph1">`DoSomeWork`</ph> method eliminates the exception in a WPF app.</source>
          <target state="translated">La version suivante de la <ph id="ph1">`DoSomeWork`</ph> méthode élimine l’exception dans une application WPF.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following version of the <ph id="ph1">`DoSomeWork`</ph> method eliminates the exception in a UWP app.</source>
          <target state="translated">La version suivante de la <ph id="ph1">`DoSomeWork`</ph> méthode élimine l’exception dans une application UWP.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Windows Forms apps</source>
          <target state="translated">Applications Windows Forms</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following version of the <ph id="ph1">`DoSomeWork`</ph> method eliminates the exception in a Windows Forms app.</source>
          <target state="translated">La version suivante de la <ph id="ph1">`DoSomeWork`</ph> méthode élimine l’exception dans une application Windows Forms.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Changing a collection while iterating it</source>
          <target state="translated">Modification d’une collection lors de l’itération il</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">`foreach`</ph> statement in C# or <ph id="ph2">`For Each`</ph> statement in Visual Basic is used to iterate the members of a collection and to read or modify its individual elements.</source>
          <target state="translated">Le <ph id="ph1">`foreach`</ph> instruction en c# ou <ph id="ph2">`For Each`</ph> instruction en Visual Basic est utilisée pour itérer au sein des membres d’une collection et pour lire ou modifier ses éléments individuels.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>However, it can't be used to add or remove items from the collection.</source>
          <target state="translated">Toutefois, il ne peut pas être utilisé pour ajouter ou supprimer des éléments de la collection.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Doing this throws an  <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception with a message that is similar to, "<bpt id="p1">**</bpt>Collection was modified; enumeration operation may not execute.<ept id="p1">**</ept>"</source>
          <target state="translated">Cela lèverait une <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception avec un message semblable à «<bpt id="p1">**</bpt>Collection a été modifiée ; l’opération d’énumération ne peut pas s’exécuter. <ept id="p1">**</ept>"</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example iterates a collection of integers attempts to add the square of each integer to the collection.</source>
          <target state="translated">L’exemple suivant parcourt qu'une collection d’entiers tente d’ajouter le carré de chaque entier à la collection.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The example throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> with the first call to the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’exemple lève une <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> avec le premier appel à la <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can eliminate the exception in one of two ways, depending on your application logic:</source>
          <target state="translated">Vous pouvez éliminer l’exception de deux manières, selon votre logique d’application :</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If elements must be added to the collection while iterating it, you can iterate it by index using the <ph id="ph1">`for`</ph> statement instead of <ph id="ph2">`foreach`</ph> or <ph id="ph3">`For Each`</ph>.</source>
          <target state="translated">Si les éléments doivent être ajoutés à la collection lors de l’itération il, vous pouvez le parcourir en index utilisant le <ph id="ph1">`for`</ph> instruction au lieu de <ph id="ph2">`foreach`</ph> ou <ph id="ph3">`For Each`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses the for statement to add the square of numbers in the collection to the collection.</source>
          <target state="translated">L’exemple suivant utilise la pour l’instruction ajouter le carré des nombres dans la collection à la collection.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Note that you must establish the number of iterations before iterating the collection either by using a counter inside the loop that will exit the loop appropraitely, by iterating backward, from <ph id="ph1">`Count`</ph> - 1 to 0, or, as the example does, by assigning the number of elements in the array to a variable and using it to establish the upper bound of the loop.</source>
          <target state="translated">Notez que vous devez établir le nombre d’itérations avant l’itération de la collection à l’aide d’un compteur à l’intérieur de la boucle qui se termine la boucle appropraitely, en effectuant une itération vers l’arrière, à partir de <ph id="ph1">`Count`</ph> - 1 à 0, ou, comme dans l’exemple, en assignant le nombre d’éléments dans le tableau à une variable et l’utiliser pour établir la limite supérieure de la boucle.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Otherwise, if an element is added to the collection on every iteration, an endless loop results.</source>
          <target state="translated">Sinon, si un élément est ajouté à la collection à chaque itération, une boucle sans fin les résultats.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If it is not necessary to add elements to the collection while iterating it, you can store the elements to be added in a temporary collection that you add when iterating the collection has finished.</source>
          <target state="translated">Si elle n’est pas nécessaire d’ajouter des éléments à la collection lors de l’itération elle, vous pouvez stocker les éléments à ajouter dans un regroupement temporaire que vous ajoutez lors de l’itération de la collection est terminé.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses this approach to add the square of numbers in a collection to a temporary collection, and then to combine the collections into a single array object.</source>
          <target state="translated">L’exemple suivant utilise cette approche pour ajouter le carré des nombres d’une collection dans un regroupement temporaire, puis pour combiner les regroupements dans un objet tableau unique.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Sorting an array or collection whose objects cannot be compared</source>
          <target state="translated">Tri d’un tableau ou une collection dont les objets ne peuvent pas être comparées.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>General-purpose sorting methods, such as the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> method, usually require that at least one of the objects to be sorted implement the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> or the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Généraux tels que les méthodes, de tri le <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> (méthode) ou le <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> (méthode), nécessitent généralement qu’au moins un des objets à trier implémenter le <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> ou <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If not, the collection or array cannot be sorted, and the method throws an  <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Si la collection ou un tableau ne peuvent pas être trié pas, et que la méthode lève un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example defines a <ph id="ph1">`Person`</ph> class, stores two <ph id="ph2">`Person`</ph> objects in a generic <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object, and attempts to sort them.</source>
          <target state="translated">L’exemple suivant définit un <ph id="ph1">`Person`</ph> classe stocke deux <ph id="ph2">`Person`</ph> objets dans un type générique <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> objet et tente de les trier.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>As the output from the example shows, the call to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Comme la sortie de l’exemple, l’appel à la <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> méthode lève une exception une <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can eliminate the exception in any of three ways:</source>
          <target state="translated">Vous pouvez éliminer l’exception dans une des trois manières :</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If you can own the type that you are trying to sort (that is, if you control its source code), you can modify it to implement the <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> or the <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Si vous pouvez posséder le type que vous essayez de trier (autrement dit, si vous contrôlez le code source), vous pouvez le modifier pour implémenter le <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> ou <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>This requires that you implement either the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">Cela requiert l’implémentation d’un le <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Adding an interface implementation to an existing type is not a breaking change.</source>
          <target state="translated">Ajout d’une implémentation d’interface à un type existant n’est pas une modification avec rupture.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses this approach to provide an <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> implementation  for the <ph id="ph2">`Person`</ph> class.</source>
          <target state="translated">L’exemple suivant utilise cette approche pour fournir un <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> implémentation pour la <ph id="ph2">`Person`</ph> classe.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can still call the collection or array's general sorting method and, as the output from the example shows, the collection sorts successfully.</source>
          <target state="translated">Vous pouvez toujours appeler la méthode de tri générales du tableau ou de la collection et, comme le montre la sortie de l’exemple, la collection trie correctement.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If you cannot modify the source code for the type you are trying to sort, you can define a special-purpose sorting class that implements the <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface.</source>
          <target state="translated">Si vous ne pouvez pas modifier le code source pour le type que vous voulez trier, vous pouvez définir une classe de tri à usage spécial qui implémente le <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can call an overload of the <ph id="ph1">`Sort`</ph> method that includes an  <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> parameter.</source>
          <target state="translated">Vous pouvez appeler une surcharge de la <ph id="ph1">`Sort`</ph> méthode inclut un <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>This approach is especially useful if you want to develop a specialized sorting class that can sort objects based on multiple criteria.</source>
          <target state="translated">Cette approche est particulièrement utile si vous souhaitez développer une classe spécialisée de tri que vous pouvez trier les objets en fonction de plusieurs critères.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses the approach by developing a custom <ph id="ph1">`PersonComparer`</ph> class that is used to sort <ph id="ph2">`Person`</ph> collections.</source>
          <target state="translated">L’exemple suivant utilise l’approche en développant une personnalisée <ph id="ph1">`PersonComparer`</ph> classe qui est utilisée pour trier <ph id="ph2">`Person`</ph> collections.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>It then passes an instance of this class to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Il passe ensuite une instance de cette classe pour le <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If you cannot modify the source code for the type you are trying to sort, you can create a  <ph id="ph1">&lt;xref:System.Comparison%601&gt;</ph> delegate to perform the sorting.</source>
          <target state="translated">Si vous ne pouvez pas modifier le code source pour le type que vous voulez trier, vous pouvez créer un <ph id="ph1">&lt;xref:System.Comparison%601&gt;</ph> délégué pour effectuer le tri.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The delegate signature is</source>
          <target state="translated">La signature du délégué est</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses the approach by defining a  <ph id="ph1">`PersonComparison`</ph> method that matches the  <ph id="ph2">&lt;xref:System.Comparison%601&gt;</ph> delegate signature.</source>
          <target state="translated">L’exemple suivant utilise l’approche en définissant un <ph id="ph1">`PersonComparison`</ph> méthode qui correspond à la <ph id="ph2">&lt;xref:System.Comparison%601&gt;</ph> signature du délégué.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>It then passes this delegate to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Il passe ensuite ce délégué à la <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Casting a Nullable<ph id="ph1">\&lt;</ph>T&gt; that is null to its underlying type</source>
          <target state="translated">Conversion d’un Nullable<ph id="ph1">\&lt;</ph>T &gt; qui a la valeur null en son type sous-jacent</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Attempting to cast a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> value that is <ph id="ph2">`null`</ph> to its underlying type throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> exception  and displays the error message, "<bpt id="p1">**</bpt>Nullable object must have a value.<ept id="p1">**</ept></source>
          <target state="translated">Tentative de cast un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> valeur qui est <ph id="ph2">`null`</ph> en son type sous-jacent lève une <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> exception et affiche le message d’erreur «<bpt id="p1">**</bpt>objet Nullable doit avoir une valeur.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception  when it attempts to iterate an array that includes a <ph id="ph2">`Nullable(Of Integer)`</ph> value.</source>
          <target state="translated">L’exemple suivant lève une <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception lorsqu’il tente d’effectuer une itération d’un tableau qui inclut un <ph id="ph2">`Nullable(Of Integer)`</ph> valeur.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>To prevent the exception:</source>
          <target state="translated">Pour empêcher l’exception :</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Use the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A?displayProperty=nameWithType&gt;</ph> property to select only those elements that are not <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A?displayProperty=nameWithType&gt;</ph> propriété à sélectionner uniquement les éléments qui ne sont pas <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Call one of the <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A?displayProperty=nameWithType&gt;</ph> overloads to provide a default value for a <ph id="ph2">`null`</ph> value.</source>
          <target state="translated">Appelez l’une de le <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A?displayProperty=nameWithType&gt;</ph> surcharges pour fournir une valeur par défaut pour un <ph id="ph2">`null`</ph> valeur.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example does both to avoid the  <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">L’exemple suivant effectue ces deux tâches afin d’éviter le <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Calling a System.Linq.Enumerable method on an empty collection</source>
          <target state="translated">Appel d’une méthode System.Linq.Enumerable sur une collection vide</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.Aggregate%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Enumerable.Max%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Linq.Enumerable.Min%2A?displayProperty=nameWithType&gt;</ph>,  <ph id="ph7">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph8">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> methods perform operations on a sequence and return a single result.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Linq.Enumerable.Aggregate%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Enumerable.Max%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Linq.Enumerable.Min%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph7">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph>, et <ph id="ph8">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> méthodes effectuent des opérations sur une séquence et retourner un résultat unique.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Some overloads of these methods throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception when the sequence is empty, while other overloads return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Certaines surcharges de ces méthodes lèvent une <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception lorsque la séquence est vide, alors que d’autres surcharges retournent <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> method also throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception when the sequence contains more than one element.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> méthode lève également une <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception lorsque la séquence contient plusieurs éléments.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Most of the methods that throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception are overloads.</source>
          <target state="translated">La plupart des méthodes qui lèvent une <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception sont des surcharges.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Be sure that you understand the behavior of the overload that you choose.</source>
          <target state="translated">Assurez-vous que vous comprenez le comportement de la surcharge que vous choisissez.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following table lists the exception messages from the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception objects thrown by calls to some <ph id="ph2">&lt;xref:System.Linq.Enumerable?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Le tableau suivant répertorie les messages d’exception à partir de la <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> objets d’exception levées par les appels à certaines <ph id="ph2">&lt;xref:System.Linq.Enumerable?displayProperty=nameWithType&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Method</source>
          <target state="translated">Méthode</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Message</source>
          <target state="translated">Message</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains no elements<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Séquence ne contient aucun élément<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains no matching element<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>La séquence ne contient aucun élément correspondant<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains more than one matching element<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Séquence contient plusieurs éléments correspondants<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>How you eliminate or handle the exception depends on your application's assumptions and on the particular method you call.</source>
          <target state="translated">Comment supprimer ou gérer l’exception dépend les hypothèses de votre application et de la méthode particulière, que vous appelez.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>When you deliberately call one of these methods without checking for an empty sequence, you are assuming that the sequence is not empty, and that an empty sequence is an unexpected occurrence.</source>
          <target state="translated">Lorsque vous appelez délibérément une de ces méthodes sans rechercher la présence d’une séquence vide, vous supposez que la séquence n’est pas vide et qu’une séquence vide est un événement inattendu.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In this case, catching or rethrowing the exception is appropriate .</source>
          <target state="translated">Dans ce cas, l’interception ou de nouveau l’exception est appropriée.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If your failure to check for an empty sequence was inadvertent, you can  call one of the overloads of the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType&gt;</ph> overload to determine whether a sequence contains any elements.</source>
          <target state="translated">Si votre échec à vérifier pour une séquence vide était accidentelle, vous pouvez appeler une des surcharges de la <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType&gt;</ph> surcharge pour déterminer si une séquence contient des éléments.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Calling the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> method before generating a sequence can improve performance if the data to be processed might contain a large number of elements or if operation that generates the sequence is expensive.</source>
          <target state="translated">Appel de la <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> avant de générer une séquence peut améliorer les performances si les données de traitement peuvent contenir un grand nombre d’éléments ou si l’opération qui génère la séquence est coûteuse.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If you've called a method such as <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph>, you can substitute an alternate method, such as <ph id="ph4">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Enumerable.LastOrDefault%2A?displayProperty=nameWithType&gt;</ph>, or  <ph id="ph6">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph>, that returns a default value instead of a member of the sequence.</source>
          <target state="translated">Si vous avez appelé une méthode comme <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph>, vous pouvez remplacer par une autre méthode, telles que <ph id="ph4">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Enumerable.LastOrDefault%2A?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph6">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph>, qui retourne une valeur par défaut au lieu d’un membre de la séquence.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The examples provide additional detail.</source>
          <target state="translated">Les exemples fournissent des détails supplémentaires.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType&gt;</ph> method to compute the average of a sequence whose values are greater than 4.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType&gt;</ph> méthode pour calculer la moyenne d’une séquence dont les valeurs sont supérieures à 4.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Since no values from the original array exceed 4, no values are included in the sequence, and the method throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Dans la mesure où aucune valeur à partir du tableau d’origine ne dépasse 4, aucune valeur n’est inclus dans la séquence de la méthode lève un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The exception can be eliminated by calling the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A&gt;</ph> method to determine whether the sequence contains any elements before calling the method that processes the sequence, as the following example shows.</source>
          <target state="translated">L’exception peut être éliminée en appelant le <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A&gt;</ph> méthode pour déterminer si la séquence contient des éléments avant d’appeler la méthode qui traite la séquence, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> method returns the first item in a sequence or the first element in a sequence that satisfies a specified condition.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> méthode retourne le premier élément dans une séquence ou le premier élément dans une séquence qui satisfait à une condition spécifiée.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If the sequence is empty and therefore does not have a first element, it throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Si la séquence est vide et n’a donc pas un premier élément, elle lève une <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception because the dbQueryResults array doesn't contain an element greater than 4.</source>
          <target state="translated">Dans l’exemple suivant, la <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> méthode lève une exception une <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception, car le tableau de dbQueryResults ne contient aucun élément supérieur à 4.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can call the <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph> method instead of <ph id="ph2">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> to return a specified or default value.</source>
          <target state="translated">Vous pouvez appeler la <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph> méthode au lieu de <ph id="ph2">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> pour retourner un spécifié ou la valeur par défaut.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If the method does not find a first element in the sequence, it returns  the default value for that data type.</source>
          <target state="translated">Si la méthode ne trouve pas un premier élément dans la séquence, il retourne la valeur par défaut pour ce type de données.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The default value is <ph id="ph1">`null`</ph> for a reference type, zero for a numeric data type, and <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> type.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">`null`</ph> pour un type référence, zéro pour un type de données numérique et <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph> pour la <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> type.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Interpreting the value returned by the <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph> method is often complicated by the fact that the default value of the type can be a valid value in the sequence.</source>
          <target state="translated">Interprétation de la valeur retournée par la <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType&gt;</ph> méthode est souvent compliquée par le fait que la valeur par défaut du type peut être une valeur valide dans la séquence.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In this case, you an call the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType&gt;</ph> method to determine whether the sequence has valid members before calling the <ph id="ph2">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Dans ce cas, vous un appel de la <ph id="ph1">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType&gt;</ph> méthode pour déterminer si la séquence possède des membres valides avant d’appeler le <ph id="ph2">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example calls the  <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> method to prevent the <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception thrown in the previous example.</source>
          <target state="translated">L’exemple suivant appelle la <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType&gt;</ph> pour empêcher le <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception levée dans l’exemple précédent.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Calling Enumerable.Single or Enumerable.SingleOrDefault on a sequence without one element</source>
          <target state="translated">Appel de Enumerable.Single ou Enumerable.SingleOrDefault sur une séquence sans un élément</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> method returns the only element of a sequence, or the only element of a sequence that meets a specified condition.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> méthode retourne l’élément unique d’une séquence, ou le seul élément d’une séquence qui répond à une condition spécifiée.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If there are no elements in the sequence, or if there is more than one element , the method throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Si aucun élément dans la séquence, ou s’il existe plusieurs éléments, la méthode lève un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You can use the <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> method to return a default value instead of throwing an exception when the sequence contains no elements.</source>
          <target state="translated">Vous pouvez utiliser la <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> méthode pour retourner une valeur par défaut au lieu de lever une exception lorsque la séquence ne contient aucun élément.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>However, the <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> method still throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception  when the sequence contains more than one element.</source>
          <target state="translated">Toutefois, le <ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> méthode lève toujours une <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception lorsque la séquence contient plusieurs éléments.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following table lists the exception messages from the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception objects thrown by calls to the <ph id="ph2">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Le tableau suivant répertorie les messages d’exception à partir de la <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> objets d’exception levées par les appels à la <ph id="ph2">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> et <ph id="ph3">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Method</source>
          <target state="translated">Méthode</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Message</source>
          <target state="translated">Message</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains no matching element<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>La séquence ne contient aucun élément correspondant<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><bpt id="p1">**</bpt>Sequence contains more than one matching element<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Séquence contient plusieurs éléments correspondants<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>In the following example, the call to the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception because the sequence doesn't have an element greater than 4.</source>
          <target state="translated">Dans l’exemple suivant, l’appel à la <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> méthode lève une exception une <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception, car la séquence ne contient aucun élément supérieur à 4.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The following example attempts to prevent the <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception thrown when a sequence is empty by instead calling the <ph id="ph2">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant tente d’empêcher la <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception levée quand une séquence vide en appelant à la place la <ph id="ph2">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>However, because this sequence returns multiple elements whose value is greater than 2, it also throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">Toutefois, étant donné que cette séquence retourne plusieurs éléments dont la valeur est supérieure à 2, elle lève également une <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Calling the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> method assumes that either a sequence or the sequence that meets specified criteria contains only one element.</source>
          <target state="translated">Appel de la <ph id="ph1">&lt;xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType&gt;</ph> méthode part du principe qu’une séquence ou la séquence qui répond aux critères spécifiés contient un seul élément.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> assumes a sequence with zero or one result, but no more.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType&gt;</ph> suppose une séquence de zéro ou un résultat, mais pas plus.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If this assumption is a deliberate one on your part and these conditions are not met, rethrowing or catching the resulting <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is appropriate.</source>
          <target state="translated">Si cette hypothèse est délibérée de votre part et que ces conditions ne sont pas remplies, nouvelle levée ou l’interception résultant <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> est appropriée.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Otherwise, or if you expect that invalid conditions will occur with some frequency, you should consider using some other <ph id="ph1">&lt;xref:System.Linq.Enumerable&gt;</ph> method, such as <ph id="ph2">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Linq.Enumerable.Where%2A&gt;</ph>.</source>
          <target state="translated">Dans le cas contraire, ou si vous prévoyez que les conditions non valides seront produisent à une certaine fréquence, vous devez envisager d’utiliser un autre <ph id="ph1">&lt;xref:System.Linq.Enumerable&gt;</ph> (méthode), tel que <ph id="ph2">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Linq.Enumerable.Where%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Dynamic cross-application domain field access</source>
          <target state="translated">Accès au champ de domaine d’applications croisées dynamiques</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Emit.OpCodes.Ldflda?displayProperty=nameWithType&gt;</ph> Microsoft intermediate language (MSIL) instruction throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception if the object containing the field whose address you are trying to retrieve is not within the application domain in which your code is executing.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Emit.OpCodes.Ldflda?displayProperty=nameWithType&gt;</ph> Microsoft intermediate language (MSIL) instruction lève une <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception si l’objet qui contient le champ dont vous voulez récupérer l’adresse n’est pas dans le domaine d’application dans lequel votre code s’exécute.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>The address of a field can only be accessed from the application domain in which it resides.</source>
          <target state="translated">L’adresse d’un champ est accessible uniquement à partir du domaine d’application dans lequel il réside.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Throwing an InvalidOperationException exception</source>
          <target state="translated">Lever une exception InvalidOperationException</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>You should throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception only when the state of your object for some reason does not support a particular method call.</source>
          <target state="translated">Vous devez lever une <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception uniquement lorsque l’état de votre objet pour une raison quelconque ne prend pas en charge un appel de méthode particulier.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>That is, the method call is valid in some circumstances or contexts, but is invalid in others.</source>
          <target state="translated">Autrement dit, l’appel de méthode n’est valide que dans certaines circonstances ou des contextes, mais il n’est pas valide dans d’autres.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>If the method invocation failure is due to invalid arguments, then <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> or one of its derived classes, <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> or <ph id="ph3">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, should be thrown instead.</source>
          <target state="translated">Si l’échec d’appel de méthode est en raison d’arguments non valides, puis <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> ou l’une de ses classes dérivées, <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> ou <ph id="ph3">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, doit être levée à la place.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>Miscellaneous information</source>
          <target state="translated">Informations diverses</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> uses the HRESULT COR_E_INVALIDOPERATION, which has the value 0x80131509.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> utilise le HRESULT COR_E_INVALIDOPERATION dont la valeur est 0 x 80131509.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidOperationException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.InvalidOperationException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">Pour obtenir la liste de valeurs de propriété initiales d’une instance de <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>, consultez la <ph id="ph2">&lt;xref:System.InvalidOperationException.%23ctor%2A&gt;</ph> constructeurs.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="T:System.InvalidOperationException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "The requested operation cannot be performed."</source>
          <target state="translated">Ce constructeur initialise la <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> propriété de la nouvelle instance à un message système qui décrit l’erreur, telles que « l’opération demandée ne peut pas être effectuée. »</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Ce message prend en compte la culture système en cours.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Référence Null (<ph id="ph1">`Nothing`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">Chaîne du message d'erreur localisé.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">Message décrivant l'erreur.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> avec un message d'erreur spécifié.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property of the new exception using the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">Ce constructeur initialise la <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> propriété de l’exception à l’aide du <ph id="ph2">`message`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated">Le contenu de <ph id="ph1">`message`</ph> doit être compréhensible par les utilisateurs.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Référence Null (<ph id="ph1">`Nothing`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">Chaîne du message d'erreur.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">Objet qui contient les données sérialisées de l'objet.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">Informations contextuelles sur la source ou la destination.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> avec des données sérialisées.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Ce constructeur est appelé lors de la désérialisation pour reconstituer l’objet exception transmis sur un flux.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>sérialisation XML et SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Message d'erreur qui explique la raison de l'exception.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Exception ayant provoqué l'exception actuelle.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Si le paramètre <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> n’est pas une référence Null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic), l’exception actuelle est levée dans un bloc <ph id="ph2">&lt;see langword="catch" /&gt;</ph> qui gère l’exception interne.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Une exception levée en conséquence directe d'une exception précédente doit contenir une référence à celle-ci dans la propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> retourne la même valeur que celle qui a été passée dans le constructeur ou une référence Null (<ph id="ph2">`Nothing`</ph> en Visual Basic), si la propriété <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> ne fournit pas la valeur de l'exception interne au constructeur.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">La référence à l'exception interne.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">Chaîne du message d'erreur.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>