<Type Name="IComparable" FullName="System.IComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="756600c35a7609b82f5adbdfa1f787b5e3863a38" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39886273" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7beb0-101">Définit une méthode de comparaison généralisée spécifique au type qu'un type valeur ou une classe implémente pour ordonnancer ou trier ses instances.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7beb0-101">Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7beb0-102">Cette interface est implémentée par les types dont les valeurs peuvent être ordonnées ou triées.</span><span class="sxs-lookup"><span data-stu-id="7beb0-102">This interface is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="7beb0-103">Types d’implémentation définissent une méthode unique, <xref:System.IComparable.CompareTo%28System.Object%29>, qui indique si la position de l’instance actuelle dans l’ordre de tri : avant, après ou identique à un deuxième objet du même type.</span><span class="sxs-lookup"><span data-stu-id="7beb0-103">It requires that implementing types define a single method, <xref:System.IComparable.CompareTo%28System.Object%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="7beb0-104">L’instance <xref:System.IComparable> implémentation est appelée automatiquement par les méthodes telles que <xref:System.Array.Sort%2A?displayProperty=nameWithType> et <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7beb0-104">The instance's <xref:System.IComparable> implementation is called automatically by methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> and <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7beb0-105">L’implémentation de la <xref:System.IComparable.CompareTo%28System.Object%29> méthode doit retourner un <xref:System.Int32> qui a l’une des trois valeurs, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="7beb0-105">The implementation of the <xref:System.IComparable.CompareTo%28System.Object%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="7beb0-106">Value</span><span class="sxs-lookup"><span data-stu-id="7beb0-106">Value</span></span>|<span data-ttu-id="7beb0-107">Signification</span><span class="sxs-lookup"><span data-stu-id="7beb0-107">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="7beb0-108">Inférieure à zéro</span><span class="sxs-lookup"><span data-stu-id="7beb0-108">Less than zero</span></span>|<span data-ttu-id="7beb0-109">L’instance actuelle précède l’objet spécifié par le <xref:System.IComparable.CompareTo%2A> méthode dans l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="7beb0-109">The current instance precedes the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="7beb0-110">Zéro</span><span class="sxs-lookup"><span data-stu-id="7beb0-110">Zero</span></span>|<span data-ttu-id="7beb0-111">L’instance actuelle se produit dans la même position dans l’ordre de tri que l’objet spécifié par le <xref:System.IComparable.CompareTo%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7beb0-111">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable.CompareTo%2A> method.</span></span>|  
|<span data-ttu-id="7beb0-112">Supérieure à zéro</span><span class="sxs-lookup"><span data-stu-id="7beb0-112">Greater than zero</span></span>|<span data-ttu-id="7beb0-113">Cette instance actuelle suit l’objet spécifié par le <xref:System.IComparable.CompareTo%2A> méthode dans l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="7beb0-113">This current instance follows the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
  
 <span data-ttu-id="7beb0-114">Tous les types numériques (telles que <xref:System.Int32> et <xref:System.Double>) implémenter <xref:System.IComparable>, contrairement à <xref:System.String>, <xref:System.Char>, et <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="7beb0-114">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="7beb0-115">Types personnalisés doivent également fournir leur propre implémentation de <xref:System.IComparable> pour permettre aux instances d’objet d’être ordonnées ou triées.</span><span class="sxs-lookup"><span data-stu-id="7beb0-115">Custom types should also provide their own implementation of <xref:System.IComparable> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7beb0-116">L’exemple suivant illustre l’implémentation de <xref:System.IComparable> et les conditions préalables <xref:System.IComparable.CompareTo%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7beb0-116">The following example illustrates the implementation of <xref:System.IComparable> and the requisite <xref:System.IComparable.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7beb0-117">Objet à comparer à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7beb0-117">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7beb0-118">Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7beb0-118">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7beb0-119">Valeur qui indique l'ordre relatif des objets comparés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7beb0-119">A value that indicates the relative order of the objects being compared.</span>
          </span>
          <span data-ttu-id="7beb0-120">La valeur de retour a les significations suivantes :</span>
          <span class="sxs-lookup">
            <span data-stu-id="7beb0-120">The return value has these meanings:</span>
          </span>
          <span data-ttu-id="7beb0-121">
            <list type="table">
              <listheader>
                <term> Valeur  </term>
                <description> Signification  </description>
              </listheader>
              <item>
                <term> Inférieure à zéro  </term>
                <description> Cette instance précède <paramref name="obj" /> dans l’ordre de tri.  </description>
              </item>
              <item>
                <term> Zéro  </term>
                <description> Cette instance se produit à la même position que <paramref name="obj" /> dans l’ordre de tri.  </description>
              </item>
              <item>
                <term> Supérieur à zéro  </term>
                <description> Cette instance suit <paramref name="obj" /> dans l’ordre de tri.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7beb0-121">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="obj" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance occurs in the same position in the sort order as <paramref name="obj" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="obj" /> in the sort order.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7beb0-122">Le <xref:System.IComparable.CompareTo%2A> méthode est implémentée par les types dont les valeurs peuvent être ordonnées ou triées.</span><span class="sxs-lookup"><span data-stu-id="7beb0-122">The <xref:System.IComparable.CompareTo%2A> method is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="7beb0-123">Elle est appelée automatiquement par les méthodes des objets de collection non générique, tel que <xref:System.Array.Sort%2A?displayProperty=nameWithType>, afin d’ordonner chaque membre du tableau.</span><span class="sxs-lookup"><span data-stu-id="7beb0-123">It is called automatically by methods of non-generic collection objects, such as <xref:System.Array.Sort%2A?displayProperty=nameWithType>, to order each member of the array.</span></span> <span data-ttu-id="7beb0-124">Si une classe personnalisée ou une structure n’implémente pas <xref:System.IComparable>, ses membres ne peuvent pas être triées et que l’opération de tri peut lever une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="7beb0-124">If a custom class or structure does not implement <xref:System.IComparable>, its members cannot be ordered and the sort operation can throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="7beb0-125">Cette méthode est uniquement une définition et doit être implémentée par un type de classe ou une valeur spécifique pour que l’effet.</span><span class="sxs-lookup"><span data-stu-id="7beb0-125">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="7beb0-126">La signification des comparaisons spécifié dans la valeur de retour section (« précède », « se produit dans la même position que » et « suit ») dépend de l’implémentation particulière.</span><span class="sxs-lookup"><span data-stu-id="7beb0-126">The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="7beb0-127">Par définition, n’importe quel objet est supérieur à (ou suit) `null`, et deux références null sont égales entre elles.</span><span class="sxs-lookup"><span data-stu-id="7beb0-127">By definition, any object compares greater than (or follows) `null`, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="7beb0-128">Le paramètre, `obj`, doit être du même type que la classe de valeur ou type qui implémente cette interface ; sinon, un <xref:System.ArgumentException> est levée.</span><span class="sxs-lookup"><span data-stu-id="7beb0-128">The parameter, `obj`, must be the same type as the class or value type that implements this interface; otherwise, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7beb0-129">L’exemple suivant illustre l’utilisation de <xref:System.IComparable.CompareTo%2A> pour comparer un `Temperature` objet implémentant <xref:System.IComparable> avec un autre objet.</span><span class="sxs-lookup"><span data-stu-id="7beb0-129">The following example illustrates the use of <xref:System.IComparable.CompareTo%2A> to compare a `Temperature` object implementing <xref:System.IComparable> with another object.</span></span> <span data-ttu-id="7beb0-130">Le `Temperature` implémente l’objet <xref:System.IComparable.CompareTo%2A> en encapsulant simplement un appel à la <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7beb0-130">The `Temperature` object implements <xref:System.IComparable.CompareTo%2A> by simply wrapping a call to the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7beb0-131">
            <paramref name="obj" /> n'est pas du même type que cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7beb0-131">
              <paramref name="obj" /> is not the same type as this instance.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="7beb0-132">
            <para>Pour les objets A, B et C, les éléments suivants doivent être remplies : <c>a.CompareTo (a)</c> doit retourner zéro.  Si <c>a.CompareTo (b)</c> retourne zéro, <c>b.CompareTo (a)</c> doit retourner zéro.  Si <c>a.CompareTo (b)</c> retourne la valeur zéro et <c>B.CompareTo(C)</c> retourne zéro, <c>a.CompareTo (c)</c> doit retourner zéro.  Si <c>a.CompareTo (b)</c> retourne une valeur différente de zéro, puis <c>b.CompareTo (a)</c> doit retourner une valeur du signe opposé.  Si <c>a.CompareTo (b)</c> retourne une valeur <paramref name="x" /> pas égale à zéro, et <c>B.CompareTo(C)</c> retourne une valeur <paramref name="y" /> du même signe que <paramref name="x" />, puis <c>A. CompareTo(C)</c> doit retourner une valeur de la même signature que <paramref name="x" /> et <paramref name="y" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7beb0-132">
              <para>For objects A, B and C, the following must be true:  <c>A.CompareTo(A)</c> must return zero.  If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> must return zero.  If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> must return zero.  If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> must return a value of the opposite sign.  If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> must return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="7beb0-133">
            <para>Utilisez le <see cref="M:System.IComparable.CompareTo(System.Object)" /> méthode pour déterminer l’ordre des instances d’une classe.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7beb0-133">
              <para>Use the <see cref="M:System.IComparable.CompareTo(System.Object)" /> method to determine the ordering of instances of a class.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>