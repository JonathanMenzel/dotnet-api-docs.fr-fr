<Type Name="IComparable" FullName="System.IComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="de45437685e7e2891c7f6e699cd8812bc393beca" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48589853" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Définit une méthode de comparaison généralisée spécifique au type qu'un type valeur ou une classe implémente pour ordonnancer ou trier ses instances.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette interface est implémentée par les types dont les valeurs peuvent être ordonnées ou triées. Types d’implémentation définissent une méthode unique, <xref:System.IComparable.CompareTo%28System.Object%29>, qui indique si la position de l’instance actuelle dans l’ordre de tri : avant, après ou identique à un deuxième objet du même type. L’instance <xref:System.IComparable> implémentation est appelée automatiquement par les méthodes telles que <xref:System.Array.Sort%2A?displayProperty=nameWithType> et <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.  
  
 L’implémentation de la <xref:System.IComparable.CompareTo%28System.Object%29> méthode doit retourner un <xref:System.Int32> qui a l’une des trois valeurs, comme indiqué dans le tableau suivant.  
  
|Value|Signification|  
|-----------|-------------|  
|Inférieure à zéro|L’instance actuelle précède l’objet spécifié par le <xref:System.IComparable.CompareTo%2A> méthode dans l’ordre de tri.|  
|Zéro|L’instance actuelle se produit dans la même position dans l’ordre de tri que l’objet spécifié par le <xref:System.IComparable.CompareTo%2A> (méthode).|  
|Supérieure à zéro|Cette instance actuelle suit l’objet spécifié par le <xref:System.IComparable.CompareTo%2A> méthode dans l’ordre de tri.|  
  
 Tous les types numériques (telles que <xref:System.Int32> et <xref:System.Double>) implémenter <xref:System.IComparable>, contrairement à <xref:System.String>, <xref:System.Char>, et <xref:System.DateTime>. Types personnalisés doivent également fournir leur propre implémentation de <xref:System.IComparable> pour permettre aux instances d’objet d’être ordonnées ou triées.  
  
   
  
## Examples  
 L’exemple suivant illustre l’implémentation de <xref:System.IComparable> et les conditions préalables <xref:System.IComparable.CompareTo%2A> (méthode).  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objet à comparer à cette instance.</param>
        <summary>Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</summary>
        <returns>Valeur qui indique l'ordre relatif des objets comparés. La valeur de retour a les significations suivantes : 
 <list type="table"><listheader><term> Value 
 </term><description> Signification 
 </description></listheader><item><term> Inférieure à zéro 
 </term><description> Cette instance précède <paramref name="obj" /> dans l'ordre de tri.  
  
 </description></item><item><term> Zéro 
 </term><description> Cette instance se produit à la même position dans l'ordre de tri que <paramref name="obj" />.  
  
 </description></item><item><term> Supérieure à zéro 
 </term><description> Cette instance suit <paramref name="obj" /> dans l'ordre de tri.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IComparable.CompareTo%2A> méthode est implémentée par les types dont les valeurs peuvent être ordonnées ou triées. Elle est appelée automatiquement par les méthodes des objets de collection non générique, tel que <xref:System.Array.Sort%2A?displayProperty=nameWithType>, afin d’ordonner chaque membre du tableau. Si une classe personnalisée ou une structure n’implémente pas <xref:System.IComparable>, ses membres ne peuvent pas être triées et que l’opération de tri peut lever une <xref:System.InvalidOperationException>.  
  
 Cette méthode est uniquement une définition et doit être implémentée par un type de classe ou une valeur spécifique pour que l’effet. La signification des comparaisons spécifié dans la valeur de retour section (« précède », « se produit dans la même position que » et « suit ») dépend de l’implémentation particulière.  
  
 Par définition, n’importe quel objet est supérieur à (ou suit) `null`, et deux références null sont égales entre elles.  
  
 Le paramètre, `obj`, doit être du même type que la classe de valeur ou type qui implémente cette interface ; sinon, un <xref:System.ArgumentException> est levée.  
  
   
  
## Examples  
 L’exemple suivant illustre l’utilisation de <xref:System.IComparable.CompareTo%2A> pour comparer un `Temperature` objet implémentant <xref:System.IComparable> avec un autre objet. Le `Temperature` implémente l’objet <xref:System.IComparable.CompareTo%2A> en encapsulant simplement un appel à la <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> (méthode).  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> n'est pas du même type que cette instance.</exception>
        <block subset="none" type="overrides">
          <para>Pour les objets A, B et C, les éléments suivants doivent être remplis : 
 <c>A.CompareTo (a)</c> doit retourner zéro.  
  
Si <c>a.CompareTo (b)</c> retourne zéro, <c>b.CompareTo (a)</c> doit retourner zéro.  
  
Si <c>a.CompareTo (b)</c> retourne la valeur zéro et <c>B.CompareTo(C)</c> retourne zéro, <c>a.CompareTo (c)</c> doit retourner zéro.  
  
Si <c>a.CompareTo (b)</c> retourne une valeur différente de zéro, puis <c>b.CompareTo (a)</c> doit retourner une valeur du signe opposé.  
  
Si <c>a.CompareTo (b)</c> retourne une valeur <paramref name="x" /> pas égale à zéro, et <c>B.CompareTo(C)</c> retourne une valeur <paramref name="y" /> du même signe que <paramref name="x" />, puis <c>A. CompareTo(C)</c> doit retourner une valeur de la même signature que <paramref name="x" /> et <paramref name="y" />.</para>
        </block>
        <block subset="none" type="usage">
          <para>Utilisez le <see cref="M:System.IComparable.CompareTo(System.Object)" /> méthode pour déterminer l’ordre des instances d’une classe.</para>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>