<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82736ec2329a690d16aacfe94c641f51a19e78d4" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39886325" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`7&lt;T1, T2, T3, T4, T5, T6, T7&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`7" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6, T7)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
    <TypeParameter Name="T7" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1">
      <span data-ttu-id="98e55-101">Type du premier composant du tuple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="98e55-101">The type of the tuple's first component.</span>
      </span>
    </typeparam>
    <typeparam name="T2">
      <span data-ttu-id="98e55-102">Type du second composant du tuple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="98e55-102">The type of the tuple's second component.</span>
      </span>
    </typeparam>
    <typeparam name="T3">
      <span data-ttu-id="98e55-103">Type du troisième composant du tuple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="98e55-103">The type of the tuple's third component.</span>
      </span>
    </typeparam>
    <typeparam name="T4">
      <span data-ttu-id="98e55-104">Type du quatrième composant du tuple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="98e55-104">The type of the tuple's fourth component.</span>
      </span>
    </typeparam>
    <typeparam name="T5">
      <span data-ttu-id="98e55-105">Type du cinquième composant du tuple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="98e55-105">The type of the tuple's fifth component.</span>
      </span>
    </typeparam>
    <typeparam name="T6">
      <span data-ttu-id="98e55-106">Type du sixième composant du tuple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="98e55-106">The type of the tuple's sixth component.</span>
      </span>
    </typeparam>
    <typeparam name="T7">
      <span data-ttu-id="98e55-107">Type du septième composant du tuple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="98e55-107">The type of the tuple's seventh component.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="98e55-108">Représente un objet de 7 tuples, ou septuple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="98e55-108">Represents a 7-tuple, or septuple.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-109">Un tuple est une structure de données qui a un nombre spécifique et une séquence de valeurs.</span><span class="sxs-lookup"><span data-stu-id="98e55-109">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="98e55-110">Le <xref:System.Tuple%607> classe représente un objet de 7 tuples, ou septuple, qui est un tuple qui a sept composants.</span><span class="sxs-lookup"><span data-stu-id="98e55-110">The <xref:System.Tuple%607> class represents a 7-tuple, or septuple, which is a tuple that has seven components.</span></span>  
  
 <span data-ttu-id="98e55-111">Vous pouvez instancier un <xref:System.Tuple%607> objet en appelant le <xref:System.Tuple%607.%23ctor%2A> ou statiques <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-111">You can instantiate a <xref:System.Tuple%607> object by calling either the <xref:System.Tuple%607.%23ctor%2A> or the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="98e55-112">Vous pouvez récupérer la valeur des composants du tuple à l’aide en lecture seule <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, et <xref:System.Tuple%607.Item7%2A> propriétés de l’instance.</span><span class="sxs-lookup"><span data-stu-id="98e55-112">You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.</span></span>  
  
 <span data-ttu-id="98e55-113">Tuples sont fréquemment utilisées dans quatre façons différentes :</span><span class="sxs-lookup"><span data-stu-id="98e55-113">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="98e55-114">Pour représenter un jeu unique de données.</span><span class="sxs-lookup"><span data-stu-id="98e55-114">To represent a single set of data.</span></span> <span data-ttu-id="98e55-115">Par exemple, un tuple peut représenter un enregistrement de base de données, et ses composants peuvent représenter des champs individuels de l’enregistrement.</span><span class="sxs-lookup"><span data-stu-id="98e55-115">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="98e55-116">Pour fournir un accès facile aux et manipulation d’un jeu de données.</span><span class="sxs-lookup"><span data-stu-id="98e55-116">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="98e55-117">L’exemple suivant définit un <xref:System.Tuple%607> objet qui contient les données de la population pour la ville de New York pour chaque recensement de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-117">The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000.</span></span> <span data-ttu-id="98e55-118">Le septuple est passé à la `ComputePopulationChange` (méthode), qui calcule le taux de modification entre recensements, ainsi que le taux de modification pour la période entière de 60 années annuel annuel.</span><span class="sxs-lookup"><span data-stu-id="98e55-118">The septuple is passed to the `ComputePopulationChange` method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 60 year period.</span></span>  
  
     [!code-csharp[System.Tuple\`7.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`7.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="98e55-119">Pour retourner plusieurs valeurs à partir d’une méthode sans utiliser de `out` paramètres (en c#) ou `ByRef` paramètres (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="98e55-119">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="98e55-120">Par exemple, l’exemple précédent retourne ses statistiques calculées, avec le nom de ville, dans un <xref:System.Tuple%607> objet.</span><span class="sxs-lookup"><span data-stu-id="98e55-120">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="98e55-121">Pour passer les valeurs multiples dans une méthode via un paramètre unique.</span><span class="sxs-lookup"><span data-stu-id="98e55-121">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="98e55-122">Par exemple, le <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> méthode possède un paramètre unique qui vous permet de fournir une valeur à la méthode que le thread exécute au démarrage.</span><span class="sxs-lookup"><span data-stu-id="98e55-122">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="98e55-123">Si vous fournissez un <xref:System.Tuple%607> de l’objet en tant qu’argument de méthode, vous pouvez fournir la routine de démarrage du thread avec sept éléments de données.</span><span class="sxs-lookup"><span data-stu-id="98e55-123">If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the thread’s startup routine with seven items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6, !T7 item7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 -&gt; Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; (item1, item2, item3, item4, item5, item6, item7)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
      </Parameters>
      <Docs>
        <param name="item1">
          <span data-ttu-id="98e55-124">Valeur du premier composant du tuple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-124">The value of the tuple's first component.</span>
          </span>
        </param>
        <param name="item2">
          <span data-ttu-id="98e55-125">Valeur du second composant du tuple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-125">The value of the tuple's second component.</span>
          </span>
        </param>
        <param name="item3">
          <span data-ttu-id="98e55-126">Valeur du troisième composant du tuple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-126">The value of the tuple's third component.</span>
          </span>
        </param>
        <param name="item4">
          <span data-ttu-id="98e55-127">Valeur du quatrième composant du tuple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-127">The value of the tuple's fourth component</span>
          </span>
        </param>
        <param name="item5">
          <span data-ttu-id="98e55-128">Valeur du cinquième composant du tuple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-128">The value of the tuple's fifth component.</span>
          </span>
        </param>
        <param name="item6">
          <span data-ttu-id="98e55-129">Valeur du sixième composant du tuple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-129">The value of the tuple's sixth component.</span>
          </span>
        </param>
        <param name="item7">
          <span data-ttu-id="98e55-130">Valeur du septième composant du tuple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-130">The value of the tuple's seventh component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e55-131">Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`7" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-131">Initializes a new instance of the <see cref="T:System.Tuple`7" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-132">Vous pouvez utiliser la méthode statique <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> méthode pour instancier un objet de 7 tuples sans devoir spécifier explicitement les types de ses composants.</span><span class="sxs-lookup"><span data-stu-id="98e55-132">You can use the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> method to instantiate a 7-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="98e55-133">L’exemple suivant utilise le <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> méthode pour instancier un 7-tuple dont le premier composant est de type <xref:System.String> et dont les composants restants sont de type <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="98e55-133">The following example uses the <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> method to instantiate a 7-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#13)]
 [!code-vb[System.Tuple.Create#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#13)]  
  
 <span data-ttu-id="98e55-134">Cela équivaut à l’appel suivant à la <xref:System.Tuple%607.%23ctor%2A> constructeur de classe.</span><span class="sxs-lookup"><span data-stu-id="98e55-134">This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#14)]
 [!code-vb[System.Tuple.Create#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="98e55-135">Objet à comparer avec cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-135">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e55-136">Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`7" /> actuel est égal à un objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-136">Returns a value that indicates whether the current <see cref="T:System.Tuple`7" /> object is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e55-137">
            <see langword="true" /> si l'instance actuelle est égale à l'objet spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-137">
              <see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-138">Le `obj` paramètre est considéré comme égal à l’instance actuelle dans les conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="98e55-138">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="98e55-139">Il s’agit une <xref:System.Tuple%607> objet.</span><span class="sxs-lookup"><span data-stu-id="98e55-139">It is a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="98e55-140">Ses sept composants sont des mêmes types que l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="98e55-140">Its seven components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="98e55-141">Ses sept composants sont égales à celles de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="98e55-141">Its seven components are equal to those of the current instance.</span></span> <span data-ttu-id="98e55-142">L'égalité est déterminée par le comparateur d'égalité d'objet par défaut pour chaque composant.</span><span class="sxs-lookup"><span data-stu-id="98e55-142">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e55-143">L’exemple suivant définit un tableau de sextuples qui contiennent des données de population de Los Angeles et de New York 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-143">The following example defines an array of sextuples that contain population data for Los Angeles and New York from 1950 to 2000.</span></span> <span data-ttu-id="98e55-144">Le premier composant de chaque septuple identifie la ville.</span><span class="sxs-lookup"><span data-stu-id="98e55-144">The first component of each septuple identifies the city.</span></span> <span data-ttu-id="98e55-145">La première, troisième et quatrième septuples contiennent des données pour New York.</span><span class="sxs-lookup"><span data-stu-id="98e55-145">The first, third, and fourth septuples contain data for New York.</span></span> <span data-ttu-id="98e55-146">Le premier septuple est un doublon du quatrième septuple.</span><span class="sxs-lookup"><span data-stu-id="98e55-146">The first septuple is a duplicate of the fourth septuple.</span></span> <span data-ttu-id="98e55-147">Le troisième septuple identifie la ville comme « New York City » au lieu de « New York ».</span><span class="sxs-lookup"><span data-stu-id="98e55-147">The third septuple identifies the city as "New York City" instead of "New York".</span></span> <span data-ttu-id="98e55-148">Comme dans l’exemple, seul le quatrième septuple est égal à la première septuple.</span><span class="sxs-lookup"><span data-stu-id="98e55-148">As the example shows, only the fourth septuple is equal to the first septuple.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`7.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98e55-149">Retourne le code de hachage pour l'objet <see cref="T:System.Tuple`7" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-149">Returns the hash code for the current <see cref="T:System.Tuple`7" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e55-150">Code de hachage d'un entier signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-150">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98e55-151">Obtient la valeur du premier composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-151">Gets the value of the current <see cref="T:System.Tuple`7" /> object's first component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98e55-152">Valeur du premier composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-152">The value of the current <see cref="T:System.Tuple`7" /> object's first component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-153">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%607.Item1%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="98e55-153">You can dynamically determine the type of the <xref:System.Tuple%607.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="98e55-154">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%607.Item1%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="98e55-154">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="98e55-155">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%607> de l’objet et en extrayant le premier élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-155">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e55-156">L’exemple suivant définit un tableau de <xref:System.Tuple%607> objets dont les composants contiennent les données de population pour trois villes des États-Unis (New York, Chicago et Los Angeles) de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-156">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="98e55-157">Il affiche ensuite une table qui répertorie les données.</span><span class="sxs-lookup"><span data-stu-id="98e55-157">It then displays a table that lists the data.</span></span> <span data-ttu-id="98e55-158">Pour afficher le nom de ville, il récupère la valeur de la <xref:System.Tuple%607.Item1%2A> propriété pour chaque <xref:System.Tuple%607> objet.</span><span class="sxs-lookup"><span data-stu-id="98e55-158">To display the city name, it retrieves the value of the <xref:System.Tuple%607.Item1%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98e55-159">Obtient la valeur du deuxième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-159">Gets the value of the current <see cref="T:System.Tuple`7" /> object's second component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98e55-160">Valeur du deuxième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-160">The value of the current <see cref="T:System.Tuple`7" /> object's second component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-161">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%607.Item2%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="98e55-161">You can dynamically determine the type of the <xref:System.Tuple%607.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="98e55-162">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%607.Item2%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="98e55-162">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="98e55-163">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%607> de l’objet et en extrayant le deuxième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-163">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e55-164">L’exemple suivant définit un tableau de <xref:System.Tuple%607> objets dont les composants contiennent les données de population pour trois villes des États-Unis (New York, Chicago et Los Angeles) de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-164">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="98e55-165">Il affiche ensuite une table qui répertorie les données.</span><span class="sxs-lookup"><span data-stu-id="98e55-165">It then displays a table that lists the data.</span></span> <span data-ttu-id="98e55-166">Pour afficher la population en 1950, il récupère la valeur de la <xref:System.Tuple%607.Item2%2A> propriété pour chaque <xref:System.Tuple%607> objet.</span><span class="sxs-lookup"><span data-stu-id="98e55-166">To display the population in 1950, it retrieves the value of the <xref:System.Tuple%607.Item2%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98e55-167">Obtient la valeur du troisième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-167">Gets the value of the current <see cref="T:System.Tuple`7" /> object's third component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98e55-168">Valeur du troisième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-168">The value of the current <see cref="T:System.Tuple`7" /> object's third component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-169">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%607.Item3%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="98e55-169">You can dynamically determine the type of the <xref:System.Tuple%607.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="98e55-170">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%607.Item3%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="98e55-170">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="98e55-171">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%607> de l’objet et en extrayant le troisième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-171">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e55-172">L’exemple suivant définit un tableau de <xref:System.Tuple%607> objets dont les composants contiennent les données de population pour trois villes des États-Unis (New York, Chicago et Los Angeles) de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-172">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="98e55-173">Il affiche ensuite une table qui répertorie les données.</span><span class="sxs-lookup"><span data-stu-id="98e55-173">It then displays a table that lists the data.</span></span> <span data-ttu-id="98e55-174">Pour afficher la population en 1960, il récupère la valeur de la <xref:System.Tuple%607.Item3%2A> propriété pour chaque <xref:System.Tuple%607> objet.</span><span class="sxs-lookup"><span data-stu-id="98e55-174">To display the population in 1960, it retrieves the value of the <xref:System.Tuple%607.Item3%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item4 : 'T4" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98e55-175">Obtient la valeur du quatrième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-175">Gets the value of the current <see cref="T:System.Tuple`7" /> object's fourth component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98e55-176">Valeur du quatrième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-176">The value of the current <see cref="T:System.Tuple`7" /> object's fourth component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-177">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%607.Item4%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="98e55-177">You can dynamically determine the type of the <xref:System.Tuple%607.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="98e55-178">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%607.Item4%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="98e55-178">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="98e55-179">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%607> de l’objet et en extrayant le quatrième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-179">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e55-180">L’exemple suivant définit un tableau de <xref:System.Tuple%607> objets dont les composants contiennent les données de population pour trois villes des États-Unis (New York, Chicago et Los Angeles) de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-180">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="98e55-181">Il affiche ensuite une table qui répertorie les données.</span><span class="sxs-lookup"><span data-stu-id="98e55-181">It then displays a table that lists the data.</span></span> <span data-ttu-id="98e55-182">Pour afficher la population en 1970, il récupère la valeur de la <xref:System.Tuple%607.Item4%2A> propriété pour chaque <xref:System.Tuple%607> objet.</span><span class="sxs-lookup"><span data-stu-id="98e55-182">To display the population in 1970, it retrieves the value of the <xref:System.Tuple%607.Item4%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item5 : 'T5" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98e55-183">Obtient la valeur du cinquième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-183">Gets the value of the current <see cref="T:System.Tuple`7" /> object's fifth component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98e55-184">Valeur du cinquième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-184">The value of the current <see cref="T:System.Tuple`7" /> object's fifth component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-185">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%607.Item5%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="98e55-185">You can dynamically determine the type of the <xref:System.Tuple%607.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="98e55-186">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%607.Item5%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="98e55-186">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="98e55-187">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%607> de l’objet et en extrayant le cinquième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-187">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e55-188">L’exemple suivant définit un tableau de <xref:System.Tuple%607> objets dont les composants contiennent les données de population pour trois villes des États-Unis (New York, Chicago et Los Angeles) de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-188">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="98e55-189">Il affiche ensuite une table qui répertorie les données.</span><span class="sxs-lookup"><span data-stu-id="98e55-189">It then displays a table that lists the data.</span></span> <span data-ttu-id="98e55-190">Pour afficher la population en 1980, il récupère la valeur de la <xref:System.Tuple%607.Item5%2A> propriété pour chaque <xref:System.Tuple%607> objet.</span><span class="sxs-lookup"><span data-stu-id="98e55-190">To display the population in 1980, it retrieves the value of the <xref:System.Tuple%607.Item5%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item6 : 'T6" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98e55-191">Obtient la valeur du sixième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-191">Gets the value of the current <see cref="T:System.Tuple`7" /> object's sixth component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98e55-192">Valeur du sixième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-192">The value of the current <see cref="T:System.Tuple`7" /> object's sixth component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-193">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%607.Item6%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="98e55-193">You can dynamically determine the type of the <xref:System.Tuple%607.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="98e55-194">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%607.Item6%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="98e55-194">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="98e55-195">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%607> de l’objet et en extrayant le sixième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-195">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e55-196">L’exemple suivant définit un tableau de <xref:System.Tuple%607> objets dont les composants contiennent les données de population pour trois villes des États-Unis (New York, Chicago et Los Angeles) de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-196">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="98e55-197">Il affiche ensuite une table qui répertorie les données.</span><span class="sxs-lookup"><span data-stu-id="98e55-197">It then displays a table that lists the data.</span></span> <span data-ttu-id="98e55-198">Pour afficher la population en 1990, il récupère la valeur de la <xref:System.Tuple%607.Item6%2A> propriété pour chaque <xref:System.Tuple%607> objet.</span><span class="sxs-lookup"><span data-stu-id="98e55-198">To display the population in 1990, it retrieves the value of the <xref:System.Tuple%607.Item6%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item7">
      <MemberSignature Language="C#" Value="public T7 Item7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T7 Item7" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item7" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item7 As T7" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T7 Item7 { T7 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item7 : 'T7" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98e55-199">Obtient la valeur du septième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-199">Gets the value of the current <see cref="T:System.Tuple`7" /> object's seventh component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98e55-200">Valeur du septième composant de l'objet <see cref="T:System.Tuple`7" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-200">The value of the current <see cref="T:System.Tuple`7" /> object's seventh component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-201">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%607.Item7%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="98e55-201">You can dynamically determine the type of the <xref:System.Tuple%607.Item7%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="98e55-202">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%607.Item7%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="98e55-202">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item7%2A> property.</span></span>  
  
-   <span data-ttu-id="98e55-203">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%607> de l’objet et en extrayant le septième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-203">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e55-204">L’exemple suivant définit un tableau de <xref:System.Tuple%607> objets dont les composants contiennent les données de population pour trois villes des États-Unis (New York, Chicago et Los Angeles) de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-204">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="98e55-205">Il affiche ensuite une table qui répertorie les données.</span><span class="sxs-lookup"><span data-stu-id="98e55-205">It then displays a table that lists the data.</span></span> <span data-ttu-id="98e55-206">Pour afficher la population en 2000, il récupère la valeur de la <xref:System.Tuple%607.Item7%2A> propriété pour chaque <xref:System.Tuple%607> objet.</span><span class="sxs-lookup"><span data-stu-id="98e55-206">To display the population in 2000, it retrieves the value of the <xref:System.Tuple%607.Item7%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="98e55-207">Objet à comparer à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-207">An object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="98e55-208">Un objet qui fournit des règles personnalisées pour la comparaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-208">An object that provides custom rules for comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e55-209">Compare l'objet <see cref="T:System.Tuple`7" /> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-209">Compares the current <see cref="T:System.Tuple`7" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e55-210">Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-210">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span>
          </span>
          <span data-ttu-id="98e55-211">
            <list type="table">
              <listheader>
                <term> Valeur  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Entier négatif  </term>
                <description> Cette instance précède <paramref name="other" />.  </description>
              </item>
              <item>
                <term> Zéro  </term>
                <description> Cette instance et <paramref name="other" /> ont la même position dans l’ordre de tri.  </description>
              </item>
              <item>
                <term> Entier positif  </term>
                <description> Cette instance suit <paramref name="other" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-211">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> A negative integer  </term>
                  <description> This instance precedes <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance and <paramref name="other" /> have the same position in the sort order.  </description>
                </item>
                <item>
                  <term> A positive integer  </term>
                  <description> This instance follows <paramref name="other" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-212">Ce membre est une implémentation d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="98e55-212">This member is an explicit interface implementation.</span></span> <span data-ttu-id="98e55-213">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%607> est castée en interface <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="98e55-213">It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="98e55-214">Cette méthode vous permet de définir des comparaisons personnalisées de <xref:System.Tuple%607> objets.</span><span class="sxs-lookup"><span data-stu-id="98e55-214">This method lets you define customized comparisons of <xref:System.Tuple%607> objects.</span></span> <span data-ttu-id="98e55-215">Par exemple, vous pouvez utiliser cette méthode à la commande <xref:System.Tuple%607> objets basés sur la valeur d’un composant spécifique.</span><span class="sxs-lookup"><span data-stu-id="98e55-215">For example, you can use this method to order <xref:System.Tuple%607> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="98e55-216">Bien que cette méthode peut être appelée directement, elle est généralement appelée par tri à la collection de méthodes qui incluent <xref:System.Collections.IComparer> paramètres pour classer les membres d’une collection.</span><span class="sxs-lookup"><span data-stu-id="98e55-216">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="98e55-217">Par exemple, elle est appelée par le <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> (méthode) et le <xref:System.Collections.SortedList.Add%2A> méthode d’un <xref:System.Collections.SortedList> objet est instancié à l’aide de la <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructeur.</span><span class="sxs-lookup"><span data-stu-id="98e55-217">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="98e55-218">Le <xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A> méthode est conçue pour une utilisation dans les opérations de tri.</span><span class="sxs-lookup"><span data-stu-id="98e55-218">The <xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="98e55-219">Elle ne doit pas être utilisée lors de l’objectif principal d’une comparaison consiste à déterminer si deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="98e55-219">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="98e55-220">Pour déterminer si deux objets sont égales, appelez le <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-220">To determine whether two objects are equal, call the <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e55-221">L’exemple suivant crée un tableau de <xref:System.Tuple%607> objets qui contient les données de la population pour trois villes d’US de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-221">The following example creates an array of <xref:System.Tuple%607> objects that contains population data for three U.S. cities from 1950 to 2000.</span></span> <span data-ttu-id="98e55-222">Le premier composant du septuple est le nom de ville.</span><span class="sxs-lookup"><span data-stu-id="98e55-222">The septuple's first component is the city name.</span></span> <span data-ttu-id="98e55-223">Les cinq composants restants représentent la population à des intervalles de 10 ans de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-223">The remaining five components represent the population at 10-year intervals from 1950 to 2000.</span></span>  
  
 <span data-ttu-id="98e55-224">Le `PopulationComparer` classe fournit un <xref:System.Collections.IComparer> implémentation qui autorise le tableau de septuples à être trié par l’un de ses composants.</span><span class="sxs-lookup"><span data-stu-id="98e55-224">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of septuples to be sorted by any one of its components.</span></span> <span data-ttu-id="98e55-225">Deux valeurs sont fournies à la `PopulationComparer` classe dans son constructeur : la position du composant qui définit l’ordre de tri, et un <xref:System.Boolean> valeur qui indique si les objets de tuple doivent être triés dans l’ordre croissant ou décroissant.</span><span class="sxs-lookup"><span data-stu-id="98e55-225">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="98e55-226">L’exemple puis affiche les éléments dans le tableau dans un ordre aléatoire, les trie par le troisième composant (population en 1960) et les affiche, puis les trie par le sixième composant (population en 1990) et les affiche.</span><span class="sxs-lookup"><span data-stu-id="98e55-226">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1960) and displays them, and then sorts them by the sixth component (the population in 1990) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`7.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`7.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98e55-227">
            <paramref name="other" /> n’est pas un objet <see cref="T:System.Tuple`7" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-227">
              <paramref name="other" /> is not a <see cref="T:System.Tuple`7" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="98e55-228">Objet à comparer avec cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-228">The object to compare with this instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="98e55-229">Un objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-229">An object that defines the method to use to evaluate whether the two objects are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e55-230">Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`7" /> actif est égal à un objet spécifié selon une méthode de comparaison spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-230">Returns a value that indicates whether the current <see cref="T:System.Tuple`7" /> object is equal to a specified object based on a specified comparison method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e55-231">
            <see langword="true" /> si l'instance actuelle est égale à l'objet spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-231">
              <see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-232">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="98e55-232">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="98e55-233">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%607> est castée en interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="98e55-233">It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="98e55-234">Le <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implémentation est appelée uniquement si l’autre n’est pas `null`, et si elle peut être casté (en c#) ou converti (en Visual Basic) en un <xref:System.Tuple%607> objet dont les composants sont des mêmes types que l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="98e55-234">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if other is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%607> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="98e55-235">Le <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> passe en premier (méthode) le <xref:System.Tuple%607.Item1%2A> les valeurs de la <xref:System.Tuple%607> objets à comparer à la <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="98e55-235">The <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%607.Item1%2A> values of the <xref:System.Tuple%607> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="98e55-236">Si cet appel de méthode retourne `true`, la méthode est appelée à nouveau et passée le <xref:System.Tuple%607.Item2%2A> les valeurs des deux <xref:System.Tuple%607> objets.</span><span class="sxs-lookup"><span data-stu-id="98e55-236">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%607.Item2%2A> values of the two <xref:System.Tuple%607> objects.</span></span> <span data-ttu-id="98e55-237">Ce processus se poursuit jusqu'à ce que l’appel de méthode retourne `false` lorsqu’il compare une paire spécifique de `Item` valeurs ou les deux <xref:System.Tuple%607.Item7%2A> valeurs sont passées à la méthode.</span><span class="sxs-lookup"><span data-stu-id="98e55-237">This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%607.Item7%2A> values are passed to the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e55-238">L’exemple suivant définit un `RateComparer` classe qui exécute un test personnalisé pour l’égalité.</span><span class="sxs-lookup"><span data-stu-id="98e55-238">The following example defines a `RateComparer` class that performs a custom test for equality.</span></span> <span data-ttu-id="98e55-239">Si les valeurs qui sont passées à son <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> méthode sont de type <xref:System.Single> ou <xref:System.Double>, la méthode teste l’égalité en utilisant jusqu'à trois chiffres fractionnaires.</span><span class="sxs-lookup"><span data-stu-id="98e55-239">If the values that are passed to its <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method are of type <xref:System.Single> or <xref:System.Double>, the method tests for equality by using only up to three fractional digits.</span></span> <span data-ttu-id="98e55-240">Sinon, elle appelle simplement la `x` du paramètre `Equals` (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-240">Otherwise, it simply calls the `x` parameter's `Equals` method.</span></span> <span data-ttu-id="98e55-241">L’exemple utilise cette <xref:System.Collections.IEqualityComparer> implémentation pour déterminer si quatre <xref:System.Tuple%607> objets qui contiennent des données sur le taux de variation de population entre 1950 et 2000 sont égaux.</span><span class="sxs-lookup"><span data-stu-id="98e55-241">The example uses this <xref:System.Collections.IEqualityComparer> implementation to determine whether four <xref:System.Tuple%607> objects that contain data on the rate of population change between 1950 and 2000 are equal.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`7.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="98e55-242">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`7" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-242">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`7" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e55-243">Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`7" /> actif à l'aide d'une méthode de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-243">Calculates the hash code for the current <see cref="T:System.Tuple`7" /> object by using a specified computation method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e55-244">Code de hachage d'un entier signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-244">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-245">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="98e55-245">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="98e55-246">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%607> est castée en interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="98e55-246">It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="98e55-247">la méthode encapsule simplement un appel à l’objet de comparateur <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="98e55-247">the method simply wraps a call to the comparer object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="98e55-248">L’algorithme utilisé pour calculer le code de hachage doit retourner le même code de hachage pour deux <xref:System.Tuple%607> les objets qui sont considérées comme égales.</span><span class="sxs-lookup"><span data-stu-id="98e55-248">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%607> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="98e55-249">Objet à comparer à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-249">An object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e55-250">Compare l’objet <see cref="T:System.Tuple`7" /> actuel à un objet spécifié et renvoie un entier qui indique si l’objet actuel est avant, après ou à la même position que l’objet spécifié dans l’ordre de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-250">Compares the current <see cref="T:System.Tuple`7" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e55-251">Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-251">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span>
          </span>
          <span data-ttu-id="98e55-252">
            <list type="table">
              <listheader>
                <term> Valeur  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Entier négatif  </term>
                <description> Cette instance précède <paramref name="obj" />.  </description>
              </item>
              <item>
                <term> Zéro  </term>
                <description> Cette instance et <paramref name="obj" /> ont la même position dans l’ordre de tri.  </description>
              </item>
              <item>
                <term> Entier positif  </term>
                <description> Cette instance suit <paramref name="obj" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-252">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> A negative integer  </term>
                  <description> This instance precedes <paramref name="obj" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance and <paramref name="obj" /> have the same position in the sort order.  </description>
                </item>
                <item>
                  <term> A positive integer  </term>
                  <description> This instance follows <paramref name="obj" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-253">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="98e55-253">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="98e55-254">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%607> est castée en interface <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="98e55-254">It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="98e55-255">Cette méthode fournit le <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implémentation pour la <xref:System.Tuple%607> classe.</span><span class="sxs-lookup"><span data-stu-id="98e55-255">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%607> class.</span></span> <span data-ttu-id="98e55-256">Bien que la méthode peut être appelée directement, elle est généralement appelée par les surcharges par défaut de tri à la collection de méthodes, telles que <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> et <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, pour classer les membres d’une collection.</span><span class="sxs-lookup"><span data-stu-id="98e55-256">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="98e55-257">Le <xref:System.Tuple%607.System%23IComparable%23CompareTo%2A> méthode est conçue pour une utilisation dans les opérations de tri.</span><span class="sxs-lookup"><span data-stu-id="98e55-257">The <xref:System.Tuple%607.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="98e55-258">Elle ne doit pas être utilisée lors de l’objectif principal d’une comparaison consiste à déterminer si deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="98e55-258">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="98e55-259">Pour déterminer si deux objets sont égales, appelez le <xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-259">To determine whether two objects are equal, call the <xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="98e55-260">Cette méthode utilise le comparateur d’objet par défaut pour comparer chaque composant.</span><span class="sxs-lookup"><span data-stu-id="98e55-260">This method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e55-261">L’exemple suivant crée un tableau de <xref:System.Tuple%607> les objets qui contiennent des données de population pour trois villes des États-Unis à partir de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-261">The following example creates an array of <xref:System.Tuple%607> objects that contain population data for three cities in the United States from 1950 to 2000.</span></span> <span data-ttu-id="98e55-262">Les sept composants se composent du nom de ville suivi par la population de la ville à des intervalles de 10 ans de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-262">The seven components consist of the city name followed by the city's population at 10-year intervals from 1950 to 2000.</span></span> <span data-ttu-id="98e55-263">L’exemple affiche les composants de chaque tuple dans le tableau en ordre non trié, trie le tableau, puis appelle la <xref:System.Tuple%607.ToString%2A> méthode pour afficher chaque tuple dans l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="98e55-263">The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls the <xref:System.Tuple%607.ToString%2A> method to display each tuple in sorted order.</span></span> <span data-ttu-id="98e55-264">La sortie montre que le tableau a été trié par nom, qui est le premier composant.</span><span class="sxs-lookup"><span data-stu-id="98e55-264">The output shows that the array has been sorted by name, which is the first component.</span></span> <span data-ttu-id="98e55-265">Notez que l’exemple n’appelle pas directement la <xref:System.Tuple%607.System%23IComparable%23CompareTo%28System.Object%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-265">Note that the example does not directly call the <xref:System.Tuple%607.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="98e55-266">Cette méthode est appelée implicitement par la <xref:System.Array.Sort%28System.Array%29> méthode pour chaque élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="98e55-266">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`7.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`7.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98e55-267">
            <paramref name="obj" /> n’est pas un objet <see cref="T:System.Tuple`7" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-267">
              <paramref name="obj" /> is not a <see cref="T:System.Tuple`7" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="98e55-268">Index de l’élément <see langword="Tuple" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-268">The index of the specified <see langword="Tuple" /> element.</span>
          </span>
          <span data-ttu-id="98e55-269">
            <c>index</c> peut être compris entre 0 et 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-269">
              <c>index</c> can range from 0 to 6.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e55-270">Obtient la valeur de l’élément <see langword="Tuple" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-270">Gets the value of the specified <see langword="Tuple" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98e55-271">Valeur de l’élément <see langword="Tuple" /> à la position spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-271">The value of the <see langword="Tuple" /> element at the specified position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-272">Le <xref:System.Tuple%607.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propriété est une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="98e55-272">The <xref:System.Tuple%607.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="98e55-273">Pour l’appeler, vous devez effectuer un cast ou convertir le <xref:System.Tuple%607> de l’objet à un <xref:System.Runtime.CompilerServices.ITuple> objet d’interface.</span><span class="sxs-lookup"><span data-stu-id="98e55-273">To call it, you must cast or convert the <xref:System.Tuple%607> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="98e55-274">
            <paramref name="index" /> est inférieur à 0 ou supérieur à 6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-274">
              <paramref name="index" /> is less than 0 or greater than 6.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98e55-275">Obtient le nombre d’éléments dans <see langword="Tuple" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-275">Gets the number of elements in the <see langword="Tuple" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98e55-276">7, le nombre d’éléments dans un objet <see cref="T:System.Tuple`7" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-276">7, the number of elements in a <see cref="T:System.Tuple`7" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-277">Le <xref:System.Tuple%607.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> propriété est une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="98e55-277">The <xref:System.Tuple%607.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="98e55-278">Pour l’appeler, vous devez effectuer un cast ou convertir le <xref:System.Tuple%607> de l’objet à un <xref:System.Runtime.CompilerServices.ITuple> objet d’interface.</span><span class="sxs-lookup"><span data-stu-id="98e55-278">To call it, you must cast or convert the <xref:System.Tuple%607> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98e55-279">Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`7" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-279">Returns a string that represents the value of this <see cref="T:System.Tuple`7" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e55-280">Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`7" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e55-280">The string representation of this <see cref="T:System.Tuple`7" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e55-281">La chaîne retournée par cette méthode prend la forme (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`), où *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, et *Item7* représentent les valeurs de la <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, et <xref:System.Tuple%607.Item7%2A> propriétés, respectivement.</span><span class="sxs-lookup"><span data-stu-id="98e55-281">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> properties, respectively.</span></span> <span data-ttu-id="98e55-282">Si une des valeurs de propriété est `null`, il est représenté en tant que <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="98e55-282">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e55-283">L’exemple suivant définit un <xref:System.Tuple%607> objet qui contient les données de la population pour la ville de New York pour chaque recensement de 1950 à 2000.</span><span class="sxs-lookup"><span data-stu-id="98e55-283">The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000.</span></span> <span data-ttu-id="98e55-284">Les composants du sextuple sont ensuite affichés par un appel à la <xref:System.Tuple%607.ToString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="98e55-284">The components of the sextuple are then displayed by a call to the <xref:System.Tuple%607.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`7.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`7.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>