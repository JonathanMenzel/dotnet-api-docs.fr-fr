<Type Name="Exception" FullName="System.Exception">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f5214b4f64f3fc28d07f7fbecb38f1960567e615" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37729226" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Exception : System.Runtime.InteropServices._Exception, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit Exception extends System.Object implements class System.Runtime.InteropServices._Exception, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Exception" />
  <TypeSignature Language="VB.NET" Value="Public Class Exception&#xA;Implements _Exception, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Exception : System::Runtime::InteropServices::_Exception, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Exception = class&#xA;    interface ISerializable&#xA;    interface _Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Exception</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Exception))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fecb8-101">Représente les erreurs qui se produisent lors de l'exécution de l'application.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fecb8-101">Represents errors that occur during application execution.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-102">Cette classe est la classe de base pour toutes les exceptions.</span><span class="sxs-lookup"><span data-stu-id="fecb8-102">This class is the base class for all exceptions.</span></span> <span data-ttu-id="fecb8-103">Lorsqu’une erreur se produit, le système ou l’application en cours d’exécution la signale en levant une exception qui contient des informations sur l’erreur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-103">When an error occurs, either the system or the currently executing application reports it by throwing an exception that contains information about the error.</span></span> <span data-ttu-id="fecb8-104">Après qu’une exception est levée, elle est gérée par l’application ou par le Gestionnaire d’exceptions par défaut.</span><span class="sxs-lookup"><span data-stu-id="fecb8-104">After an exception is thrown, it is handled by the application or by the default exception handler.</span></span>  
  
 <span data-ttu-id="fecb8-105">Dans cette section :</span><span class="sxs-lookup"><span data-stu-id="fecb8-105">In this section:</span></span>  
  
 <span data-ttu-id="fecb8-106">[Erreurs et exceptions](#Errors) </span><span class="sxs-lookup"><span data-stu-id="fecb8-106">[Errors and exceptions](#Errors) </span></span>  
 <span data-ttu-id="fecb8-107">[Blocs try/catch](#TryCatch) </span><span class="sxs-lookup"><span data-stu-id="fecb8-107">[Try/catch blocks](#TryCatch) </span></span>  
 <span data-ttu-id="fecb8-108">[Fonctionnalités de type d’exception](#Features) </span><span class="sxs-lookup"><span data-stu-id="fecb8-108">[Exception type features](#Features) </span></span>  
 <span data-ttu-id="fecb8-109">[Propriétés de classe d’exception](#Properties) </span><span class="sxs-lookup"><span data-stu-id="fecb8-109">[Exception class properties](#Properties) </span></span>  
 <span data-ttu-id="fecb8-110">[Considérations relatives aux performances](#Performance) </span><span class="sxs-lookup"><span data-stu-id="fecb8-110">[Performance considerations](#Performance) </span></span>  
 <span data-ttu-id="fecb8-111">[Lever à nouveau une exception](#Rethrow) </span><span class="sxs-lookup"><span data-stu-id="fecb8-111">[Re-throwing an exception](#Rethrow) </span></span>  
 <span data-ttu-id="fecb8-112">[Choix d’exceptions standard](#Standard) </span><span class="sxs-lookup"><span data-stu-id="fecb8-112">[Choosing standard exceptions](#Standard) </span></span>  
 [<span data-ttu-id="fecb8-113">Implémentation d’exceptions personnalisées</span><span class="sxs-lookup"><span data-stu-id="fecb8-113">Implementing custom exceptions</span></span>](#Custom)  
  
<a name="Errors"></a>   
## <a name="errors-and-exceptions"></a><span data-ttu-id="fecb8-114">Erreurs et exceptions</span><span class="sxs-lookup"><span data-stu-id="fecb8-114">Errors and exceptions</span></span>  
 <span data-ttu-id="fecb8-115">Erreurs d’exécution peuvent se produire pour diverses raisons.</span><span class="sxs-lookup"><span data-stu-id="fecb8-115">Run-time errors can occur for a variety of reasons.</span></span> <span data-ttu-id="fecb8-116">Toutefois, pas toutes les erreurs doivent être traités comme des exceptions dans votre code.</span><span class="sxs-lookup"><span data-stu-id="fecb8-116">However, not all errors should be handled as exceptions in your code.</span></span> <span data-ttu-id="fecb8-117">Voici certaines catégories d’erreurs qui peuvent se produire au moment de l’exécution et les méthodes appropriées pour y répondre.</span><span class="sxs-lookup"><span data-stu-id="fecb8-117">Here are some categories of errors that can occur at run time and the appropriate ways to respond to them.</span></span>  
  
-   <span data-ttu-id="fecb8-118">**Erreurs d’utilisation.**</span><span class="sxs-lookup"><span data-stu-id="fecb8-118">**Usage errors.**</span></span> <span data-ttu-id="fecb8-119">Une erreur d’utilisation représente une erreur dans la logique de programme qui peut entraîner une exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-119">A usage error represents an error in program logic that can result in an exception.</span></span> <span data-ttu-id="fecb8-120">Toutefois, l’erreur doit être traité, non par le biais de la gestion des exceptions, mais en modifiant le code défectueux.</span><span class="sxs-lookup"><span data-stu-id="fecb8-120">However, the error should be addressed not through exception handling but by modifying the faulty code.</span></span> <span data-ttu-id="fecb8-121">Par exemple, la substitution de la <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> méthode dans l’exemple suivant suppose que le `obj` argument doit toujours être non null.</span><span class="sxs-lookup"><span data-stu-id="fecb8-121">For example, the override of the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method in the following example assumes that the `obj` argument must always be non-null.</span></span>  
  
     [!code-csharp[System.Exception.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors1.cs#4)]
     [!code-vb[System.Exception.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors1.vb#4)]  
  
     <span data-ttu-id="fecb8-122">Le <xref:System.NullReferenceException> exception qui résulte lorsque `obj` est `null` peuvent être éliminées en modifiant le code source pour tester explicitement les valeurs null avant d’appeler le <xref:System.Object.Equals%2A?displayProperty=nameWithType> override et puis recompilation.</span><span class="sxs-lookup"><span data-stu-id="fecb8-122">The <xref:System.NullReferenceException> exception that results when `obj` is `null` can be eliminated by modifying the source code to explicitly test for null before calling the <xref:System.Object.Equals%2A?displayProperty=nameWithType> override and then re-compiling.</span></span> <span data-ttu-id="fecb8-123">L’exemple suivant contient le code source corrigé qui gère un `null` argument.</span><span class="sxs-lookup"><span data-stu-id="fecb8-123">The following example contains the corrected source code that handles a `null` argument.</span></span>  
  
     [!code-csharp[System.Exception.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors2.cs#5)]
     [!code-vb[System.Exception.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors2.vb#5)]  
  
     <span data-ttu-id="fecb8-124">Au lieu d’utiliser la gestion des exceptions pour les erreurs d’utilisation, vous pouvez utiliser la <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> méthode pour identifier les erreurs d’utilisation dans les versions debug et le <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> génère de méthode pour identifier les erreurs de l’utilisation de debug et release.</span><span class="sxs-lookup"><span data-stu-id="fecb8-124">Instead of using exception handling for usage errors, you can use the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method to identify usage errors in debug builds, and the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method to identify usage errors in both debug and release builds.</span></span> <span data-ttu-id="fecb8-125">Pour plus d’informations, consultez [Assertions dans du Code managé](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="fecb8-125">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
-   <span data-ttu-id="fecb8-126">**Erreurs du programme.**</span><span class="sxs-lookup"><span data-stu-id="fecb8-126">**Program errors.**</span></span> <span data-ttu-id="fecb8-127">Une erreur de programme est une erreur d’exécution qui ne peut pas nécessairement être évitée en écrivant du code exempte de bogues.</span><span class="sxs-lookup"><span data-stu-id="fecb8-127">A program error is a run-time error that cannot necessarily be avoided by writing bug-free code.</span></span>  
  
     <span data-ttu-id="fecb8-128">Dans certains cas, une erreur de programme peut refléter une condition d’erreur attendu ou de routine.</span><span class="sxs-lookup"><span data-stu-id="fecb8-128">In some cases, a program error may reflect an expected or routine error condition.</span></span> <span data-ttu-id="fecb8-129">Dans ce cas, vous souhaiterez éviter à l’aide de la gestion des exceptions à traiter l’erreur de programme et à la place une nouvelle tentative.</span><span class="sxs-lookup"><span data-stu-id="fecb8-129">In this case, you may want to avoid using exception handling to deal with the program error and instead retry the operation.</span></span> <span data-ttu-id="fecb8-130">Par exemple, si l’utilisateur doit entrer une date dans un format particulier, vous pouvez analyser la chaîne de date en appelant le <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> (méthode), qui retourne un <xref:System.Boolean> valeur qui indique si l’opération d’analyse a réussi, au lieu d’utiliser le <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>(méthode), qui lève une <xref:System.FormatException> exception si la chaîne de date ne peut pas être convertie en un <xref:System.DateTime> valeur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-130">For example, if the user is expected to input a date in a particular format, you can parse the date string by calling the <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method, which returns a <xref:System.Boolean> value that indicates whether the parse operation succeeded, instead of using the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method, which throws a <xref:System.FormatException> exception if the date string cannot be converted to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="fecb8-131">De même, si un utilisateur tente d’ouvrir un fichier qui n’existe pas, vous pouvez tout d’abord appeler la <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> méthode permettant de vérifier si le fichier existe et, le cas contraire, invite l’utilisateur si il souhaite créer.</span><span class="sxs-lookup"><span data-stu-id="fecb8-131">Similarly, if a user tries to open a file that does not exist, you can first call the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method to check whether the file exists and, if it does not, prompt the user whether he or she wants to create it.</span></span>  
  
     <span data-ttu-id="fecb8-132">Dans d’autres cas, une erreur de programme reflète une condition d’erreur inattendue qui peut être gérée dans votre code.</span><span class="sxs-lookup"><span data-stu-id="fecb8-132">In other cases, a program error reflects an unexpected error condition that can be handled in your code.</span></span> <span data-ttu-id="fecb8-133">Par exemple, même si vous avez vérifié pour garantir qu’un fichier existe, il peut être supprimé avant que vous pouvez l’ouvrir, ou il peut être endommagé.</span><span class="sxs-lookup"><span data-stu-id="fecb8-133">For example, even if you've checked to ensure that a file exists, it may be deleted before you can open it, or it may be corrupted.</span></span> <span data-ttu-id="fecb8-134">Dans ce cas, essayez d’ouvrir le fichier en instanciant un <xref:System.IO.StreamReader> objet ou en appelant le <xref:System.IO.File.Open%2A> méthode peut lever une <xref:System.IO.FileNotFoundException> exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-134">In that case, trying to open the file by instantiating a <xref:System.IO.StreamReader> object or calling the <xref:System.IO.File.Open%2A> method may throw a <xref:System.IO.FileNotFoundException> exception.</span></span> <span data-ttu-id="fecb8-135">Dans ce cas, vous devez utiliser des exceptions pour récupérer à partir de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-135">In these cases, you should use exception handling to recover from the error.</span></span>  
  
-   <span data-ttu-id="fecb8-136">**Défaillances du système.**</span><span class="sxs-lookup"><span data-stu-id="fecb8-136">**System failures.**</span></span> <span data-ttu-id="fecb8-137">Une défaillance du système est une erreur d’exécution qui ne peuvent pas être gérée par programmation de manière explicite.</span><span class="sxs-lookup"><span data-stu-id="fecb8-137">A system failure is a run-time error that cannot be handled programmatically in a meaningful way.</span></span> <span data-ttu-id="fecb8-138">Par exemple, n’importe quelle méthode peut lever une <xref:System.OutOfMemoryException> exception si le common language runtime ne peut pas allouer de mémoire supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="fecb8-138">For example, any method can throw an <xref:System.OutOfMemoryException> exception if the common language runtime is unable to allocate additional memory.</span></span> <span data-ttu-id="fecb8-139">En règle générale, les défaillances du système ne sont pas gérées à l’aide de la gestion des exceptions.</span><span class="sxs-lookup"><span data-stu-id="fecb8-139">Ordinarily, system failures are not handled by using exception handling.</span></span> <span data-ttu-id="fecb8-140">Au lieu de cela, vous pourrez peut-être utiliser un événement tel que <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> et appelez le <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> méthode pour enregistrer des informations d’exception et informer l’utilisateur de l’échec avant que l’application se termine.</span><span class="sxs-lookup"><span data-stu-id="fecb8-140">Instead, you may be able to use an event such as <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> and call the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to log exception information and notify the user of the failure before the application terminates.</span></span>  
  
<a name="TryCatch"></a>   
## <a name="trycatch-blocks"></a><span data-ttu-id="fecb8-141">Blocs try/catch</span><span class="sxs-lookup"><span data-stu-id="fecb8-141">Try/catch blocks</span></span>  
 <span data-ttu-id="fecb8-142">Le common language runtime fournit un modèle de gestion des exceptions est basé sur la représentation des exceptions sous forme d’objets et la séparation de code de programme et des exceptions de code dans `try` blocs et `catch` blocs.</span><span class="sxs-lookup"><span data-stu-id="fecb8-142">The common language runtime provides an exception handling model that is based on the representation of exceptions as objects, and the separation of program code and exception handling code into `try` blocks and `catch` blocks.</span></span> <span data-ttu-id="fecb8-143">Il peut y avoir un ou plusieurs `catch` bloque, chacun étant conçu pour gérer un type particulier d’exception, ou un seul bloc conçu pour intercepter une exception plus spécifique qu’un autre bloc.</span><span class="sxs-lookup"><span data-stu-id="fecb8-143">There can be one or more `catch` blocks, each designed to handle a particular type of exception, or one block designed to catch a more specific exception than another block.</span></span>  
  
 <span data-ttu-id="fecb8-144">Si une application gère les exceptions qui se produisent pendant l’exécution d’un bloc de code d’application, le code doit être placé dans un `try` instruction et est appelé un `try` bloc.</span><span class="sxs-lookup"><span data-stu-id="fecb8-144">If an application handles exceptions that occur during the execution of a block of application code, the code must be placed within a `try` statement and is called a `try` block.</span></span> <span data-ttu-id="fecb8-145">Code d’application qui gère les exceptions levées par un `try` bloc est placé dans un `catch` instruction et est appelé un `catch` bloc.</span><span class="sxs-lookup"><span data-stu-id="fecb8-145">Application code that handles exceptions thrown by a `try` block is placed within a `catch` statement and is called a `catch` block.</span></span> <span data-ttu-id="fecb8-146">Zéro ou plusieurs `catch` blocs sont associés un `try` bloc et chaque `catch` bloc inclut un filtre de type qui détermine les types d’exceptions à gérer.</span><span class="sxs-lookup"><span data-stu-id="fecb8-146">Zero or more `catch` blocks are associated with a `try` block, and each `catch` block includes a type filter that determines the types of exceptions it handles.</span></span>  
  
 <span data-ttu-id="fecb8-147">Si une exception se produit dans un `try` bloc, le système recherche associé `catch` blocs dans l’ordre d’apparition dans le code d’application, jusqu'à ce qu’il trouve un `catch` bloc qui gère l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-147">When an exception occurs in a `try` block, the system searches the associated `catch` blocks in the order they appear in application code, until it locates a `catch` block that handles the exception.</span></span> <span data-ttu-id="fecb8-148">Un `catch` bloc gère une exception de type `T` si le filtre de type du bloc catch spécifie `T` ou tout type pouvant `T` dérive.</span><span class="sxs-lookup"><span data-stu-id="fecb8-148">A `catch` block handles an exception of type `T` if the type filter of the catch block specifies `T` or any type that `T` derives from.</span></span> <span data-ttu-id="fecb8-149">Le système arrête la recherche après avoir trouvé le premier `catch` bloc qui gère l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-149">The system stops searching after it finds the first `catch` block that handles the exception.</span></span> <span data-ttu-id="fecb8-150">Pour cette raison, dans le code d’application, un `catch` bloc qui gère un type doit être spécifié avant un `catch` bloc qui gère ses types de base, comme illustré dans l’exemple qui suit cette section.</span><span class="sxs-lookup"><span data-stu-id="fecb8-150">For this reason, in application code, a `catch` block that handles a type must be specified before a `catch` block that handles its base types, as demonstrated in the example that follows this section.</span></span> <span data-ttu-id="fecb8-151">Un bloc catch qui gère `System.Exception` est spécifiée en dernier.</span><span class="sxs-lookup"><span data-stu-id="fecb8-151">A catch block that handles `System.Exception` is specified last.</span></span>  
  
 <span data-ttu-id="fecb8-152">Si aucun de la `catch` blocs associés actuel `try` bloc gérer l’exception et en cours `try` bloc est imbriqué dans d’autres `try` bloque dans l’appel actuel, le `catch` blocs associés à la suivante englobant `try` bloc sont recherchés.</span><span class="sxs-lookup"><span data-stu-id="fecb8-152">If none of the `catch` blocks associated with the current `try` block handle the exception, and the current `try` block is nested within other `try` blocks in the current call, the `catch` blocks associated with the next enclosing `try` block are searched.</span></span> <span data-ttu-id="fecb8-153">Si aucun `catch` bloc pour l’exception est trouvé, le système recherche les niveaux d’imbrication précédents dans l’appel actuel.</span><span class="sxs-lookup"><span data-stu-id="fecb8-153">If no `catch` block for the exception is found, the system searches previous nesting levels in the current call.</span></span> <span data-ttu-id="fecb8-154">Si aucun `catch` bloquer pour l’exception se trouve dans l’appel en cours, l’exception remonte la pile des appels, et le frame de pile précédent est recherché une `catch` bloc qui gère l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-154">If no `catch` block for the exception is found in the current call, the exception is passed up the call stack, and the previous stack frame is searched for a `catch` block that handles the exception.</span></span> <span data-ttu-id="fecb8-155">La recherche de la pile des appels se poursuit jusqu'à ce que l’exception est gérée ou jusqu'à ce que des frames sont présents sur la pile des appels.</span><span class="sxs-lookup"><span data-stu-id="fecb8-155">The search of the call stack continues until the exception is handled or until no more frames exist on the call stack.</span></span> <span data-ttu-id="fecb8-156">Si le haut de la pile des appels est atteint sans recherche un `catch` bloc qui gère l’exception, le Gestionnaire d’exceptions par défaut et l’application s’arrête.</span><span class="sxs-lookup"><span data-stu-id="fecb8-156">If the top of the call stack is reached without finding a `catch` block that handles the exception, the default exception handler handles it and the application terminates.</span></span>  
  
<a name="Features"></a>   
## <a name="exception-type-features"></a><span data-ttu-id="fecb8-157">Fonctionnalités de type d’exception</span><span class="sxs-lookup"><span data-stu-id="fecb8-157">Exception type features</span></span>  
 <span data-ttu-id="fecb8-158">Types d’exceptions prennent en charge les fonctionnalités suivantes :</span><span class="sxs-lookup"><span data-stu-id="fecb8-158">Exception types support the following features:</span></span>  
  
-   <span data-ttu-id="fecb8-159">Texte contrôlable de visu qui décrit l’erreur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-159">Human-readable text that describes the error.</span></span> <span data-ttu-id="fecb8-160">Lorsqu’une exception se produit, le runtime établit un SMS disponible pour informer l’utilisateur de la nature de l’erreur et de suggérer d’action pour résoudre le problème.</span><span class="sxs-lookup"><span data-stu-id="fecb8-160">When an exception occurs, the runtime makes a text message available to inform the user of the nature of the error and to suggest action to resolve the problem.</span></span> <span data-ttu-id="fecb8-161">Ce message textuel est contenu dans le <xref:System.Exception.Message%2A> propriété de l’objet exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-161">This text message is held in the <xref:System.Exception.Message%2A> property of the exception object.</span></span> <span data-ttu-id="fecb8-162">Lors de la création de l’objet exception, vous pouvez passer une chaîne de texte au constructeur pour décrire les détails de cette exception particulière.</span><span class="sxs-lookup"><span data-stu-id="fecb8-162">During the creation of the exception object, you can pass a text string to the constructor to describe the details of that particular exception.</span></span> <span data-ttu-id="fecb8-163">Si aucun argument de message d’erreur est fourni au constructeur, le message d’erreur par défaut est utilisé.</span><span class="sxs-lookup"><span data-stu-id="fecb8-163">If no error message argument is supplied to the constructor, the default error message is used.</span></span> <span data-ttu-id="fecb8-164">Pour plus d'informations, consultez la propriété <xref:System.Exception.Message%2A>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-164">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="fecb8-165">L’état de la pile des appels lorsque l’exception a été levée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-165">The state of the call stack when the exception was thrown.</span></span> <span data-ttu-id="fecb8-166">Le <xref:System.Exception.StackTrace%2A> propriété conserve une trace de pile qui peut être utilisée pour déterminer où l’erreur se produit dans le code.</span><span class="sxs-lookup"><span data-stu-id="fecb8-166">The <xref:System.Exception.StackTrace%2A> property carries a stack trace that can be used to determine where the error occurs in the code.</span></span> <span data-ttu-id="fecb8-167">La trace de pile répertorie toutes les méthodes appelées et les numéros de ligne dans le fichier source où les appels sont effectués.</span><span class="sxs-lookup"><span data-stu-id="fecb8-167">The stack trace lists all the called methods and the line numbers in the source file where the calls are made.</span></span>  
  
<a name="Properties"></a>   
## <a name="exception-class-properties"></a><span data-ttu-id="fecb8-168">Propriétés de classe d’exception</span><span class="sxs-lookup"><span data-stu-id="fecb8-168">Exception class properties</span></span>  
 <span data-ttu-id="fecb8-169">Le <xref:System.Exception> classe inclut un nombre de propriétés qui permettent d’identifier l’emplacement du code, le type, le fichier d’aide et la raison de l’exception : <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, et <xref:System.Exception.Data%2A>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-169">The <xref:System.Exception> class includes a number of properties that help identify the code location, the type, the help file, and the reason for the exception: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, and <xref:System.Exception.Data%2A>.</span></span>  
  
 <span data-ttu-id="fecb8-170">Lors de l’existence d’une relation existe entre deux ou plusieurs exceptions, la <xref:System.Exception.InnerException%2A> propriété conserve ces informations.</span><span class="sxs-lookup"><span data-stu-id="fecb8-170">When a causal relationship exists between two or more exceptions, the <xref:System.Exception.InnerException%2A> property maintains this information.</span></span> <span data-ttu-id="fecb8-171">L’exception externe levée en réponse à cette exception interne.</span><span class="sxs-lookup"><span data-stu-id="fecb8-171">The outer exception is thrown in response to this inner exception.</span></span> <span data-ttu-id="fecb8-172">Le code qui gère l’exception externe peut utiliser les informations de l’exception interne précédemment pour gérer l’erreur plus convenablement.</span><span class="sxs-lookup"><span data-stu-id="fecb8-172">The code that handles the outer exception can use the information from the earlier inner exception to handle the error more appropriately.</span></span> <span data-ttu-id="fecb8-173">Informations supplémentaires sur l’exception peuvent être stockées comme une collection de paires clé/valeur dans le <xref:System.Exception.Data%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="fecb8-173">Supplementary information about the exception can be stored as a collection of key/value pairs in the <xref:System.Exception.Data%2A> property.</span></span>  
  
 <span data-ttu-id="fecb8-174">La chaîne de message d’erreur qui est passée au constructeur lors de la création de l’objet exception doit être localisée et peuvent être fournie à partir d’un fichier de ressources à l’aide de la <xref:System.Resources.ResourceManager> classe.</span><span class="sxs-lookup"><span data-stu-id="fecb8-174">The error message string that is passed to the constructor during the creation of the exception object should be localized and can be supplied from a resource file by using the <xref:System.Resources.ResourceManager> class.</span></span> <span data-ttu-id="fecb8-175">Pour plus d’informations sur les ressources localisées, consultez le [création d’assemblys satellites](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) et [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) rubriques.</span><span class="sxs-lookup"><span data-stu-id="fecb8-175">For more information about localized resources, see the [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) and [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) topics.</span></span>  
  
 <span data-ttu-id="fecb8-176">Pour fournir l’utilisateur avec des informations détaillées sur la raison pour laquelle l’exception s’est produite, le <xref:System.Exception.HelpLink%2A> propriété peut contenir une URL (ou URN) vers un fichier d’aide.</span><span class="sxs-lookup"><span data-stu-id="fecb8-176">To provide the user with extensive information about why the exception occurred, the <xref:System.Exception.HelpLink%2A> property can hold a URL (or URN) to a help file.</span></span>  
  
 <span data-ttu-id="fecb8-177">Le <xref:System.Exception> classe utilise HRESULT COR_E_EXCEPTION, dont la valeur est 0 x 80131500.</span><span class="sxs-lookup"><span data-stu-id="fecb8-177">The <xref:System.Exception> class uses the HRESULT COR_E_EXCEPTION, which has the value 0x80131500.</span></span>  
  
 <span data-ttu-id="fecb8-178">Pour obtenir la liste des valeurs initiales des propriétés d’une instance de la <xref:System.Exception> de classe, consultez le <xref:System.Exception.%23ctor%2A> constructeurs.</span><span class="sxs-lookup"><span data-stu-id="fecb8-178">For a list of initial property values for an instance of the <xref:System.Exception> class, see the <xref:System.Exception.%23ctor%2A> constructors.</span></span>  
  
<a name="Performance"></a>   
## <a name="performance-considerations"></a><span data-ttu-id="fecb8-179">Considérations sur les performances</span><span class="sxs-lookup"><span data-stu-id="fecb8-179">Performance considerations</span></span>  
 <span data-ttu-id="fecb8-180">Lancer ou de gestion d’une exception consomme une quantité importante de ressources système et la durée d’exécution.</span><span class="sxs-lookup"><span data-stu-id="fecb8-180">Throwing or handling an exception consumes a significant amount of system resources and execution time.</span></span> <span data-ttu-id="fecb8-181">Lever des exceptions uniquement pour gérer des conditions vraiment extraordinaires, pas pour gérer les événements prévisibles ou de contrôle de flux.</span><span class="sxs-lookup"><span data-stu-id="fecb8-181">Throw exceptions only to handle truly extraordinary conditions, not to handle predictable events or flow control.</span></span> <span data-ttu-id="fecb8-182">Par exemple, dans certains cas, notamment lorsque vous développez une bibliothèque de classes, il est raisonnable de lever une exception si un argument de méthode n’est pas valide, car vous attendez que votre méthode d’être appelée avec des paramètres valides.</span><span class="sxs-lookup"><span data-stu-id="fecb8-182">For example, in some cases, such as when you're developing a class library, it's reasonable to throw an exception if a method argument is invalid, because you expect your method to be called with valid parameters.</span></span> <span data-ttu-id="fecb8-183">Un argument de méthode non valide, si elle n’est pas le résultat d’une erreur d’utilisation, signifie que quelque chose d’anormal s’est produite.</span><span class="sxs-lookup"><span data-stu-id="fecb8-183">An invalid method argument, if it is not the result of a usage error, means that something extraordinary has occurred.</span></span> <span data-ttu-id="fecb8-184">Inversement, ne levez pas d’exception si l’entrée d’utilisateur n’est pas valide, car vous pouvez vous attendre les utilisateurs entrent parfois des données non valides.</span><span class="sxs-lookup"><span data-stu-id="fecb8-184">Conversely, do not throw an exception if user input is invalid, because you can expect users to occasionally enter invalid data.</span></span> <span data-ttu-id="fecb8-185">Au lieu de cela, fournissent un mécanisme de nouvelle tentative pour permettre aux utilisateurs d’entrer une entrée valide.</span><span class="sxs-lookup"><span data-stu-id="fecb8-185">Instead, provide a retry mechanism so users can enter valid input.</span></span> <span data-ttu-id="fecb8-186">Ni doit utiliser des exceptions pour gérer les erreurs d’utilisation.</span><span class="sxs-lookup"><span data-stu-id="fecb8-186">Nor should you use exceptions to handle usage errors.</span></span> <span data-ttu-id="fecb8-187">Au lieu de cela, utilisez [assertions](/visualstudio/debugger/assertions-in-managed-code) pour identifier et corriger les erreurs d’utilisation.</span><span class="sxs-lookup"><span data-stu-id="fecb8-187">Instead, use [assertions](/visualstudio/debugger/assertions-in-managed-code) to identify and correct usage errors.</span></span>  
  
 <span data-ttu-id="fecb8-188">En outre, ne levez pas d’exception lorsqu’un code de retour est suffisant ; ne pas convertir un code de retour à une exception ; n’interceptez pas régulièrement une exception, l’ignorer et continuer le traitement.</span><span class="sxs-lookup"><span data-stu-id="fecb8-188">In addition, do not throw an exception when a return code is sufficient; do not convert a return code to an exception; and do not routinely catch an exception, ignore it, and then continue processing.</span></span>  
  
<a name="Rethrow"></a>   
## <a name="re-throwing-an-exception"></a><span data-ttu-id="fecb8-189">Génération répétée d’une exception</span><span class="sxs-lookup"><span data-stu-id="fecb8-189">Re-throwing an exception</span></span>  
 <span data-ttu-id="fecb8-190">Dans de nombreux cas, un gestionnaire d’exceptions veut simplement passer l’exception à l’appelant.</span><span class="sxs-lookup"><span data-stu-id="fecb8-190">In many cases, an exception handler simply wants to pass the exception on to the caller.</span></span> <span data-ttu-id="fecb8-191">Ceci se produit souvent dans :</span><span class="sxs-lookup"><span data-stu-id="fecb8-191">This most often occurs in:</span></span>  
  
-   <span data-ttu-id="fecb8-192">Une bibliothèque de classes qui à son tour encapsule les appels aux méthodes dans la bibliothèque de classes .NET Framework ou d’autres bibliothèques de classes.</span><span class="sxs-lookup"><span data-stu-id="fecb8-192">A class library that in turn wraps calls to methods in the .NET Framework class library or other class libraries.</span></span>  
  
-   <span data-ttu-id="fecb8-193">Une application ou une bibliothèque qui rencontre une erreur fatale.</span><span class="sxs-lookup"><span data-stu-id="fecb8-193">An application or library that encounters a fatal exception.</span></span> <span data-ttu-id="fecb8-194">Le Gestionnaire d’exceptions peut consigner l’exception et lever à nouveau l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-194">The exception handler can log the exception and then re-throw the exception.</span></span>  
  
 <span data-ttu-id="fecb8-195">La méthode recommandée pour lever à nouveau une exception consiste à utiliser simplement le [lever](~/docs/csharp/language-reference/keywords/throw.md) instruction en langage c# et le [lever](~/docs/visual-basic/language-reference/statements/throw-statement.md) instruction en Visual Basic sans inclure une expression.</span><span class="sxs-lookup"><span data-stu-id="fecb8-195">The recommended way to re-throw an exception is to simply use the [throw](~/docs/csharp/language-reference/keywords/throw.md) statement in C# and the [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) statement in Visual Basic without including an expression.</span></span> <span data-ttu-id="fecb8-196">Cela garantit la préservation de toutes les informations de pile des appels lorsque l’exception est propagée à l’appelant.</span><span class="sxs-lookup"><span data-stu-id="fecb8-196">This ensures that all call stack information is preserved when the exception is propagated to the caller.</span></span> <span data-ttu-id="fecb8-197">L'exemple suivant illustre ce comportement.</span><span class="sxs-lookup"><span data-stu-id="fecb8-197">The following example illustrates this.</span></span> <span data-ttu-id="fecb8-198">Une méthode d’extension de chaîne, `FindOccurrences`, encapsule un ou plusieurs appels à <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> sans valider au préalable de ses arguments.</span><span class="sxs-lookup"><span data-stu-id="fecb8-198">A string extension method, `FindOccurrences`, wraps one or more calls to <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> without validating its arguments beforehand.</span></span>  
  
 [!code-csharp[System.Exception.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#6)]
 [!code-vb[System.Exception.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#6)]  
  
 <span data-ttu-id="fecb8-199">Un appelant appelle ensuite `FindOccurrences` à deux reprises.</span><span class="sxs-lookup"><span data-stu-id="fecb8-199">A caller then calls `FindOccurrences` twice.</span></span> <span data-ttu-id="fecb8-200">Dans le deuxième appel à `FindOccurrences`, l’appelant passe un `null` comme chaîne de recherche, les cas de la <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> méthode lève un <xref:System.ArgumentNullException> exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-200">In the second call to `FindOccurrences`, the caller passes a `null` as the search string, which cases the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method to throw an <xref:System.ArgumentNullException> exception.</span></span> <span data-ttu-id="fecb8-201">Cette exception est gérée par le `FindOccurrences` (méthode) et renvoyée à l’appelant.</span><span class="sxs-lookup"><span data-stu-id="fecb8-201">This exception is handled by the `FindOccurrences` method and passed back to the caller.</span></span> <span data-ttu-id="fecb8-202">Étant donné que l’instruction throw est utilisée sans expression, la sortie de l’exemple montre que la pile des appels est conservée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-202">Because the throw statement is used with no expression, the output from the example shows that the call stack is preserved.</span></span>  
  
 [!code-csharp[System.Exception.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#7)]
 [!code-vb[System.Exception.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#7)]  
  
 <span data-ttu-id="fecb8-203">En revanche, si l’exception est levée à nouveau à l’aide de la</span><span class="sxs-lookup"><span data-stu-id="fecb8-203">In contrast, if the exception is re-thrown by using the</span></span>  
  
```csharp  
throw e  
```  
  
```vb  
Throw e  
```  
  
 <span data-ttu-id="fecb8-204">instruction, la pile des appels complète n’est pas conservée, et l’exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="fecb8-204">statement, the full call stack is not preserved, and the example would generate the following output:</span></span>  
  
```Output  
  
'a' occurs at the following character positions: 4, 7, 15  
  
An exception (ArgumentNullException) occurred.  
Message:  
   Value cannot be null.  
Parameter name: value  
  
Stack Trace:  
      at Library.FindOccurrences(String s, String f)  
   at Example.Main()  
  
```  
  
 <span data-ttu-id="fecb8-205">Une alternative légèrement plus lourde consiste à lever une exception et pour conserver les informations de pile des appels de l’exception d’origine dans une exception interne.</span><span class="sxs-lookup"><span data-stu-id="fecb8-205">A slightly more cumbersome alternative is to throw a new exception, and to preserve the original exception's call stack information in an inner exception.</span></span> <span data-ttu-id="fecb8-206">L’appelant peut utiliser ensuite la nouvelle exception <xref:System.Exception.InnerException%2A> propriété à récupérer le frame de pile et d’autres informations relatives à l’exception d’origine.</span><span class="sxs-lookup"><span data-stu-id="fecb8-206">The caller can then use the new exception's <xref:System.Exception.InnerException%2A> property to retrieve stack frame and other information about the original exception.</span></span> <span data-ttu-id="fecb8-207">Dans ce cas, l’instruction throw est :</span><span class="sxs-lookup"><span data-stu-id="fecb8-207">In this case, the throw statement is:</span></span>  
  
 [!code-csharp[System.Exception.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#8)]
 [!code-vb[System.Exception.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#8)]  
  
 <span data-ttu-id="fecb8-208">Le code utilisateur qui gère l’exception doit savoir si le <xref:System.Exception.InnerException%2A> propriété contient des informations sur l’exception d’origine, comme l’illustre le Gestionnaire d’exceptions.</span><span class="sxs-lookup"><span data-stu-id="fecb8-208">The user code that handles the exception has to know that the <xref:System.Exception.InnerException%2A> property contains information about the original exception, as the following exception handler illustrates.</span></span>  
  
 [!code-csharp[System.Exception.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#9)]
 [!code-vb[System.Exception.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#9)]  
  
<a name="Standard"></a>   
## <a name="choosing-standard-exceptions"></a><span data-ttu-id="fecb8-209">Choix d’exceptions standard</span><span class="sxs-lookup"><span data-stu-id="fecb8-209">Choosing standard exceptions</span></span>  
 <span data-ttu-id="fecb8-210">Lorsque vous devez lever une exception, vous pouvez souvent utiliser un type d’exception existant dans le .NET Framework au lieu d’implémenter une exception personnalisée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-210">When you have to throw an exception, you can often use an existing exception type in the .NET Framework instead of implementing a custom exception.</span></span> <span data-ttu-id="fecb8-211">Vous devez utiliser un type d’exception standard dans ces deux conditions :</span><span class="sxs-lookup"><span data-stu-id="fecb8-211">You should use a standard exception type under these two conditions:</span></span>  
  
-   <span data-ttu-id="fecb8-212">Vous lèvent une exception provoquée par une erreur d’utilisation (autrement dit, par une erreur dans la logique de programme effectuée par le développeur qui appelle votre méthode).</span><span class="sxs-lookup"><span data-stu-id="fecb8-212">You are throwing an exception that is caused by a usage error (that is, by an error in program logic made by the developer who is calling your method).</span></span> <span data-ttu-id="fecb8-213">En règle générale, vous lèverait une exception comme <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, ou <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-213">Typically, you would throw an exception such as <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, or <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="fecb8-214">La chaîne que vous fournissez au constructeur de l’objet exception lors de l’instanciation de l’objet exception doit décrire l’erreur afin que le développeur peut résoudre le problème.</span><span class="sxs-lookup"><span data-stu-id="fecb8-214">The string you supply to the exception object's constructor when instantiating the exception object should describe the error so that the developer can fix it.</span></span> <span data-ttu-id="fecb8-215">Pour plus d'informations, consultez la propriété <xref:System.Exception.Message%2A>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-215">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="fecb8-216">Vous gérez une erreur qui peut être communiquée à l’appelant avec une exception .NET Framework existante.</span><span class="sxs-lookup"><span data-stu-id="fecb8-216">You are handling an error that can be communicated to the caller with an existing .NET Framework exception.</span></span> <span data-ttu-id="fecb8-217">Vous devez lever l’exception la plus dérivée possible.</span><span class="sxs-lookup"><span data-stu-id="fecb8-217">You should throw the most derived exception possible.</span></span> <span data-ttu-id="fecb8-218">Par exemple, si une méthode requiert un argument d’être un membre valide d’un type énumération, vous devez lever une <xref:System.ComponentModel.InvalidEnumArgumentException> (la classe dérivée le meilleur) plutôt qu’un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-218">For example, if a method requires an argument to be a valid member of an enumeration type, you should throw an <xref:System.ComponentModel.InvalidEnumArgumentException> (the most derived class) rather than an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="fecb8-219">Le tableau suivant répertorie les types d’exceptions courantes et les conditions sous lesquelles vous les lèverait.</span><span class="sxs-lookup"><span data-stu-id="fecb8-219">The following table lists common exception types and the conditions under which you would throw them.</span></span>  
  
|<span data-ttu-id="fecb8-220">Exception</span><span class="sxs-lookup"><span data-stu-id="fecb8-220">Exception</span></span>|<span data-ttu-id="fecb8-221">Condition</span><span class="sxs-lookup"><span data-stu-id="fecb8-221">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.ArgumentException>|<span data-ttu-id="fecb8-222">Un argument non null qui est passé à une méthode n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="fecb8-222">A non-null argument that is passed to a method is invalid.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="fecb8-223">Est un argument qui est passé à une méthode `null`.</span><span class="sxs-lookup"><span data-stu-id="fecb8-223">An argument that is passed to a method is `null`.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="fecb8-224">Un argument est en dehors de la plage de valeurs valides.</span><span class="sxs-lookup"><span data-stu-id="fecb8-224">An argument is outside the range of valid values.</span></span>|  
|<xref:System.IO.DirectoryNotFoundException>|<span data-ttu-id="fecb8-225">Partie d’un chemin de répertoire n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="fecb8-225">Part of a directory path is not valid.</span></span>|  
|<xref:System.DivideByZeroException>|<span data-ttu-id="fecb8-226">Le dénominateur dans un entier ou <xref:System.Decimal> opération de division est zéro.</span><span class="sxs-lookup"><span data-stu-id="fecb8-226">The denominator in an integer or <xref:System.Decimal> division operation is zero.</span></span>|  
|<xref:System.IO.DriveNotFoundException>|<span data-ttu-id="fecb8-227">Un lecteur n’est pas disponible ou n’existe pas.</span><span class="sxs-lookup"><span data-stu-id="fecb8-227">A drive is unavailable or does not exist.</span></span>|  
|<xref:System.IO.FileNotFoundException>|<span data-ttu-id="fecb8-228">Un fichier n’existe pas.</span><span class="sxs-lookup"><span data-stu-id="fecb8-228">A file does not exist.</span></span>|  
|<xref:System.FormatException>|<span data-ttu-id="fecb8-229">Une valeur n’est pas dans un format approprié à convertir à partir d’une chaîne par une méthode de conversion comme `Parse`.</span><span class="sxs-lookup"><span data-stu-id="fecb8-229">A value is not in an appropriate format to be converted from a string by a conversion method such as `Parse`.</span></span>|  
|<xref:System.IndexOutOfRangeException>|<span data-ttu-id="fecb8-230">Un index est en dehors des limites d’un tableau ou une collection.</span><span class="sxs-lookup"><span data-stu-id="fecb8-230">An index is outside the bounds of an array or collection.</span></span>|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="fecb8-231">Un appel de méthode n’est pas valide dans l’état actuel d’un objet.</span><span class="sxs-lookup"><span data-stu-id="fecb8-231">A method call is invalid in an object's current state.</span></span>|  
|<xref:System.Collections.Generic.KeyNotFoundException>|<span data-ttu-id="fecb8-232">Impossible de trouver la clé spécifiée pour l’accès à un membre dans une collection.</span><span class="sxs-lookup"><span data-stu-id="fecb8-232">The specified key for accessing a member in a collection cannot be found.</span></span>|  
|<xref:System.NotImplementedException>|<span data-ttu-id="fecb8-233">Une méthode ou l’opération n’est pas implémentée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-233">A method or operation is not implemented.</span></span>|  
|<xref:System.NotSupportedException>|<span data-ttu-id="fecb8-234">Une méthode ou l’opération n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="fecb8-234">A method or operation is not supported.</span></span>|  
|<xref:System.ObjectDisposedException>|<span data-ttu-id="fecb8-235">Une opération est effectuée sur un objet qui a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="fecb8-235">An operation is performed on an object that has been disposed.</span></span>|  
|<xref:System.OverflowException>|<span data-ttu-id="fecb8-236">Une opération arithmétique, de casting ou de conversion engendre un dépassement de capacité.</span><span class="sxs-lookup"><span data-stu-id="fecb8-236">An arithmetic, casting, or conversion operation results in an overflow.</span></span>|  
|<xref:System.IO.PathTooLongException>|<span data-ttu-id="fecb8-237">Un chemin d’accès ou nom de fichier dépasse la longueur maximale définie par le système.</span><span class="sxs-lookup"><span data-stu-id="fecb8-237">A path or file name exceeds the maximum system-defined length.</span></span>|  
|<xref:System.PlatformNotSupportedException>|<span data-ttu-id="fecb8-238">L’opération n’est pas pris en charge sur la plateforme actuelle.</span><span class="sxs-lookup"><span data-stu-id="fecb8-238">The operation is not supported on the current platform.</span></span>|  
|<xref:System.RankException>|<span data-ttu-id="fecb8-239">Un tableau ayant un nombre incorrect de dimensions est passé à une méthode.</span><span class="sxs-lookup"><span data-stu-id="fecb8-239">An array with the wrong number of dimensions is passed to a method.</span></span>|  
|<xref:System.TimeoutException>|<span data-ttu-id="fecb8-240">L’intervalle de temps alloué à une opération a expiré.</span><span class="sxs-lookup"><span data-stu-id="fecb8-240">The time interval allotted to an operation has expired.</span></span>|  
|<xref:System.UriFormatException>|<span data-ttu-id="fecb8-241">Un non valide identificateur URI (Uniform Resource) est utilisé.</span><span class="sxs-lookup"><span data-stu-id="fecb8-241">An invalid Uniform Resource Identifier (URI) is used.</span></span>|  
  
<a name="Custom"></a>   
## <a name="implementing-custom-exceptions"></a><span data-ttu-id="fecb8-242">Implémentation d’exceptions personnalisées</span><span class="sxs-lookup"><span data-stu-id="fecb8-242">Implementing custom exceptions</span></span>  
 <span data-ttu-id="fecb8-243">Dans les cas suivants, à l’aide d’une exception .NET Framework existante pour gérer une condition d’erreur n’est pas suffisante :</span><span class="sxs-lookup"><span data-stu-id="fecb8-243">In the following cases, using an existing .NET Framework exception to handle an error condition is not adequate:</span></span>  
  
-   <span data-ttu-id="fecb8-244">Lorsque l’exception reflète une erreur de programme unique qui ne peut pas être mappée à une exception .NET Framework existante.</span><span class="sxs-lookup"><span data-stu-id="fecb8-244">When the exception reflects a unique program error that cannot be mapped to an existing .NET Framework exception.</span></span>  
  
-   <span data-ttu-id="fecb8-245">Lorsque l’exception nécessite que la gestion est différente de la gestion qui convient à une exception .NET Framework existante, ou l’exception doit éviter toute ambiguïté à partir d’une exception semblable.</span><span class="sxs-lookup"><span data-stu-id="fecb8-245">When the exception requires handling that is different from the handling that is appropriate for an existing .NET Framework exception, or the exception must be disambiguated from a similar exception.</span></span> <span data-ttu-id="fecb8-246">Par exemple, si vous levez une <xref:System.ArgumentOutOfRangeException> exception lors de l’analyse de la représentation numérique d’une chaîne qui est en dehors de la plage du type intégral cible, vous souhaitez pas utiliser la même exception pour une erreur qui résulte de l’appelant ne fournissant ne pas le valeurs de contrainte appropriées lors de l’appel de la méthode.</span><span class="sxs-lookup"><span data-stu-id="fecb8-246">For example, if you throw an <xref:System.ArgumentOutOfRangeException> exception when parsing the numeric representation of a string that is out of range of the target integral type, you would not want to use the same exception for an error that results from the caller not supplying the appropriate constrained values when calling the method.</span></span>  
  
 <span data-ttu-id="fecb8-247">Le <xref:System.Exception> est la classe de base de toutes les exceptions dans le .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="fecb8-247">The <xref:System.Exception> class is the base class of all exceptions in the .NET Framework.</span></span> <span data-ttu-id="fecb8-248">De nombreuses classes dérivées s’appuient sur le comportement hérité des membres de la <xref:System.Exception> classe ; ils ne remplacent pas les membres de <xref:System.Exception>, ni de faire tous les membres uniques.</span><span class="sxs-lookup"><span data-stu-id="fecb8-248">Many derived classes rely on the inherited behavior of the members of the <xref:System.Exception> class; they do not override the members of <xref:System.Exception>, nor do they define any unique members.</span></span>  
  
 <span data-ttu-id="fecb8-249">Pour définir votre propre classe d’exception :</span><span class="sxs-lookup"><span data-stu-id="fecb8-249">To define your own exception class:</span></span>  
  
1.  <span data-ttu-id="fecb8-250">Définissez une classe qui hérite de <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-250">Define a class that inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="fecb8-251">Si nécessaire, définissez tous les membres uniques requis par votre classe pour fournir des informations supplémentaires relatives à l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-251">If necessary, define any unique members needed by your class to provide additional information about the exception.</span></span> <span data-ttu-id="fecb8-252">Par exemple, le <xref:System.ArgumentException> classe inclut un <xref:System.ArgumentException.ParamName%2A> propriété qui spécifie le nom du paramètre dont l’argument a provoqué l’exception, et le <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> propriété inclut un <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> propriété qui indique l’intervalle de délai d’attente.</span><span class="sxs-lookup"><span data-stu-id="fecb8-252">For example, the <xref:System.ArgumentException> class includes a <xref:System.ArgumentException.ParamName%2A> property that specifies the name of the parameter whose argument caused the exception, and the <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> property includes a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> property that indicates the time-out interval.</span></span>  
  
2.  <span data-ttu-id="fecb8-253">Si la méthode qui lève cette exception n’est pas disponible et la trace de pile n’est pas une référence null ( en Visual Basic),  Obtient la méthode à partir de la trace de pile.</span><span class="sxs-lookup"><span data-stu-id="fecb8-253">If necessary, override any inherited members whose functionality you want to change or modify.</span></span> <span data-ttu-id="fecb8-254">Le <xref:System.Exception> propriété ne peut pas signaler correctement le nom de la méthode dans laquelle une exception a été levée si le Gestionnaire d’exceptions gère une exception sur les limites du domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="fecb8-254">Note that most existing derived classes of <xref:System.Exception> do not override the behavior of inherited members.</span></span>  
  
3.  <span data-ttu-id="fecb8-255">Le code suivant exemple lève une  intercepte et affiche la méthode d’origine à l’aide du  propriété.</span><span class="sxs-lookup"><span data-stu-id="fecb8-255">Determine whether your custom exception object is serializable.</span></span> <span data-ttu-id="fecb8-256">Retourne une représentation de l’exception actuelle est destinée à être compréhensible par les utilisateurs.</span><span class="sxs-lookup"><span data-stu-id="fecb8-256">Serialization enables you to save information about the exception and permits exception information to be shared by a server and a client proxy in a remoting context.</span></span> <span data-ttu-id="fecb8-257">Lorsque l’exception contient des données de la culture, la représentation sous forme de chaîne retournée par <xref:System.SerializableAttribute> est requise pour prendre en compte la culture système actuelle.</span><span class="sxs-lookup"><span data-stu-id="fecb8-257">To make the exception object serializable, mark it with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
4.  <span data-ttu-id="fecb8-258">Bien qu’il n’existe aucune configuration requise exacte pour le format de la chaîne retournée, il doit tenter de refléter la valeur de l’objet en tant que perçue par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-258">Define the constructors of your exception class.</span></span> <span data-ttu-id="fecb8-259">L’implémentation par défaut de  Obtient le nom de la classe qui a levé l’exception actuelle, le message, le résultat de l’appel  sur l’exception interne et le résultat de l’appel .</span><span class="sxs-lookup"><span data-stu-id="fecb8-259">Typically, exception classes have one or more of the following constructors:</span></span>  
  
    -   <span data-ttu-id="fecb8-260"><xref:System.Exception.%23ctor>Si un de ces membres est <xref:System.Exception.%23ctor>, sa valeur n’est pas incluse dans la chaîne retournée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-260"><xref:System.Exception.%23ctor>, which uses default values to initialize the properties of a new exception object.</span></span>  
  
    -   <span data-ttu-id="fecb8-261"><xref:System.Exception.%23ctor%28System.String%29>S’il n’existe aucun message d’erreur ou s’il s’agit d’une chaîne vide (" »), aucun message d’erreur est retournée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-261"><xref:System.Exception.%23ctor%28System.String%29>, which initializes a new exception object with a specified error message.</span></span>  
  
    -   <span data-ttu-id="fecb8-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>Le nom de l’exception interne et la trace de pile sont retournés uniquement s’ils ne sont pas <xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, which initializes a new exception object with a specified error message and inner exception.</span></span>  
  
    -   <span data-ttu-id="fecb8-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>L’exemple suivant provoque une exception et affiche le résultat de l’appel <xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> sur cette exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, which is a `protected` constructor that initializes a new exception object from serialized data.</span></span> <span data-ttu-id="fecb8-264">Notez que le  méthode est appelée implicitement lorsque l’instance de classe d’Exception s’affiche dans la liste d’arguments de la  (méthode).</span><span class="sxs-lookup"><span data-stu-id="fecb8-264">You should implement this constructor if you've chosen to make your exception object serializable.</span></span>  
  
 <span data-ttu-id="fecb8-265">L’exemple suivant illustre l’utilisation d’une classe d’exception personnalisée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-265">The following example illustrates the use of a custom exception class.</span></span> <span data-ttu-id="fecb8-266">Il définit un `NotPrimeException` exception levée lorsqu’un client tente de récupérer une séquence de nombres premiers en spécifiant un numéro de départ n’est pas privilégiée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-266">It defines a `NotPrimeException` exception that is thrown when a client tries to retrieve a sequence of prime numbers by specifying a starting number that is not prime.</span></span> <span data-ttu-id="fecb8-267">L’exception définit une nouvelle propriété, `NonPrime`, qui retourne le non-nombre premier l’ayant provoqué l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-267">The exception defines a new property, `NonPrime`, that returns the non-prime number that caused the exception.</span></span> <span data-ttu-id="fecb8-268">Outre l’implémentation d’un constructeur sans paramètre protégé et un constructeur avec <xref:System.Runtime.Serialization.SerializationInfo> et <xref:System.Runtime.Serialization.StreamingContext> paramètres pour la sérialisation, le `NotPrimeException` classe définit trois constructeurs supplémentaires pour prendre en charge le `NonPrime` propriété.</span><span class="sxs-lookup"><span data-stu-id="fecb8-268">Besides implementing a protected parameterless constructor and a constructor with <xref:System.Runtime.Serialization.SerializationInfo> and <xref:System.Runtime.Serialization.StreamingContext> parameters for serialization, the `NotPrimeException` class defines three additional constructors to support the `NonPrime` property.</span></span>  <span data-ttu-id="fecb8-269">Chaque constructeur appelle un constructeur de classe de base en plus de la préservation de la valeur du nombre premier.</span><span class="sxs-lookup"><span data-stu-id="fecb8-269">Each constructor calls a base class constructor in addition to preserving the value of the non-prime number.</span></span> <span data-ttu-id="fecb8-270">Le `NotPrimeException` est également marquée avec le <xref:System.SerializableAttribute> attribut.</span><span class="sxs-lookup"><span data-stu-id="fecb8-270">The `NotPrimeException` class is also marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Exception.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/notprimeexception.cs#1)]
 [!code-vb[System.Exception.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/notprimeexception.vb#1)]  
  
 <span data-ttu-id="fecb8-271">Le `PrimeNumberGenerator` classe illustrée dans l’exemple suivant utilise le crible d’Ératosthène pour calculer la séquence de nombres premiers de 2 à une limite spécifiée par le client dans l’appel à son constructeur de classe.</span><span class="sxs-lookup"><span data-stu-id="fecb8-271">The `PrimeNumberGenerator` class shown in the following example uses the Sieve of Eratosthenes to calculate the sequence of prime numbers from 2 to a limit specified by the client in the call to its class constructor.</span></span> <span data-ttu-id="fecb8-272">Le `GetPrimesFrom` méthode retourne tous les nombres premiers qui sont supérieurs ou égaux à une limite inférieure spécifiée, mais lève une `NotPrimeException` si cette limite inférieure n’est pas un nombre premier.</span><span class="sxs-lookup"><span data-stu-id="fecb8-272">The `GetPrimesFrom` method returns all prime numbers that are greater than or equal to a specified lower limit, but throws a `NotPrimeException` if that lower limit is not a prime number.</span></span>  
  
 [!code-csharp[System.Exception.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/primenumbergenerator.cs#2)]
 [!code-vb[System.Exception.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/primenumbergenerator.vb#2)]  
  
 <span data-ttu-id="fecb8-273">L’exemple suivant effectue deux appels à la `GetPrimesFrom` méthode avec des nombres non premiers, un qui dépasse les limites du domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="fecb8-273">The following example makes two calls to the `GetPrimesFrom` method with non-prime numbers, one of which crosses application domain boundaries.</span></span> <span data-ttu-id="fecb8-274">Dans les deux cas, l’exception est levée et gérée correctement dans le code client.</span><span class="sxs-lookup"><span data-stu-id="fecb8-274">In both cases, the exception is thrown and successfully handled in client code.</span></span>  
  
 [!code-csharp[System.Exception.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/example.cs#3)]
 [!code-vb[System.Exception.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/example.vb#3)]  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="fecb8-275">Windows Runtime et [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="fecb8-275">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="fecb8-276">Dans [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] pour [!INCLUDE[win8](~/includes/win8-md.md)], certaines informations sur l’exception sont généralement perdues lorsqu’une exception est propagée par le biais des frames de pile non .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="fecb8-276">In [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] for [!INCLUDE[win8](~/includes/win8-md.md)], some exception information is typically lost when an exception is propagated through non-.NET Framework stack frames.</span></span> <span data-ttu-id="fecb8-277">En commençant par le [!INCLUDE[net_v451](~/includes/net-v451-md.md)] et [!INCLUDE[win81](~/includes/win81-md.md)], le common language runtime continue d’utiliser la version d’origine <xref:System.Exception> objet qui a été levée, sauf si cette exception a été modifiée dans un frame de pile non .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="fecb8-277">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the common language runtime continues to use the original <xref:System.Exception> object that was thrown unless that exception was modified in a non-.NET Framework stack frame.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-278">L’exemple suivant montre un `catch` bloc qui est défini pour gérer <xref:System.ArithmeticException> erreurs.</span><span class="sxs-lookup"><span data-stu-id="fecb8-278">The following example demonstrates a `catch` block that is defined to handle <xref:System.ArithmeticException> errors.</span></span> <span data-ttu-id="fecb8-279">Cela `catch` bloquer également les captures <xref:System.DivideByZeroException> erreurs, car <xref:System.DivideByZeroException> dérive <xref:System.ArithmeticException> et qu’il existe aucune `catch` bloc défini explicitement pour <xref:System.DivideByZeroException> erreurs.</span><span class="sxs-lookup"><span data-stu-id="fecb8-279">This `catch` block also catches <xref:System.DivideByZeroException> errors, because <xref:System.DivideByZeroException> derives from <xref:System.ArithmeticException> and there is no `catch` block explicitly defined for <xref:System.DivideByZeroException> errors.</span></span>  
  
 [!code-cpp[CatchException#1](~/samples/snippets/cpp/VS_Snippets_CLR/CatchException/CPP/catchexception.cpp#1)]
 [!code-csharp[CatchException#1](~/samples/snippets/csharp/VS_Snippets_CLR/CatchException/CS/catchexception.cs#1)]
 [!code-vb[CatchException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CatchException/VB/catchexception.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-280">Initialise une nouvelle instance de la classe <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-280">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-281">Initialise une nouvelle instance de la classe <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-281">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-282">Ce constructeur initialise la propriété <xref:System.Exception.Message%2A> de la nouvelle instance en lui assignant un message système qui décrit l'erreur et prend en compte la culture du système en cours.</span><span class="sxs-lookup"><span data-stu-id="fecb8-282">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error and takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="fecb8-283">Toutes les classes dérivées doivent fournir ce constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="fecb8-283">All the derived classes should provide this default constructor.</span></span> <span data-ttu-id="fecb8-284">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-284">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="fecb8-285">Property</span><span class="sxs-lookup"><span data-stu-id="fecb8-285">Property</span></span>|<span data-ttu-id="fecb8-286">Value</span><span class="sxs-lookup"><span data-stu-id="fecb8-286">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="fecb8-287">Référence Null (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fecb8-287">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="fecb8-288">Description localisée fournie par le système.</span><span class="sxs-lookup"><span data-stu-id="fecb8-288">A system-supplied localized description.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-289">L’exemple de code suivant dérive un `Exception` qui utilise un message prédéfini.</span><span class="sxs-lookup"><span data-stu-id="fecb8-289">The following code example derives an `Exception` that uses a predefined message.</span></span> <span data-ttu-id="fecb8-290">Le code illustre l’utilisation du constructeur sans paramètre pour la classe dérivée et la base de `Exception` classe.</span><span class="sxs-lookup"><span data-stu-id="fecb8-290">The code demonstrates the use of the parameterless constructor for the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/new.cpp#1)]
 [!code-csharp[System.Exception.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/new.cs#1)]
 [!code-vb[System.Exception.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/new.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new Exception : string -&gt; Exception" Usage="new System.Exception message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="fecb8-291">Message décrivant l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-291">The message that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fecb8-292">Initialise une nouvelle instance de la classe <see cref="T:System.Exception" /> avec un message d'erreur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-292">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-293">Ce constructeur initialise la <xref:System.Exception.Message%2A> propriété de la nouvelle instance à l’aide de le `message` paramètre.</span><span class="sxs-lookup"><span data-stu-id="fecb8-293">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance by using the `message` parameter.</span></span> <span data-ttu-id="fecb8-294">Si le `message` paramètre est `null`, ceci est le même que si vous appelez le <xref:System.Exception.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-294">If the `message` parameter is `null`, this is the same as calling the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="fecb8-295">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-295">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="fecb8-296">Property</span><span class="sxs-lookup"><span data-stu-id="fecb8-296">Property</span></span>|<span data-ttu-id="fecb8-297">Value</span><span class="sxs-lookup"><span data-stu-id="fecb8-297">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="fecb8-298">Référence Null (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fecb8-298">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="fecb8-299">Chaîne du message d'erreur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-299">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-300">L’exemple de code suivant dérive un `Exception` pour une condition spécifique.</span><span class="sxs-lookup"><span data-stu-id="fecb8-300">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="fecb8-301">Le code illustre l’utilisation du constructeur qui prend un message spécifié par l’appelant en tant que paramètre, pour la classe dérivée et la base de `Exception` classe.</span><span class="sxs-lookup"><span data-stu-id="fecb8-301">The code demonstrates the use of the constructor that takes a caller-specified message as a parameter, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/news.cpp#2)]
 [!code-csharp[System.Exception.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/news.cs#2)]
 [!code-vb[System.Exception.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/news.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Exception (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new Exception : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; Exception" Usage="new System.Exception (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="fecb8-302">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d'objet sérialisées concernant l'exception levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-302">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="fecb8-303">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles relatives à la source ou à la destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-303">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fecb8-304">Initialise une nouvelle instance de la classe <see cref="T:System.Exception" /> avec des données sérialisées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-304">Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-305">Ce constructeur est appelé lors de la désérialisation pour reconstituer l’objet exception transmis sur un flux.</span><span class="sxs-lookup"><span data-stu-id="fecb8-305">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="fecb8-306">Pour plus d’informations, consultez [sérialisation XML et SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="fecb8-306">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-307">L’exemple de code suivant définit une dérivée sérialisable `Exception` classe.</span><span class="sxs-lookup"><span data-stu-id="fecb8-307">The following code example defines a derived serializable `Exception` class.</span></span> <span data-ttu-id="fecb8-308">Le code impose une erreur de division par 0, puis crée une instance de l’exception dérivée à l’aide du (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) constructeur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-308">The code forces a divide-by-0 error and then creates an instance of the derived exception using the (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) constructor.</span></span> <span data-ttu-id="fecb8-309">Le code sérialise l’instance dans un fichier, désérialise le fichier dans une nouvelle exception, elle lève, puis intercepte et affiche les données de l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-309">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fecb8-310">Le paramètre <paramref name="info" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-310">The <paramref name="info" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="fecb8-311">Le nom de la classe est <see langword="null" /> ou <see cref="P:System.Exception.HResult" /> est zéro (0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-311">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new Exception : string * Exception -&gt; Exception" Usage="new System.Exception (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="fecb8-312">Message d'erreur qui explique la raison de l'exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-312">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="fecb8-313">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-313">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fecb8-314">Initialise une nouvelle instance de la classe <see cref="T:System.Exception" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-314">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-315">Une exception levée en conséquence directe d'une exception précédente doit contenir une référence à celle-ci dans la propriété <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-315">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="fecb8-316">La propriété <xref:System.Exception.InnerException%2A> retourne la même valeur que celle qui a été passée dans le constructeur ou une référence Null (`Nothing` en Visual Basic), si la propriété <xref:System.Exception.InnerException%2A> ne fournit pas la valeur de l'exception interne au constructeur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-316">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="fecb8-317">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-317">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="fecb8-318">Property</span><span class="sxs-lookup"><span data-stu-id="fecb8-318">Property</span></span>|<span data-ttu-id="fecb8-319">Value</span><span class="sxs-lookup"><span data-stu-id="fecb8-319">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="fecb8-320">La référence à l'exception interne.</span><span class="sxs-lookup"><span data-stu-id="fecb8-320">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="fecb8-321">Chaîne du message d'erreur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-321">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-322">L’exemple de code suivant dérive un `Exception` pour une condition spécifique.</span><span class="sxs-lookup"><span data-stu-id="fecb8-322">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="fecb8-323">Le code illustre l’utilisation du constructeur qui prend un message et une exception interne comme paramètres pour la classe dérivée et la base de `Exception` classe.</span><span class="sxs-lookup"><span data-stu-id="fecb8-323">The code demonstrates the use of the constructor that takes a message and an inner exception as parameters, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/newsi.cpp#3)]
 [!code-csharp[System.Exception.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/newsi.cs#3)]
 [!code-vb[System.Exception.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/newsi.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Data" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Data { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Collections.IDictionary" Usage="System.Exception.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-324">Obtient une collection de paires clé/valeur qui fournissent des informations supplémentaires définies par l’utilisateur sur l’exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-324">Gets a collection of key/value pairs that provide additional user-defined information about the exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fecb8-325">Objet qui implémente l'interface <see cref="T:System.Collections.IDictionary" /> et contient une collection de paires clé/valeur définies par l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-325">An object that implements the <see cref="T:System.Collections.IDictionary" /> interface and contains a collection of user-defined key/value pairs.</span>
          </span>
          <span data-ttu-id="fecb8-326">La valeur par défaut est une collection vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-326">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-327">Utilisez le <xref:System.Collections.IDictionary?displayProperty=nameWithType> objet retourné par la <xref:System.Exception.Data%2A> propriété pour stocker et récupérer des informations supplémentaires concernant l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-327">Use the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object returned by the <xref:System.Exception.Data%2A> property to store and retrieve supplementary information relevant to the exception.</span></span> <span data-ttu-id="fecb8-328">Les informations sont sous la forme d’un nombre arbitraire de paires clé/valeur définies par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-328">The information is in the form of an arbitrary number of user-defined key/value pairs.</span></span> <span data-ttu-id="fecb8-329">Le composant clé de chaque paire clé/valeur est généralement une chaîne d’identification, tandis que le composant de valeur de la paire peut être tout type d’objet.</span><span class="sxs-lookup"><span data-stu-id="fecb8-329">The key component of each key/value pair is typically an identifying string, whereas the value component of the pair can be any type of object.</span></span>  
  
## <a name="keyvalue-pair-security"></a><span data-ttu-id="fecb8-330">Sécurité de paire clé/valeur</span><span class="sxs-lookup"><span data-stu-id="fecb8-330">Key/Value Pair Security</span></span>  
 <span data-ttu-id="fecb8-331">Les paires clé/valeur stockées dans la collection retournée par la <xref:System.Exception.Data%2A> propriété ne sont pas sécurisés.</span><span class="sxs-lookup"><span data-stu-id="fecb8-331">The key/value pairs stored in the collection returned by the <xref:System.Exception.Data%2A> property are not secure.</span></span> <span data-ttu-id="fecb8-332">Si votre application appelle une série imbriquée de routines et que chaque routine contient des gestionnaires d’exceptions, la pile des appels qui en résulte contient une hiérarchie de ces gestionnaires d’exceptions.</span><span class="sxs-lookup"><span data-stu-id="fecb8-332">If your application calls a nested series of routines, and each routine contains exception handlers, the resulting call stack contains a hierarchy of those exception handlers.</span></span> <span data-ttu-id="fecb8-333">Si une routine de niveau inférieur lève une exception, tout gestionnaire d’exceptions de niveau supérieur dans la hiérarchie de la pile des appels peut lire et/ou modifier les paires clé/valeur stockées dans la collection par n’importe quel autre gestionnaire d’exceptions.</span><span class="sxs-lookup"><span data-stu-id="fecb8-333">If a lower-level routine throws an exception, any upper-level exception handler in the call stack hierarchy can read and/or modify the key/value pairs stored in the collection by any other exception handler.</span></span> <span data-ttu-id="fecb8-334">Cela signifie que vous devez vous assurer que les informations contenues dans les paires clé/valeur ne sont pas confidentielles et que votre application fonctionnera correctement si les informations contenues dans les paires clé/valeur sont endommagés.</span><span class="sxs-lookup"><span data-stu-id="fecb8-334">This means you must guarantee that the information in the key/value pairs is not confidential and that your application will operate correctly if the information in the key/value pairs is corrupted.</span></span>  
  
## <a name="key-conflicts"></a><span data-ttu-id="fecb8-335">Conflits de clés</span><span class="sxs-lookup"><span data-stu-id="fecb8-335">Key Conflicts</span></span>  
 <span data-ttu-id="fecb8-336">Un conflit de clés se produit lorsque les gestionnaires d’exceptions différents spécifient la même clé pour accéder à une paire clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-336">A key conflict occurs when different exception handlers specify the same key to access a key/value pair.</span></span> <span data-ttu-id="fecb8-337">Soyez prudent lorsque vous développez votre application, car la conséquence d’un conflit de clés est que les gestionnaires d’exceptions de niveau inférieur peuvent communiquer par inadvertance avec des gestionnaires d’exceptions, et cette communication peut provoquer des erreurs de programmation subtiles.</span><span class="sxs-lookup"><span data-stu-id="fecb8-337">Use caution when developing your application because the consequence of a key conflict is that lower-level exception handlers can inadvertently communicate with higher-level exception handlers, and this communication might cause subtle program errors.</span></span> <span data-ttu-id="fecb8-338">Toutefois, si vous êtes prudent, vous pouvez utiliser les conflits de clé pour améliorer votre application.</span><span class="sxs-lookup"><span data-stu-id="fecb8-338">However, if you are cautious you can use key conflicts to enhance your application.</span></span>  
  
## <a name="avoiding-key-conflicts"></a><span data-ttu-id="fecb8-339">Prévention des conflits de clé</span><span class="sxs-lookup"><span data-stu-id="fecb8-339">Avoiding Key Conflicts</span></span>  
 <span data-ttu-id="fecb8-340">Éviter les conflits de clés en adoptant une convention d’affectation de noms pour générer des clés uniques pour les paires clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-340">Avoid key conflicts by adopting a naming convention to generate unique keys for key/value pairs.</span></span> <span data-ttu-id="fecb8-341">Par exemple, une convention d’affectation de noms peut générer une clé qui se compose du nom séparé de votre application, la méthode qui fournit des informations supplémentaires pour la paire et un identificateur unique.</span><span class="sxs-lookup"><span data-stu-id="fecb8-341">For example, a naming convention might yield a key that consists of the period-delimited name of your application, the method that provides supplementary information for the pair, and a unique identifier.</span></span>  
  
 <span data-ttu-id="fecb8-342">Supposons que deux applications, nommées produits et fournisseurs, chacune possède une méthode nommée Sales.</span><span class="sxs-lookup"><span data-stu-id="fecb8-342">Suppose two applications, named Products and Suppliers, each has a method named Sales.</span></span> <span data-ttu-id="fecb8-343">La méthode ventes dans l’application produits fournit le numéro d’identification (le stock de stockage ou CDs) d’un produit.</span><span class="sxs-lookup"><span data-stu-id="fecb8-343">The Sales method in the Products application provides the identification number (the stock keeping unit or SKU) of a product.</span></span> <span data-ttu-id="fecb8-344">La méthode de ventes dans l’application fournisseurs fournit le numéro d’identification, ou SID, d’un fournisseur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-344">The Sales method in the Suppliers application provides the identification number, or SID, of a supplier.</span></span> <span data-ttu-id="fecb8-345">Par conséquent, la convention d’affectation de noms pour cet exemple génère les clés, « Produits.ventes.CDs » et « Fournisseurs.ventes.SID ».</span><span class="sxs-lookup"><span data-stu-id="fecb8-345">Consequently, the naming convention for this example yields the keys, "Products.Sales.SKU" and "Suppliers.Sales.SID".</span></span>  
  
## <a name="exploiting-key-conflicts"></a><span data-ttu-id="fecb8-346">Exploitant les conflits de clés</span><span class="sxs-lookup"><span data-stu-id="fecb8-346">Exploiting Key Conflicts</span></span>  
 <span data-ttu-id="fecb8-347">Exploiter les conflits de clés à l’aide de la présence d’une ou plusieurs clés spéciales et préétablies pour contrôler le traitement.</span><span class="sxs-lookup"><span data-stu-id="fecb8-347">Exploit key conflicts by using the presence of one or more special, prearranged keys to control processing.</span></span> <span data-ttu-id="fecb8-348">Supposons que, dans un scénario, le Gestionnaire d’exceptions de niveau le plus élevé dans la hiérarchie de la pile des appels intercepte toutes les exceptions levées par les gestionnaires d’exceptions de niveau inférieur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-348">Suppose, in one scenario, the highest level exception handler in the call stack hierarchy catches all exceptions thrown by lower-level exception handlers.</span></span> <span data-ttu-id="fecb8-349">Si une paire clé/valeur avec une clé spéciale existe, le Gestionnaire d’exceptions de haut niveau met en forme les paires clé/valeur restantes dans le <xref:System.Collections.IDictionary> objet d’une certaine façon non standard ; sinon, les paires clé/valeur restants sont mis en forme de façon normale.</span><span class="sxs-lookup"><span data-stu-id="fecb8-349">If a key/value pair with a special key exists, the high-level exception handler formats the remaining key/value pairs in the <xref:System.Collections.IDictionary> object in some nonstandard way; otherwise, the remaining key/value pairs are formatted in some normal manner.</span></span>  
  
 <span data-ttu-id="fecb8-350">Supposons à présent, dans un autre scénario, que le Gestionnaire d’exceptions à chaque niveau de la hiérarchie de la pile des appels intercepte l’exception levée par le Gestionnaire d’exceptions de niveau inférieur suivant.</span><span class="sxs-lookup"><span data-stu-id="fecb8-350">Now suppose, in another scenario, the exception handler at each level of the call stack hierarchy catches the exception thrown by the next lower-level exception handler.</span></span> <span data-ttu-id="fecb8-351">De plus, chaque gestionnaire d’exceptions sait que la collection retournée par la <xref:System.Exception.Data%2A> propriété contient un ensemble de paires clé/valeur qui est accessible avec un ensemble préétablie de clés.</span><span class="sxs-lookup"><span data-stu-id="fecb8-351">In addition, each exception handler knows the collection returned by the <xref:System.Exception.Data%2A> property contains a set of key/value pairs that can be accessed with a prearranged set of keys.</span></span>  
  
 <span data-ttu-id="fecb8-352">Chaque gestionnaire d’exceptions utilise l’ensemble préétablie de clés pour mettre à jour le composant de valeur de la paire clé/valeur correspondante avec des informations propres à ce gestionnaire d’exceptions.</span><span class="sxs-lookup"><span data-stu-id="fecb8-352">Each exception handler uses the prearranged set of keys to update the value component of the corresponding key/value pair with information unique to that exception handler.</span></span> <span data-ttu-id="fecb8-353">Une fois le processus de mise à jour terminé, le Gestionnaire d’exceptions lève l’exception au gestionnaire d’exceptions de niveau supérieur suivant.</span><span class="sxs-lookup"><span data-stu-id="fecb8-353">After the update process is complete, the exception handler throws the exception to the next higher-level exception handler.</span></span> <span data-ttu-id="fecb8-354">Enfin, le Gestionnaire d’exceptions de niveau le plus élevé accède aux paires clé/valeur et affiche les informations de mise à jour consolidé à partir de tous les gestionnaires d’exceptions de niveau inférieur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-354">Finally, the highest level exception handler accesses the key/value pairs and displays the consolidated update information from all the lower-level exception handlers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-355">L’exemple suivant montre comment ajouter et récupérer des informations à l’aide du <xref:System.Exception.Data%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="fecb8-355">The following example demonstrates how to add and retrieve information using the <xref:System.Exception.Data%2A> property.</span></span>  
  
 [!code-cpp[exception.data#1](~/samples/snippets/cpp/VS_Snippets_CLR/exception.data/CPP/data.cpp#1)]
 [!code-csharp[exception.data#1](~/samples/snippets/csharp/VS_Snippets_CLR/exception.data/CS/data.cs#1)]
 [!code-vb[exception.data#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/exception.data/VB/data.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.DictionaryEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public virtual Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Exception ^ GetBaseException();" />
      <MemberSignature Language="F#" Value="abstract member GetBaseException : unit -&gt; Exception&#xA;override this.GetBaseException : unit -&gt; Exception" Usage="exception.GetBaseException " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetBaseException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-356">En cas de substitution dans une classe dérivée, retourne la <see cref="T:System.Exception" /> qui est à l'origine d'une ou de plusieurs exceptions ultérieures.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-356">When overridden in a derived class, returns the <see cref="T:System.Exception" /> that is the root cause of one or more subsequent exceptions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fecb8-357">Première exception levée dans une chaîne d'exceptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-357">The first exception thrown in a chain of exceptions.</span>
          </span>
          <span data-ttu-id="fecb8-358">Si la propriété <see cref="P:System.Exception.InnerException" /> de l'exception actuelle est une référence null (<see langword="Nothing" /> en Visual Basic), cette propriété retourne l'exception actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-358">If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (<see langword="Nothing" /> in Visual Basic), this property returns the current exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-359">Une chaîne d’exceptions se compose d’un ensemble d’exceptions où chaque exception de la chaîne a été levée en conséquence directe de l’exception référencée dans sa `InnerException` propriété.</span><span class="sxs-lookup"><span data-stu-id="fecb8-359">A chain of exceptions consists of a set of exceptions such that each exception in the chain was thrown as a direct result of the exception referenced in its `InnerException` property.</span></span> <span data-ttu-id="fecb8-360">Pour une chaîne donnée, il peut y avoir exactement une exception qui est la cause racine de toutes les autres exceptions dans la chaîne.</span><span class="sxs-lookup"><span data-stu-id="fecb8-360">For a given chain, there can be exactly one exception that is the root cause of all other exceptions in the chain.</span></span> <span data-ttu-id="fecb8-361">Cette exception est appelée à l’exception de base et ses `InnerException` propriété contient toujours une référence null.</span><span class="sxs-lookup"><span data-stu-id="fecb8-361">This exception is called the base exception and its `InnerException` property always contains a null reference.</span></span>  
  
 <span data-ttu-id="fecb8-362">Pour toutes les exceptions dans une chaîne d’exceptions, la `GetBaseException` méthode doit retourner le même objet (l’exception de base).</span><span class="sxs-lookup"><span data-stu-id="fecb8-362">For all exceptions in a chain of exceptions, the `GetBaseException` method must return the same object (the base exception).</span></span>  
  
 <span data-ttu-id="fecb8-363">Utilisez le `GetBaseException` méthode lorsque vous souhaitez trouver la cause d’une exception mais que vous n’avez pas besoin d’informations sur les exceptions qui se sont produites entre l’exception actuelle et la première exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-363">Use the `GetBaseException` method when you want to find the root cause of an exception but do not need information about exceptions that may have occurred between the current exception and the first exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-364">L’exemple de code suivant définit deux dérivés `Exception` classes.</span><span class="sxs-lookup"><span data-stu-id="fecb8-364">The following code example defines two derived `Exception` classes.</span></span> <span data-ttu-id="fecb8-365">Il force une exception et lève à nouveau avec chacune des classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="fecb8-365">It forces an exception and then throws it again with each of the derived classes.</span></span> <span data-ttu-id="fecb8-366">Le code illustre l’utilisation de la `GetBaseException` méthode pour récupérer l’exception d’origine.</span><span class="sxs-lookup"><span data-stu-id="fecb8-366">The code shows the use of the `GetBaseException` method to retrieve the original exception.</span></span>  
  
 [!code-cpp[System.Exception.GetBaseException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CPP/getbaseexc.cpp#1)]
 [!code-csharp[System.Exception.GetBaseException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CS/getbaseexc.cs#1)]
 [!code-vb[System.Exception.GetBaseException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetBaseException/VB/getbaseexc.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fecb8-367">
            <para>Le <see langword="GetBaseException" /> méthode est substituée dans les classes qui requièrent un contrôle le format ou le contenu de l’exception.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-367">
              <para>The <see langword="GetBaseException" /> method is overridden in classes that require control over the exception content or format.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="exception.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="fecb8-368">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d'objet sérialisées concernant l'exception levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-368">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="fecb8-369">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles relatives à la source ou à la destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-369">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fecb8-370">En cas de substitution dans une classe dérivée, définit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec des informations sur l'exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-370">When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-371">`GetObjectData` définit <xref:System.Runtime.Serialization.SerializationInfo> avec toutes les données de l'objet exception ciblées en vue d'une sérialisation.</span><span class="sxs-lookup"><span data-stu-id="fecb8-371">`GetObjectData` sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="fecb8-372">Au cours de la désérialisation, l'exception est reconstituée à partir de l'`SerializationInfo` transmises sur le flux.</span><span class="sxs-lookup"><span data-stu-id="fecb8-372">During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-373">L’exemple de code suivant définit une dérivée sérialisable `Exception` classe qui implémente `GetObjectData`, qui apporte des modifications mineures à deux propriétés, et puis appelle la classe de base pour effectuer la sérialisation.</span><span class="sxs-lookup"><span data-stu-id="fecb8-373">The following code example defines a derived serializable `Exception` class that implements `GetObjectData`, which makes minor changes to two properties and then calls the base class to perform the serialization.</span></span> <span data-ttu-id="fecb8-374">L’exemple impose une erreur de division par 0, puis crée une instance de l’exception dérivée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-374">The example forces a divide-by-0 error and then creates an instance of the derived exception.</span></span> <span data-ttu-id="fecb8-375">Le code sérialise l’instance dans un fichier, désérialise le fichier dans une nouvelle exception, elle lève, puis intercepte et affiche les données de l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-375">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fecb8-376">Le paramètre <paramref name="info" /> est une référence null (<see langword="Nothing" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-376">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="fecb8-377">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-377">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fecb8-378">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-378">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="exception.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-379">Obtient le type au moment de l'exécution de l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-379">Gets the runtime type of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fecb8-380">Objet <see cref="T:System.Type" /> qui représente le type exact au moment de l'exécution de l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-380">A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-381">Le <xref:System.Exception.GetType%2A> méthode existe pour prendre en charge l’infrastructure .NET Framework et appelle en interne la méthode fondamentale, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-381">The <xref:System.Exception.GetType%2A> method exists to support the .NET Framework infrastructure, and internally invokes the fundamental method, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public virtual string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpLink : string with get, set" Usage="System.Exception.HelpLink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.HelpLink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-382">Obtient ou définit un lien vers le fichier d'aide associé à cette exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-382">Gets or sets a link to the help file associated with this exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fecb8-383">URN (Uniform Resource Name) ou URL (Uniform Resource Locator).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-383">The Uniform Resource Name (URN) or Uniform Resource Locator (URL).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-384">La valeur de retour, qui représente un fichier d'aide, est une adresse URN ou URL.</span><span class="sxs-lookup"><span data-stu-id="fecb8-384">The return value, which represents a help file, is a URN or URL.</span></span> <span data-ttu-id="fecb8-385">Par exemple, le `HelpLink` valeur pourrait être :</span><span class="sxs-lookup"><span data-stu-id="fecb8-385">For example, the `HelpLink` value could be:</span></span>  
  
 <span data-ttu-id="fecb8-386">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span><span class="sxs-lookup"><span data-stu-id="fecb8-386">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-387">Le code suivant exemple lève une `Exception` qui définit le `HelpLink` propriété dans son constructeur, puis intercepte l’exception et l’affiche `HelpLink`.</span><span class="sxs-lookup"><span data-stu-id="fecb8-387">The following code example throws an `Exception` that sets the `HelpLink` property in its constructor and then catches the exception and displays `HelpLink`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HResult">
      <MemberSignature Language="C#" Value="public int HResult { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HResult" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HResult" />
      <MemberSignature Language="VB.NET" Value="Public Property HResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:  property int HResult {  public:&#xA;int get(); protected:&#xA; void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HResult : int with get, set" Usage="System.Exception.HResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-388">Obtient ou définit HRESULT, valeur numérique codée qui est assignée à une exception spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-388">Gets or sets HRESULT, a coded numerical value that is assigned to a specific exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fecb8-389">Valeur HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-389">The HRESULT value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-390">HRESULT est une valeur 32 bits, divisée en trois champs : un code de gravité, un code de service et un code d’erreur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-390">HRESULT is a 32-bit value, divided into three different fields: a severity code, a facility code, and an error code.</span></span> <span data-ttu-id="fecb8-391">Le code de gravité indique si la valeur de retour représente les informations, avertissement ou erreur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-391">The severity code indicates whether the return value represents information, warning, or error.</span></span> <span data-ttu-id="fecb8-392">Le code de service identifie la zone du système responsable de l’erreur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-392">The facility code identifies the area of the system responsible for the error.</span></span> <span data-ttu-id="fecb8-393">Le code d’erreur est un nombre unique affecté pour représenter une exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-393">The error code is a unique number that is assigned to represent the exception.</span></span> <span data-ttu-id="fecb8-394">Chaque exception est mappée à une valeur HRESULT distincte.</span><span class="sxs-lookup"><span data-stu-id="fecb8-394">Each exception is mapped to a distinct HRESULT.</span></span> <span data-ttu-id="fecb8-395">Lorsque le code managé lève une exception, le runtime passe la valeur HRESULT au client COM.</span><span class="sxs-lookup"><span data-stu-id="fecb8-395">When managed code throws an exception, the runtime passes the HRESULT to the COM client.</span></span> <span data-ttu-id="fecb8-396">Lorsque le code non managé retourne une erreur, le HRESULT est converti en une exception, qui est ensuite levée par le runtime.</span><span class="sxs-lookup"><span data-stu-id="fecb8-396">When unmanaged code returns an error, the HRESULT is converted to an exception, which is then thrown by the runtime.</span></span> <span data-ttu-id="fecb8-397">Pour plus d’informations sur les valeurs HRESULT et les exceptions de .NET Framework correspondantes, consultez [Comment : Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="fecb8-397">For information about HRESULT values and their corresponding .NET Framework exceptions, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span> <span data-ttu-id="fecb8-398">Consultez [valeurs HRESULT courantes](http://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) dans la documentation de Windows pour obtenir la liste des valeurs que vous êtes plus susceptible de rencontrer.</span><span class="sxs-lookup"><span data-stu-id="fecb8-398">See [Common HRESULT Values](http://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) in the Windows documentation for a list of the values you are most likely to encounter.</span></span>  
  
 <span data-ttu-id="fecb8-399">En commençant par le [!INCLUDE[net_v45](~/includes/net-v45-md.md)], le <xref:System.Exception.HResult%2A> accesseur Set de la propriété est protégé, tandis que sa méthode getter est public.</span><span class="sxs-lookup"><span data-stu-id="fecb8-399">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Exception.HResult%2A> property's setter is protected, whereas its getter is public.</span></span>  <span data-ttu-id="fecb8-400">Dans les versions précédentes du .NET Framework, les méthodes getter et setter sont protégées.</span><span class="sxs-lookup"><span data-stu-id="fecb8-400">In previous versions of the .NET Framework, both getter and setter are protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-401">L’exemple de code suivant définit une dérivée `Exception` classe qui définit le `HResult` propriété à une valeur personnalisée dans son constructeur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-401">The following code example defines a derived `Exception` class that sets the `HResult` property to a custom value in its constructor.</span></span>  
  
 [!code-cpp[System.Exception.HResult#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.HResult/CPP/hresult.cpp#1)]
 [!code-csharp[System.Exception.HResult#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.HResult/CS/hresult.cs#1)]
 [!code-vb[System.Exception.HResult#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.HResult/VB/hresult.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerException : Exception" Usage="System.Exception.InnerException" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.InnerException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-402">Obtient l'instance <see cref="T:System.Exception" /> qui a provoqué l'exception actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-402">Gets the <see cref="T:System.Exception" /> instance that caused the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fecb8-403">Objet décrivant l'erreur qui a provoqué l'exception actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-403">An object that describes the error that caused the current exception.</span>
          </span>
          <span data-ttu-id="fecb8-404">La propriété <see cref="P:System.Exception.InnerException" /> retourne la même valeur que celle transmise au constructeur <see cref="M:System.Exception.#ctor(System.String,System.Exception)" />, ou <see langword="null" /> si la valeur de l'exception interne n'a pas été fournie au constructeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-404">The <see cref="P:System.Exception.InnerException" /> property returns the same value as was passed into the <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> constructor, or <see langword="null" /> if the inner exception value was not supplied to the constructor.</span>
          </span>
          <span data-ttu-id="fecb8-405">Cette propriété est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-405">This property is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-406">Lorsqu’une exception `X` est levée en conséquence directe d’une exception précédente `Y`, le <xref:System.Exception.InnerException%2A> propriété du `X` doit contenir une référence à `Y`.</span><span class="sxs-lookup"><span data-stu-id="fecb8-406">When an exception `X` is thrown as a direct result of a previous exception `Y`, the <xref:System.Exception.InnerException%2A> property of `X` should contain a reference to `Y`.</span></span>  
  
 <span data-ttu-id="fecb8-407">Utilisez la propriété <xref:System.Exception.InnerException%2A> pour obtenir l'ensemble d'exceptions ayant provoqué l'exception en cours.</span><span class="sxs-lookup"><span data-stu-id="fecb8-407">Use the <xref:System.Exception.InnerException%2A> property to obtain the set of exceptions that led to the current exception.</span></span>  
  
 <span data-ttu-id="fecb8-408">Vous pouvez créer une nouvelle exception qui intercepte une exception antérieure.</span><span class="sxs-lookup"><span data-stu-id="fecb8-408">You can create a new exception that catches an earlier exception.</span></span> <span data-ttu-id="fecb8-409">Le code qui gère la deuxième exception peut utiliser les informations supplémentaires à partir de l’exception antérieure pour gérer l’erreur plus convenablement.</span><span class="sxs-lookup"><span data-stu-id="fecb8-409">The code that handles the second exception can make use of the additional information from the earlier exception to handle the error more appropriately.</span></span>  
  
 <span data-ttu-id="fecb8-410">Supposons qu’une fonction qui lit un fichier et met en forme les données à partir de ce fichier.</span><span class="sxs-lookup"><span data-stu-id="fecb8-410">Suppose that there is a function that reads a file and formats the data from that file.</span></span> <span data-ttu-id="fecb8-411">Dans cet exemple, en tant que le code essaie de lire le fichier, un <xref:System.IO.IOException> est levée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-411">In this example, as the code tries to read the file, an <xref:System.IO.IOException> is thrown.</span></span> <span data-ttu-id="fecb8-412">La fonction intercepte la <xref:System.IO.IOException> et lève un <xref:System.IO.FileNotFoundException>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-412">The function catches the <xref:System.IO.IOException> and throws a <xref:System.IO.FileNotFoundException>.</span></span> <span data-ttu-id="fecb8-413">Le <xref:System.IO.IOException> peut être enregistré dans le <xref:System.Exception.InnerException%2A> propriété de la <xref:System.IO.FileNotFoundException>, permettre au code qui intercepte la <xref:System.IO.FileNotFoundException> pour examiner la cause de l’erreur initiale.</span><span class="sxs-lookup"><span data-stu-id="fecb8-413">The <xref:System.IO.IOException> could be saved in the <xref:System.Exception.InnerException%2A> property of the <xref:System.IO.FileNotFoundException>, enabling the code that catches the <xref:System.IO.FileNotFoundException> to examine the cause of the initial error.</span></span>  
  
 <span data-ttu-id="fecb8-414">Le <xref:System.Exception.InnerException%2A> propriété, qui contient une référence à l’exception interne, est définie lors de l’initialisation de l’objet exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-414">The <xref:System.Exception.InnerException%2A> property, which holds a reference to the inner exception, is set upon initialization of the exception object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-415">L’exemple suivant illustre la levée et l’interception d’une exception qui fait référence à une exception interne.</span><span class="sxs-lookup"><span data-stu-id="fecb8-415">The following example demonstrates throwing and catching an exception that references an inner exception.</span></span>  
  
 [!code-cpp[InnerEx#1](~/samples/snippets/cpp/VS_Snippets_CLR/InnerEx/CPP/innerex.cpp#1)]
 [!code-csharp[InnerEx#1](~/samples/snippets/csharp/VS_Snippets_CLR/InnerEx/CS/innerex.cs#1)]
 [!code-vb[InnerEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InnerEx/VB/innerex.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public virtual string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Exception.Message" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Message</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-416">Obtient un message qui décrit l'exception actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-416">Gets a message that describes the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fecb8-417">Message d'erreur qui explique la raison de l'exception ou bien chaîne vide ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-417">The error message that explains the reason for the exception, or an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-418">Messages d’erreur ciblent le développeur qui gère l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-418">Error messages target the developer who is handling the exception.</span></span> <span data-ttu-id="fecb8-419">Le texte de la <xref:System.Exception.Message%2A> propriété doit décrire complètement l’erreur et, dans la mesure du possible, doit également comment corriger l’erreur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-419">The text of the <xref:System.Exception.Message%2A> property should completely describe the error and, when possible, should also explain how to correct the error.</span></span> <span data-ttu-id="fecb8-420">Gestionnaires d’exceptions de niveau supérieur peuvent afficher le message aux utilisateurs finaux, afin de vous assurer qu’il est grammaticalement correct et que chaque phrase du message se termine par un point.</span><span class="sxs-lookup"><span data-stu-id="fecb8-420">Top-level exception handlers may display the message to end-users, so you should ensure that it is grammatically correct and that each sentence of the message ends with a period.</span></span> <span data-ttu-id="fecb8-421">N’utilisez pas de points d’interrogation ou des points d’exclamation.</span><span class="sxs-lookup"><span data-stu-id="fecb8-421">Do not use question marks or exclamation points.</span></span> <span data-ttu-id="fecb8-422">Si votre application utilise des messages d’exception localisé, vous devez vous assurer qu’elles sont traduites correctement.</span><span class="sxs-lookup"><span data-stu-id="fecb8-422">If your application uses localized exception messages, you should ensure that they are accurately translated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fecb8-423">Ne pas divulguer des informations sensibles dans les messages d’exception sans vérifier les autorisations appropriées.</span><span class="sxs-lookup"><span data-stu-id="fecb8-423">Do not disclose sensitive information in exception messages without checking for the appropriate permissions.</span></span>  
  
 <span data-ttu-id="fecb8-424">La valeur de la <xref:System.Exception.Message%2A> propriété est incluse dans les informations retournées par <xref:System.Exception.ToString%2A>. Le <xref:System.Exception.Message%2A> propriété est définie uniquement lorsque vous créez un <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-424">The value of the <xref:System.Exception.Message%2A> property is included in the information returned by <xref:System.Exception.ToString%2A>.The <xref:System.Exception.Message%2A> property is set only when creating an <xref:System.Exception>.</span></span> <span data-ttu-id="fecb8-425">Si aucun message n’a été fourni au constructeur pour l’instance actuelle, le système fournit un message par défaut qui est mis en forme à l’aide de la culture système actuelle.</span><span class="sxs-lookup"><span data-stu-id="fecb8-425">If no message was supplied to the constructor for the current instance, the system supplies a default message that is formatted using the current system culture.</span></span>  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="fecb8-426">Windows Runtime et [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="fecb8-426">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="fecb8-427">En commençant par le [!INCLUDE[net_v451](~/includes/net-v451-md.md)] et [!INCLUDE[win81](~/includes/win81-md.md)], la fidélité des messages d’erreur à partir d’exceptions qui sont propagés à partir des types Windows Runtime et les membres qui ne font pas partie du .NET Framework est améliorée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-427">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the fidelity of error messages from exceptions that are propagated from Windows Runtime types and members that are not part of the .NET Framework is improved.</span></span> <span data-ttu-id="fecb8-428">En particulier, messages d’exception à partir des extensions de composant Visual C++ (C++ / c++ / CX) sont maintenant propagées dans .NET Framework <xref:System.Exception> objets.</span><span class="sxs-lookup"><span data-stu-id="fecb8-428">In particular, exception messages from Visual C++ component extensions (C++/CX) are now propagated back into .NET Framework <xref:System.Exception> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-429">L’exemple de code suivant lève, puis intercepte un <xref:System.Exception> exception et affiche le texte de l’exception message en utilisant le <xref:System.Exception.Message%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="fecb8-429">The following code example throws and then catches an <xref:System.Exception> exception and displays the exception's text message using the <xref:System.Exception.Message%2A> property.</span></span>
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fecb8-430">
            <para>Si vous levez une exception à partir d’une propriété, et que vous avez besoin faire référence dans le texte de <see cref="P:System.Exception.Message" /> à l’argument de propriété que vous définissez ou obtenez, utilisez « valeur » en tant que le nom de l’argument de la propriété.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-430">
              <para>If you throw an exception from a property, and you need to refer in the text of <see cref="P:System.Exception.Message" /> to the property argument that you set or get, use "value" as the name of the property argument.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="overrides">
          <span data-ttu-id="fecb8-431">
            <para>Le <see cref="P:System.Exception.Message" /> est substituée dans les classes qui requièrent un contrôle de contenu de message ou le format. Code de l’application accède généralement à cette propriété lorsqu’il a besoin pour afficher des informations sur une exception qui a été interceptée.  Le message d’erreur doit être localisé.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-431">
              <para>The <see cref="P:System.Exception.Message" /> property is overridden in classes that require control over message content or format. Application code typically accesses this property when it needs to display information about an exception that has been caught.  The error message should be localized.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SerializeObjectState">
      <MemberSignature Language="C#" Value="protected event EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState" />
      <MemberSignature Language="DocId" Value="E:System.Exception.SerializeObjectState" />
      <MemberSignature Language="VB.NET" Value="Protected Custom Event SerializeObjectState As EventHandler(Of SafeSerializationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; event EventHandler&lt;System::Runtime::Serialization::SafeSerializationEventArgs ^&gt; ^ SerializeObjectState;" />
      <MemberSignature Language="F#" Value="member this.SerializeObjectState : EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; " Usage="member this.SerializeObjectState : System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-432">Se produit quand une exception est sérialisée pour créer un objet d'état d'exception qui contient des données sérialisées concernant l'exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-432">Occurs when an exception is serialized to create an exception state object that contains serialized data about the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-433">L’objet d’état exception implémente le <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span><span class="sxs-lookup"><span data-stu-id="fecb8-433">The exception state object implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 <span data-ttu-id="fecb8-434">Lorsque le <xref:System.Exception.SerializeObjectState> est abonné à l’événement, l’exception est désérialisée et créée en tant qu’une exception vide.</span><span class="sxs-lookup"><span data-stu-id="fecb8-434">When the <xref:System.Exception.SerializeObjectState> event is subscribed to, the exception is deserialized and created as an empty exception.</span></span> <span data-ttu-id="fecb8-435">Le constructeur d’exception n’est pas exécuté, et l’état d’exception est également désérialisé.</span><span class="sxs-lookup"><span data-stu-id="fecb8-435">The exception's constructor is not run, and the exception state is also deserialized.</span></span> <span data-ttu-id="fecb8-436">Le <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> méthode de rappel de l’objet exception d’état est ensuite notifié afin qu’il puisse pousser les données désérialisées dans l’exception vide.</span><span class="sxs-lookup"><span data-stu-id="fecb8-436">The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> callback method of the exception state object is then notified so that it can push deserialized data into the empty exception.</span></span>  
  
 <span data-ttu-id="fecb8-437">Le <xref:System.Exception.SerializeObjectState> événement permet aux types d’exception transparents sérialiser et désérialiser des données d’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-437">The <xref:System.Exception.SerializeObjectState> event enables transparent exception types to serialize and deserialize exception data.</span></span> <span data-ttu-id="fecb8-438">Le code transparent peut exécuter des commandes dans les limites du jeu d’autorisations qu’il fonctionne, mais ne peut pas exécuter, appeler, dériver à partir d’ou contenir du code critique.</span><span class="sxs-lookup"><span data-stu-id="fecb8-438">Transparent code can execute commands within the bounds of the permission set it is operating within, but cannot execute, call, derive from, or contain critical code.</span></span>  
  
 <span data-ttu-id="fecb8-439">Si le <xref:System.Exception.SerializeObjectState> n'est pas abonné à l’événement, la désérialisation se produit comme d’habitude à l’aide de la <xref:System.Exception.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-439">If the <xref:System.Exception.SerializeObjectState> event is not subscribed to, deserialization occurs as usual using the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="fecb8-440">En règle générale, un gestionnaire pour le <xref:System.Exception.SerializeObjectState> événement est ajouté dans le constructeur d’exception à fournir pour sa sérialisation.</span><span class="sxs-lookup"><span data-stu-id="fecb8-440">Typically, a handler for the <xref:System.Exception.SerializeObjectState> event is added in the exception's constructor to provide for its serialization.</span></span> <span data-ttu-id="fecb8-441">Mais étant donné que le constructeur n’est pas exécuté lorsque le <xref:System.Exception.SerializeObjectState> Gestionnaire d’événements s’exécute, la sérialisation d’une exception désérialisée peut lever une <xref:System.Runtime.Serialization.SerializationException> exception lorsque vous tentez de désérialiser l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-441">But because the constructor is not executed when the <xref:System.Exception.SerializeObjectState> event handler executes, serializing a deserialized exception can throw a <xref:System.Runtime.Serialization.SerializationException> exception when you try to deserialize the exception.</span></span> <span data-ttu-id="fecb8-442">Pour éviter ce problème, vous devez également ajouter le gestionnaire pour le <xref:System.Exception.SerializeObjectState> événement dans le <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fecb8-442">To avoid this, you should also add the handler for the <xref:System.Exception.SerializeObjectState> event in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fecb8-443">Consultez la section exemples pour obtenir une illustration.</span><span class="sxs-lookup"><span data-stu-id="fecb8-443">See the Examples section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-444">L’exemple suivant définit un `BadDivisionException` qui gère la <xref:System.Exception.SerializeObjectState> événement.</span><span class="sxs-lookup"><span data-stu-id="fecb8-444">The following example defines a `BadDivisionException` that handles the <xref:System.Exception.SerializeObjectState> event.</span></span> <span data-ttu-id="fecb8-445">Il contient également un objet d’état, qui est imbriquée structure nommée `BadDivisionExceptionState` qui implémente le <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span><span class="sxs-lookup"><span data-stu-id="fecb8-445">It also contains a state object, which is a nested structure named `BadDivisionExceptionState` that implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 [!code-csharp[System.Exception.SerializeObjectState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.serializeobjectstate/cs/example2.cs#1)]
 [!code-vb[System.Exception.SerializeObjectState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.serializeobjectstate/vb/example2.vb#1)]  
  
 <span data-ttu-id="fecb8-446">Le `BadDivisionException` exception est levée lorsqu’une division à virgule flottante par zéro se produit.</span><span class="sxs-lookup"><span data-stu-id="fecb8-446">The `BadDivisionException` exception is thrown when a floating-point division by zero occurs.</span></span> <span data-ttu-id="fecb8-447">Lors de la première division par zéro, l’exemple instancie un `BadDivisionException` objet, il sérialise et lève l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-447">During the first division by zero, the example instantiates a `BadDivisionException` object, serializes it, and throws the exception.</span></span> <span data-ttu-id="fecb8-448">Lorsque des divisions suivantes par zéro se produisent, l’exemple désérialise l’objet précédemment sérialisé resérialise il et lève l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-448">When subsequent divisions by zero occur, the example deserializes the  previously serialized object, reserializes it, and throws the exception.</span></span> <span data-ttu-id="fecb8-449">Pour fournir à la sérialisation des objets, la désérialisation, resérialisation et la désérialisation, l’exemple ajoute le <xref:System.Exception.SerializeObjectState> Gestionnaire d’événements à la fois dans le `BadDivisionException` constructeur de classe et dans le <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="fecb8-449">To provide for object serialization, deserialization, reserialization, and deserialization, the example adds the <xref:System.Exception.SerializeObjectState> event handler both in the `BadDivisionException` class constructor and in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fecb8-450">
            <para>Si cet événement est abonné à et utilisé, tous les types dérivés qui se suivent dans la hiérarchie d’héritage doivent implémenter le même mécanisme de sérialisation.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-450">
              <para>If this event is subscribed to and used, all derived types that follow in the inheritance hierarchy must implement the same serialization mechanism.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public virtual string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Exception.Source" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-451">Obtient ou définit le nom de l'application ou de l'objet qui est à l'origine de l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-451">Gets or sets the name of the application or the object that causes the error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fecb8-452">Nom de l'application ou de l'objet qui est à l'origine de l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-452">The name of the application or the object that causes the error.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-453">Si le <xref:System.Exception.Source%2A> propriété n’est pas définie explicitement, le runtime définit automatiquement le nom de l’assembly d'où provient l’exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-453">If the <xref:System.Exception.Source%2A> property is not set explicitly, the runtime automatically sets it to the name of the assembly in which the exception originated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-454">L’exemple suivant lève une `Exception` qui définit le `Source` propriété dans son constructeur, puis intercepte l’exception et l’affiche `Source`.</span><span class="sxs-lookup"><span data-stu-id="fecb8-454">The following example throws an `Exception` that sets the `Source` property in its constructor and then catches the exception and displays `Source`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fecb8-455">L’objet doit être un objet <see cref="N:System.Reflection" /> d’exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-455">The object must be a runtime <see cref="N:System.Reflection" /> object</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public virtual string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="System.Exception.StackTrace" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.StackTrace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-456">Obtient une représentation sous forme de chaîne des frames immédiats sur la pile des appels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-456">Gets a string representation of the immediate frames on the call stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fecb8-457">Chaîne qui décrit les frames immédiates de la pile des appels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-457">A string that describes the immediate frames of the call stack.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-458">La pile d'exécution assure le suivi de toutes les méthodes qui sont en cours d'exécution à un moment donné.</span><span class="sxs-lookup"><span data-stu-id="fecb8-458">The execution stack keeps track of all the methods that are in execution at a given instant.</span></span> <span data-ttu-id="fecb8-459">La trace des appels de méthodes s'appelle la trace de la pile.</span><span class="sxs-lookup"><span data-stu-id="fecb8-459">A trace of the method calls is called a stack trace.</span></span> <span data-ttu-id="fecb8-460">La liste de trace de pile fournit un moyen de suivre la pile des appels au numéro de ligne dans la méthode où l’exception se produit.</span><span class="sxs-lookup"><span data-stu-id="fecb8-460">The stack trace listing provides a way to follow the call stack to the line number in the method where the exception occurs.</span></span>  
  
 <span data-ttu-id="fecb8-461">Le <xref:System.Exception.StackTrace%2A> propriété retourne les frames de la pile des appels qui proviennent de l’emplacement où l’exception a été levée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-461">The <xref:System.Exception.StackTrace%2A> property returns the frames of the call stack that originate at the location where the exception was thrown.</span></span> <span data-ttu-id="fecb8-462">Vous pouvez obtenir des informations sur les frames supplémentaires dans la pile des appels en créant une nouvelle instance de la <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> classe et à l’aide de son <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fecb8-462">You can obtain information about additional frames in the call stack by creating a new instance of the <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> class and using its <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="fecb8-463">Le common language runtime (CLR) met à jour la trace de pile chaque fois qu’une exception est levée dans le code d’application (à l’aide de la `throw` mot clé).</span><span class="sxs-lookup"><span data-stu-id="fecb8-463">The common language runtime (CLR) updates the stack trace whenever an exception is thrown in application code (by using the `throw` keyword).</span></span> <span data-ttu-id="fecb8-464">Si l’exception est levée à nouveau dans une méthode qui est différente de celle de la méthode où elle a été levée à l’origine, la trace de pile contient l’emplacement dans la méthode où l’exception a été levée initialement et l’emplacement dans la méthode où l’exception a été à nouveau levée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-464">If the exception was rethrown in a method that is different than the method where it was originally thrown, the stack trace contains both the location in the method where the exception was originally thrown, and the location in the method where the exception was rethrown.</span></span> <span data-ttu-id="fecb8-465">Si l’exception est levée et levée ensuite à nouveau dans la même méthode, la trace de pile contient uniquement l’emplacement où l’exception a été levée et n’inclut pas l’emplacement où l’exception a été levée initialement.</span><span class="sxs-lookup"><span data-stu-id="fecb8-465">If the exception is thrown, and later rethrown, in the same method, the stack trace only contains the location where the exception was rethrown and does not include the location where the exception was originally thrown.</span></span>  
  
 <span data-ttu-id="fecb8-466">Le <xref:System.Exception.StackTrace%2A> propriété peut ne pas signale autant d’appels de méthode comme prévu en raison des transformations de code, tel qu’incorporation, qui se produisent pendant l’optimisation.</span><span class="sxs-lookup"><span data-stu-id="fecb8-466">The <xref:System.Exception.StackTrace%2A> property may not report as many method calls as expected because of code transformations, such as inlining, that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-467">Le code suivant exemple lève une `Exception` intercepte et affiche une trace de pile à l’aide de la `StackTrace` propriété.</span><span class="sxs-lookup"><span data-stu-id="fecb8-467">The following code example throws an `Exception` and then catches it and displays a stack trace using the `StackTrace` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fecb8-468">
            <para>Le <see langword="StackTrace" /> est substituée dans les classes qui requièrent un contrôle le format ou le contenu de trace de pile.  Par défaut, la trace de pile est capturée immédiatement avant qu’un objet d’exception soit levé. Utilisez <see cref="P:System.Environment.StackTrace" /> pour obtenir des informations de trace de pile quand aucune exception n’est levée.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-468">
              <para>The <see langword="StackTrace" /> property is overridden in classes that require control over the stack trace content or format.  By default, the stack trace is captured immediately before an exception object is thrown. Use <see cref="P:System.Environment.StackTrace" /> to get stack trace information when no exception is being thrown.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Environment.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSite : System.Reflection.MethodBase" Usage="System.Exception.TargetSite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.TargetSite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-469">Obtient la méthode qui lève l'exception actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-469">Gets the method that throws the current exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fecb8-470">
            <see cref="T:System.Reflection.MethodBase" /> qui a levé l'exception actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-470">The <see cref="T:System.Reflection.MethodBase" /> that threw the current exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-471">Si la méthode qui lève cette exception n’est pas disponible et la trace de pile n’est pas une référence null (`Nothing` en Visual Basic), <xref:System.Exception.TargetSite%2A> Obtient la méthode à partir de la trace de pile.</span><span class="sxs-lookup"><span data-stu-id="fecb8-471">If the method that throws this exception is not available and the stack trace is not a null reference (`Nothing` in Visual Basic), <xref:System.Exception.TargetSite%2A> obtains the method from the stack trace.</span></span> <span data-ttu-id="fecb8-472">Si la trace de la pile est une référence nulle, <xref:System.Exception.TargetSite%2A> retourne également une référence nulle.</span><span class="sxs-lookup"><span data-stu-id="fecb8-472">If the stack trace is a null reference, <xref:System.Exception.TargetSite%2A> also returns a null reference.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fecb8-473">Le <xref:System.Exception.TargetSite%2A> propriété ne peut pas signaler correctement le nom de la méthode dans laquelle une exception a été levée si le Gestionnaire d’exceptions gère une exception sur les limites du domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="fecb8-473">The <xref:System.Exception.TargetSite%2A> property may not accurately report the name of the method in which an exception was thrown if the exception handler handles an exception across application domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-474">Le code suivant exemple lève une `Exception` intercepte et affiche la méthode d’origine à l’aide du `TargetSite` propriété.</span><span class="sxs-lookup"><span data-stu-id="fecb8-474">The following code example throws an `Exception` and then catches it and displays the originating method using the `TargetSite` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="exception.ToString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fecb8-475">Crée et retourne une chaîne représentant l'exception actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-475">Creates and returns a string representation of the current exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fecb8-476">Représentation sous forme de chaîne de l'exception actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fecb8-476">A string representation of the current exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fecb8-477"><xref:System.Exception.ToString%2A> Retourne une représentation de l’exception actuelle est destinée à être compréhensible par les utilisateurs.</span><span class="sxs-lookup"><span data-stu-id="fecb8-477"><xref:System.Exception.ToString%2A> returns a representation of the current exception that is intended to be understood by humans.</span></span> <span data-ttu-id="fecb8-478">Lorsque l’exception contient des données de la culture, la représentation sous forme de chaîne retournée par `ToString` est requise pour prendre en compte la culture système actuelle.</span><span class="sxs-lookup"><span data-stu-id="fecb8-478">Where the exception contains culture-sensitive data, the string representation returned by `ToString` is required to take into account the current system culture.</span></span> <span data-ttu-id="fecb8-479">Bien qu’il n’existe aucune configuration requise exacte pour le format de la chaîne retournée, il doit tenter de refléter la valeur de l’objet en tant que perçue par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="fecb8-479">Although there are no exact requirements for the format of the returned string, it should attempt to reflect the value of the object as perceived by the user.</span></span>  
  
 <span data-ttu-id="fecb8-480">L’implémentation par défaut de <xref:System.Exception.ToString%2A> Obtient le nom de la classe qui a levé l’exception actuelle, le message, le résultat de l’appel <xref:System.Exception.ToString%2A> sur l’exception interne et le résultat de l’appel <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-480">The default implementation of <xref:System.Exception.ToString%2A> obtains the name of the class that threw the current exception, the message, the result of calling <xref:System.Exception.ToString%2A> on the inner exception, and the result of calling <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fecb8-481">Si un de ces membres est `null`, sa valeur n’est pas incluse dans la chaîne retournée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-481">If any of these members is `null`, its value is not included in the returned string.</span></span>  
  
 <span data-ttu-id="fecb8-482">S’il n’existe aucun message d’erreur ou s’il s’agit d’une chaîne vide (" »), aucun message d’erreur est retournée.</span><span class="sxs-lookup"><span data-stu-id="fecb8-482">If there is no error message or if it is an empty string (""), then no error message is returned.</span></span> <span data-ttu-id="fecb8-483">Le nom de l’exception interne et la trace de pile sont retournés uniquement s’ils ne sont pas `null`.</span><span class="sxs-lookup"><span data-stu-id="fecb8-483">The name of the inner exception and the stack trace are returned only if they are not `null`.</span></span>  
  
 <span data-ttu-id="fecb8-484">Cette méthode se substitue à <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fecb8-484">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fecb8-485">L’exemple suivant provoque une exception et affiche le résultat de l’appel <xref:System.Exception.ToString%2A> sur cette exception.</span><span class="sxs-lookup"><span data-stu-id="fecb8-485">The following example causes an exception and displays the result of calling <xref:System.Exception.ToString%2A> on that exception.</span></span> <span data-ttu-id="fecb8-486">Notez que le <xref:System.Exception.ToString%2A?displayProperty=nameWithType> méthode est appelée implicitement lorsque l’instance de classe d’Exception s’affiche dans la liste d’arguments de la <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fecb8-486">Note that the <xref:System.Exception.ToString%2A?displayProperty=nameWithType> method is called implicitly when the Exception class instance appears in the argument list of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Exception.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.exception.tostring/cpp/ToStringEx1.cpp#1)]
 [!code-csharp[System.Exception.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.tostring/cs/ToStringEx1.cs#1)]
 [!code-vb[System.Exception.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.tostring/vb/ToStringEx1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>