<Type Name="Tuple&lt;T1,T2,T3,T4&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6f14e983d38510222eecab5394c8fadc8946faf" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52591477" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`4&lt;T1, T2, T3, T4&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`4" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1">
      <span data-ttu-id="c411c-101">Type du premier composant du tuple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c411c-101">The type of the tuple's first component.</span>
      </span>
    </typeparam>
    <typeparam name="T2">
      <span data-ttu-id="c411c-102">Type du second composant du tuple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c411c-102">The type of the tuple's second component.</span>
      </span>
    </typeparam>
    <typeparam name="T3">
      <span data-ttu-id="c411c-103">Type du troisième composant du tuple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c411c-103">The type of the tuple's third component.</span>
      </span>
    </typeparam>
    <typeparam name="T4">
      <span data-ttu-id="c411c-104">Type du quatrième composant du tuple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c411c-104">The type of the tuple's fourth component.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="c411c-105">Représente un objet de 4 tuples, ou quadruple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c411c-105">Represents a 4-tuple, or quadruple.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-106">Un tuple est une structure de données qui a un nombre spécifique et une séquence de valeurs.</span><span class="sxs-lookup"><span data-stu-id="c411c-106">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="c411c-107">Le <xref:System.Tuple%604> classe représente un 4 tuples, ou quadruple, qui est un tuple qui a quatre composants.</span><span class="sxs-lookup"><span data-stu-id="c411c-107">The <xref:System.Tuple%604> class represents a 4-tuple, or quadruple, which is a tuple that has four components.</span></span>  
  
 <span data-ttu-id="c411c-108">Vous pouvez instancier un <xref:System.Tuple%604> objet en appelant le <xref:System.Tuple%604.%23ctor%2A> constructeur ou la méthode statique <xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c411c-108">You can instantiate a <xref:System.Tuple%604> object by calling either the <xref:System.Tuple%604.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c411c-109">Vous pouvez récupérer la valeur des composants du tuple à l’aide en lecture seule <xref:System.Tuple%604.Item1%2A>, <xref:System.Tuple%604.Item2%2A>, <xref:System.Tuple%604.Item3%2A>, et <xref:System.Tuple%604.Item4%2A> propriétés de l’instance.</span><span class="sxs-lookup"><span data-stu-id="c411c-109">You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%604.Item1%2A>, <xref:System.Tuple%604.Item2%2A>, <xref:System.Tuple%604.Item3%2A>, and <xref:System.Tuple%604.Item4%2A> instance properties.</span></span>  
  
 <span data-ttu-id="c411c-110">Tuples sont fréquemment utilisées dans quatre façons différentes :</span><span class="sxs-lookup"><span data-stu-id="c411c-110">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="c411c-111">Pour représenter un jeu unique de données.</span><span class="sxs-lookup"><span data-stu-id="c411c-111">To represent a single set of data.</span></span> <span data-ttu-id="c411c-112">Par exemple, un tuple peut représenter un enregistrement de base de données, et ses composants peuvent représenter des champs individuels de l’enregistrement.</span><span class="sxs-lookup"><span data-stu-id="c411c-112">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="c411c-113">Pour fournir un accès facile aux et manipulation d’un jeu de données.</span><span class="sxs-lookup"><span data-stu-id="c411c-113">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="c411c-114">L’exemple suivant définit un tableau de <xref:System.Tuple%604> objets qui contiennent les noms de cruches de base-ball, le nombre de tournées ils présentés et le nombre de passages gagnés (passages notées sans présenter des erreurs) et atteint que.</span><span class="sxs-lookup"><span data-stu-id="c411c-114">The following example defines an array of <xref:System.Tuple%604> objects that contain the names of baseball pitchers, the number of innings they pitched, and the number of earned runs (runs that scored without fielding errors), and hits that they gave up.</span></span> <span data-ttu-id="c411c-115">Le tableau est passé à la `ComputeStatistics` (méthode), qui calcule la moyenne (le nombre moyen de cycles donnés dans un jeu de neuf tournées) de chaque Lanceur et le nombre moyen de touches laissées par.</span><span class="sxs-lookup"><span data-stu-id="c411c-115">The array is passed to the `ComputeStatistics` method, which calculates each pitcher's earned run average (the average number of runs given up in a nine-inning game), and the average number of hits given up per inning.</span></span> <span data-ttu-id="c411c-116">La méthode utilise également ces deux moyennes pour calculer une moyenne d’efficacité hypothétique.</span><span class="sxs-lookup"><span data-stu-id="c411c-116">The method also uses these two averages to compute a hypothetical effectiveness average.</span></span>  
  
     [!code-csharp[System.Tuple\`4.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`4.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="c411c-117">Pour retourner plusieurs valeurs à partir d’une méthode sans utiliser de `out` paramètres (en c#) ou `ByRef` paramètres (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c411c-117">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="c411c-118">Par exemple, l’exemple précédent retourne ses statistiques calculées, avec le nom du Lanceur, dans un tableau de <xref:System.Tuple%604> objets.</span><span class="sxs-lookup"><span data-stu-id="c411c-118">For example, the previous example returns its computed statistics, along with the name of the pitcher, in an array of <xref:System.Tuple%604> objects.</span></span>  
  
-   <span data-ttu-id="c411c-119">Pour passer les valeurs multiples dans une méthode via un paramètre unique.</span><span class="sxs-lookup"><span data-stu-id="c411c-119">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="c411c-120">Par exemple, le <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> méthode possède un paramètre unique qui vous permet de fournir une valeur à la méthode que le thread exécute au démarrage.</span><span class="sxs-lookup"><span data-stu-id="c411c-120">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="c411c-121">Si vous fournissez un <xref:System.Tuple%604> de l’objet en tant qu’argument de méthode, vous pouvez fournir la routine de démarrage du thread avec quatre éléments de données.</span><span class="sxs-lookup"><span data-stu-id="c411c-121">If you supply a <xref:System.Tuple%604> object as the method argument, you can supply the thread's startup routine with four items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.#ctor(`0,`1,`2,`3)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3, 'T4&gt; : 'T1 * 'T2 * 'T3 * 'T4 -&gt; Tuple&lt;'T1, 'T2, 'T3, 'T4&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3, 'T4&gt; (item1, item2, item3, item4)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
      </Parameters>
      <Docs>
        <param name="item1">
          <span data-ttu-id="c411c-122">Valeur du premier composant du tuple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-122">The value of the tuple's first component.</span>
          </span>
        </param>
        <param name="item2">
          <span data-ttu-id="c411c-123">Valeur du second composant du tuple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-123">The value of the tuple's second component.</span>
          </span>
        </param>
        <param name="item3">
          <span data-ttu-id="c411c-124">Valeur du troisième composant du tuple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-124">The value of the tuple's third component.</span>
          </span>
        </param>
        <param name="item4">
          <span data-ttu-id="c411c-125">Valeur du quatrième composant du tuple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-125">The value of the tuple's fourth component</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c411c-126">Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`4" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-126">Initializes a new instance of the <see cref="T:System.Tuple`4" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-127">Vous pouvez également utiliser la méthode statique <xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType> méthode pour instancier un objet de 4 tuples sans devoir spécifier explicitement les types de ses composants.</span><span class="sxs-lookup"><span data-stu-id="c411c-127">You can also use the static <xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType> method to instantiate a 4-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="c411c-128">L’exemple suivant utilise le <xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType> méthode pour instancier un 4 tuples dont les composants sont de type <xref:System.String>, <xref:System.Double>, <xref:System.Double>, et <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="c411c-128">The following example uses the <xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType> method to instantiate a 4-tuple whose components are of type <xref:System.String>, <xref:System.Double>, <xref:System.Double>, and <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#7)]
 [!code-vb[System.Tuple.Create#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#7)]  
  
 <span data-ttu-id="c411c-129">Cela équivaut à l’appel suivant à la <xref:System.Tuple%604.%23ctor%2A> constructeur de classe.</span><span class="sxs-lookup"><span data-stu-id="c411c-129">This is equivalent to the following call to the <xref:System.Tuple%604.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#8)]
 [!code-vb[System.Tuple.Create#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="c411c-130">Objet à comparer avec cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-130">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c411c-131">Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`4" /> actuel est égal à un objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-131">Returns a value that indicates whether the current <see cref="T:System.Tuple`4" /> object is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c411c-132">
            <see langword="true" /> si l'instance actuelle est égale à l'objet spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-132">
              <see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-133">Le `obj` paramètre est considéré comme égal à l’instance actuelle dans les conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="c411c-133">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="c411c-134">Il s’agit une <xref:System.Tuple%604> objet.</span><span class="sxs-lookup"><span data-stu-id="c411c-134">It is a <xref:System.Tuple%604> object.</span></span>  
  
-   <span data-ttu-id="c411c-135">Ses quatre composants sont des mêmes types que l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="c411c-135">Its four components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="c411c-136">Ses quatre composants sont égales à celles de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="c411c-136">Its four components are equal to those of the current instance.</span></span> <span data-ttu-id="c411c-137">L'égalité est déterminée par le comparateur d'égalité d'objet par défaut pour chaque composant.</span><span class="sxs-lookup"><span data-stu-id="c411c-137">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c411c-138">L’exemple suivant définit un tableau de <xref:System.Tuple%604> objets qui fournissent des données sur les températures à trois reprises pendant un jour particulier.</span><span class="sxs-lookup"><span data-stu-id="c411c-138">The following example defines an array of <xref:System.Tuple%604> objects that provide data on temperatures at three times during a particular day.</span></span> <span data-ttu-id="c411c-139">Le <xref:System.Tuple%604.Equals%28System.Object%29> méthode est appelée pour comparer chaque <xref:System.Tuple%604> objet avec tous les autres <xref:System.Tuple%604> objet.</span><span class="sxs-lookup"><span data-stu-id="c411c-139">The <xref:System.Tuple%604.Equals%28System.Object%29> method is called to compare every <xref:System.Tuple%604> object with every other <xref:System.Tuple%604> object.</span></span> <span data-ttu-id="c411c-140">La sortie montre que le <xref:System.Tuple%604.Equals%28System.Object%29> retourne de la méthode `true` uniquement lorsque toutes les quatre composants de la <xref:System.Tuple%604> objets ont des valeurs égales.</span><span class="sxs-lookup"><span data-stu-id="c411c-140">The output illustrates that the <xref:System.Tuple%604.Equals%28System.Object%29> method returns `true` only when all four components of the <xref:System.Tuple%604> objects have equal values.</span></span>  
  
 [!code-csharp[System.Tuple\`4.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`4.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c411c-141">Retourne le code de hachage pour l'objet <see cref="T:System.Tuple`4" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-141">Returns the hash code for the current <see cref="T:System.Tuple`4" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c411c-142">Code de hachage d'un entier signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-142">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`4.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c411c-143">Obtient la valeur du premier composant de l'objet <see cref="T:System.Tuple`4" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-143">Gets the value of the current <see cref="T:System.Tuple`4" /> object's first component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c411c-144">Valeur du premier composant de l'objet <see cref="T:System.Tuple`4" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-144">The value of the current <see cref="T:System.Tuple`4" /> object's first component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-145">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%604.Item1%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="c411c-145">You can dynamically determine the type of the <xref:System.Tuple%604.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="c411c-146">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%604.Item1%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c411c-146">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%604.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="c411c-147">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%604> de l’objet et en extrayant le premier élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c411c-147">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%604> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c411c-148">L’exemple suivant définit un tableau de <xref:System.Tuple%604> objets dont les composants contiennent le nom d’une ville, un mois de l’année et les températures moyennes haute et bas pour ce mois.</span><span class="sxs-lookup"><span data-stu-id="c411c-148">The following example defines an array of <xref:System.Tuple%604> objects whose components contain the name of a city, a month of the year, and the average high and low temperatures for that month.</span></span> <span data-ttu-id="c411c-149">Ensuite, il récupère et affiche la valeur de chaque composant.</span><span class="sxs-lookup"><span data-stu-id="c411c-149">It then retrieves and displays the value of each component.</span></span>  
  
 [!code-csharp[System.Tuple\`4.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`4.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`4.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c411c-150">Obtient la valeur du deuxième composant de l'objet <see cref="T:System.Tuple`4" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-150">Gets the value of the current <see cref="T:System.Tuple`4" /> object's second component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c411c-151">Valeur du deuxième composant de l'objet <see cref="T:System.Tuple`4" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-151">The value of the current <see cref="T:System.Tuple`4" /> object's second component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-152">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%604.Item2%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="c411c-152">You can dynamically determine the type of the <xref:System.Tuple%604.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="c411c-153">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%604.Item2%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c411c-153">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%604.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="c411c-154">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%604> de l’objet et en extrayant le deuxième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c411c-154">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%604> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c411c-155">L’exemple suivant définit un tableau de <xref:System.Tuple%604> objets dont les composants contiennent le nom d’une ville, un mois de l’année et les températures moyennes haute et bas pour ce mois.</span><span class="sxs-lookup"><span data-stu-id="c411c-155">The following example defines an array of <xref:System.Tuple%604> objects whose components contain the name of a city, a month of the year, and the average high and low temperatures for that month.</span></span> <span data-ttu-id="c411c-156">Ensuite, il récupère et affiche la valeur de chaque composant.</span><span class="sxs-lookup"><span data-stu-id="c411c-156">It then retrieves and displays the value of each component.</span></span>  
  
 [!code-csharp[System.Tuple\`4.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`4.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`4.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c411c-157">Obtient la valeur du troisième composant de l'objet <see cref="T:System.Tuple`4" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-157">Gets the value of the current <see cref="T:System.Tuple`4" /> object's third component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c411c-158">Valeur du troisième composant de l'objet <see cref="T:System.Tuple`4" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-158">The value of the current <see cref="T:System.Tuple`4" /> object's third component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-159">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%604.Item3%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="c411c-159">You can dynamically determine the type of the <xref:System.Tuple%604.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="c411c-160">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%604.Item3%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c411c-160">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%604.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="c411c-161">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%604> de l’objet et en extrayant le troisième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c411c-161">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%604> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c411c-162">L’exemple suivant définit un tableau de <xref:System.Tuple%604> objets dont les composants contiennent le nom d’une ville, un mois de l’année et les températures moyennes haute et bas pour ce mois.</span><span class="sxs-lookup"><span data-stu-id="c411c-162">The following example defines an array of <xref:System.Tuple%604> objects whose components contain the name of a city, a month of the year, and the average high and low temperatures for that month.</span></span> <span data-ttu-id="c411c-163">Ensuite, il récupère et affiche la valeur de chaque composant.</span><span class="sxs-lookup"><span data-stu-id="c411c-163">It then retrieves and displays the value of each component.</span></span>  
  
 [!code-csharp[System.Tuple\`4.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`4.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`4.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item4 : 'T4" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4&gt;.Item4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c411c-164">Obtient la valeur du quatrième composant de l'objet <see cref="T:System.Tuple`4" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-164">Gets the value of the current <see cref="T:System.Tuple`4" /> object's fourth component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c411c-165">Valeur du quatrième composant de l'objet <see cref="T:System.Tuple`4" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-165">The value of the current <see cref="T:System.Tuple`4" /> object's fourth component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-166">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%604.Item4%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="c411c-166">You can dynamically determine the type of the <xref:System.Tuple%604.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="c411c-167">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%604.Item4%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c411c-167">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%604.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="c411c-168">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%604> de l’objet et en extrayant le quatrième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c411c-168">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%604> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c411c-169">L’exemple suivant définit un tableau de <xref:System.Tuple%604> objets dont les composants contiennent le nom d’une ville, un mois de l’année et les températures moyennes haute et bas pour ce mois.</span><span class="sxs-lookup"><span data-stu-id="c411c-169">The following example defines an array of <xref:System.Tuple%604> objects whose components contain the name of a city, a month of the year, and the average high and low temperatures for that month.</span></span> <span data-ttu-id="c411c-170">Ensuite, il récupère et affiche la valeur de chaque composant.</span><span class="sxs-lookup"><span data-stu-id="c411c-170">It then retrieves and displays the value of each component.</span></span>  
  
 [!code-csharp[System.Tuple\`4.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`4.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="c411c-171">Objet à comparer à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-171">An object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="c411c-172">Un objet qui fournit des règles personnalisées pour la comparaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-172">An object that provides custom rules for comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c411c-173">Compare l'objet <see cref="T:System.Tuple`4" /> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou se trouve à la même position que l'objet spécifié dans l'ordre de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-173">Compares the current <see cref="T:System.Tuple`4" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c411c-174">Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-174">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="c411c-175">Value</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-175">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c411c-176">Description </span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-176">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="c411c-177">Entier négatif</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-177">A negative integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c411c-178">Cette instance précède <paramref name="other" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-178">This instance precedes <paramref name="other" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c411c-179">Zéro</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-179">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c411c-180">Cette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-180">This instance and <paramref name="other" /> have the same position in the sort order.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c411c-181">Entier positif</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-181">A positive integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c411c-182">Cette instance suit <paramref name="other" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-182">This instance follows <paramref name="other" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-183">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="c411c-183">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c411c-184">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%604> est castée en interface <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="c411c-184">It can be used only when the <xref:System.Tuple%604> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="c411c-185">Bien que cette méthode peut être appelée directement, elle est généralement appelée par les méthodes qui incluent de tri de collection <xref:System.Collections.IComparer> paramètres pour classer les membres d’une collection.</span><span class="sxs-lookup"><span data-stu-id="c411c-185">Although this method can be called directly, it is most commonly called by collection sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="c411c-186">Par exemple, elle est appelée par le <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> (méthode) et le <xref:System.Collections.SortedList.Add%2A> méthode d’un <xref:System.Collections.SortedList> objet est instancié à l’aide de la <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructeur.</span><span class="sxs-lookup"><span data-stu-id="c411c-186">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c411c-187">Le <xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29> méthode est conçue pour une utilisation dans les opérations de tri.</span><span class="sxs-lookup"><span data-stu-id="c411c-187">The <xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29> method is intended for use in sorting operations.</span></span> <span data-ttu-id="c411c-188">Elle ne doit pas être utilisée lors de l’objectif principal d’une comparaison consiste à déterminer si deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="c411c-188">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="c411c-189">Pour déterminer si deux objets sont égales, appelez le <xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c411c-189">To determine whether two objects are equal, call the <xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c411c-190">L’exemple suivant crée un tableau de <xref:System.Tuple%604> objets qui contiennent des données statistiques sur cruches de base-ball.</span><span class="sxs-lookup"><span data-stu-id="c411c-190">The following example creates an array of <xref:System.Tuple%604> objects that contain statistical data about baseball pitchers.</span></span> <span data-ttu-id="c411c-191">Les éléments de données incluent le nom du Lanceur, le nombre de tournées montées, moyenne (le nombre moyen de cycles tasse autorise par jeu) du Lanceur et le nombre de correspondances a abandonné le Lanceur.</span><span class="sxs-lookup"><span data-stu-id="c411c-191">The data items include the name of the pitcher, the number of innings pitched, the pitcher's earned run average (the average number of runs a pitcher allows per game), and the number of hits the pitcher has given up.</span></span> <span data-ttu-id="c411c-192">L’exemple affiche le composant de chaque tuple dans le tableau en ordre non trié, trie le tableau, puis appelle <xref:System.Tuple%604.ToString%2A> pour afficher la valeur de chaque tuple dans un ordre trié.</span><span class="sxs-lookup"><span data-stu-id="c411c-192">The example displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%604.ToString%2A> to display the value of each tuple in sorted order.</span></span> <span data-ttu-id="c411c-193">Pour trier le tableau, l’exemple définit un générique `PitcherComparer` classe qui implémente le <xref:System.Collections.IComparer> interface et trie le <xref:System.Tuple%604> objets dans l’ordre croissant par la valeur de leur troisième composant (moyenne) au lieu de leur premier composant.</span><span class="sxs-lookup"><span data-stu-id="c411c-193">To sort the array, the example defines a generic `PitcherComparer` class that implements the <xref:System.Collections.IComparer> interface and sorts the <xref:System.Tuple%604> objects in ascending order by the value of their third component (the earned run average) rather than their first component.</span></span> <span data-ttu-id="c411c-194">Notez que l’exemple n’appelle pas directement la <xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c411c-194">Note that the example does not directly call the <xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29> method.</span></span> <span data-ttu-id="c411c-195">Cette méthode est appelée implicitement par la <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> méthode pour chaque élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="c411c-195">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`4.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`4.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c411c-196">
            <paramref name="other" /> n’est pas un objet <see cref="T:System.Tuple`4" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-196">
              <paramref name="other" /> is not a <see cref="T:System.Tuple`4" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="c411c-197">Objet à comparer avec cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-197">The object to compare with this instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="c411c-198">Un objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-198">An object that defines the method to use to evaluate whether the two objects are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c411c-199">Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`4" /> actif est égal à un objet spécifié selon une méthode de comparaison spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-199">Returns a value that indicates whether the current <see cref="T:System.Tuple`4" /> object is equal to a specified object based on a specified comparison method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c411c-200">
            <see langword="true" /> si l'instance actuelle est égale à l'objet spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-200">
              <see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-201">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="c411c-201">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c411c-202">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%604> est castée en interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="c411c-202">It can be used only when the <xref:System.Tuple%604> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="c411c-203">Le <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implémentation est appelée uniquement si `other` n’est pas `null`, et si elle peut être casté (en c#) ou converti (en Visual Basic) en un <xref:System.Tuple%604> objet dont les composants sont des mêmes types que l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="c411c-203">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%604> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="c411c-204">Le <xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> passe en premier (méthode) le <xref:System.Tuple%604.Item1%2A> les valeurs de la <xref:System.Tuple%604> objets à comparer à la <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="c411c-204">The <xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%604.Item1%2A> values of the <xref:System.Tuple%604> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="c411c-205">Si cet appel de méthode retourne `true`, la méthode est appelée à nouveau et passée le <xref:System.Tuple%604.Item2%2A> les valeurs des deux <xref:System.Tuple%604> objets.</span><span class="sxs-lookup"><span data-stu-id="c411c-205">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%604.Item2%2A> values of the two <xref:System.Tuple%604> objects.</span></span> <span data-ttu-id="c411c-206">Si cet appel de méthode retourne `true` là encore, la méthode est appelée une troisième fois et passe le <xref:System.Tuple%604.Item3%2A> les valeurs des deux <xref:System.Tuple%604> objets.</span><span class="sxs-lookup"><span data-stu-id="c411c-206">If this method call returns `true` again, the method is called a third time and passed the <xref:System.Tuple%604.Item3%2A> values of the two <xref:System.Tuple%604> objects.</span></span> <span data-ttu-id="c411c-207">Si cet appel de méthode retourne `true` là encore, la méthode est appelée pour la quatrième et dernière fois et passée le <xref:System.Tuple%604.Item4%2A> les valeurs des deux <xref:System.Tuple%604> objets.</span><span class="sxs-lookup"><span data-stu-id="c411c-207">If this method call returns `true` again, the method is called for the fourth and final time and passed the <xref:System.Tuple%604.Item4%2A> values of the two <xref:System.Tuple%604> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c411c-208">L’exemple suivant définit un `Item3And4Comparer` classe qui implémente le <xref:System.Collections.IEqualityComparer> interface et modifie la façon dont <xref:System.Tuple%604> objets sont évalués pour l’égalité.</span><span class="sxs-lookup"><span data-stu-id="c411c-208">The following example defines an `Item3And4Comparer` class that implements the <xref:System.Collections.IEqualityComparer> interface and changes the way in which <xref:System.Tuple%604> objects are evaluated for equality.</span></span> <span data-ttu-id="c411c-209">La méthode retourne toujours `true` lorsqu’il est passé le <xref:System.Tuple%604.Item1%2A> et <xref:System.Tuple%604.Item2%2A> les valeurs de propriété de deux <xref:System.Tuple%604> objets et il appelle le `obj.Equals` méthode pour évaluer leurs <xref:System.Tuple%604.Item3%2A> valeurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="c411c-209">The method always returns `true` when it is passed the <xref:System.Tuple%604.Item1%2A> and <xref:System.Tuple%604.Item2%2A> property values of two <xref:System.Tuple%604> objects, and it calls the `obj.Equals` method to evaluate their <xref:System.Tuple%604.Item3%2A> property values.</span></span> <span data-ttu-id="c411c-210">Il cet appel de méthode retourne la valeur true, il appelle également la `obj.Equals` méthode pour évaluer les tuples' <xref:System.Tuple%604.Item4%2A> les valeurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="c411c-210">It this method call returns true, it also calls the `obj.Equals` method to evaluate the tuples' <xref:System.Tuple%604.Item4%2A> property values.</span></span> <span data-ttu-id="c411c-211">Par conséquent, la méthode teste l’égalité basée uniquement sur les valeurs de la <xref:System.Tuple%604.Item3%2A> et <xref:System.Tuple%604.Item4%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="c411c-211">As a result, the method tests for equality based only on the values of the <xref:System.Tuple%604.Item3%2A> and <xref:System.Tuple%604.Item4%2A> properties.</span></span> <span data-ttu-id="c411c-212">La sortie illustre le résultat pour un jeu de données de <xref:System.Tuple%604> objets qui enregistrent le nom d’une ville des États-Unis, le mois d’une année et la température moyenne haute et basse pour ce mois.</span><span class="sxs-lookup"><span data-stu-id="c411c-212">The output illustrates the result for a data set of <xref:System.Tuple%604> objects that record the name of a U.S. city, the month of a year, and the average high and low temperature for that month.</span></span>  
  
 [!code-csharp[System.Tuple\`4.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`4.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="c411c-213">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`4" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-213">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`4" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c411c-214">Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`4" /> actif à l'aide d'une méthode de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-214">Calculates the hash code for the current <see cref="T:System.Tuple`4" /> object by using a specified computation method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c411c-215">Code de hachage d'un entier signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-215">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-216">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="c411c-216">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c411c-217">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%604> est castée en interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="c411c-217">It can be used only when the <xref:System.Tuple%604> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="c411c-218">La méthode encapsule simplement un appel à la `comparer` l’objet <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="c411c-218">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="c411c-219">L’algorithme utilisé pour calculer le code de hachage doit retourner le même code de hachage pour deux <xref:System.Tuple%604> les objets qui sont considérées comme égales.</span><span class="sxs-lookup"><span data-stu-id="c411c-219">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%604> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="c411c-220">Objet à comparer à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-220">An object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c411c-221">Compare l’objet <see cref="T:System.Tuple`4" /> actuel à un objet spécifié et renvoie un entier qui indique si l’objet actuel est avant, après ou à la même position que l’objet spécifié dans l’ordre de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-221">Compares the current <see cref="T:System.Tuple`4" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c411c-222">Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-222">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="c411c-223">Value</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-223">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c411c-224">Description </span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-224">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="c411c-225">Entier négatif</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-225">A negative integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c411c-226">Cette instance précède <paramref name="obj" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-226">This instance precedes <paramref name="obj" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c411c-227">Zéro</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-227">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c411c-228">Cette instance et <paramref name="obj" /> ont la même position dans l'ordre de tri.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-228">This instance and <paramref name="obj" /> have the same position in the sort order.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c411c-229">Entier positif</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-229">A positive integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c411c-230">Cette instance suit <paramref name="obj" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c411c-230">This instance follows <paramref name="obj" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-231">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="c411c-231">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c411c-232">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%604> est castée en interface <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="c411c-232">It can be used only when the <xref:System.Tuple%604> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="c411c-233">Cette méthode fournit le <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implémentation pour la <xref:System.Tuple%604> classe.</span><span class="sxs-lookup"><span data-stu-id="c411c-233">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%604> class.</span></span> <span data-ttu-id="c411c-234">Bien que la méthode peut être appelée directement, elle est généralement appelée par les surcharges par défaut de collection telles que les méthodes, de tri <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> et <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, pour classer les membres d’une collection.</span><span class="sxs-lookup"><span data-stu-id="c411c-234">Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c411c-235">Le <xref:System.Tuple%604.System%23IComparable%23CompareTo%2A> méthode est conçue pour une utilisation dans les opérations de tri.</span><span class="sxs-lookup"><span data-stu-id="c411c-235">The <xref:System.Tuple%604.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="c411c-236">Elle ne doit pas être utilisée lors de l’objectif principal d’une comparaison consiste à déterminer si deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="c411c-236">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="c411c-237">Pour déterminer si deux objets sont égales, appelez le <xref:System.Tuple%604.Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c411c-237">To determine whether two objects are equal, call the <xref:System.Tuple%604.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="c411c-238">Le <xref:System.Tuple%604.System%23IComparable%23CompareTo%2A> méthode utilise le comparateur d’objet par défaut pour comparer chaque composant.</span><span class="sxs-lookup"><span data-stu-id="c411c-238">The <xref:System.Tuple%604.System%23IComparable%23CompareTo%2A> method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c411c-239">L’exemple suivant crée un tableau de <xref:System.Tuple%604> objets dont les composants se composent d’un lanceur de baseball nom, nombre de tournées montées et nombre d’accès et gagnés.</span><span class="sxs-lookup"><span data-stu-id="c411c-239">The following example creates an array of <xref:System.Tuple%604> objects whose components consist of a baseball pitcher's name, number of innings pitched, and number of hits and earned runs given up.</span></span> <span data-ttu-id="c411c-240">Il affiche les composants de chaque tuple dans le tableau en ordre non trié, trie le tableau, puis appelle <xref:System.Tuple%604.ToString%2A> pour afficher chaque tuple dans un ordre trié.</span><span class="sxs-lookup"><span data-stu-id="c411c-240">It displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%604.ToString%2A> to display each tuple in sorted order.</span></span> <span data-ttu-id="c411c-241">La sortie montre que le tableau a été trié par nom, qui est le premier composant.</span><span class="sxs-lookup"><span data-stu-id="c411c-241">The output shows that the array has been sorted by name, which is the first component.</span></span> <span data-ttu-id="c411c-242">Notez que l’exemple n’appelle pas directement la <xref:System.Tuple%604.System%23IComparable%23CompareTo%28System.Object%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c411c-242">Note that the example does not directly call the <xref:System.Tuple%604.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="c411c-243">Cette méthode est appelée implicitement par la <xref:System.Array.Sort%28System.Array%29> méthode pour chaque élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="c411c-243">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`4.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`4.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c411c-244">
            <paramref name="obj" /> n’est pas un objet <see cref="T:System.Tuple`4" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-244">
              <paramref name="obj" /> is not a <see cref="T:System.Tuple`4" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Tuple`4.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c411c-245">Index de l’élément <see langword="Tuple" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-245">The index of the specified <see langword="Tuple" /> element.</span>
          </span>
          <span data-ttu-id="c411c-246">
            <paramref name="index" /> peut être compris entre 0 et 3.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-246">
              <paramref name="index" /> can range from 0 to 3.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c411c-247">Obtient la valeur de l’élément <see langword="Tuple" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-247">Gets the value of the specified <see langword="Tuple" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c411c-248">Valeur de l’élément <see langword="Tuple" /> à la position spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-248">The value of the <see langword="Tuple" /> element at the specified position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-249">Le <xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propriété est une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="c411c-249">The <xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="c411c-250">Pour l’appeler, vous devez effectuer un cast ou convertir le <xref:System.Tuple%604> de l’objet à un <xref:System.Runtime.CompilerServices.ITuple> objet d’interface.</span><span class="sxs-lookup"><span data-stu-id="c411c-250">To call it, you must cast or convert the <xref:System.Tuple%604> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="c411c-251">
            <paramref name="index" /> est inférieur à 0 ou supérieur à 3.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-251">
              <paramref name="index" /> is less than 0 or greater than 3.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c411c-252">Obtient le nombre d’éléments dans <see langword="Tuple" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-252">Gets the number of elements in the <see langword="Tuple" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c411c-253">4, le nombre d’éléments dans un objet <see cref="T:System.Tuple`4" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-253">4, the number of elements in a <see cref="T:System.Tuple`4" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-254">Le <xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> propriété est une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="c411c-254">The <xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="c411c-255">Pour l’appeler, vous devez effectuer un cast ou convertir le <xref:System.Tuple%604> de l’objet à un <xref:System.Runtime.CompilerServices.ITuple> objet d’interface.</span><span class="sxs-lookup"><span data-stu-id="c411c-255">To call it, you must cast or convert the <xref:System.Tuple%604> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c411c-256">Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`4" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-256">Returns a string that represents the value of this <see cref="T:System.Tuple`4" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c411c-257">Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`4" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c411c-257">The string representation of this <see cref="T:System.Tuple`4" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c411c-258">La chaîne retournée par cette méthode prend la forme (*Item1*, *Item2*, *Item3*, *Item4*), où *Item1*, *Item2*, *Item3*, et *Item4* représentent les valeurs de la <xref:System.Tuple%604.Item1%2A>, <xref:System.Tuple%604.Item2%2A>, <xref:System.Tuple%604.Item3%2A>et <xref:System.Tuple%604.Item4%2A> propriétés, respectivement.</span><span class="sxs-lookup"><span data-stu-id="c411c-258">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*), where *Item1*, *Item2*, *Item3*, and *Item4* represent the values of the <xref:System.Tuple%604.Item1%2A>, <xref:System.Tuple%604.Item2%2A>, <xref:System.Tuple%604.Item3%2A>, and <xref:System.Tuple%604.Item4%2A> properties, respectively.</span></span> <span data-ttu-id="c411c-259">Si une des valeurs de propriété est `null`, il est représenté en tant que <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c411c-259">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c411c-260">L’exemple suivant illustre la <xref:System.Tuple%604.ToString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c411c-260">The following example illustrates the <xref:System.Tuple%604.ToString%2A> method.</span></span> <span data-ttu-id="c411c-261">Il affiche les composants d’un tableau d’objets de 4 tuples qui contiennent le nom d’une ville, un mois de l’année et la température moyenne haute et basse pour ce mois.</span><span class="sxs-lookup"><span data-stu-id="c411c-261">It displays the components of an array of 4-tuple objects that contain the name of a city, a month of the year, and the high and low average temperature for that month.</span></span>  
  
 [!code-csharp[System.Tuple\`4.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`4.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>