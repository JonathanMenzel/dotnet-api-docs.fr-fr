<Type Name="MarshalByRefObject" FullName="System.MarshalByRefObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba0cc66beb6ec557d553d59be7b1a29fdfc61852" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37479952" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit MarshalByRefObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.MarshalByRefObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarshalByRefObject abstract" />
  <TypeSignature Language="F#" Value="type MarshalByRefObject = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1a44a-101">Permet l’accès aux objets au-delà des limites du domaine d’application dans les applications qui prennent en charge l’accès distant.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a44a-101">Enables access to objects across application domain boundaries in applications that support remoting.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a44a-102">Un domaine d’application est une partition dans un processus de système d’exploitation où se trouvent une ou plusieurs applications.</span><span class="sxs-lookup"><span data-stu-id="1a44a-102">An application domain is a partition in an operating system process where one or more applications reside.</span></span> <span data-ttu-id="1a44a-103">Objets dans le même domaine d’application communiquent directement.</span><span class="sxs-lookup"><span data-stu-id="1a44a-103">Objects in the same application domain communicate directly.</span></span> <span data-ttu-id="1a44a-104">Objets dans différents domaines d’application communiquent en transportant des copies des objets entre les limites du domaine d’application, soit à l’aide d’un proxy pour échanger des messages.</span><span class="sxs-lookup"><span data-stu-id="1a44a-104">Objects in different application domains communicate either by transporting copies of objects across application domain boundaries, or by using a proxy to exchange messages.</span></span>  
  
 <span data-ttu-id="1a44a-105"><xref:System.MarshalByRefObject> est-ce que la classe de base pour les objets qui communiquent à travers les limites du domaine d’application en échangeant des messages à l’aide un proxy.</span><span class="sxs-lookup"><span data-stu-id="1a44a-105"><xref:System.MarshalByRefObject> is the base class for objects that communicate across application domain boundaries by exchanging messages using a proxy.</span></span> <span data-ttu-id="1a44a-106">Les objets qui n’héritent pas de <xref:System.MarshalByRefObject> sont implicitement marshaler par valeur.</span><span class="sxs-lookup"><span data-stu-id="1a44a-106">Objects that do not inherit from <xref:System.MarshalByRefObject> are implicitly marshal by value.</span></span> <span data-ttu-id="1a44a-107">Lorsqu’une application distante fait référence à un marshaling par objet de valeur, une copie de l’objet est passée entre les limites du domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1a44a-107">When a remote application references a marshal by value object, a copy of the object is passed across application domain boundaries.</span></span>  
  
 <span data-ttu-id="1a44a-108"><xref:System.MarshalByRefObject> les objets sont accessibles directement dans les limites du domaine d’application local.</span><span class="sxs-lookup"><span data-stu-id="1a44a-108"><xref:System.MarshalByRefObject> objects are accessed directly within the boundaries of the local application domain.</span></span> <span data-ttu-id="1a44a-109">La première fois une application dans un référentiel distant domaine d’application accède à un <xref:System.MarshalByRefObject>, un proxy est passé à l’application distante.</span><span class="sxs-lookup"><span data-stu-id="1a44a-109">The first time an application in a remote application domain accesses a <xref:System.MarshalByRefObject>, a proxy is passed to the remote application.</span></span> <span data-ttu-id="1a44a-110">Les appels suivants sur le proxy sont marshalés vers l’objet résidant dans le domaine d’application local.</span><span class="sxs-lookup"><span data-stu-id="1a44a-110">Subsequent calls on the proxy are marshaled back to the object residing in the local application domain.</span></span>  
  
 <span data-ttu-id="1a44a-111">Doivent hériter de types <xref:System.MarshalByRefObject> lorsque le type est utilisé au-delà des limites du domaine d’application et l’état de l’objet ne doit pas être copié, car les membres de l’objet ne sont pas utilisables en dehors du domaine d’application dans lequel ils ont été créés.</span><span class="sxs-lookup"><span data-stu-id="1a44a-111">Types must inherit from <xref:System.MarshalByRefObject> when the type is used across application domain boundaries, and the state of the object must not be copied because the members of the object are not usable outside the application domain where they were created.</span></span>  
  
 <span data-ttu-id="1a44a-112">Lorsque vous dérivez un objet à partir de <xref:System.MarshalByRefObject> pour une utilisation sur les limites du domaine d’application, vous ne devez pas substituer un de ses membres, ni doit appeler ses méthodes directement.</span><span class="sxs-lookup"><span data-stu-id="1a44a-112">When you derive an object from <xref:System.MarshalByRefObject> for use across application domain boundaries, you should not override any of its members, nor should you call its methods directly.</span></span> <span data-ttu-id="1a44a-113">Le runtime reconnaît que les classes dérivées de <xref:System.MarshalByRefObject> doit être marshalée au-delà des limites du domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1a44a-113">The runtime recognizes that classes derived from  <xref:System.MarshalByRefObject> should be marshaled across app domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a44a-114">Cette section contient deux exemples de code.</span><span class="sxs-lookup"><span data-stu-id="1a44a-114">This section contains two code examples.</span></span> <span data-ttu-id="1a44a-115">Le premier exemple de code montre comment créer une instance d’une classe dans un autre domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1a44a-115">The first code example shows how to create an instance of a class in another application domain.</span></span> <span data-ttu-id="1a44a-116">Le deuxième exemple de code montre une classe simple qui peut être utilisée pour la communication à distance.</span><span class="sxs-lookup"><span data-stu-id="1a44a-116">The second code example shows a simple class that can be used for remoting.</span></span>  
  
 <span data-ttu-id="1a44a-117">**Exemple 1**</span><span class="sxs-lookup"><span data-stu-id="1a44a-117">**Example 1**</span></span>  
  
 <span data-ttu-id="1a44a-118">L’exemple de code suivant montre la façon la plus simple d’exécuter du code dans un autre domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1a44a-118">The following code example shows the simplest way to execute code in another application domain.</span></span> <span data-ttu-id="1a44a-119">L’exemple définit une classe nommée `Worker` qui hérite <xref:System.MarshalByRefObject>, avec une méthode qui affiche le nom du domaine d’application dans lequel elle s’exécute.</span><span class="sxs-lookup"><span data-stu-id="1a44a-119">The example defines a class named `Worker` that inherits <xref:System.MarshalByRefObject>, with a method that displays the name of the application domain in which it is executing.</span></span> <span data-ttu-id="1a44a-120">L’exemple crée des instances de `Worker` dans le domaine d’application par défaut et dans un nouveau domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1a44a-120">The example creates instances of `Worker` in the default application domain and in a new application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1a44a-121">L’assembly qui contient `Worker` doit être chargé dans les deux domaines d’application, mais il pourrait charger d’autres assemblys qui existent uniquement dans le nouveau domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1a44a-121">The assembly that contains `Worker` must be loaded into both application domains, but it could load other assemblies that would exist only in the new application domain.</span></span>  
  
 [!code-cpp[CreateInstanceAndUnwrap2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cpp/source.cpp#1)]
 [!code-csharp[CreateInstanceAndUnwrap2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cs/source.cs#1)]
 [!code-vb[CreateInstanceAndUnwrap2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CreateInstanceAndUnwrap2/VB/source.vb#1)]  
  
 <span data-ttu-id="1a44a-122">**Exemple 2**</span><span class="sxs-lookup"><span data-stu-id="1a44a-122">**Example 2**</span></span>  
  
 <span data-ttu-id="1a44a-123">L’exemple suivant montre une classe dérivée de <xref:System.MarshalByRefObject> qui est utilisée ultérieurement dans la communication à distance.</span><span class="sxs-lookup"><span data-stu-id="1a44a-123">The following example demonstrates a class derived from <xref:System.MarshalByRefObject> that is used later in remoting.</span></span>  
  
 [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CPP/source.cpp#1)]
 [!code-csharp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CS/source.cs#1)]
 [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a44a-124">Initialise une nouvelle instance de la classe <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-124">Initializes a new instance of the <see cref="T:System.MarshalByRefObject" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjRef">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjRef CreateObjRef(class System.Type requestedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObjRef (requestedType As Type) As ObjRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjRef ^ CreateObjRef(Type ^ requestedType);" />
      <MemberSignature Language="F#" Value="abstract member CreateObjRef : Type -&gt; System.Runtime.Remoting.ObjRef&#xA;override this.CreateObjRef : Type -&gt; System.Runtime.Remoting.ObjRef" Usage="marshalByRefObject.CreateObjRef requestedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="requestedType">
          <span data-ttu-id="1a44a-125">
            <see cref="T:System.Type" /> de l'objet auquel le nouveau <see cref="T:System.Runtime.Remoting.ObjRef" /> fera référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-125">The <see cref="T:System.Type" /> of the object that the new <see cref="T:System.Runtime.Remoting.ObjRef" /> will reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a44a-126">Crée un objet contenant toutes les informations appropriées requises pour générer un proxy permettant de communiquer avec un objet distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-126">Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a44a-127">Informations requises pour générer un proxy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-127">Information required to generate a proxy.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a44a-128">Le <xref:System.MarshalByRefObject.CreateObjRef%2A> méthode est appelée par les méthodes de création d’objet distant tel que <xref:System.AppDomain.CreateInstance%2A?displayProperty=nameWithType> et <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1a44a-128">The <xref:System.MarshalByRefObject.CreateObjRef%2A> method is called by remote object creation methods such as <xref:System.AppDomain.CreateInstance%2A?displayProperty=nameWithType> and <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1a44a-129">Dans la plupart des cas, il est inutile de substituer cette méthode.</span><span class="sxs-lookup"><span data-stu-id="1a44a-129">In most cases, there is no need to override this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="1a44a-130">Cette instance n'est pas un objet de communication à distance valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-130">This instance is not a valid remoting object.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1a44a-131">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-131">The immediate caller does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1a44a-132">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-132">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1a44a-133">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-133">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetLifetimeService">
      <MemberSignature Language="C#" Value="public object GetLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.GetLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLifetimeService();" />
      <MemberSignature Language="F#" Value="abstract member GetLifetimeService : unit -&gt; obj&#xA;override this.GetLifetimeService : unit -&gt; obj" Usage="marshalByRefObject.GetLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a44a-134">Récupère l'objet de service de durée de vie en cours qui contrôle la stratégie de durée de vie de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-134">Retrieves the current lifetime service object that controls the lifetime policy for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a44a-135">Objet de type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> utilisé pour contrôler la stratégie de durée de vie de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-135">An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a44a-136">Pour plus d’informations sur les services de durée de vie, consultez la <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> classe.</span><span class="sxs-lookup"><span data-stu-id="1a44a-136">For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1a44a-137">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-137">The immediate caller does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1a44a-138">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-138">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1a44a-139">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-139">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public virtual object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="abstract member InitializeLifetimeService : unit -&gt; obj&#xA;override this.InitializeLifetimeService : unit -&gt; obj" Usage="marshalByRefObject.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a44a-140">Obtient un objet de service de durée de vie pour contrôler la stratégie de durée de vie de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-140">Obtains a lifetime service object to control the lifetime policy for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a44a-141">Objet de type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> utilisé pour contrôler la stratégie de durée de vie de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-141">An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance.</span>
          </span>
          <span data-ttu-id="1a44a-142">Il s'agit de l'objet de service de durée de vie en cours de cette instance s'il existe ; sinon, il s'agit d'un nouvel objet de service de durée de vie initialisé en utilisant la valeur de la propriété <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-142">This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a44a-143">Pour plus d’informations sur les services de durée de vie, consultez la <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> classe.</span><span class="sxs-lookup"><span data-stu-id="1a44a-143">For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a44a-144">L’exemple de code suivant illustre la création d’un bail.</span><span class="sxs-lookup"><span data-stu-id="1a44a-144">The following code example demonstrates creating a lease.</span></span>  
  
 [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CS/source.cs#1)]
 [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1a44a-145">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-145">The immediate caller does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1a44a-146">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-146">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1a44a-147">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-147">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemberwiseClone">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1a44a-148">Crée une copie superficielle de l'objet actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-148">Creates a shallow copy of the current object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemberwiseClone">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.MarshalByRefObject MemberwiseClone(bool cloneIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function MemberwiseClone (cloneIdentity As Boolean) As MarshalByRefObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject ^ MemberwiseClone(bool cloneIdentity);" />
      <MemberSignature Language="F#" Value="override this.MemberwiseClone : bool -&gt; MarshalByRefObject" Usage="marshalByRefObject.MemberwiseClone cloneIdentity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MarshalByRefObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneIdentity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cloneIdentity">
          <span data-ttu-id="1a44a-149">
            <see langword="false" /> pour supprimer l'identité de l'objet <see cref="T:System.MarshalByRefObject" /> actuel, ce qui provoque l'assignation d'une nouvelle identité à l'objet lorsqu'il est marshalé au-delà d'une limite de communication à distance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-149">
              <see langword="false" /> to delete the current <see cref="T:System.MarshalByRefObject" /> object's identity, which will cause the object to be assigned a new identity when it is marshaled across a remoting boundary.</span>
          </span>
          <span data-ttu-id="1a44a-150">La valeur <see langword="false" /> est généralement appropriée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-150">A value of <see langword="false" /> is usually appropriate.</span>
          </span>
          <span data-ttu-id="1a44a-151">
            <see langword="true" /> pour copier l'identité de l'objet <see cref="T:System.MarshalByRefObject" /> actuel vers son clone, ce qui entraîne le routage des appels de clients de communication à distance vers l'objet serveur distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-151">
              <see langword="true" /> to copy the current <see cref="T:System.MarshalByRefObject" /> object's identity to its clone, which will cause remoting client calls to be routed to the remote server object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a44a-152">Crée une copie superficielle de l'objet <see cref="T:System.MarshalByRefObject" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-152">Creates a shallow copy of the current <see cref="T:System.MarshalByRefObject" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a44a-153">Copie superficielle de l'objet <see cref="T:System.MarshalByRefObject" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a44a-153">A shallow copy of the current <see cref="T:System.MarshalByRefObject" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a44a-154">Le <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> méthode crée une copie superficielle en créant un nouveau <xref:System.MarshalByRefObject> de l’objet, puis en copiant les champs non statiques de l’actuel <xref:System.MarshalByRefObject> objet vers le nouvel objet.</span><span class="sxs-lookup"><span data-stu-id="1a44a-154">The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method creates a shallow copy by creating a new <xref:System.MarshalByRefObject> object, and then copying the nonstatic fields of the current <xref:System.MarshalByRefObject> object to the new object.</span></span> <span data-ttu-id="1a44a-155">Si un champ est un type valeur, une copie bit par bit du champ est effectuée.</span><span class="sxs-lookup"><span data-stu-id="1a44a-155">If a field is a value type, a bit-by-bit copy of the field is performed.</span></span> <span data-ttu-id="1a44a-156">Si un champ est un type référence, la référence est copiée, mais l’objet référencé n’est pas. Par conséquent, l’objet d’origine et son clone font référence au même objet.</span><span class="sxs-lookup"><span data-stu-id="1a44a-156">If a field is a reference type, the reference is copied but the referred object is not; therefore, the original object and its clone refer to the same object.</span></span>  
  
 <span data-ttu-id="1a44a-157">Par exemple, considérez un <xref:System.MarshalByRefObject> objet appelé X qui référence des objets A et B, à son tour, fait référence à l’objet C. Une copie superficielle de X crée le nouvel objet X2 qui référence également des objets A et B. En revanche, une copie complète de X crée un nouvel objet X2 qui référence les nouveaux objets A2 et B2, qui sont des copies de A et B. B2 référence à son tour, le nouvel objet C2, qui est une copie C. Utilisez une classe qui implémente le <xref:System.ICloneable> interface pour effectuer un profondeur ou superficiellement c copier d’un objet.</span><span class="sxs-lookup"><span data-stu-id="1a44a-157">For example, consider a <xref:System.MarshalByRefObject> object called X that references objects A and B. Object B, in turn, references object C. A shallow copy of X creates new object X2 that also references objects A and B. In contrast, a deep copy of X creates a new object X2 that references the new objects A2 and B2, which are copies of A and B. B2, in turn, references the new object C2, which is a copy C. Use a class that implements the <xref:System.ICloneable> interface to perform a deep or shallow copy of an object.</span></span>  
  
 <span data-ttu-id="1a44a-158">L’identité d’un <xref:System.MarshalByRefObject> objet est défini comme l’objet serveur distant qui est la cible d’un appel de client de communication à distance.</span><span class="sxs-lookup"><span data-stu-id="1a44a-158">The identity of a <xref:System.MarshalByRefObject> object is defined as the remote server object that is the target of a remoting client call.</span></span> <span data-ttu-id="1a44a-159">Par défaut, le clone memberwise d’un <xref:System.MarshalByRefObject> objet a la même identité que l’objet d’origine, ce qui n’est généralement pas le comportement correct des clones d’objets côté serveur qui sont marshalées sur une limite de communication à distance vers le côté client.</span><span class="sxs-lookup"><span data-stu-id="1a44a-159">By default, the memberwise clone of a <xref:System.MarshalByRefObject> object has the same identity as the original object, which is typically not the correct behavior for clones of server-side objects that are marshaled across a remoting boundary to the client side.</span></span> <span data-ttu-id="1a44a-160">Spécifiez `false`, qui est généralement approprié, pour supprimer l’identité du clone et de provoquer une nouvelle identité d’être affectées lorsque le clone est marshalé au-delà d’une limite de communication à distance, ou `true` pour que le clone conserve l’identité de l’original <xref:System.MarshalByRefObject> objet.</span><span class="sxs-lookup"><span data-stu-id="1a44a-160">Specify `false`, which is usually appropriate, to delete the identity of the clone and cause a new identity to be assigned when the clone is marshaled across a remoting boundary, or `true` to cause the clone to retain the identity of the original <xref:System.MarshalByRefObject> object.</span></span> <span data-ttu-id="1a44a-161">Le <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> méthode est destinée à être utilisée par les développeurs qui implémentent des objets de serveur distant.</span><span class="sxs-lookup"><span data-stu-id="1a44a-161">The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method is intended to be used by developers implementing remote server objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>