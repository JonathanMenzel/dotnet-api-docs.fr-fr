<Type Name="Tuple&lt;T1,T2,T3,T4,T5&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f497530ad38c3273cae97398eed3059335a60f6e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58696976" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`5&lt;T1, T2, T3, T4, T5&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`5" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="0236a-101">Type du premier composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="0236a-102">Type du second composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="0236a-103">Type du troisième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="0236a-104">Type du quatrième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="0236a-105">Type du cinquième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-105">The type of the tuple's fifth component.</span></span></typeparam>
    <summary><span data-ttu-id="0236a-106">Représente un objet de 5 tuples, ou quintuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-106">Represents a 5-tuple, or quintuple.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-107">Un tuple est une structure de données qui a un nombre spécifique et une séquence de valeurs.</span><span class="sxs-lookup"><span data-stu-id="0236a-107">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="0236a-108">Le <xref:System.Tuple%605> classe représente un 5-tuple, ou quintuple, qui est un tuple qui a cinq composants.</span><span class="sxs-lookup"><span data-stu-id="0236a-108">The <xref:System.Tuple%605> class represents a 5-tuple, or quintuple, which is a tuple that has five components.</span></span>  
  
 <span data-ttu-id="0236a-109">Vous pouvez instancier un <xref:System.Tuple%605> objet en appelant le <xref:System.Tuple%605.%23ctor%2A> constructeur ou la méthode statique <xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0236a-109">You can instantiate a <xref:System.Tuple%605> object by calling either the <xref:System.Tuple%605.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0236a-110">Vous pouvez récupérer la valeur des composants du tuple à l’aide en lecture seule <xref:System.Tuple%605.Item1%2A>, <xref:System.Tuple%605.Item2%2A>, <xref:System.Tuple%605.Item3%2A>, <xref:System.Tuple%605.Item4%2A>, et <xref:System.Tuple%605.Item5%2A> propriétés de l’instance.</span><span class="sxs-lookup"><span data-stu-id="0236a-110">You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%605.Item1%2A>, <xref:System.Tuple%605.Item2%2A>, <xref:System.Tuple%605.Item3%2A>, <xref:System.Tuple%605.Item4%2A>, and <xref:System.Tuple%605.Item5%2A> instance properties.</span></span>  
  
 <span data-ttu-id="0236a-111">Tuples sont fréquemment utilisées dans quatre façons différentes :</span><span class="sxs-lookup"><span data-stu-id="0236a-111">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="0236a-112">Pour représenter un jeu unique de données.</span><span class="sxs-lookup"><span data-stu-id="0236a-112">To represent a single set of data.</span></span> <span data-ttu-id="0236a-113">Par exemple, un tuple peut représenter un enregistrement de base de données, et ses composants peuvent représenter des champs individuels de l’enregistrement.</span><span class="sxs-lookup"><span data-stu-id="0236a-113">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="0236a-114">Pour fournir un accès facile aux et manipulation d’un jeu de données.</span><span class="sxs-lookup"><span data-stu-id="0236a-114">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="0236a-115">L’exemple suivant définit un tableau de <xref:System.Tuple%605> objets qui contiennent les noms des rappels en cours d’exécution dans le football américain, le nombre de parties dans lequel ils jouées et le nombre de, nombre total d’yards acquises et déplacements évaluées au cours de ces jeux.</span><span class="sxs-lookup"><span data-stu-id="0236a-115">The following example defines an array of <xref:System.Tuple%605> objects that contain the names of running backs in American football, the number of games in which they played, and the number of carries, total yards gained, and touchdowns scored during those games.</span></span> <span data-ttu-id="0236a-116">Le tableau est passé à la `ComputeStatistics` (méthode), qui calcule le nombre de comporte par yards jeu, moyenne par yards jeu, moyenne par carry chaque back en cours d’exécution et nombre moyen d’essais par tentative.</span><span class="sxs-lookup"><span data-stu-id="0236a-116">The array is passed to the `ComputeStatistics` method, which calculates each running back's number of carries per game, average yards per game, average yards per carry, and average number of touchdowns per attempt.</span></span>  
  
     [!code-csharp[System.Tuple\`5.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`5.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="0236a-117">Pour retourner plusieurs valeurs à partir d’une méthode sans utiliser de `out` paramètres (en C#) ou `ByRef` paramètres (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="0236a-117">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="0236a-118">Par exemple, l’exemple précédent retourne ses statistiques calculées, ainsi que le nom de l’acteur, dans un tableau de <xref:System.Tuple%605> objets.</span><span class="sxs-lookup"><span data-stu-id="0236a-118">For example, the previous example returns its computed statistics, along with the name of the player, in an array of <xref:System.Tuple%605> objects.</span></span>  
  
-   <span data-ttu-id="0236a-119">Pour passer les valeurs multiples dans une méthode via un paramètre unique.</span><span class="sxs-lookup"><span data-stu-id="0236a-119">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="0236a-120">Par exemple, le <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> méthode possède un paramètre unique qui vous permet de fournir une valeur à la méthode que le thread exécute au démarrage.</span><span class="sxs-lookup"><span data-stu-id="0236a-120">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="0236a-121">Si vous fournissez un <xref:System.Tuple%605> de l’objet en tant qu’argument de méthode, vous pouvez fournir la routine de démarrage du thread avec cinq éléments de données.</span><span class="sxs-lookup"><span data-stu-id="0236a-121">If you supply a <xref:System.Tuple%605> object as the method argument, you can supply the thread's startup routine with five items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt; : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt; (item1, item2, item3, item4, item5)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="0236a-122">Valeur du premier composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-122">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="0236a-123">Valeur du second composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-123">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="0236a-124">Valeur du troisième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-124">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="0236a-125">Valeur du quatrième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-125">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="0236a-126">Valeur du cinquième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-126">The value of the tuple's fifth component.</span></span></param>
        <summary><span data-ttu-id="0236a-127">Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`5" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-127">Initializes a new instance of the <see cref="T:System.Tuple`5" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-128">Vous pouvez également utiliser la méthode statique <xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType> méthode pour instancier un objet de 5 tuples sans devoir spécifier explicitement les types de ses composants.</span><span class="sxs-lookup"><span data-stu-id="0236a-128">You can also use the static <xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType> method to instantiate a 5-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="0236a-129">L’exemple suivant utilise le <xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType> méthode pour instancier un 5-tuple dont le premier composant est de type <xref:System.String> et ses quatre composants restants sont de type <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="0236a-129">The following example uses the <xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType> method to instantiate a 5-tuple whose first component is of type <xref:System.String> and its remaining four components are of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#9)]
 [!code-vb[System.Tuple.Create#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#9)]  
  
 <span data-ttu-id="0236a-130">Cela équivaut à l’appel suivant à la <xref:System.Tuple%605.%23ctor%2A> constructeur de classe.</span><span class="sxs-lookup"><span data-stu-id="0236a-130">This is equivalent to the following call to the <xref:System.Tuple%605.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#10)]
 [!code-vb[System.Tuple.Create#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0236a-131">Objet à comparer avec cette instance.</span><span class="sxs-lookup"><span data-stu-id="0236a-131">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="0236a-132">Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`5" /> actuel est égal à un objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="0236a-132">Returns a value that indicates whether the current <see cref="T:System.Tuple`5" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="0236a-133"><see langword="true" /> si l'instance actuelle est égale à l'objet spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-133"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-134">Le `obj` paramètre est considéré comme égal à l’instance actuelle dans les conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="0236a-134">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="0236a-135">Il s’agit une <xref:System.Tuple%605> objet.</span><span class="sxs-lookup"><span data-stu-id="0236a-135">It is a <xref:System.Tuple%605> object.</span></span>  
  
-   <span data-ttu-id="0236a-136">Ses cinq composants sont des mêmes types que l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="0236a-136">Its five components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="0236a-137">Ses cinq composants sont égales à celles de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="0236a-137">Its five components are equal to those of the current instance.</span></span> <span data-ttu-id="0236a-138">L'égalité est déterminée par le comparateur d'égalité d'objet par défaut pour chaque composant.</span><span class="sxs-lookup"><span data-stu-id="0236a-138">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0236a-139">L’exemple suivant définit un tableau d’objets de 5 tuples qui contiennent des données sur les températures de patients dans deux groupes de test.</span><span class="sxs-lookup"><span data-stu-id="0236a-139">The following example defines an array of 5-tuple objects that contain data about the temperatures of patients in two test groups.</span></span> <span data-ttu-id="0236a-140">Le premier composant du tableau fournit le numéro du groupe de test, et le deuxième, troisième et cinquième composants fournissent la température d’un patient à des intervalles horaires.</span><span class="sxs-lookup"><span data-stu-id="0236a-140">The first component of the array provides the number of the test group, and the second through fifth components provide the temperatures of a patient at hourly intervals.</span></span> <span data-ttu-id="0236a-141">Le <xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType> méthode est appelée pour comparer chaque <xref:System.Tuple%605> objet avec tous les autres <xref:System.Tuple%605> objet.</span><span class="sxs-lookup"><span data-stu-id="0236a-141">The <xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType> method is called to compare every <xref:System.Tuple%605> object with every other <xref:System.Tuple%605> object.</span></span> <span data-ttu-id="0236a-142">La sortie montre que le <xref:System.Tuple%605.Equals%2A> retourne de la méthode `true` uniquement lorsque toutes les cinq composants de la <xref:System.Tuple%605> objets ont des valeurs égales.</span><span class="sxs-lookup"><span data-stu-id="0236a-142">The output illustrates that the <xref:System.Tuple%605.Equals%2A> method returns `true` only when all five components of the <xref:System.Tuple%605> objects have equal values.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`5.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0236a-143">Retourne le code de hachage pour l'objet <see cref="T:System.Tuple`5" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="0236a-143">Returns the hash code for the current <see cref="T:System.Tuple`5" /> object.</span></span></summary>
        <returns><span data-ttu-id="0236a-144">Code de hachage d'un entier signé 32 bits.</span><span class="sxs-lookup"><span data-stu-id="0236a-144">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0236a-145">Obtient la valeur du premier composant de l'objet <see cref="T:System.Tuple`5" /> actif.</span><span class="sxs-lookup"><span data-stu-id="0236a-145">Gets the value of the current <see cref="T:System.Tuple`5" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="0236a-146">Valeur du premier composant de l'objet <see cref="T:System.Tuple`5" /> actif.</span><span class="sxs-lookup"><span data-stu-id="0236a-146">The value of the current <see cref="T:System.Tuple`5" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-147">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%605.Item1%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="0236a-147">You can dynamically determine the type of the <xref:System.Tuple%605.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="0236a-148">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%605.Item1%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0236a-148">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%605.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="0236a-149">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%605> de l’objet et en extrayant le premier élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0236a-149">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%605> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0236a-150">L’exemple suivant définit un tableau de <xref:System.Tuple%605> objets dont les composants contiennent le nom d’un état dans les États-Unis, sa population en 1990 et 2000, l’évolution de sa population dans cette période de 10 ans et le pourcentage de modification de sa population.</span><span class="sxs-lookup"><span data-stu-id="0236a-150">The following example defines an array of <xref:System.Tuple%605> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</span></span> <span data-ttu-id="0236a-151">Il effectue une itération dans le tableau, puis affiche la valeur de chaque composant dans un tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-151">It then iterates through the array and displays the value of each component in a tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`5.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0236a-152">Obtient la valeur du deuxième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</span><span class="sxs-lookup"><span data-stu-id="0236a-152">Gets the value of the current <see cref="T:System.Tuple`5" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="0236a-153">Valeur du deuxième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</span><span class="sxs-lookup"><span data-stu-id="0236a-153">The value of the current <see cref="T:System.Tuple`5" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-154">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%604.Item2%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="0236a-154">You can dynamically determine the type of the <xref:System.Tuple%604.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="0236a-155">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%604.Item2%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0236a-155">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%604.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="0236a-156">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%604> de l’objet et en extrayant le deuxième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0236a-156">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%604> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0236a-157">L’exemple suivant définit un tableau de <xref:System.Tuple%605> objets dont les composants contiennent le nom d’un état dans les États-Unis, sa population en 1990 et 2000, l’évolution de sa population dans cette période de 10 ans et le pourcentage de modification de sa population.</span><span class="sxs-lookup"><span data-stu-id="0236a-157">The following example defines an array of <xref:System.Tuple%605> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</span></span> <span data-ttu-id="0236a-158">Il effectue une itération dans le tableau, puis affiche la valeur de chaque composant dans un tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-158">It then iterates through the array and displays the value of each component in a tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`5.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0236a-159">Obtient la valeur du troisième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</span><span class="sxs-lookup"><span data-stu-id="0236a-159">Gets the value of the current <see cref="T:System.Tuple`5" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="0236a-160">Valeur du troisième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</span><span class="sxs-lookup"><span data-stu-id="0236a-160">The value of the current <see cref="T:System.Tuple`5" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-161">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%604.Item2%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="0236a-161">You can dynamically determine the type of the <xref:System.Tuple%604.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="0236a-162">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%604.Item2%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0236a-162">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%604.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="0236a-163">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%604> de l’objet et en extrayant le deuxième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0236a-163">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%604> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0236a-164">L’exemple suivant définit un tableau de <xref:System.Tuple%605> objets dont les composants contiennent le nom d’un état dans les États-Unis, sa population en 1990 et 2000, l’évolution de sa population dans cette période de 10 ans et le pourcentage de modification de sa population.</span><span class="sxs-lookup"><span data-stu-id="0236a-164">The following example defines an array of <xref:System.Tuple%605> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</span></span> <span data-ttu-id="0236a-165">Il effectue une itération dans le tableau, puis affiche la valeur de chaque composant dans un tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-165">It then iterates through the array and displays the value of each component in a tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`5.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item4 : 'T4" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;.Item4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0236a-166">Obtient la valeur du quatrième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</span><span class="sxs-lookup"><span data-stu-id="0236a-166">Gets the value of the current <see cref="T:System.Tuple`5" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="0236a-167">Valeur du quatrième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</span><span class="sxs-lookup"><span data-stu-id="0236a-167">The value of the current <see cref="T:System.Tuple`5" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-168">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%604.Item2%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="0236a-168">You can dynamically determine the type of the <xref:System.Tuple%604.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="0236a-169">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%604.Item2%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0236a-169">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%604.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="0236a-170">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%604> de l’objet et en extrayant le deuxième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0236a-170">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%604> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0236a-171">L’exemple suivant définit un tableau de <xref:System.Tuple%605> objets dont les composants contiennent le nom d’un état dans les États-Unis, sa population en 1990 et 2000, l’évolution de sa population dans cette période de 10 ans et le pourcentage de modification de sa population.</span><span class="sxs-lookup"><span data-stu-id="0236a-171">The following example defines an array of <xref:System.Tuple%605> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</span></span> <span data-ttu-id="0236a-172">Il effectue une itération dans le tableau, puis affiche la valeur de chaque composant dans un tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-172">It then iterates through the array and displays the value of each component in a tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`5.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item5 : 'T5" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;.Item5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0236a-173">Obtient la valeur du cinquième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</span><span class="sxs-lookup"><span data-stu-id="0236a-173">Gets the value of the current <see cref="T:System.Tuple`5" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="0236a-174">Valeur du cinquième composant de l'objet <see cref="T:System.Tuple`5" /> actif.</span><span class="sxs-lookup"><span data-stu-id="0236a-174">The value of the current <see cref="T:System.Tuple`5" /> object's fifth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-175">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%604.Item2%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="0236a-175">You can dynamically determine the type of the <xref:System.Tuple%604.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="0236a-176">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%604.Item2%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0236a-176">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%604.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="0236a-177">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%604> de l’objet et en extrayant le deuxième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0236a-177">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%604> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0236a-178">L’exemple suivant définit un tableau de <xref:System.Tuple%605> objets dont les composants contiennent le nom d’un état américain, sa population en 1990 et 2000, l’évolution de sa population dans cette période de 10 ans et le pourcentage de modification de sa population.</span><span class="sxs-lookup"><span data-stu-id="0236a-178">The following example defines an array of <xref:System.Tuple%605> objects whose components contain the name of a state in the United Dates, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</span></span> <span data-ttu-id="0236a-179">Il effectue une itération dans le tableau, puis affiche la valeur de chaque composant dans un tuple.</span><span class="sxs-lookup"><span data-stu-id="0236a-179">It then iterates through the array and displays the value of each component in a tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`5.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="0236a-180">Objet à comparer à l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="0236a-180">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="0236a-181">Un objet qui fournit des règles personnalisées pour la comparaison.</span><span class="sxs-lookup"><span data-stu-id="0236a-181">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="0236a-182">Compare l'objet <see cref="T:System.Tuple`5" /> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou se trouve à la même position que l'objet spécifié dans l'ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="0236a-182">Compares the current <see cref="T:System.Tuple`5" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="0236a-183">Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="0236a-183">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="0236a-184">Value</span><span class="sxs-lookup"><span data-stu-id="0236a-184">Value</span></span> 
 </term><description> <span data-ttu-id="0236a-185">Description </span><span class="sxs-lookup"><span data-stu-id="0236a-185">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="0236a-186">Entier négatif</span><span class="sxs-lookup"><span data-stu-id="0236a-186">A negative integer</span></span> 
 </term><description> <span data-ttu-id="0236a-187">Cette instance précède <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-187">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="0236a-188">Zéro</span><span class="sxs-lookup"><span data-stu-id="0236a-188">Zero</span></span> 
 </term><description> <span data-ttu-id="0236a-189">Cette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="0236a-189">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="0236a-190">Entier positif</span><span class="sxs-lookup"><span data-stu-id="0236a-190">A positive integer</span></span> 
 </term><description> <span data-ttu-id="0236a-191">Cette instance suit <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-191">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-192">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="0236a-192">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0236a-193">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%605> est castée en interface <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="0236a-193">It can be used only when the <xref:System.Tuple%605> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="0236a-194">Bien que cette méthode peut être appelée directement, elle est généralement appelée par tri à la collection de méthodes qui incluent <xref:System.Collections.IComparer> paramètres pour classer les membres d’une collection.</span><span class="sxs-lookup"><span data-stu-id="0236a-194">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="0236a-195">Par exemple, elle est appelée par le <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> (méthode) et le <xref:System.Collections.SortedList.Add%2A> méthode d’un <xref:System.Collections.SortedList> objet est instancié à l’aide de la <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructeur.</span><span class="sxs-lookup"><span data-stu-id="0236a-195">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0236a-196">Le <xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A> méthode est conçue pour une utilisation dans les opérations de tri.</span><span class="sxs-lookup"><span data-stu-id="0236a-196">The <xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="0236a-197">Elle ne doit pas être utilisée lors de l’objectif principal d’une comparaison consiste à déterminer si deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="0236a-197">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="0236a-198">Pour déterminer si deux objets sont égales, appelez le <xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0236a-198">To determine whether two objects are equal, call the <xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0236a-199">L’exemple suivant crée un tableau de <xref:System.Tuple%605> les objets qui contiennent des données de statistiques de carrière pour les rappels en cours d’exécution de football américain professionnel.</span><span class="sxs-lookup"><span data-stu-id="0236a-199">The following example creates an array of <xref:System.Tuple%605> objects that contain career statistical data for running backs in American professional football.</span></span> <span data-ttu-id="0236a-200">Du 5-tuple est composé du nom du joueur, le nombre de parties dans lequel il a joué, le nombre de tentatives, ou comporte le nombre total d’yards acquise, et le nombre d’essais.</span><span class="sxs-lookup"><span data-stu-id="0236a-200">The 5-tuple's components consist of the player's name, the number of games in which he played, the number of carries or attempts, the total number of yards gained, and the number of touchdowns scored.</span></span> <span data-ttu-id="0236a-201">L’exemple affiche les composants de chaque tuple dans le tableau en ordre non trié, trie le tableau, puis appelle <xref:System.Tuple%605.ToString%2A> pour afficher chaque tuple dans un ordre trié.</span><span class="sxs-lookup"><span data-stu-id="0236a-201">The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%605.ToString%2A> to display each tuple in sorted order.</span></span> <span data-ttu-id="0236a-202">Pour trier le tableau, l’exemple définit un générique `YardsGained` classe qui implémente le <xref:System.Collections.IComparer> interface et trie le <xref:System.Tuple%605> objets dans l’ordre décroissant par la valeur de leur quatrième composant (yards acquises) plutôt que par leur premier composant.</span><span class="sxs-lookup"><span data-stu-id="0236a-202">To sort the array, the example defines a generic `YardsGained` class that implements the <xref:System.Collections.IComparer> interface and sorts the <xref:System.Tuple%605> objects in descending order by the value of their fourth component (yards gained) rather than by their first component.</span></span> <span data-ttu-id="0236a-203">Notez que l’exemple n’appelle pas directement la <xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0236a-203">Note that the example does not directly call the <xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A> method.</span></span> <span data-ttu-id="0236a-204">Cette méthode est appelée implicitement par la <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> méthode pour chaque élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="0236a-204">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`5.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`5.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0236a-205"><paramref name="other" /> n’est pas un objet <see cref="T:System.Tuple`5" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-205"><paramref name="other" /> is not a <see cref="T:System.Tuple`5" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="0236a-206">Objet à comparer avec cette instance.</span><span class="sxs-lookup"><span data-stu-id="0236a-206">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="0236a-207">Un objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="0236a-207">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="0236a-208">Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`5" /> actif est égal à un objet spécifié selon une méthode de comparaison spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0236a-208">Returns a value that indicates whether the current <see cref="T:System.Tuple`5" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="0236a-209"><see langword="true" /> si l'instance actuelle est égale à l'objet spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-209"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-210">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="0236a-210">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0236a-211">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%605> est castée en interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="0236a-211">It can be used only when the <xref:System.Tuple%605> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="0236a-212">Le <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implémentation est appelée uniquement si `other` n’est pas `null`, et si elle peut être casté (en C#) ou converti (en Visual Basic) en un <xref:System.Tuple%605> objet dont les composants sont des mêmes types que l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="0236a-212">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%605> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="0236a-213">Le <xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> passe en premier (méthode) le <xref:System.Tuple%605.Item1%2A> les valeurs de la <xref:System.Tuple%605> objets à comparer à la <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="0236a-213">The <xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%605.Item1%2A> values of the <xref:System.Tuple%605> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="0236a-214">Si cet appel de méthode retourne `true`, la méthode est appelée à nouveau et passée le <xref:System.Tuple%605.Item2%2A> les valeurs des deux <xref:System.Tuple%605> objets.</span><span class="sxs-lookup"><span data-stu-id="0236a-214">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%605.Item2%2A> values of the two <xref:System.Tuple%605> objects.</span></span> <span data-ttu-id="0236a-215">Ce processus se poursuit jusqu'à ce que l’appel de méthode retourne `false` lorsqu’il compare une paire spécifique de `Item` valeurs ou les deux <xref:System.Tuple%605.Item5%2A> valeurs sont passées à la méthode.</span><span class="sxs-lookup"><span data-stu-id="0236a-215">This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%605.Item5%2A> values are passed to the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0236a-216">L'exemple suivant définit une classe `DoubleComparer` qui implémente l'interface <xref:System.Collections.IEqualityComparer> .</span><span class="sxs-lookup"><span data-stu-id="0236a-216">The following example defines a `DoubleComparer` class that implements the <xref:System.Collections.IEqualityComparer> interface.</span></span> <span data-ttu-id="0236a-217">L’exemple instancie deux <xref:System.Tuple%605> convertit des objets à l’aide d’un générateur de nombres aléatoires pour remplir leur deuxième au cinquième composants, la première instance à un <xref:System.Collections.IStructuralEquatable> interface, puis utilise un `DoubleComparer` objet à tester les deux <xref:System.Tuple%605>l’égalité approximative des objets.</span><span class="sxs-lookup"><span data-stu-id="0236a-217">The example instantiates two <xref:System.Tuple%605> objects by using a random number generator to populate their second through fifth components, casts the first instance to an <xref:System.Collections.IStructuralEquatable> interface, and then uses a `DoubleComparer` object to test the two <xref:System.Tuple%605> objects for approximate equality.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`5.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="0236a-218">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`5" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="0236a-218">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`5" /> object.</span></span></param>
        <summary><span data-ttu-id="0236a-219">Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`5" /> actif à l'aide d'une méthode de calcul spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0236a-219">Calculates the hash code for the current <see cref="T:System.Tuple`5" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="0236a-220">Code de hachage d'un entier signé 32 bits.</span><span class="sxs-lookup"><span data-stu-id="0236a-220">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-221">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="0236a-221">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0236a-222">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%605> est castée en interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="0236a-222">It can be used only when the <xref:System.Tuple%605> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="0236a-223">La méthode encapsule simplement un appel à la `comparer` l’objet <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="0236a-223">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="0236a-224">L’algorithme utilisé pour calculer le code de hachage doit retourner le même code de hachage pour deux <xref:System.Tuple%605> les objets qui sont considérées comme égales.</span><span class="sxs-lookup"><span data-stu-id="0236a-224">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%605> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0236a-225">Objet à comparer à l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="0236a-225">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="0236a-226">Compare l’objet <see cref="T:System.Tuple`5" /> actuel à un objet spécifié et renvoie un entier qui indique si l’objet actuel est avant, après ou à la même position que l’objet spécifié dans l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="0236a-226">Compares the current <see cref="T:System.Tuple`5" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="0236a-227">Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="0236a-227">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="0236a-228">Value</span><span class="sxs-lookup"><span data-stu-id="0236a-228">Value</span></span> 
 </term><description> <span data-ttu-id="0236a-229">Description </span><span class="sxs-lookup"><span data-stu-id="0236a-229">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="0236a-230">Entier négatif</span><span class="sxs-lookup"><span data-stu-id="0236a-230">A negative integer</span></span> 
 </term><description> <span data-ttu-id="0236a-231">Cette instance précède <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-231">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="0236a-232">Zéro</span><span class="sxs-lookup"><span data-stu-id="0236a-232">Zero</span></span> 
 </term><description> <span data-ttu-id="0236a-233">Cette instance et <paramref name="obj" /> ont la même position dans l'ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="0236a-233">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="0236a-234">Entier positif</span><span class="sxs-lookup"><span data-stu-id="0236a-234">A positive integer</span></span> 
 </term><description> <span data-ttu-id="0236a-235">Cette instance suit <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-235">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-236">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="0236a-236">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0236a-237">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%605> est castée en interface <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="0236a-237">It can be used only when the <xref:System.Tuple%605> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="0236a-238">Cette méthode fournit le <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implémentation pour la <xref:System.Tuple%605> classe.</span><span class="sxs-lookup"><span data-stu-id="0236a-238">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%605> class.</span></span> <span data-ttu-id="0236a-239">Bien que la méthode peut être appelée directement, elle est généralement appelée par les surcharges par défaut de tri à la collection de méthodes, telles que <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> et <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, pour classer les membres d’une collection.</span><span class="sxs-lookup"><span data-stu-id="0236a-239">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0236a-240">Le <xref:System.Tuple%605.System%23IComparable%23CompareTo%2A> méthode est conçue pour une utilisation dans les opérations de tri.</span><span class="sxs-lookup"><span data-stu-id="0236a-240">The <xref:System.Tuple%605.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="0236a-241">Elle ne doit pas être utilisée lors de l’objectif principal d’une comparaison consiste à déterminer si deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="0236a-241">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="0236a-242">Pour déterminer si deux objets sont égales, appelez le <xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0236a-242">To determine whether two objects are equal, call the <xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0236a-243">Le <xref:System.Tuple%605.System%23IComparable%23CompareTo%28System.Object%29> méthode utilise le comparateur d’objet par défaut pour comparer chaque composant.</span><span class="sxs-lookup"><span data-stu-id="0236a-243">The <xref:System.Tuple%605.System%23IComparable%23CompareTo%28System.Object%29> method uses the default object  comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0236a-244">L’exemple suivant crée un tableau de <xref:System.Tuple%605> les objets qui contiennent des statistiques de carrière pour les rappels en cours d’exécution de football américain professionnel.</span><span class="sxs-lookup"><span data-stu-id="0236a-244">The following example creates an array of <xref:System.Tuple%605> objects that contain career statistics for running backs in American professional football.</span></span> <span data-ttu-id="0236a-245">Les cinq composants se composent du nom du joueur, le nombre de parties dans lequel il a joué, le nombre de tentatives, ou comporte le nombre total d’yards acquise, et le nombre d’essais.</span><span class="sxs-lookup"><span data-stu-id="0236a-245">The five components consist of the player's name, the number of games in which he played, the number of carries or attempts, the total number of yards gained, and the number of touchdowns scored.</span></span> <span data-ttu-id="0236a-246">L’exemple affiche les composants de chaque tuple dans le tableau en ordre non trié, trie le tableau, puis appelle <xref:System.Tuple%605.ToString%2A> pour afficher chaque tuple dans un ordre trié.</span><span class="sxs-lookup"><span data-stu-id="0236a-246">The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%605.ToString%2A> to display each tuple in sorted order.</span></span> <span data-ttu-id="0236a-247">La sortie montre que le tableau a été trié par nom, qui est le premier composant.</span><span class="sxs-lookup"><span data-stu-id="0236a-247">The output shows that the array has been sorted by name, which is the first component.</span></span> <span data-ttu-id="0236a-248">Notez que l’exemple n’appelle pas directement la <xref:System.Tuple%605.System%23IComparable%23CompareTo%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0236a-248">Note that the example does not directly call the <xref:System.Tuple%605.System%23IComparable%23CompareTo%2A> method.</span></span> <span data-ttu-id="0236a-249">Cette méthode est appelée implicitement par la <xref:System.Array.Sort%28System.Array%29> méthode pour chaque élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="0236a-249">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`5.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`5.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0236a-250"><paramref name="obj" /> n’est pas un objet <see cref="T:System.Tuple`5" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-250"><paramref name="obj" /> is not a <see cref="T:System.Tuple`5" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`5.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0236a-251">Index de l’élément <see langword="Tuple" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="0236a-251">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="0236a-252"><paramref name="index" /> peut être compris entre 0 et 4.</span><span class="sxs-lookup"><span data-stu-id="0236a-252"><paramref name="index" /> can range from 0 to 4.</span></span></param>
        <summary><span data-ttu-id="0236a-253">Obtient la valeur de l’élément <see langword="Tuple" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="0236a-253">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="0236a-254">Valeur de l’élément <see langword="Tuple" /> à la position spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0236a-254">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-255">Le <xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propriété est une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="0236a-255">The <xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="0236a-256">Pour l’appeler, vous devez effectuer un cast ou convertir le <xref:System.Tuple%605> de l’objet à un <xref:System.Runtime.CompilerServices.ITuple> objet d’interface.</span><span class="sxs-lookup"><span data-stu-id="0236a-256">To call it, you must cast or convert the <xref:System.Tuple%605> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0236a-257"><paramref name="index" /> est inférieur à 0 ou supérieur à 4.</span><span class="sxs-lookup"><span data-stu-id="0236a-257"><paramref name="index" /> is less than 0 or greater than 4.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0236a-258">Obtient le nombre d’éléments dans <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-258">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="0236a-259">5, le nombre d’éléments dans un objet <see cref="T:System.Tuple`5" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-259">5, the number of elements in a <see cref="T:System.Tuple`5" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-260">Le <xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> propriété est une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="0236a-260">The <xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="0236a-261">Pour l’appeler, vous devez effectuer un cast ou convertir le <xref:System.Tuple%605> de l’objet à un <xref:System.Runtime.CompilerServices.ITuple> objet d’interface.</span><span class="sxs-lookup"><span data-stu-id="0236a-261">To call it, you must cast or convert the <xref:System.Tuple%605> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0236a-262">Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`5" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-262">Returns a string that represents the value of this <see cref="T:System.Tuple`5" /> instance.</span></span></summary>
        <returns><span data-ttu-id="0236a-263">Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`5" />.</span><span class="sxs-lookup"><span data-stu-id="0236a-263">The string representation of this <see cref="T:System.Tuple`5" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0236a-264">La chaîne retournée par cette méthode prend la forme (*Item1*, *Item2*, *Item3*, *Item4*, `Item5`), où *Item1*, *Item2*, *Item3*, *Item4*, et `Item5` représentent les valeurs de la <xref:System.Tuple%605.Item1%2A>, <xref:System.Tuple%605.Item2%2A>, <xref:System.Tuple%605.Item3%2A>, <xref:System.Tuple%605.Item4%2A>, et <xref:System.Tuple%605.Item5%2A> propriétés, respectivement.</span><span class="sxs-lookup"><span data-stu-id="0236a-264">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5`), where *Item1*, *Item2*, *Item3*, *Item4*, and `Item5` represent the values of the <xref:System.Tuple%605.Item1%2A>, <xref:System.Tuple%605.Item2%2A>, <xref:System.Tuple%605.Item3%2A>, <xref:System.Tuple%605.Item4%2A>, and <xref:System.Tuple%605.Item5%2A> properties, respectively.</span></span> <span data-ttu-id="0236a-265">Si une des valeurs de propriété est `null`, il est représenté en tant que <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0236a-265">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0236a-266">L’exemple suivant illustre la <xref:System.Tuple%605.ToString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0236a-266">The following example illustrates the <xref:System.Tuple%605.ToString%2A> method.</span></span> <span data-ttu-id="0236a-267">Il affiche un tableau d’objets de 5 tuples qui contiennent le nom d’un état aux États-Unis, sa population en 1990 et 2000, l’évolution de sa population dans cette période de 10 ans et le taux de modification de la population annuel.</span><span class="sxs-lookup"><span data-stu-id="0236a-267">It displays an array of 5-tuple objects that contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the annual rate of population change.</span></span>  
  
 [!code-csharp[System.Tuple\`5.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`5.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>