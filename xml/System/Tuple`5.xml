<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Tuple`5.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52bd6fcdfbecc0ab95c64d6c8c2550070fd64052d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bd6fcdfbecc0ab95c64d6c8c2550070fd64052d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's first component.</source>
          <target state="translated">Type du premier composant du tuple.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's second component.</source>
          <target state="translated">Type du second composant du tuple.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's third component.</source>
          <target state="translated">Type du troisième composant du tuple.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's fourth component.</source>
          <target state="translated">Type du quatrième composant du tuple.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's fifth component.</source>
          <target state="translated">Type du cinquième composant du tuple.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Tuple`5">
          <source>Represents a 5-tuple, or quintuple.</source>
          <target state="translated">Représente un objet de 5 tuples, ou quintuple.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>A tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">Un tuple est une structure de données qui a un nombre spécifique et une séquence de valeurs.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> class represents a 5-tuple, or quintuple, which is a tuple that has five components.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> classe représente un 5-tuple, ou quintuple, qui est un tuple qui a cinq composants.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object by calling either the <ph id="ph2">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> constructor or the static <ph id="ph3">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Vous pouvez instancier un <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objet en appelant le <ph id="ph2">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> constructeur ou la méthode statique <ph id="ph3">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>You can retrieve the value of the tuple's components by using the read-only <ph id="ph1">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%605.Item3%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Tuple%605.Item4%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> instance properties.</source>
          <target state="translated">Vous pouvez récupérer la valeur des composants du tuple à l’aide de la lecture seule <ph id="ph1">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%605.Item3%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Tuple%605.Item4%2A&gt;</ph>, et <ph id="ph5">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> propriétés d’une instance.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>Tuples are commonly used in four different ways:</source>
          <target state="translated">Tuples sont utilisés communément de quatre manières différentes :</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>To represent a single set of data.</source>
          <target state="translated">Pour représenter un seul jeu de données.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>For example, a tuple can represent a database record, and its components can represent individual fields of the record.</source>
          <target state="translated">Par exemple, un tuple peut représenter un enregistrement de base de données et ses composants peuvent représenter des champs individuels de l’enregistrement.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>To provide easy access to, and manipulation of, a data set.</source>
          <target state="translated">Pour fournir un accès facile aux et la manipulation d’un jeu de données.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects that contain the names of running backs in American football, the number of games in which they played, and the number of carries, total yards gained, and touchdowns scored during those games.</source>
          <target state="translated">L’exemple suivant définit un tableau de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objets qui contiennent les noms de sauvegarde en cours d’exécution dans le football américain, le nombre de jeux dans lesquels ils et le nombre de véhicule, total yards acquises et déplacements marqués lors de ces jeux.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates each running back's number of carries per game, average yards per game, average yards per carry, and average number of touchdowns per attempt.</source>
          <target state="translated">Le tableau est passé à la <ph id="ph1">`ComputeStatistics`</ph> méthode, qui calcule le nombre de véhicule par yards jeu, en moyenne par yards jeu, en moyenne par carry chaque back en cours d’exécution et nombre moyen d’essais par tentative.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>To return multiple values from a method without the use of <ph id="ph1">`out`</ph> parameters (in C#) or <ph id="ph2">`ByRef`</ph> parameters (in Visual Basic).</source>
          <target state="translated">Pour retourner plusieurs valeurs à partir d’une méthode sans utiliser de <ph id="ph1">`out`</ph> (en c#) ou <ph id="ph2">`ByRef`</ph> paramètres (Visual Basic).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>For example, the previous example returns its computed statistics, along with the name of the player, in an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects.</source>
          <target state="translated">Par exemple, l’exemple précédent retourne ses statistiques calculées, ainsi que le nom du lecteur, dans un tableau de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>To pass multiple values to a method through a single parameter.</source>
          <target state="translated">Pour passer plusieurs valeurs à une méthode via un paramètre unique.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>For example, the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</source>
          <target state="translated">Par exemple, le <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> méthode possède un paramètre unique qui vous permet de fournir une valeur à la méthode que le thread exécute au démarrage.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>If you supply a <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object as the method argument, you can supply the thread’s startup routine with five items of data.</source>
          <target state="translated">Si vous fournissez un <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> de l’objet comme argument de méthode, vous pouvez fournir la routine de démarrage du thread avec cinq éléments de données.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's first component.</source>
          <target state="translated">Valeur du premier composant du tuple.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's second component.</source>
          <target state="translated">Valeur du second composant du tuple.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's third component.</source>
          <target state="translated">Valeur du troisième composant du tuple.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's fourth component</source>
          <target state="translated">Valeur du quatrième composant du tuple.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's fifth component.</source>
          <target state="translated">Valeur du cinquième composant du tuple.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>You can also use the static <ph id="ph1">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 5-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated">Vous pouvez également utiliser la méthode statique <ph id="ph1">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> méthode pour instancier un objet de 5 tuples sans devoir spécifier explicitement les types de ses composants.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 5-tuple whose first component is of type <ph id="ph2">&lt;xref:System.String&gt;</ph> and its remaining four components are of type <ph id="ph3">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> méthode pour instancier un 5-tuple dont le premier composant est de type <ph id="ph2">&lt;xref:System.String&gt;</ph> et ses quatre composants restants sont de type <ph id="ph3">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>This is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">Cela est équivalent à l’appel suivant à la <ph id="ph1">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> constructeur de classe.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Objet à comparer avec cette instance.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Retourne une valeur qui indique si l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actuel est égal à un objet spécifié.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instance actuelle est égale à l'objet spécifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated">Le <ph id="ph1">`obj`</ph> paramètre est considéré comme étant égal à l’instance actuelle dans les conditions suivantes :</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>It is a <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object.</source>
          <target state="translated">Il s’agit d’un <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>Its five components are of the same types as the current instance.</source>
          <target state="translated">Ses cinq composants sont des mêmes types que l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>Its five components are equal to those of the current instance.</source>
          <target state="translated">Ses cinq composants sont égales à celles de l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>Equality is determined by the default object equality comparer for each component.</source>
          <target state="translated">L'égalité est déterminée par le comparateur d'égalité d'objet par défaut pour chaque composant.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The following example defines an array of 5-tuple objects that contain data about the temperatures of patients in two test groups.</source>
          <target state="translated">L’exemple suivant définit un tableau d’objets de 5 tuples qui contiennent des données sur les températures de patients dans deux groupes de test.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The first component of the array provides the number of the test group, and the second through fifth components provide the temperatures of a patient at hourly intervals.</source>
          <target state="translated">Le premier composant du tableau fournit le numéro du groupe de test, et la deuxième à la cinquième composants fournissent la température d’un patient toutes les heures.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method is called to compare every <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> object with every other <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> object.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> méthode est appelée pour comparer chaque <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> objet avec tous les autres <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The output illustrates that the <ph id="ph1">&lt;xref:System.Tuple%605.Equals%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> only when all five components of the <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objects have equal values.</source>
          <target state="translated">La sortie montre que le <ph id="ph1">&lt;xref:System.Tuple%605.Equals%2A&gt;</ph> méthode retourne <ph id="ph2">`true`</ph> uniquement lorsque toutes les cinq composants de la <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objets ont des valeurs égales.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated">Retourne le code de hachage pour l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Code de hachage d'un entier signé 32 bits.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's first component.</source>
          <target state="translated">Obtient la valeur du premier composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's first component.</source>
          <target state="translated">Valeur du premier composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Vous pouvez déterminer dynamiquement le type de la <ph id="ph1">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> composant de deux manières :</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> property.</source>
          <target state="translated">En appelant le <ph id="ph1">`GetType`</ph> méthode sur la valeur retournée par la <ph id="ph2">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> object, and retrieving the first element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">En récupérant le <ph id="ph1">&lt;xref:System.Type&gt;</ph> objet qui représente le <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> de l’objet et en extrayant le premier élément du tableau retourné par son <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">L’exemple suivant définit un tableau de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objets dont les composants contiennent le nom d’un état dans les États-Unis, sa population en 1990 et 2000, l’évolution de la population dans cette période de 10 ans et le pourcentage de modification de la population.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">Ensuite, il effectue une itération au sein du tableau et affiche la valeur de chaque composant dans un tuple.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's second component.</source>
          <target state="translated">Obtient la valeur du deuxième composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's second component.</source>
          <target state="translated">Valeur du deuxième composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Vous pouvez déterminer dynamiquement le type de la <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> composant de deux manières :</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">En appelant le <ph id="ph1">`GetType`</ph> méthode sur la valeur retournée par la <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">En récupérant le <ph id="ph1">&lt;xref:System.Type&gt;</ph> objet qui représente le <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> de l’objet et en extrayant le deuxième élément du tableau retourné par son <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">L’exemple suivant définit un tableau de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objets dont les composants contiennent le nom d’un état dans les États-Unis, sa population en 1990 et 2000, l’évolution de la population dans cette période de 10 ans et le pourcentage de modification de la population.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">Ensuite, il effectue une itération au sein du tableau et affiche la valeur de chaque composant dans un tuple.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item3">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's third component.</source>
          <target state="translated">Obtient la valeur du troisième composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's third component.</source>
          <target state="translated">Valeur du troisième composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Vous pouvez déterminer dynamiquement le type de la <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> composant de deux manières :</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">En appelant le <ph id="ph1">`GetType`</ph> méthode sur la valeur retournée par la <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">En récupérant le <ph id="ph1">&lt;xref:System.Type&gt;</ph> objet qui représente le <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> de l’objet et en extrayant le deuxième élément du tableau retourné par son <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">L’exemple suivant définit un tableau de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objets dont les composants contiennent le nom d’un état dans les États-Unis, sa population en 1990 et 2000, l’évolution de la population dans cette période de 10 ans et le pourcentage de modification de la population.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">Ensuite, il effectue une itération au sein du tableau et affiche la valeur de chaque composant dans un tuple.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item4">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's fourth component.</source>
          <target state="translated">Obtient la valeur du quatrième composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's fourth component.</source>
          <target state="translated">Valeur du quatrième composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Vous pouvez déterminer dynamiquement le type de la <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> composant de deux manières :</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">En appelant le <ph id="ph1">`GetType`</ph> méthode sur la valeur retournée par la <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">En récupérant le <ph id="ph1">&lt;xref:System.Type&gt;</ph> objet qui représente le <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> de l’objet et en extrayant le deuxième élément du tableau retourné par son <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">L’exemple suivant définit un tableau de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objets dont les composants contiennent le nom d’un état dans les États-Unis, sa population en 1990 et 2000, l’évolution de la population dans cette période de 10 ans et le pourcentage de modification de la population.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">Ensuite, il effectue une itération au sein du tableau et affiche la valeur de chaque composant dans un tuple.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item5">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's fifth component.</source>
          <target state="translated">Obtient la valeur du cinquième composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's fifth component.</source>
          <target state="translated">Valeur du cinquième composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Vous pouvez déterminer dynamiquement le type de la <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> composant de deux manières :</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">En appelant le <ph id="ph1">`GetType`</ph> méthode sur la valeur retournée par la <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">En récupérant le <ph id="ph1">&lt;xref:System.Type&gt;</ph> objet qui représente le <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> de l’objet et en extrayant le deuxième élément du tableau retourné par son <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United Dates, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">L’exemple suivant définit un tableau de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objets dont les composants contiennent le nom d’un état américain, sa population en 1990 et 2000, l’évolution de la population dans cette période de 10 ans et le pourcentage de modification de la population.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">Ensuite, il effectue une itération au sein du tableau et affiche la valeur de chaque composant dans un tuple.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Objet à comparer à l'instance actuelle.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">Un objet qui fournit des règles personnalisées pour la comparaison.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Compare l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou se trouve à la même position que l'objet spécifié dans l'ordre de tri.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Entier signé qui indique la position relative de cette instance et de <ph id="ph1">&lt;paramref name="other" /&gt;</ph> dans l’ordre de tri, comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valeur</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier négatif</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance précède <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zéro</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance et <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ont la même position dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier positif</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance suit <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Although this method can be called directly, it is most commonly called by collection-sorting methods that include <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.</source>
          <target state="translated">Bien que cette méthode peut être appelée directement, elle est généralement appelée par tri à la collection de méthodes qui incluent <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> pour classer les membres d’une collection de paramètres.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>For example, it is called by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">Par exemple, elle est appelée par le <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> méthode d’un <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> objet est instancié à l’aide de la <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> méthode est conçue pour une utilisation dans les opérations de tri.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">Il ne doit pas être utilisé lorsque l’objectif principal d’une comparaison est de déterminer si deux objets sont égaux.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> method.</source>
          <target state="translated">Pour déterminer si deux objets sont égales, appelez le <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects that contain career statistical data for running backs in American professional football.</source>
          <target state="translated">L’exemple suivant crée un tableau de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> les objets qui contiennent des données statistiques carrière pour la sauvegarde en cours d’exécution dans football américain professionnel.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The 5-tuple's components consist of the player's name, the number of games in which he played, the number of carries or attempts, the total number of yards gained, and the number of touchdowns scored.</source>
          <target state="translated">Les 5-tuple est composé du nom du joueur, le nombre de parties dans lequel il a lu, le nombre de tentatives, ou exécute le nombre total d’yards acquise, et le nombre d’essais.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> to display each tuple in sorted order.</source>
          <target state="translated">L’exemple affiche les composants de chaque tuple dans le tableau en ordre non trié, trie le tableau, puis appelle <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> pour afficher chaque tuple en ordre trié.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To sort the array, the example defines a generic <ph id="ph1">`YardsGained`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interface and sorts the <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objects in descending order by the value of their fourth component (yards gained) rather than by their first component.</source>
          <target state="translated">Pour trier le tableau, l’exemple définit un type générique <ph id="ph1">`YardsGained`</ph> classe qui implémente le <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interface et trie les <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objets dans l’ordre décroissant par la valeur de leur quatrième composant (yards acquises) plutôt que par leur premier composant.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">Notez que l’exemple n’appelle pas directement la <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method for each element in the array.</source>
          <target state="translated">Cette méthode est appelée implicitement par la <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> méthode pour chaque élément du tableau.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> n’est pas un objet <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Objet à comparer avec cette instance.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">Un objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">Retourne une valeur qui indique si l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif est égal à un objet spécifié selon une méthode de comparaison spécifiée.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instance actuelle est égale à l'objet spécifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation is called only if <ph id="ph2">`other`</ph> is not <ph id="ph3">`null`</ph>, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <ph id="ph4">&lt;xref:System.Tuple%605&gt;</ph> object whose components are of the same types as the current instance.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implémentation est appelée uniquement si <ph id="ph2">`other`</ph> n’est pas <ph id="ph3">`null`</ph>, et si elle peut être casté (en c#) ou convertie (en Visual Basic) en un <ph id="ph4">&lt;xref:System.Tuple%605&gt;</ph> objet dont les composants sont des mêmes types que l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> method first passes the <ph id="ph2">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> values of the <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objects to be compared to the <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> passe en premier (méthode) le <ph id="ph2">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> les valeurs de la <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objets à comparer à la <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, the method is called again and passed the <ph id="ph2">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objects.</source>
          <target state="translated">Si cet appel de méthode retourne <ph id="ph1">`true`</ph>, la méthode est appelée à nouveau et reçoit le <ph id="ph2">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph> les valeurs des deux <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This continues until the method call returns <ph id="ph1">`false`</ph> when it compares a specific pair of <ph id="ph2">`Item`</ph> values, or the two <ph id="ph3">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> values are passed to the method.</source>
          <target state="translated">Ce processus se poursuit jusqu'à ce que l’appel de méthode retourne <ph id="ph1">`false`</ph> lorsqu’il compare une paire spécifique de <ph id="ph2">`Item`</ph> valeurs, ou les deux <ph id="ph3">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> valeurs sont passées à la méthode.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines a <ph id="ph1">`DoubleComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interface.</source>
          <target state="translated">L'exemple suivant définit une classe <ph id="ph1">`DoubleComparer`</ph> qui implémente l'interface <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The example instantiates two <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects by using a random number generator to populate their second through fifth components, casts the first instance to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface, and then uses a <ph id="ph3">`DoubleComparer`</ph> object to test the two <ph id="ph4">&lt;xref:System.Tuple%605&gt;</ph> objects for approximate equality.</source>
          <target state="translated">L’exemple instancie deux <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> convertit des objets à l’aide d’un générateur de nombres aléatoires pour remplir du deuxième au cinquième composants, la première instance à un <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface, puis utilise une <ph id="ph3">`DoubleComparer`</ph> objet à tester les deux <ph id="ph4">&lt;xref:System.Tuple%605&gt;</ph>objets pour l’égalité approximative.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated">Objet dont la méthode <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> calcule le code de hachage de l'objet <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object by using a specified computation method.</source>
          <target state="translated">Calcule le code de hachage pour l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actif à l'aide d'une méthode de calcul spécifiée.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Code de hachage d'un entier signé 32 bits.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The method simply wraps a call to the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">La méthode encapsule un appel à la <ph id="ph1">`comparer`</ph> l’objet <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The algorithm used to compute the hash code should return the same hash code for two <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects that are considered to be equal.</source>
          <target state="translated">L’algorithme utilisé pour calculer le code de hachage doit retourner le même code de hachage pour deux <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> les objets qui sont considérées comme égales.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Objet à comparer à l'instance actuelle.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Compare l’objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> actuel à un objet spécifié et renvoie un entier qui indique si l’objet actuel est avant, après ou à la même position que l’objet spécifié dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Entier signé qui indique la position relative de cette instance et de <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> dans l’ordre de tri, comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valeur</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier négatif</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance précède <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zéro</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance et <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> ont la même position dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier positif</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance suit <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.IComparable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>This method provides the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation for the <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> class.</source>
          <target state="translated">Cette méthode fournit le <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implémentation pour la <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, to order the members of a collection.</source>
          <target state="translated">Bien que la méthode peut être appelée directement, elle est généralement appelée par les surcharges par défaut de tri à la collection de méthodes, telles que <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, pour classer les membres d’une collection.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%2A&gt;</ph> méthode est conçue pour une utilisation dans les opérations de tri.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">Il ne doit pas être utilisé lorsque l’objectif principal d’une comparaison est de déterminer si deux objets sont égaux.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour déterminer si deux objets sont égales, appelez le <ph id="ph1">&lt;xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%28System.Object%29&gt;</ph> method uses the default object  comparer to compare each component.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%28System.Object%29&gt;</ph> méthode utilise le comparateur d’objet par défaut pour comparer chaque composant.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects that contain career statistics for running backs in American professional football.</source>
          <target state="translated">L’exemple suivant crée un tableau de <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> les objets qui contiennent des statistiques de carrière pour la sauvegarde en cours d’exécution dans football américain professionnel.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The five components consist of the player's name, the number of games in which he played, the number of carries or attempts, the total number of yards gained, and the number of touchdowns scored.</source>
          <target state="translated">Les cinq composants se composent du nom du joueur, le nombre de parties dans lequel il a lu, le nombre de tentatives, ou exécute le nombre total d’yards acquise, et le nombre d’essais.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> to display each tuple in sorted order.</source>
          <target state="translated">L’exemple affiche les composants de chaque tuple dans le tableau en ordre non trié, trie le tableau, puis appelle <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> pour afficher chaque tuple en ordre trié.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The output shows that the array has been sorted by name, which is the first component.</source>
          <target state="translated">La sortie montre que le tableau a été trié par nom, qui est le premier composant.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">Notez que l’exemple n’appelle pas directement la <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> method for each element in the array.</source>
          <target state="translated">Cette méthode est appelée implicitement par la <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> méthode pour chaque élément du tableau.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> n’est pas un objet <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">Index de l’élément <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 to 4.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> peut être compris entre 0 et 4.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">Obtient la valeur de l’élément <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">Valeur de l’élément <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> à la position spécifiée.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> propriété est une implémentation d’interface explicite.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Pour l’appeler, vous devez effectuer un cast ou convertir les <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> de l’objet à un <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> objet d’interface.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 4.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieur à 0 ou supérieur à 4.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</source>
          <target state="translated">Obtient le nombre d’éléments dans <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>5, the number of elements in a <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated">5, le nombre d’éléments dans un objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> propriété est une implémentation d’interface explicite.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Pour l’appeler, vous devez effectuer un cast ou convertir les <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> de l’objet à un <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> objet d’interface.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> instance.</source>
          <target state="translated">Retourne une chaîne qui représente la valeur de cette instance <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated">Représentation sous forme de chaîne de cet objet <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>, <ph id="ph1">`Item5`</ph>), where <bpt id="p5">*</bpt>Item1<ept id="p5">*</ept>, <bpt id="p6">*</bpt>Item2<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item3<ept id="p7">*</ept>, <bpt id="p8">*</bpt>Item4<ept id="p8">*</ept>, and <ph id="ph2">`Item5`</ph> represent the values of the <ph id="ph3">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Tuple%605.Item3%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Tuple%605.Item4%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> properties, respectively.</source>
          <target state="translated">La chaîne retournée par cette méthode prend la forme (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>, <ph id="ph1">`Item5`</ph>), où <bpt id="p5">*</bpt>Item1<ept id="p5">*</ept>, <bpt id="p6">*</bpt>Item2<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item3<ept id="p7">*</ept>, <bpt id="p8">*</bpt>Item4<ept id="p8">*</ept>, et <ph id="ph2">`Item5`</ph> représentent les valeurs de la <ph id="ph3">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Tuple%605.Item3%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Tuple%605.Item4%2A&gt;</ph>, et <ph id="ph7">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> propriétés, respectivement.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.ToString">
          <source>If any of the property values is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si une des valeurs de propriété est <ph id="ph1">`null`</ph>, il est représenté en tant que <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.ToString">
          <source>It displays an array of 5-tuple objects that contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the annual rate of population change.</source>
          <target state="translated">Il affiche un tableau d’objets de 5 tuples qui contiennent le nom d’un état aux États-Unis, sa population en 1990 et 2000, l’évolution de la population dans cette période de 10 ans et le taux de variation de la population annuel.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>