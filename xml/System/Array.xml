<Type Name="Array" FullName="System.Array">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f1e5542ce17228b81ac98e22af0444d4203ab07" />
    <Meta Name="ms.sourcegitcommit" Value="ad09e88f48ca55b181e8d272cfc3742eadc3f939" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/08/2018" />
    <Meta Name="ms.locfileid" Value="35231188" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Array : ICloneable, System.Collections.IList, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Array extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Array" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Array&#xA;Implements ICloneable, IList, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Array abstract : ICloneable, System::Collections::IList, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4f8a3-101">Fournit des méthodes pour la création, la manipulation, la recherche ainsi que le tri des tableaux et sert de classe de base pour tous les tableaux du Common Language Runtime.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f8a3-101">Provides methods for creating, manipulating, searching, and sorting arrays, thereby serving as the base class for all arrays in the common language runtime.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-102">Le <xref:System.Array> classe n’est pas dans le cadre de la <xref:System.Collections> espaces de noms.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-102">The <xref:System.Array> class is not part of the <xref:System.Collections> namespaces.</span></span> <span data-ttu-id="4f8a3-103">Toutefois, il est toujours considérée comme une collection, car il est basé sur le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-103">However, it is still considered a collection because it is based on the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="4f8a3-104">Le <xref:System.Array> est la classe de base pour les implémentations de langage qui prend en charge les tableaux.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-104">The <xref:System.Array> class is the base class for language implementations that support arrays.</span></span> <span data-ttu-id="4f8a3-105">Toutefois, seul le système et les compilateurs peuvent dériver explicitement de la <xref:System.Array> classe.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-105">However, only the system and compilers can derive explicitly from the <xref:System.Array> class.</span></span> <span data-ttu-id="4f8a3-106">Les utilisateurs doivent employer les constructions de tableau fournies par le langage.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-106">Users should employ the array constructs provided by the language.</span></span>  
  
 <span data-ttu-id="4f8a3-107">Un élément est une valeur dans un <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-107">An element is a value in an <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-108">La longueur d’un <xref:System.Array> est le nombre total d’éléments qu’elle peut contenir.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-108">The length of an <xref:System.Array> is the total number of elements it can contain.</span></span> <span data-ttu-id="4f8a3-109">La limite inférieure d’un <xref:System.Array> est l’index de son premier élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-109">The lower bound of an <xref:System.Array> is the index of its first element.</span></span> <span data-ttu-id="4f8a3-110">Un <xref:System.Array> peut avoir une limite inférieure quelconque, mais il a une limite inférieure de zéro par défaut.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-110">An <xref:System.Array> can have any lower bound, but it has a lower bound of zero by default.</span></span> <span data-ttu-id="4f8a3-111">Une limite inférieure différente peut être définie lors de la création d’une instance de la <xref:System.Array> à l’aide de la classe <xref:System.Array.CreateInstance%2A>. Un multidimensionnelles <xref:System.Array> peut avoir différentes limites pour chaque dimension.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-111">A different lower bound can be defined when creating an instance of the <xref:System.Array> class using <xref:System.Array.CreateInstance%2A>.A multidimensional <xref:System.Array> can have different bounds for each dimension.</span></span> <span data-ttu-id="4f8a3-112">Un tableau peut avoir un maximum de 32 dimensions.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-112">An array can have a maximum of 32 dimensions.</span></span>  
  
 <span data-ttu-id="4f8a3-113">Contrairement aux classes dans le <xref:System.Collections> espaces de noms, <xref:System.Array> a une capacité fixe.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-113">Unlike the classes in the <xref:System.Collections> namespaces, <xref:System.Array> has a fixed capacity.</span></span> <span data-ttu-id="4f8a3-114">Pour augmenter la capacité, vous devez créer un nouveau <xref:System.Array> de l’objet avec la capacité requise, copier les éléments de l’ancien <xref:System.Array> de l’objet dans le nouveau et supprimer l’ancien <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-114">To increase the capacity, you must create a new <xref:System.Array> object with the required capacity, copy the elements from the old <xref:System.Array> object to the new one, and delete the old <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-115">Par défaut, la taille maximale d’un <xref:System.Array> est de 2 gigaoctets (Go).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-115">By default, the maximum size of an <xref:System.Array> is 2 gigabytes (GB).</span></span> <span data-ttu-id="4f8a3-116">Dans un environnement 64 bits, vous pouvez éviter la restriction de taille en définissant le `enabled` attribut de la [gcAllowVeryLargeObjects](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) élément de configuration `true` dans l’environnement d’exécution.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-116">In a 64-bit environment, you can avoid the size restriction by setting the `enabled` attribute of the [gcAllowVeryLargeObjects](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span> <span data-ttu-id="4f8a3-117">Toutefois, le tableau sera limité à un total de 4 milliards éléments, ainsi qu’un index maximal de 0X7FEFFFFF dans n’importe quelle dimension donnée (0X7FFFFFC7 pour les tableaux d’octets et les tableaux de structures d’un octet).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-117">However, the array will still be limited to a total of 4 billion elements, and to a maximum index of 0X7FEFFFFF in any given dimension (0X7FFFFFC7 for byte arrays and arrays of single-byte structures).</span></span>  
  
 <span data-ttu-id="4f8a3-118">Tableaux unidimensionnels implémentent la <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.ICollection%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IReadOnlyList%601?displayProperty=nameWithType> et <xref:System.Collections.Generic.IReadOnlyCollection%601?displayProperty=nameWithType> interfaces génériques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-118">Single-dimensional arrays implement the <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.ICollection%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IReadOnlyList%601?displayProperty=nameWithType> and <xref:System.Collections.Generic.IReadOnlyCollection%601?displayProperty=nameWithType> generic interfaces.</span></span> <span data-ttu-id="4f8a3-119">Les implémentations sont fournies aux tableaux au moment de l’exécution, et par conséquent, les interfaces génériques n’apparaissent pas dans la syntaxe de déclaration pour le <xref:System.Array> classe.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-119">The implementations are provided to arrays at run time, and as a result, the generic interfaces do not appear in the declaration syntax for the <xref:System.Array> class.</span></span> <span data-ttu-id="4f8a3-120">En outre, il n’existe aucun rubriques de référence pour les membres d’interface sont accessibles uniquement par la conversion d’un tableau de type d’interface générique (implémentations d’interface explicites).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-120">In addition,  there are no reference topics for interface members that are accessible only by casting an array to the generic interface type (explicit interface implementations).</span></span> <span data-ttu-id="4f8a3-121">Le point clé à connaître lorsque vous effectuez un cast d’un tableau à une de ces interfaces est que les membres qui ajoutent, insérer ou supprimer des éléments lèvent <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-121">The key thing to be aware of when you cast an array to one of these interfaces is that members which add, insert, or remove elements throw <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="4f8a3-122"><xref:System.Type> objets fournissent des informations sur les déclarations de type tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-122"><xref:System.Type> objects provide information about array type declarations.</span></span> <span data-ttu-id="4f8a3-123"><xref:System.Array> les objets avec le même type de tableau partagent le même <xref:System.Type> objet.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-123"><xref:System.Array> objects with the same array type share the same <xref:System.Type> object.</span></span>  
  
 <span data-ttu-id="4f8a3-124"><xref:System.Type.IsArray%2A?displayProperty=nameWithType> et <xref:System.Type.GetElementType%2A?displayProperty=nameWithType> peut ne pas retourner les résultats attendus avec <xref:System.Array> , car si un tableau est converti en type <xref:System.Array>, le résultat est un objet, pas un tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-124"><xref:System.Type.IsArray%2A?displayProperty=nameWithType> and <xref:System.Type.GetElementType%2A?displayProperty=nameWithType> might not return the expected results with <xref:System.Array> because if an array is cast to the type <xref:System.Array>, the result is an object, not an array.</span></span> <span data-ttu-id="4f8a3-125">Autrement dit, `typeof(System.Array).IsArray` retourne `false`, et `typeof(System.Array).GetElementType` retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-125">That is, `typeof(System.Array).IsArray` returns `false`, and `typeof(System.Array).GetElementType` returns `null`.</span></span>  
  
 <span data-ttu-id="4f8a3-126">Le <xref:System.Array.Copy%2A?displayProperty=nameWithType> méthode copie les éléments non seulement entre les tableaux du même type, mais également entre les tableaux standard de types différents ; elle gère le casting de type automatiquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-126">The <xref:System.Array.Copy%2A?displayProperty=nameWithType> method copies elements not only between arrays of the same type but also between standard arrays of different types; it handles type casting automatically.</span></span>  
  
 <span data-ttu-id="4f8a3-127">Certaines méthodes, telles que <xref:System.Array.CreateInstance%2A>, <xref:System.Array.Copy%2A>, <xref:System.Array.CopyTo%2A>, <xref:System.Array.GetValue%2A>, et <xref:System.Array.SetValue%2A>, fournissent des surcharges qui acceptent des entiers 64 bits comme paramètres pour prendre en charge les tableaux de grande capacité.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-127">Some methods, such as <xref:System.Array.CreateInstance%2A>, <xref:System.Array.Copy%2A>, <xref:System.Array.CopyTo%2A>, <xref:System.Array.GetValue%2A>, and <xref:System.Array.SetValue%2A>, provide overloads that accept 64-bit integers as parameters to accommodate large capacity arrays.</span></span> <span data-ttu-id="4f8a3-128"><xref:System.Array.LongLength%2A> et <xref:System.Array.GetLongLength%2A> retournent des entiers 64 bits qui indique la longueur du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-128"><xref:System.Array.LongLength%2A> and <xref:System.Array.GetLongLength%2A> return 64-bit integers indicating the length of the array.</span></span>  
  
 <span data-ttu-id="4f8a3-129">Le <xref:System.Array> n’est pas garanti d’être triées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-129">The <xref:System.Array> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="4f8a3-130">Vous devez trier les <xref:System.Array> avant d’effectuer des opérations (telles que <xref:System.Array.BinarySearch%2A>) qui nécessitent la <xref:System.Array> à trier.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-130">You must sort the <xref:System.Array> prior to performing operations (such as <xref:System.Array.BinarySearch%2A>) that require the <xref:System.Array> to be sorted.</span></span>  
  
 <span data-ttu-id="4f8a3-131">À l’aide un <xref:System.Array> objet de pointeurs en code natif n’est pas prise en charge et lève un <xref:System.NotSupportedException> pour plusieurs méthodes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-131">Using an <xref:System.Array> object of pointers in native code is not supported and will throw a <xref:System.NotSupportedException> for several methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-132">Le code suivant montre l’exemple comment <xref:System.Array.Copy%2A?displayProperty=nameWithType> copie les éléments entre un tableau de type entier et un tableau de type <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-132">The following code example shows how <xref:System.Array.Copy%2A?displayProperty=nameWithType> copies elements between an array of type integer and an array of type <xref:System.Object>.</span></span>  
  
 [!code-cpp[Classic Array Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array Example/CS/source.cs#1)]
 [!code-vb[Classic Array Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4f8a3-133">L’exemple de code suivant crée et initialise un <xref:System.Array> et affiche ses propriétés et ses éléments.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-133">The following code example creates and initializes an <xref:System.Array> and displays its properties and its elements.</span></span>  
  
 [!code-cpp[Classic Array Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array Example/CPP/source3.cpp#2)]
 [!code-csharp[Classic Array Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array Example/CS/source3.cs#2)]
 [!code-vb[Classic Array Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array Example/VB/source3.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="4f8a3-134">Statique public (<see langword="Shared" /> en Visual Basic) de ce type sont thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f8a3-134">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="4f8a3-135">Il n'est pas garanti que les membres d'instance soient thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f8a3-135">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="4f8a3-136">Cette implémentation ne fournit pas synchronisé wrapper (thread-safe) pour un <see cref="T:System.Array" />; Toutefois, les classes .NET Framework basées sur <see cref="T:System.Array" /> fournissent leur propre version synchronisée de la collection à l’aide de la <see cref="P:System.Array.SyncRoot" /> propriété.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f8a3-136">This implementation does not provide a synchronized (thread safe) wrapper for an <see cref="T:System.Array" />; however, .NET Framework classes based on <see cref="T:System.Array" /> provide their own synchronized version of the collection using the <see cref="P:System.Array.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="4f8a3-137">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f8a3-137">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="4f8a3-138">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f8a3-138">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="4f8a3-139">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f8a3-139">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Type" />
  </Docs>
  <Members>
    <Member MemberName="AsReadOnly&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; AsReadOnly&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; AsReadOnly&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.AsReadOnly``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsReadOnly(Of T) (array As T()) As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ AsReadOnly(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-140">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-140">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-141">Tableau unidimensionnel, de base zéro pour encapsuler un wrapper <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-141">The one-dimensional, zero-based array to wrap in a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-142">Retourne un wrapper en lecture seule pour le tableau spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-142">Returns a read-only wrapper for the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-143">Wrapper <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> en lecture seule pour le tableau spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-143">A read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the specified array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-144">Pour éviter toute modification dans le tableau, exposent uniquement par l’intermédiaire de ce wrapper.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-144">To prevent any modifications to the array, expose the array only through this wrapper.</span></span>  
  
 <span data-ttu-id="4f8a3-145">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection ; Par conséquent, si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-145">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="4f8a3-146">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-146">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-147">L’exemple suivant encapsule un tableau en lecture seule <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-147">The following example wraps an array in a read-only <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 [!code-cpp[System.Array.AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.AsReadOnly/CPP/arrayasreadonly.cpp#1)]
 [!code-csharp[System.Array.AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.AsReadOnly/CS/arrayasreadonly.cs#1)]
 [!code-vb[System.Array.AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.AsReadOnly/VB/arrayasreadonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-148">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-148">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-149">Recherche une valeur dans un <see cref="T:System.Array" /> trié unidimensionnel, à l’aide d’un algorithme de recherche binaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-149">Searches a one-dimensional sorted <see cref="T:System.Array" /> for a value, using a binary search algorithm.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-150">
            <see cref="T:System.Array" /> unidimensionnel trié à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-150">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-151">Objet à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-151">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-152">Recherche un élément spécifique dans tout un tableau trié unidimensionnel, à l’aide de l’interface <see cref="T:System.IComparable" /> implémentée par chaque élément du tableau et par l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-152">Searches an entire one-dimensional sorted array for a specific element, using the <see cref="T:System.IComparable" /> interface implemented by each element of the array and by the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-153">Index de la <paramref name="value" /> spécifiée dans l’<paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-153">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="4f8a3-154">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est inférieur à un ou plusieurs éléments dans <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du premier élément supérieur à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-154">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4f8a3-155">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est supérieur à tous les éléments de <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du dernier élément plus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-155">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="4f8a3-156">Si cette méthode est appelée avec un <paramref name="array" /> non trié, la valeur de retour peut être incorrecte et un nombre négatif peut être retourné, même si <paramref name="value" /> est présent dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-156">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-157">Cette méthode ne prend pas en charge la recherche dans les tableaux qui contiennent des index négatives.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-157">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="4f8a3-158">`array` doivent être triées avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-158">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="4f8a3-159">Si le <xref:System.Array> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-159">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="4f8a3-160">Vous pouvez appliquer l’opérateur de complément de bits (~ en c#, `Not` en Visual Basic) au résultat négatif pour produire un index.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-160">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="4f8a3-161">Si cet index est un supérieur à la limite supérieure du tableau, il n’existe aucun élément supérieur à `value` dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-161">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="4f8a3-162">Sinon, c’est l’index du premier élément supérieur à `value`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-162">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="4f8a3-163">Soit `value` ou tous les éléments de `array` doit implémenter la <xref:System.IComparable> interface, qui est utilisée pour les comparaisons.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-163">Either `value` or every element of `array` must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="4f8a3-164">Les éléments de `array` doit déjà être trié par ordre croissant selon l’ordre de tri défini par le <xref:System.IComparable> implémentation ; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-164">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-165">Si`value` n’implémente pas le <xref:System.IComparable> les éléments d’interface `array` ne sont pas testées pour <xref:System.IComparable> avant le début de la recherche.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-165">If`value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="4f8a3-166">Une exception est levée si la recherche rencontre un élément qui n’implémente pas <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-166">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="4f8a3-167">Les éléments en double sont autorisés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-167">Duplicate elements are allowed.</span></span> <span data-ttu-id="4f8a3-168">Si le <xref:System.Array> contient plusieurs éléments égal à `value`, la méthode retourne l’index d’une des occurrences uniquement et pas nécessairement le.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-168">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="4f8a3-169">`null` peut toujours être comparé à n’importe quel autre type de référence. Par conséquent, les comparaisons avec `null` ne génèrent pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-169">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-170">Pour chaque élément testé, `value` est passée à approprié <xref:System.IComparable> mise en œuvre, même si `value` est `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-170">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="4f8a3-171">Autrement dit, le <xref:System.IComparable> implémentation détermine comment un élément donné est comparé à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-171">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="4f8a3-172">Cette méthode est un O (journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-172">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-173">L’exemple de code suivant montre comment utiliser <xref:System.Array.BinarySearch%2A> pour localiser un objet spécifique dans un <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-173">The following code example shows how to use <xref:System.Array.BinarySearch%2A> to locate a specific object in an <xref:System.Array>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-174">Le tableau est créé avec ses éléments dans l’ordre de tri croissant.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-174">The array is created with its elements in ascending sort order.</span></span> <span data-ttu-id="4f8a3-175">Le <xref:System.Array.BinarySearch%2A> méthode requiert que le tableau à trier dans l’ordre croissant.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-175">The <xref:System.Array.BinarySearch%2A> method requires the array to be sorted in ascending order.</span></span>  
  
 [!code-cpp[Classic Array.BinarySearch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.BinarySearch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/CS/source.cs#1)]
 [!code-vb[Classic Array.BinarySearch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-176">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-176">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-177">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-177">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-178">
            <paramref name="value" /> est d’un type qui n’est pas compatible avec les éléments de <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-178">
              <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-179">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IComparable" /> et la recherche rencontre un élément qui n’implémente pas l’interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-179">
              <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-180">
            <see cref="T:System.Array" /> unidimensionnel trié à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-180">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-181">Objet à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-181">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-182">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-182">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="4f8a3-183">-ou- <see langword="null" /> pour utiliser l’implémentation de <see cref="T:System.IComparable" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-183">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-184">Recherche une valeur dans l’intégralité d’un tableau trié unidimensionnel, à l’aide de l’interface <see cref="T:System.Collections.IComparer" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-184">Searches an entire one-dimensional sorted array for a value using the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-185">Index de la <paramref name="value" /> spécifiée dans l’<paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-185">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="4f8a3-186">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est inférieur à un ou plusieurs éléments dans <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du premier élément supérieur à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-186">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4f8a3-187">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est supérieur à tous les éléments de <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du dernier élément plus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-187">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="4f8a3-188">Si cette méthode est appelée avec un <paramref name="array" /> non trié, la valeur de retour peut être incorrecte et un nombre négatif peut être retourné, même si <paramref name="value" /> est présent dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-188">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-189">Cette méthode ne prend pas en charge la recherche dans les tableaux qui contiennent des index négatives.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-189">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="4f8a3-190">`array` doivent être triées avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-190">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="4f8a3-191">Si le <xref:System.Array> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-191">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="4f8a3-192">Vous pouvez appliquer l’opérateur de complément de bits (~ en c#, `Not` en Visual Basic) au résultat négatif pour produire un index.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-192">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="4f8a3-193">Si cet index est un supérieur à la limite supérieure du tableau, il n’existe aucun élément supérieur à `value` dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-193">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="4f8a3-194">Sinon, c’est l’index du premier élément supérieur à `value`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-194">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="4f8a3-195">Le comparateur personnalise la façon dont les éléments sont comparés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-195">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="4f8a3-196">Par exemple, vous pouvez utiliser un <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> en tant que comparateur pour effectuer des recherches de chaîne pas la casse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-196">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="4f8a3-197">Si `comparer` n’est pas `null`, les éléments de `array` sont comparées à la valeur spécifiée à l’aide de la <xref:System.Collections.IComparer> implémentation.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-197">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="4f8a3-198">Les éléments de `array` doit déjà être trié par ordre croissant selon l’ordre de tri défini par `comparer`; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-198">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="4f8a3-199">Si`comparer` est `null`, la comparaison est effectuée à l’aide de la <xref:System.IComparable> implémentation fournie par l’élément lui-même ou par la valeur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-199">If`comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="4f8a3-200">Les éléments de `array` doit déjà être trié par ordre croissant selon l’ordre de tri défini par le <xref:System.IComparable> implémentation ; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-200">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-201">Si `comparer` est `null` et `value` n’implémente pas le <xref:System.IComparable> les éléments d’interface `array` ne sont pas testées pour <xref:System.IComparable> avant le début de la recherche.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-201">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="4f8a3-202">Une exception est levée si la recherche rencontre un élément qui n’implémente pas <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-202">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="4f8a3-203">Les éléments en double sont autorisés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-203">Duplicate elements are allowed.</span></span> <span data-ttu-id="4f8a3-204">Si le <xref:System.Array> contient plusieurs éléments égal à `value`, la méthode retourne l’index d’une des occurrences uniquement et pas nécessairement le.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-204">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="4f8a3-205">`null` peut toujours être comparé à n’importe quel autre type de référence. Par conséquent, les comparaisons avec `null` ne génèrent pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-205">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-206">Pour chaque élément testé, `value` est passée à approprié <xref:System.IComparable> mise en œuvre, même si `value` est `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-206">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="4f8a3-207">Autrement dit, le <xref:System.IComparable> implémentation détermine comment un élément donné est comparé à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-207">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="4f8a3-208">Cette méthode est un O (journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-208">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-209">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-209">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-210">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-210">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-211">
            <paramref name="comparer" /> a la valeur <see langword="null" /> et <paramref name="value" /> est d’un type qui n’est pas compatible avec les éléments de <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-211">
              <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-212">
            <paramref name="comparer" /> a la valeur <see langword="null" />, <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IComparable" /> et la recherche rencontre un élément qui n’implémente pas l’interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-212">
              <paramref name="comparer" /> is <see langword="null" />, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, int index, int length, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, int32 index, int32 length, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, int index, int length, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-213">
            <see cref="T:System.Array" /> unidimensionnel trié à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-213">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-214">Index de départ de la plage dans laquelle effectuer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-214">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-215">Longueur de la plage dans laquelle effectuer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-215">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-216">Objet à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-216">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-217">Recherche une valeur dans une plage d’éléments d’un tableau trié unidimensionnel, à l’aide de l’interface <see cref="T:System.IComparable" /> implémentée par chaque élément du tableau et par la valeur spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-217">Searches a range of elements in a one-dimensional sorted array for a value, using the <see cref="T:System.IComparable" /> interface implemented by each element of the array and by the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-218">Index de la <paramref name="value" /> spécifiée dans l’<paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-218">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="4f8a3-219">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est inférieur à un ou plusieurs éléments dans <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du premier élément supérieur à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-219">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4f8a3-220">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est supérieur à tous les éléments de <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du dernier élément plus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-220">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="4f8a3-221">Si cette méthode est appelée avec un <paramref name="array" /> non trié, la valeur de retour peut être incorrecte et un nombre négatif peut être retourné, même si <paramref name="value" /> est présent dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-221">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-222">Cette méthode ne prend pas en charge la recherche dans les tableaux qui contiennent des index négatives.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-222">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="4f8a3-223">`array` doivent être triées avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-223">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="4f8a3-224">Si le <xref:System.Array> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-224">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="4f8a3-225">Vous pouvez appliquer l’opérateur de complément de bits (~ en c#, `Not` en Visual Basic) au résultat négatif pour produire un index.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-225">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result to produce an index.</span></span> <span data-ttu-id="4f8a3-226">Si cet index est un supérieur à la limite supérieure du tableau, il n’existe aucun élément supérieur à `value` dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-226">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="4f8a3-227">Sinon, c’est l’index du premier élément supérieur à `value`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-227">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="4f8a3-228">Soit `value` ou tous les éléments de `array` doit implémenter la <xref:System.IComparable> interface, qui est utilisée pour les comparaisons.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-228">Either `value` or every element of `array` must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="4f8a3-229">Les éléments de `array` doit déjà être trié par ordre croissant selon l’ordre de tri défini par le <xref:System.IComparable> implémentation ; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-229">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-230">Si `value` n’implémente pas le <xref:System.IComparable> les éléments d’interface `array` ne sont pas testées pour <xref:System.IComparable> avant le début de la recherche.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-230">If `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="4f8a3-231">Une exception est levée si la recherche rencontre un élément qui n’implémente pas <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-231">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="4f8a3-232">Les éléments en double sont autorisés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-232">Duplicate elements are allowed.</span></span> <span data-ttu-id="4f8a3-233">Si le <xref:System.Array> contient plusieurs éléments égal à `value`, la méthode retourne l’index d’une des occurrences uniquement et pas nécessairement le.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-233">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="4f8a3-234">`null` peut toujours être comparé à n’importe quel autre type de référence. Par conséquent, les comparaisons avec `null` ne génèrent pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-234">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-235">Pour chaque élément testé, `value` est passée à approprié <xref:System.IComparable> mise en œuvre, même si `value` est `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-235">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="4f8a3-236">Autrement dit, le <xref:System.IComparable> implémentation détermine comment un élément donné est comparé à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-236">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="4f8a3-237">Cette méthode est un O (journal `n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-237">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-238">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-238">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-239">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-239">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-240">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-240">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-241">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-241">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-242">
            <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-242">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-243">-ou- <paramref name="value" /> est d’un type qui n’est pas compatible avec les éléments de <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-243">-or-  <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-244">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IComparable" /> et la recherche rencontre un élément qui n’implémente pas l’interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-244">
              <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, int index, int length, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, int32 index, int32 length, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, int index, int length, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-245">
            <see cref="T:System.Array" /> unidimensionnel trié à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-245">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-246">Index de départ de la plage dans laquelle effectuer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-246">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-247">Longueur de la plage dans laquelle effectuer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-247">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-248">Objet à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-248">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-249">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-249">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="4f8a3-250">-ou- <see langword="null" /> pour utiliser l’implémentation de <see cref="T:System.IComparable" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-250">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-251">Recherche une valeur dans une plage d’éléments d’un tableau trié unidimensionnel à l’aide de l’interface <see cref="T:System.Collections.IComparer" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-251">Searches a range of elements in a one-dimensional sorted array for a value, using the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-252">Index de la <paramref name="value" /> spécifiée dans l’<paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-252">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="4f8a3-253">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est inférieur à un ou plusieurs éléments dans <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du premier élément supérieur à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-253">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4f8a3-254">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est supérieur à tous les éléments de <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du dernier élément plus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-254">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="4f8a3-255">Si cette méthode est appelée avec un <paramref name="array" /> non trié, la valeur de retour peut être incorrecte et un nombre négatif peut être retourné, même si <paramref name="value" /> est présent dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-255">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-256">Cette méthode ne prend pas en charge la recherche dans les tableaux qui contiennent des index négatives.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-256">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="4f8a3-257">`array` doivent être triées avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-257">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="4f8a3-258">Si le <xref:System.Array> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-258">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="4f8a3-259">Vous pouvez appliquer l’opérateur de complément de bits (~ en c#, `Not` en Visual Basic) au résultat négatif pour produire un index.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-259">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="4f8a3-260">Si cet index est un supérieur à la limite supérieure du tableau, il n’existe aucun élément supérieur à `value` dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-260">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="4f8a3-261">Sinon, c’est l’index du premier élément supérieur à `value`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-261">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="4f8a3-262">Le comparateur personnalise la façon dont les éléments sont comparés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-262">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="4f8a3-263">Par exemple, vous pouvez utiliser un <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> en tant que comparateur pour effectuer des recherches de chaîne pas la casse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-263">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="4f8a3-264">Si `comparer` n’est pas `null`, les éléments de `array` sont comparées à la valeur spécifiée à l’aide de la <xref:System.Collections.IComparer> implémentation.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-264">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="4f8a3-265">Les éléments de `array` doit déjà être trié par ordre croissant selon l’ordre de tri défini par `comparer`; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-265">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="4f8a3-266">Si `comparer` est `null`, la comparaison est effectuée à l’aide de la <xref:System.IComparable> implémentation fournie par l’élément lui-même ou par la valeur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-266">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="4f8a3-267">Les éléments de `array` doit déjà être trié par ordre croissant selon l’ordre de tri défini par le <xref:System.IComparable> implémentation ; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-267">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-268">Si `comparer` est `null` et `value` n’implémente pas le <xref:System.IComparable> les éléments d’interface `array` ne sont pas testées pour <xref:System.IComparable> avant le début de la recherche.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-268">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="4f8a3-269">Une exception est levée si la recherche rencontre un élément qui n’implémente pas <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-269">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="4f8a3-270">Les éléments en double sont autorisés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-270">Duplicate elements are allowed.</span></span> <span data-ttu-id="4f8a3-271">Si le <xref:System.Array> contient plusieurs éléments égal à `value`, la méthode retourne l’index d’une des occurrences uniquement et pas nécessairement le.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-271">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="4f8a3-272">`null` peut toujours être comparé à n’importe quel autre type de référence. Par conséquent, les comparaisons avec `null` ne génèrent pas d’exception lors de l’utilisation <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-272">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception when using <xref:System.IComparable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-273">Pour chaque élément testé, `value` est passée à approprié <xref:System.IComparable> mise en œuvre, même si `value` est `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-273">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="4f8a3-274">Autrement dit, le <xref:System.IComparable> implémentation détermine comment un élément donné est comparé à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-274">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="4f8a3-275">Cette méthode est un O (journal `n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-275">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-276">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-276">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-277">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-277">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-278">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-278">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-279">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-279">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-280">
            <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-280">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-281">-ou- <paramref name="comparer" /> est <see langword="null" /> et <paramref name="value" /> est d’un type qui n’est pas compatible avec les éléments de <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-281">-or-  <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-282">
            <paramref name="comparer" /> a la valeur <see langword="null" />, <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IComparable" /> et la recherche rencontre un élément qui n’implémente pas l’interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-282">
              <paramref name="comparer" /> is <see langword="null" />, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-283">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-283">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-284">
            <see cref="T:System.Array" /> de base zéro trié unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-284">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-285">Objet à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-285">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-286">Recherche un élément spécifique dans un tableau entier trié unidimensionnel, à l’aide de l’interface générique <see cref="T:System.IComparable`1" /> implémentée par chaque élément de <see cref="T:System.Array" /> et par l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-286">Searches an entire one-dimensional sorted array for a specific element, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-287">Index de la <paramref name="value" /> spécifiée dans l’<paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-287">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="4f8a3-288">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est inférieur à un ou plusieurs éléments dans <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du premier élément supérieur à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-288">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4f8a3-289">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est supérieur à tous les éléments de <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du dernier élément plus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-289">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="4f8a3-290">Si cette méthode est appelée avec un <paramref name="array" /> non trié, la valeur de retour peut être incorrecte et un nombre négatif peut être retourné, même si <paramref name="value" /> est présent dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-290">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-291">Cette méthode ne prend pas en charge la recherche dans les tableaux qui contiennent des index négatives.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-291">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="4f8a3-292">`array` doivent être triées avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-292">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="4f8a3-293">Si `array` ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-293">If `array` does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="4f8a3-294">Vous pouvez appliquer l’opérateur de complément de bits (~ en c#, `Not` en Visual Basic) au résultat négatif pour produire un index.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-294">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="4f8a3-295">Si cet index est égal à la taille du tableau, ne contient aucun élément supérieur à `value` dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-295">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="4f8a3-296">Sinon, c’est l’index du premier élément supérieur à `value`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-296">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="4f8a3-297">`T` doit implémenter le <xref:System.IComparable%601> interface générique, qui est utilisée pour les comparaisons.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-297">`T` must implement the <xref:System.IComparable%601> generic interface, which is used for comparisons.</span></span> <span data-ttu-id="4f8a3-298">Les éléments de `array` doit déjà être trié par ordre croissant selon l’ordre de tri défini par le <xref:System.IComparable%601> implémentation ; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-298">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="4f8a3-299">Les éléments en double sont autorisés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-299">Duplicate elements are allowed.</span></span> <span data-ttu-id="4f8a3-300">Si le <xref:System.Array> contient plusieurs éléments égal à `value`, la méthode retourne l’index d’une des occurrences uniquement et pas nécessairement le.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-300">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="4f8a3-301">`null` peut toujours être comparé à n’importe quel autre type de référence. Par conséquent, les comparaisons avec `null` ne génèrent pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-301">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-302">Pour chaque élément testé, `value` est passée à approprié <xref:System.IComparable%601> mise en œuvre, même si `value` est `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-302">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="4f8a3-303">Autrement dit, le <xref:System.IComparable%601> implémentation détermine comment un élément donné est comparé à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-303">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="4f8a3-304">Cette méthode est un O (journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-304">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-305">L’exemple de code suivant montre la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> surcharge de méthode générique et le <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> surcharge de méthode générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-305">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload.</span></span> <span data-ttu-id="4f8a3-306">Un tableau de chaînes est créé, dans aucun ordre particulier.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-306">An array of strings is created, in no particular order.</span></span>  
  
 <span data-ttu-id="4f8a3-307">Le tableau est affiché, trié et affiche de nouveau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-307">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="4f8a3-308">Les tableaux doivent être triées pour pouvoir utiliser le <xref:System.Array.BinarySearch%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-308">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-309">Les appels à la <xref:System.Array.Sort%2A> et <xref:System.Array.BinarySearch%2A> les méthodes génériques ne pas rechercher les appels à leurs équivalents non génériques, car Visual Basic, c# et C++ déduisent le type du paramètre de type générique à partir du type du premier argument.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-309">The calls to the <xref:System.Array.Sort%2A> and <xref:System.Array.BinarySearch%2A> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="4f8a3-310">Si vous utilisez la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) pour examiner le langage intermédiaire Microsoft (MSIL), vous pouvez voir que les méthodes génériques sont appelées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-310">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="4f8a3-311">Le <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> surcharge de méthode générique est ensuite utilisée pour rechercher des deux chaînes, qui n’est pas dans le tableau et l’autre qui est.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-311">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="4f8a3-312">Le tableau et la valeur de retour de la <xref:System.Array.BinarySearch%2A> méthode sont passés à la `ShowWhere` une méthode générique, qui affiche la valeur d’index si la chaîne est trouvée, sinon les éléments de la chaîne de recherche se situant entre s’il s’agissait du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-312">The array and the return value of the <xref:System.Array.BinarySearch%2A> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="4f8a3-313">L’index est négatif si la chaîne n’est pas dans le tableau, donc la `ShowWhere` méthode accepte le complément de bits (le ~ opérateur en c# et Visual C++, `Xor`-1 en Visual Basic) pour obtenir l’index du premier élément dans la liste qui est supérieure à la recherche str effectue une opération.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-313">The index is negative if the string is not in the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor`-1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearch/cs/source.cs#1)]
 [!code-vb[Array_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-314">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-314">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-315">
            <paramref name="T" /> n’implémente pas l’interface générique <see cref="T:System.IComparable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-315">
              <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-316">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-316">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-317">
            <see cref="T:System.Array" /> de base zéro trié unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-317">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-318">Objet à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-318">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-319">Implémentation de <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-319">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="4f8a3-320">-ou- <see langword="null" /> pour utiliser l’implémentation de <see cref="T:System.IComparable`1" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-320">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-321">Recherche une valeur dans l’intégralité d’un tableau trié unidimensionnel, à l’aide de l’interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-321">Searches an entire one-dimensional sorted array for a value using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-322">Index de la <paramref name="value" /> spécifiée dans l’<paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-322">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="4f8a3-323">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est inférieur à un ou plusieurs éléments dans <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du premier élément supérieur à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-323">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4f8a3-324">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est supérieur à tous les éléments de <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du dernier élément plus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-324">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="4f8a3-325">Si cette méthode est appelée avec un <paramref name="array" /> non trié, la valeur de retour peut être incorrecte et un nombre négatif peut être retourné, même si <paramref name="value" /> est présent dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-325">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-326">Cette méthode ne prend pas en charge la recherche dans les tableaux qui contiennent des index négatives.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-326">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="4f8a3-327">`array` doivent être triées avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-327">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="4f8a3-328">Si le <xref:System.Array> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-328">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="4f8a3-329">Vous pouvez appliquer l’opérateur de complément de bits (~ en c#, `Not` en Visual Basic) au résultat négatif pour produire un index.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-329">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result to produce an index.</span></span> <span data-ttu-id="4f8a3-330">Si cet index est égal à la taille du tableau, ne contient aucun élément supérieur à `value` dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-330">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="4f8a3-331">Sinon, c’est l’index du premier élément supérieur à `value`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-331">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="4f8a3-332">Le comparateur personnalise la façon dont les éléments sont comparés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-332">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="4f8a3-333">Par exemple, vous pouvez utiliser un <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> en tant que comparateur pour effectuer des recherches de chaîne pas la casse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-333">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="4f8a3-334">Si `comparer` n’est pas `null`, les éléments de `array` sont comparées à la valeur spécifiée à l’aide de la <xref:System.Collections.Generic.IComparer%601> implémentation d’interface générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-334">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> generic interface implementation.</span></span> <span data-ttu-id="4f8a3-335">Les éléments de `array` doit déjà être trié par ordre croissant selon l’ordre de tri défini par `comparer`; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-335">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="4f8a3-336">Si `comparer` est `null`, la comparaison est effectuée à l’aide de la <xref:System.IComparable%601> implémentation d’interface générique fournie par `T`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-336">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable%601> generic interface implementation provided by `T`.</span></span> <span data-ttu-id="4f8a3-337">Les éléments de `array` doit déjà être trié par ordre croissant selon l’ordre de tri défini par le <xref:System.IComparable%601> implémentation ; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-337">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-338">Si `comparer` est `null` et `value` n’implémente pas le <xref:System.IComparable%601> interface générique, les éléments de `array` ne sont pas testées pour <xref:System.IComparable%601> avant le début de la recherche.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-338">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable%601> generic interface, the elements of `array` are not tested for <xref:System.IComparable%601> before the search begins.</span></span> <span data-ttu-id="4f8a3-339">Une exception est levée si la recherche rencontre un élément qui n’implémente pas <xref:System.IComparable%601>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-339">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable%601>.</span></span>  
  
 <span data-ttu-id="4f8a3-340">Les éléments en double sont autorisés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-340">Duplicate elements are allowed.</span></span> <span data-ttu-id="4f8a3-341">Si le <xref:System.Array> contient plusieurs éléments égal à `value`, la méthode retourne l’index d’une des occurrences uniquement et pas nécessairement le.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-341">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="4f8a3-342">`null` peut toujours être comparé à n’importe quel autre type de référence. Par conséquent, les comparaisons avec `null` ne génèrent pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-342">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-343">Pour chaque élément testé, `value` est passée à approprié <xref:System.IComparable%601> mise en œuvre, même si `value` est `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-343">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="4f8a3-344">Autrement dit, le <xref:System.IComparable%601> implémentation détermine comment un élément donné est comparé à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-344">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="4f8a3-345">Cette méthode est un O (journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-345">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-346">L’exemple suivant illustre la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge de méthode générique et le <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge de méthode générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-346">The following example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload.</span></span>  
  
 <span data-ttu-id="4f8a3-347">L’exemple de code définit un autre comparateur pour les chaînes nommées `ReverseCompare`, qui implémente le `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` dans Visual C++) interface générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-347">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="4f8a3-348">Le comparateur appelle la <xref:System.String.CompareTo%28System.String%29> méthode, en inversant l’ordre des comparateurs afin que les chaînes triées de haut en bas au lieu de faible à élevé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-348">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="4f8a3-349">Le tableau est affiché, trié et affiche de nouveau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-349">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="4f8a3-350">Les tableaux doivent être triées pour pouvoir utiliser le <xref:System.Array.BinarySearch%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-350">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-351">Les appels à la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> et <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> les méthodes génériques ne pas rechercher les appels à leurs équivalents non génériques, car Visual Basic, c# et C++ déduisent le type du paramètre de type générique à partir du type du premier argument.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-351">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="4f8a3-352">Si vous utilisez la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) pour examiner le langage intermédiaire Microsoft (MSIL), vous pouvez voir que les méthodes génériques sont appelées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-352">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="4f8a3-353">Le <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge de méthode générique est ensuite utilisée pour rechercher des deux chaînes, qui n’est pas dans le tableau et l’autre qui est.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-353">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="4f8a3-354">Le tableau et la valeur de retour de la <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> méthode sont passés à la `ShowWhere` une méthode générique, qui affiche la valeur d’index si la chaîne est trouvée, sinon les éléments de la chaîne de recherche se situant entre s’il s’agissait du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-354">The array and the return value of the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="4f8a3-355">L’index est négatif si la chaîne n’est pas n tableau, donc la `ShowWhere` méthode accepte le complément de bits (le ~ opérateur en c# et Visual C++, `Xor` -1 en Visual Basic) pour obtenir l’index du premier élément dans la liste qui est supérieure à la recherche de String NG.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-355">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[Array_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-356">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-356">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-357">
            <paramref name="comparer" /> a la valeur <see langword="null" /> et <paramref name="value" /> est d’un type qui n’est pas compatible avec les éléments de <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-357">
              <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-358">
            <paramref name="comparer" /> est <see langword="null" />, et <paramref name="T" /> n’implémente pas l’interface générique <see cref="T:System.IComparable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-358">
              <paramref name="comparer" /> is <see langword="null" />, and <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, int index, int length, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, int index, int length, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-359">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-359">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-360">
            <see cref="T:System.Array" /> de base zéro, unidimensionnel et trié à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-360">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-361">Index de départ de la plage dans laquelle effectuer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-361">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-362">Longueur de la plage dans laquelle effectuer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-362">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-363">Objet à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-363">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-364">Recherche une valeur dans une plage d’éléments d’un tableau trié unidimensionnel, à l’aide de l’interface générique <see cref="T:System.IComparable`1" /> implémentée par chaque élément de <see cref="T:System.Array" /> et par la valeur spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-364">Searches a range of elements in a one-dimensional sorted array for a value, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-365">Index de la <paramref name="value" /> spécifiée dans l’<paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-365">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="4f8a3-366">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est inférieur à un ou plusieurs éléments dans <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du premier élément supérieur à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-366">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4f8a3-367">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est supérieur à tous les éléments de <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du dernier élément plus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-367">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="4f8a3-368">Si cette méthode est appelée avec un <paramref name="array" /> non trié, la valeur de retour peut être incorrecte et un nombre négatif peut être retourné, même si <paramref name="value" /> est présent dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-368">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-369">Cette méthode ne prend pas en charge la recherche dans les tableaux qui contiennent des index négatives.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-369">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="4f8a3-370">`array` doivent être triées avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-370">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="4f8a3-371">Si le tableau ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-371">If the array does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="4f8a3-372">Vous pouvez appliquer l’opérateur de complément de bits (~ en c#, `Not` en Visual Basic) au résultat négatif pour produire un index.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-372">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="4f8a3-373">Si cet index est égal à la taille du tableau, ne contient aucun élément supérieur à `value` dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-373">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="4f8a3-374">Sinon, c’est l’index du premier élément supérieur à `value`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-374">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="4f8a3-375">`T` doit implémenter le <xref:System.IComparable%601> interface générique, qui est utilisée pour les comparaisons.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-375">`T` must implement the <xref:System.IComparable%601> generic interface, which is used for comparisons.</span></span> <span data-ttu-id="4f8a3-376">Les éléments de `array` doit déjà être trié par ordre croissant selon l’ordre de tri défini par le <xref:System.IComparable%601> implémentation ; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-376">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="4f8a3-377">Les éléments en double sont autorisés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-377">Duplicate elements are allowed.</span></span> <span data-ttu-id="4f8a3-378">Si le <xref:System.Array> contient plusieurs éléments égal à `value`, la méthode retourne l’index d’une des occurrences uniquement et pas nécessairement le.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-378">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="4f8a3-379">`null` peut toujours être comparé à n’importe quel autre type de référence. Par conséquent, les comparaisons avec `null` ne génèrent pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-379">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-380">Pour chaque élément testé, `value` est passée à approprié <xref:System.IComparable%601> mise en œuvre, même si `value` est `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-380">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="4f8a3-381">Autrement dit, le <xref:System.IComparable%601> implémentation détermine comment un élément donné est comparé à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-381">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="4f8a3-382">Cette méthode est un O (journal `n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-382">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-383">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-383">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-384">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-384">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-385">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-385">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-386">
            <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-386">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-387">-ou- <paramref name="value" /> est d’un type qui n’est pas compatible avec les éléments de <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-387">-or-  <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-388">
            <paramref name="T" /> n’implémente pas l’interface générique <see cref="T:System.IComparable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-388">
              <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-389">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-389">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-390">
            <see cref="T:System.Array" /> de base zéro, unidimensionnel et trié à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-390">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-391">Index de départ de la plage dans laquelle effectuer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-391">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-392">Longueur de la plage dans laquelle effectuer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-392">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-393">Objet à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-393">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-394">Implémentation de <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-394">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="4f8a3-395">-ou- <see langword="null" /> pour utiliser l’implémentation de <see cref="T:System.IComparable`1" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-395">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-396">Recherche une valeur dans une plage d’éléments d’un tableau trié unidimensionnel, à l’aide de l’interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-396">Searches a range of elements in a one-dimensional sorted array for a value, using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-397">Index de la <paramref name="value" /> spécifiée dans l’<paramref name="array" /> spécifié, si <paramref name="value" /> est trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-397">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="4f8a3-398">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est inférieur à un ou plusieurs éléments dans <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du premier élément supérieur à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-398">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4f8a3-399">Si <paramref name="value" /> est introuvable et que <paramref name="value" /> est supérieur à tous les éléments de <paramref name="array" />, le nombre négatif retourné est le complément de bits de l’index du dernier élément plus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-399">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="4f8a3-400">Si cette méthode est appelée avec un <paramref name="array" /> non trié, la valeur de retour peut être incorrecte et un nombre négatif peut être retourné, même si <paramref name="value" /> est présent dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-400">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-401">Cette méthode ne prend pas en charge la recherche dans les tableaux qui contiennent des index négatives.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-401">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="4f8a3-402">`array` doivent être triées avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-402">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="4f8a3-403">Si le tableau ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-403">If the array does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="4f8a3-404">Vous pouvez appliquer l’opérateur de complément de bits (~ en c#, `Not` en Visual Basic) au résultat négatif pour produire un index.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-404">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="4f8a3-405">Si cet index est égal à la taille du tableau, ne contient aucun élément supérieur à `value` dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-405">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="4f8a3-406">Sinon, c’est l’index du premier élément supérieur à `value`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-406">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="4f8a3-407">Le comparateur personnalise la façon dont les éléments sont comparés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-407">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="4f8a3-408">Par exemple, vous pouvez utiliser un <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> en tant que comparateur pour effectuer des recherches de chaîne pas la casse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-408">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="4f8a3-409">Si `comparer` n’est pas `null`, les éléments de `array` sont comparées à la valeur spécifiée à l’aide de la <xref:System.Collections.Generic.IComparer%601> implémentation d’interface générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-409">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> generic interface implementation.</span></span> <span data-ttu-id="4f8a3-410">Les éléments de `array` doit déjà être trié par ordre croissant selon l’ordre de tri défini par `comparer`; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-410">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="4f8a3-411">Si `comparer` est `null`, la comparaison est effectuée à l’aide de la <xref:System.IComparable%601> implémentation d’interface générique fournie pour le type `T`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-411">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable%601> generic interface implementation provided for type `T`.</span></span> <span data-ttu-id="4f8a3-412">Les éléments de `array` doit déjà être trié par ordre croissant selon l’ordre de tri défini par le <xref:System.IComparable%601> implémentation ; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-412">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="4f8a3-413">Les éléments en double sont autorisés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-413">Duplicate elements are allowed.</span></span> <span data-ttu-id="4f8a3-414">Si le <xref:System.Array> contient plusieurs éléments égal à `value`, la méthode retourne l’index d’une des occurrences uniquement et pas nécessairement le.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-414">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="4f8a3-415">`null` peut toujours être comparé à n’importe quel autre type de référence. Par conséquent, les comparaisons avec `null` ne génèrent pas d’exception lors de l’utilisation <xref:System.IComparable%601>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-415">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception when using <xref:System.IComparable%601>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-416">Pour chaque élément testé, `value` est passée à approprié <xref:System.IComparable%601> mise en œuvre, même si `value` est `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-416">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="4f8a3-417">Autrement dit, le <xref:System.IComparable%601> implémentation détermine comment un élément donné est comparé à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-417">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="4f8a3-418">Cette méthode est un O (journal `n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-418">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-419">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-419">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-420">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-420">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-421">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-421">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-422">
            <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-422">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-423">-ou- <paramref name="comparer" /> est <see langword="null" /> et <paramref name="value" /> est d’un type qui n’est pas compatible avec les éléments de <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-423">-or-  <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-424">
            <paramref name="comparer" /> est <see langword="null" />, et <paramref name="T" />n’implémente pas l’interface générique <see cref="T:System.IComparable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-424">
              <paramref name="comparer" /> is <see langword="null" />, and <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Clear(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear(Array ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-425">Le tableau dont les éléments doivent être effacés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-425">The array whose elements need to be cleared.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-426">Index de départ de la plage d'éléments à effacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-426">The starting index of the range of elements to clear.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-427">Nombre d'éléments à effacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-427">The number of elements to clear.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-428">Définit une plage d'éléments dans un tableau à la valeur par défaut de chaque type d'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-428">Sets a range of elements in an array to the default value of each element type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-429">Cette méthode remplace chaque élément dans un tableau du type d’élément par défaut.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-429">This method resets each element in an array to the element type's default value.</span></span> <span data-ttu-id="4f8a3-430">Il définit des éléments de types référence (y compris <xref:System.String> éléments) à `null`et définit des éléments de types de valeur pour les valeurs par défaut indiqués dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-430">It sets elements of reference types (including <xref:System.String> elements) to `null`, and sets elements of value types to the default values shown in the following table.</span></span>  
  
|<span data-ttu-id="4f8a3-431">Type</span><span class="sxs-lookup"><span data-stu-id="4f8a3-431">Type</span></span>|<span data-ttu-id="4f8a3-432">Value</span><span class="sxs-lookup"><span data-stu-id="4f8a3-432">Value</span></span>|  
|----------|-----------|  
|<xref:System.Boolean>|`false`|  
|<span data-ttu-id="4f8a3-433">Tous les types numériques intégraux et à virgule flottante</span><span class="sxs-lookup"><span data-stu-id="4f8a3-433">All integral and floating point numeric types</span></span>|<span data-ttu-id="4f8a3-434">0 (zéro)</span><span class="sxs-lookup"><span data-stu-id="4f8a3-434">0 (zero)</span></span>|  
|<xref:System.DateTime>|<xref:System.DateTime.MinValue?displayProperty=nameWithType>|  
|<span data-ttu-id="4f8a3-435">Autres types de valeur</span><span class="sxs-lookup"><span data-stu-id="4f8a3-435">Other value types</span></span>|<span data-ttu-id="4f8a3-436">Valeur par défaut des champs du type</span><span class="sxs-lookup"><span data-stu-id="4f8a3-436">Default value of the type's fields</span></span>|  
  
 <span data-ttu-id="4f8a3-437">La plage d’éléments effacés est renvoyée à partir de la ligne à la ligne dans un tableau multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-437">The range of cleared elements wrap from row to row in a multi-dimensional array.</span></span>  
  
 <span data-ttu-id="4f8a3-438">Cette méthode efface uniquement les valeurs des éléments ; elle ne supprime pas les éléments eux-mêmes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-438">This method only clears the values of the elements; it does not delete the elements themselves.</span></span> <span data-ttu-id="4f8a3-439">Un tableau a une taille fixe ; Par conséquent, les éléments ne peuvent pas être ajoutés ou supprimés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-439">An array has a fixed size; therefore, elements cannot be added or removed.</span></span>  
  
 <span data-ttu-id="4f8a3-440">Cette méthode est un O (`n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-440">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-441">L’exemple suivant utilise la <xref:System.Array.Clear%2A> méthode pour rétablir les valeurs entières dans un tableau unidimensionnel, deux et trois dimensions.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-441">The following example uses the <xref:System.Array.Clear%2A> method to reset integer values in a one-dimensional, two-dimensional, and three-dimensional array.</span></span>  
  
 [!code-csharp[System.Array.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clear/cs/example.cs#1)]
 [!code-vb[System.Array.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clear/vb/example.vb#1)]  
  
 <span data-ttu-id="4f8a3-442">L’exemple suivant définit un `TimeZoneTime` structure qui comprend un <xref:System.TimeZoneInfo> champ et un <xref:System.DateTimeOffset> champ.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-442">The following example defines a `TimeZoneTime` structure that includes a <xref:System.TimeZoneInfo> field and a <xref:System.DateTimeOffset> field.</span></span> <span data-ttu-id="4f8a3-443">Il appelle ensuite la <xref:System.Array.Clear%2A> méthode pour effacer un élément dans un tableau à deux éléments de `TimeZoneTime` valeurs.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-443">It then calls the <xref:System.Array.Clear%2A> method to clear one element in a two-element array of `TimeZoneTime` values.</span></span> <span data-ttu-id="4f8a3-444">La méthode définit la valeur de l’élément effacée à la valeur par défaut d’un <xref:System.TimeZoneInfo> objet, qui est `null`et la valeur par défaut une <xref:System.DateTimeOffset> objet, qui est <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-444">The method sets the value of the cleared element to the default value of a <xref:System.TimeZoneInfo> object, which is `null`, and the default value of a <xref:System.DateTimeOffset> object, which is <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Array.Clear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clear/cs/clearstruct1.cs#2)]
 [!code-vb[System.Array.Clear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clear/vb/clearstruct1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-445">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-445">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-446">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-446">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-447">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-447">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-448">-ou- La somme de <paramref name="index" /> et <paramref name="length" /> est supérieure à la taille de <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-448">-or-  The sum of <paramref name="index" /> and <paramref name="length" /> is greater than the size of <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-449">Crée une copie superficielle de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-449">Creates a shallow copy of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-450">Copie superficielle de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-450">A shallow copy of the <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-451">Une copie superficielle d’un <xref:System.Array> copie uniquement les éléments de la <xref:System.Array>, si elles sont des types référence ou types valeur, mais elle ne copie pas les objets que les références.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-451">A shallow copy of an <xref:System.Array> copies only the elements of the <xref:System.Array>, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="4f8a3-452">Les références dans la nouvelle <xref:System.Array> des objets qui pointent vers le même les références dans l’original <xref:System.Array> pointez.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-452">The references in the new <xref:System.Array> point to the same objects that the references in the original <xref:System.Array> point to.</span></span>  
  
 <span data-ttu-id="4f8a3-453">En revanche, une copie complète d’un <xref:System.Array> copie les éléments et tout ce que fait référence directement ou indirectement par les éléments.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-453">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="4f8a3-454">Le clone est du même <xref:System.Type> que l’original <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-454">The clone is of the same <xref:System.Type> as the original <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-455">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Array.Length%2A>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-455">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-456">Les éléments suivants exemple de code clone un <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> de tableau et illustre le comportement d’une copie superficielle.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-456">The following code example clones a <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> array and demonstrates the behavior of a shallow copy.</span></span>  
  
 [!code-cpp[System.Array.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Clone/CPP/arrayclone.cpp#1)]
 [!code-csharp[System.Array.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clone/CS/arrayclone.cs#1)]
 [!code-vb[System.Array.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clone/VB/arrayclone.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Array.Copy" />
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ConstrainedCopy">
      <MemberSignature Language="C#" Value="public static void ConstrainedCopy (Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConstrainedCopy(class System.Array sourceArray, int32 sourceIndex, class System.Array destinationArray, int32 destinationIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConstrainedCopy (sourceArray As Array, sourceIndex As Integer, destinationArray As Array, destinationIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConstrainedCopy(Array ^ sourceArray, int sourceIndex, Array ^ destinationArray, int destinationIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="4f8a3-457">
            <see cref="T:System.Array" /> qui contient les données à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-457">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="sourceIndex">
          <span data-ttu-id="4f8a3-458">Entier 32 bits qui représente l’index du <c>sourceArray</c> auquel la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-458">A 32-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="4f8a3-459">
            <see cref="T:System.Array" /> qui reçoit les données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-459">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="4f8a3-460">Entier 32 bits qui représente l’index du <c>destinationArray</c> auquel le stockage commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-460">A 32-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-461">Entier 32 bits qui représente le nombre d'éléments à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-461">A 32-bit integer that represents the number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-462">Copie une plage d’éléments à partir d’un <see cref="T:System.Array" /> commençant à l’index source spécifié, puis les colle dans un autre <see cref="T:System.Array" /> commençant à l’index de destination spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-462">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span>
          </span>
          <span data-ttu-id="4f8a3-463">Garantit que toutes les modifications sont annulées si la copie ne se déroule pas intégralement avec succès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-463">Guarantees that all changes are undone if the copy does not succeed completely.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-464">Le `sourceArray` et `destinationArray` paramètres doivent avoir le même nombre de dimensions.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-464">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span>  <span data-ttu-id="4f8a3-465">Le `sourceArray` type doit être identique ou dérivé de la `destinationArray` type ; sinon, un <xref:System.ArrayTypeMismatchException> est levée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-465">The `sourceArray` type must be the same as or derived from the `destinationArray` type; otherwise, an <xref:System.ArrayTypeMismatchException> is thrown.</span></span>  <span data-ttu-id="4f8a3-466">Contrairement aux <xref:System.Array.Copy%2A>, <xref:System.Array.ConstrainedCopy%2A> vérifie la compatibilité des types de tableau avant d’effectuer toute opération.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-466">Unlike <xref:System.Array.Copy%2A>, <xref:System.Array.ConstrainedCopy%2A> verifies the compatibility of the array types before performing any operation.</span></span>  
  
 <span data-ttu-id="4f8a3-467">Lors de la copie entre des tableaux multidimensionnels, le tableau se comporte comme un tableau unidimensionnel de long, où les lignes (ou les colonnes) sont placés sur le plan conceptuel bout en bout.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-467">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="4f8a3-468">Par exemple, si un tableau possède trois lignes (ou colonnes) avec quatre éléments chaque, copie de six éléments à partir du début du tableau copiez toutes les quatre éléments de la première ligne (ou colonne) et les deux premiers éléments de la deuxième ligne (ou colonne).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-468">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="4f8a3-469">Pour démarrer la copie à partir du deuxième élément du troisième ligne (ou colonne), `sourceIndex` doit être la limite supérieure de la première ligne (ou colonne) plus la longueur de la deuxième ligne (ou colonne) plus deux.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-469">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="4f8a3-470">Si `sourceArray` et `destinationArray` se chevauchent, cette méthode se comporte comme si les valeurs d’origine de `sourceArray` ont été conservés dans un emplacement temporaire avant `destinationArray` est remplacé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-470">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="4f8a3-471">[C++]</span><span class="sxs-lookup"><span data-stu-id="4f8a3-471">[C++]</span></span>  
  
 <span data-ttu-id="4f8a3-472">Cette méthode est équivalente à la fonction C/C++ standard `memmove`, et non `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-472">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="4f8a3-473">Les tableaux peuvent être des tableaux de type référence ou des tableaux de type valeur.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-473">The arrays can be reference-type arrays or value-type arrays.</span></span>  <span data-ttu-id="4f8a3-474">Si `sourceArray` et `destinationArray` des tableaux de type référence ou des tableaux de type <xref:System.Object>, une copie superficielle est effectuée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-474">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="4f8a3-475">Une copie superficielle d’un <xref:System.Array> est un nouveau <xref:System.Array> contenant des références aux mêmes éléments que l’original <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-475">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-476">Les éléments eux-mêmes ou tout élément référencé par les éléments ne sont pas copiés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-476">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="4f8a3-477">En revanche, une copie complète d’un <xref:System.Array> copie les éléments et tout ce que fait référence directement ou indirectement par les éléments.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-477">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="4f8a3-478">Si cette méthode lève une exception lors de la copie, le `destinationArray` reste inchangée ; par conséquent, <xref:System.Array.ConstrainedCopy%2A> peut être utilisé dans une région d’exécution limitée (<xref:System.Runtime.ConstrainedExecution.Cer>).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-478">If this method throws an exception while copying, the `destinationArray` remains unchanged; therefore, <xref:System.Array.ConstrainedCopy%2A> can be used within a constrained execution region (<xref:System.Runtime.ConstrainedExecution.Cer>).</span></span>  
  
 <span data-ttu-id="4f8a3-479">Cette méthode est un O (`n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-479">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-480">
            <paramref name="sourceArray" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-480">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-481">-ou- <paramref name="destinationArray" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-481">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-482">
            <paramref name="sourceArray" /> et <paramref name="destinationArray" /> ont des classements différents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-482">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="4f8a3-483">Le type <paramref name="sourceArray" /> n’est pas le même que le type <paramref name="destinationArray" />, ni un dérivé de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-483">The <paramref name="sourceArray" /> type is neither the same as nor derived from the <paramref name="destinationArray" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-484">Au moins un élément de <paramref name="sourceArray" /> ne peut pas être converti en type <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-484">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-485">
            <paramref name="sourceIndex" /> est inférieur à la limite inférieure de la première dimension de <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-485">
              <paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="4f8a3-486">-ou- <paramref name="destinationIndex" /> est inférieur à la limite inférieure de la première dimension de <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-486">-or-  <paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.</span>
          </span>
          <span data-ttu-id="4f8a3-487">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-487">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-488">
            <paramref name="length" /> est supérieur au nombre d’éléments compris entre <paramref name="sourceIndex" /> et la fin de <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-488">
              <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="4f8a3-489">-ou- <paramref name="length" /> est supérieur au nombre d’éléments entre <paramref name="destinationIndex" /> et la fin de <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-489">-or-  <paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.Copy" />
        <altmember cref="M:System.Array.Clone" />
        <altmember cref="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" />
        <altmember cref="T:System.Runtime.ConstrainedExecution.Cer" />
      </Docs>
    </Member>
    <Member MemberName="ConvertAll&lt;TInput,TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput[] ConvertAll&lt;TInput,TOutput&gt; (TInput[] array, Converter&lt;TInput,TOutput&gt; converter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput[] ConvertAll&lt;TInput, TOutput&gt;(!!TInput[] array, class System.Converter`2&lt;!!TInput, !!TOutput&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ConvertAll``2(``0[],System.Converter{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertAll(Of TInput, TOutput) (array As TInput(), converter As Converter(Of TInput, TOutput)) As TOutput()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TOutput&gt;&#xA; static cli::array &lt;TOutput&gt; ^ ConvertAll(cli::array &lt;TInput&gt; ^ array, Converter&lt;TInput, TOutput&gt; ^ converter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="TInput[]" />
        <Parameter Name="converter" Type="System.Converter&lt;TInput,TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="4f8a3-490">Type des éléments du tableau source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-490">The type of the elements of the source array.</span>
          </span>
        </typeparam>
        <typeparam name="TOutput">
          <span data-ttu-id="4f8a3-491">Type des éléments du tableau cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-491">The type of the elements of the target array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-492">
            <see cref="T:System.Array" /> unidimensionnel de base zéro à convertir en un type cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-492">The one-dimensional, zero-based <see cref="T:System.Array" /> to convert to a target type.</span>
          </span>
        </param>
        <param name="converter">
          <span data-ttu-id="4f8a3-493">
            <see cref="T:System.Converter`2" /> qui convertit chaque élément d’un type en un autre type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-493">A <see cref="T:System.Converter`2" /> that converts each element from one type to another type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-494">Convertit un tableau d'un type en un tableau d'un autre type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-494">Converts an array of one type to an array of another type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-495">Tableau du type cible qui contient les éléments convertis du tableau source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-495">An array of the target type containing the converted elements from the source array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-496">Le <xref:System.Converter%602> est un délégué à une méthode qui convertit un objet en type cible.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-496">The <xref:System.Converter%602> is a delegate to a method that converts an object to the target type.</span></span>  <span data-ttu-id="4f8a3-497">Les éléments de `array` sont passés individuellement à la <xref:System.Converter%602>, et les éléments convertis sont enregistrés dans le nouveau tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-497">The elements of `array` are individually passed to the <xref:System.Converter%602>, and the converted elements are saved in the new array.</span></span>  
  
 <span data-ttu-id="4f8a3-498">La source `array` demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-498">The source `array` remains unchanged.</span></span>  
  
 <span data-ttu-id="4f8a3-499">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-499">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-500">L’exemple de code suivant définit une méthode nommée `PointFToPoint` qui convertit un <xref:System.Drawing.PointF> structure un <xref:System.Drawing.Point> structure.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-500">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="4f8a3-501">L’exemple crée ensuite un tableau de <xref:System.Drawing.PointF> structures, crée un `Converter<PointF, Point>` déléguer (`Converter(Of PointF, Point)` en Visual Basic) pour représenter le `PointFToPoint` (méthode) et passe le délégué à la <xref:System.Array.ConvertAll%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-501">The example then creates an array of <xref:System.Drawing.PointF> structures, creates a `Converter<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Array.ConvertAll%2A> method.</span></span> <span data-ttu-id="4f8a3-502">Le <xref:System.Array.ConvertAll%2A> méthode passe chaque élément de la liste d’entrée à la `PointFToPoint` (méthode) et met les éléments convertis dans une nouvelle liste de <xref:System.Drawing.Point> structures.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-502">The <xref:System.Array.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="4f8a3-503">Les deux listes sont affichées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-503">Both lists are displayed.</span></span>  
  
 [!code-cpp[Array_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[Array_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_ConvertAll/cs/source.cs#1)]
 [!code-vb[Array_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-504">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-504">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-505">-ou- <paramref name="converter" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-505">-or-  <paramref name="converter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Converter`2" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-506">Copie une plage d’éléments d’un <see cref="T:System.Array" /> vers un autre <see cref="T:System.Array" /> et effectue éventuellement le casting de type et le boxing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-506">Copies a range of elements in one <see cref="T:System.Array" /> to another <see cref="T:System.Array" /> and performs type casting and boxing as required.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, Array destinationArray, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, class System.Array destinationArray, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, destinationArray As Array, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, Array ^ destinationArray, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="4f8a3-507">
            <see cref="T:System.Array" /> qui contient les données à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-507">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="4f8a3-508">
            <see cref="T:System.Array" /> qui reçoit les données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-508">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-509">Entier 32 bits qui représente le nombre d'éléments à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-509">A 32-bit integer that represents the number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-510">Copie une série d’éléments de <see cref="T:System.Array" /> en commençant au premier élément, et les colle dans un autre <see cref="T:System.Array" /> en commençant au premier élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-510">Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element.</span>
          </span>
          <span data-ttu-id="4f8a3-511">La longueur est spécifiée sous forme d'un entier 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-511">The length is specified as a 32-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-512">Le `sourceArray` et `destinationArray` paramètres doivent avoir le même nombre de dimensions.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-512">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="4f8a3-513">En outre, `destinationArray` doit déjà avoir été dimensionné et doit avoir un nombre suffisant d’éléments à prendre en compte les données copiées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-513">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="4f8a3-514">Lors de la copie entre des tableaux multidimensionnels, le tableau se comporte comme un tableau unidimensionnel de long, où les lignes (ou les colonnes) sont placés sur le plan conceptuel bout en bout.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-514">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end to end.</span></span> <span data-ttu-id="4f8a3-515">Par exemple, si un tableau possède trois lignes (ou colonnes) avec quatre éléments chaque, copie de six éléments à partir du début du tableau copiez toutes les quatre éléments de la première ligne (ou colonne) et les deux premiers éléments de la deuxième ligne (ou colonne).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-515">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span>  
  
 <span data-ttu-id="4f8a3-516">Si `sourceArray` et `destinationArray` se chevauchent, cette méthode se comporte comme si les valeurs d’origine de `sourceArray` ont été conservés dans un emplacement temporaire avant `destinationArray` est remplacé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-516">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="4f8a3-517">[C++]</span><span class="sxs-lookup"><span data-stu-id="4f8a3-517">[C++]</span></span>  
  
 <span data-ttu-id="4f8a3-518">Cette méthode est équivalente à la fonction C/C++ standard `memmove`, et non `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-518">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="4f8a3-519">Les tableaux peuvent être des tableaux de type référence ou des tableaux de type valeur.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-519">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="4f8a3-520">Cast de type est effectuée, selon les besoins.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-520">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="4f8a3-521">Lors de la copie à partir d’un tableau de type référence à un tableau de type valeur, chaque élément est unboxed, puis copié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-521">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="4f8a3-522">Lors de la copie à partir d’un tableau de type valeur dans un tableau de type référence, chaque élément est converti (boxed), puis copié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-522">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="4f8a3-523">Lors de la copie d’un tableau de type référence ou type de valeur vers un <xref:System.Object> tableau, un <xref:System.Object> est créé pour contenir chaque valeur ou référence, puis copié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-523">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="4f8a3-524">Lors de la copie d’un <xref:System.Object> un tableau de type référence ou type valeur et l’attribution de tableau n’est pas possible, un <xref:System.InvalidCastException> est levée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-524">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="4f8a3-525">Si `sourceArray` et `destinationArray` des tableaux de type référence ou des tableaux de type <xref:System.Object>, une copie superficielle est effectuée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-525">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="4f8a3-526">Une copie superficielle d’un <xref:System.Array> est un nouveau <xref:System.Array> contenant des références aux mêmes éléments que l’original <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-526">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-527">Les éléments eux-mêmes ou tout élément référencé par les éléments ne sont pas copiés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-527">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="4f8a3-528">En revanche, une copie complète d’un <xref:System.Array> copie les éléments et tout ce que fait référence directement ou indirectement par les éléments.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-528">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="4f8a3-529">Un <xref:System.ArrayTypeMismatchException> est levée si les tableaux sont de types incompatibles.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-529">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="4f8a3-530">Compatibilité de type est définie comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-530">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-531">Un type est compatible avec lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-531">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="4f8a3-532">Un type valeur est compatible avec <xref:System.Object> et avec un type interface implémenté par ce type de valeur.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-532">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="4f8a3-533">Un type valeur est considéré comme connecté à une interface uniquement s’il implémente cette interface directement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-533">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="4f8a3-534">Les types déconnectés ne sont pas compatibles.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-534">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="4f8a3-535">Deux types valeur (prédéfini) intrinsèques sont compatibles si la copie à partir du type de source pour le type de destination est une conversion étendue.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-535">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="4f8a3-536">Une conversion étendue jamais perd le plus d’informations, tandis qu’une conversion restrictive peut perdre des informations.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-536">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="4f8a3-537">Par exemple, convertir un entier signé 32 bits à un entier signé 64 bits est une conversion étendue, et la conversion d’un entier signé 64 bits à un entier signé 32 bits est une conversion restrictive.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-537">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="4f8a3-538">Pour plus d’informations sur les conversions, consultez <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-538">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="4f8a3-539">Un type non intrinsèque valeur (défini par l’utilisateur) est compatible uniquement avec lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-539">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="4f8a3-540">Les énumérations ont une conversion implicite vers <xref:System.Enum> et leur type sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-540">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="4f8a3-541">Si tous les éléments de `sourceArray` nécessite un cast aval (par exemple, à partir d’une classe de base pour une classe dérivée ou d’une interface vers un objet) et un ou plusieurs éléments ne peut pas être convertis au type correspondant dans `destinationArray`, un <xref:System.InvalidCastException> est levée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-541">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="4f8a3-542">Si cette méthode lève une exception lors de la copie, l’état de `destinationArray` n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-542">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-543">Cette méthode est un O (`n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-543">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-544">
            <paramref name="sourceArray" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-544">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-545">-ou- <paramref name="destinationArray" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-545">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-546">
            <paramref name="sourceArray" /> et <paramref name="destinationArray" /> ont des classements différents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-546">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="4f8a3-547">
            <paramref name="sourceArray" /> et <paramref name="destinationArray" /> sont de types incompatibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-547">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-548">Au moins un élément de <paramref name="sourceArray" /> ne peut pas être converti en type <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-548">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-549">
            <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-549">
              <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-550">
            <paramref name="length" /> est supérieur au nombre d’éléments de <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-550">
              <paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="4f8a3-551">-ou- <paramref name="length" /> est supérieur au nombre d’éléments de <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-551">-or-  <paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, Array destinationArray, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, class System.Array destinationArray, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Array,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, destinationArray As Array, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, Array ^ destinationArray, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="4f8a3-552">
            <see cref="T:System.Array" /> qui contient les données à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-552">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="4f8a3-553">
            <see cref="T:System.Array" /> qui reçoit les données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-553">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-554">Entier 64 bits qui représente le nombre d'éléments à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-554">A 64-bit integer that represents the number of elements to copy.</span>
          </span>
          <span data-ttu-id="4f8a3-555">L’entier doit être compris entre zéro et <see cref="F:System.Int32.MaxValue" />, inclus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-555">The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-556">Copie une série d’éléments de <see cref="T:System.Array" /> en commençant au premier élément, et les colle dans un autre <see cref="T:System.Array" /> en commençant au premier élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-556">Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element.</span>
          </span>
          <span data-ttu-id="4f8a3-557">La longueur est spécifiée sous forme d'un entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-557">The length is specified as a 64-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-558">Le `sourceArray` et `destinationArray` paramètres doivent avoir le même nombre de dimensions.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-558">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="4f8a3-559">En outre, `destinationArray` doit déjà avoir été dimensionné et doit avoir un nombre suffisant d’éléments à prendre en compte les données copiées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-559">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="4f8a3-560">Lors de la copie entre des tableaux multidimensionnels, le tableau se comporte comme un tableau unidimensionnel de long, où les lignes (ou les colonnes) sont placés sur le plan conceptuel bout en bout.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-560">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end to end.</span></span> <span data-ttu-id="4f8a3-561">Par exemple, si un tableau possède trois lignes (ou colonnes) avec quatre éléments chaque, copie de six éléments à partir du début du tableau copiez toutes les quatre éléments de la première ligne (ou colonne) et les deux premiers éléments de la deuxième ligne (ou colonne).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-561">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span>  
  
 <span data-ttu-id="4f8a3-562">Si `sourceArray` et `destinationArray` se chevauchent, cette méthode se comporte comme si les valeurs d’origine de `sourceArray` ont été conservés dans un emplacement temporaire avant `destinationArray` est remplacé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-562">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="4f8a3-563">[C++]</span><span class="sxs-lookup"><span data-stu-id="4f8a3-563">[C++]</span></span>  
  
 <span data-ttu-id="4f8a3-564">Cette méthode est équivalente à la fonction C/C++ standard `memmove`, et non `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-564">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="4f8a3-565">Les tableaux peuvent être des tableaux de type référence ou des tableaux de type valeur.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-565">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="4f8a3-566">Cast de type est effectuée, selon les besoins.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-566">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="4f8a3-567">Lors de la copie à partir d’un tableau de type référence à un tableau de type valeur, chaque élément est unboxed, puis copié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-567">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="4f8a3-568">Lors de la copie à partir d’un tableau de type valeur dans un tableau de type référence, chaque élément est converti (boxed), puis copié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-568">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="4f8a3-569">Lors de la copie d’un tableau de type référence ou type de valeur vers un <xref:System.Object> tableau, un <xref:System.Object> est créé pour contenir chaque valeur ou référence, puis copié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-569">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="4f8a3-570">Lors de la copie d’un <xref:System.Object> un tableau de type référence ou type valeur et l’attribution de tableau n’est pas possible, un <xref:System.InvalidCastException> est levée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-570">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="4f8a3-571">Si `sourceArray` et `destinationArray` des tableaux de type référence ou des tableaux de type <xref:System.Object>, une copie superficielle est effectuée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-571">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="4f8a3-572">Une copie superficielle d’un <xref:System.Array> est un nouveau <xref:System.Array> contenant des références aux mêmes éléments que l’original <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-572">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-573">Les éléments eux-mêmes ou tout élément référencé par les éléments ne sont pas copiés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-573">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="4f8a3-574">En revanche, une copie complète d’un <xref:System.Array> copie les éléments et tout ce que fait référence directement ou indirectement par les éléments.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-574">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="4f8a3-575">Un <xref:System.ArrayTypeMismatchException> est levée si les tableaux sont de types incompatibles.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-575">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="4f8a3-576">Compatibilité de type est définie comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-576">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-577">Un type est compatible avec lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-577">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="4f8a3-578">Un type valeur est compatible avec <xref:System.Object> et avec un type interface implémenté par ce type de valeur.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-578">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="4f8a3-579">Un type valeur est considéré comme connecté à une interface uniquement s’il implémente cette interface directement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-579">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="4f8a3-580">Les types déconnectés ne sont pas compatibles.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-580">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="4f8a3-581">Deux types valeur (prédéfini) intrinsèques sont compatibles si la copie à partir du type de source pour le type de destination est une conversion étendue.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-581">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="4f8a3-582">Une conversion étendue jamais perd le plus d’informations, tandis qu’une conversion restrictive peut perdre des informations.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-582">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="4f8a3-583">Par exemple, convertir un entier signé 32 bits à un entier signé 64 bits est une conversion étendue, et la conversion d’un entier signé 64 bits à un entier signé 32 bits est une conversion restrictive.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-583">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="4f8a3-584">Pour plus d’informations sur les conversions, consultez <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-584">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="4f8a3-585">Un type non intrinsèque valeur (défini par l’utilisateur) est compatible uniquement avec lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-585">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="4f8a3-586">Les énumérations ont une conversion implicite vers <xref:System.Enum> et leur type sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-586">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="4f8a3-587">Si tous les éléments de `sourceArray` nécessite un cast aval (par exemple, à partir d’une classe de base pour une classe dérivée ou d’une interface vers un objet) et un ou plusieurs éléments ne peut pas être convertis au type correspondant dans `destinationArray`, un <xref:System.InvalidCastException> est levée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-587">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="4f8a3-588">Si cette méthode lève une exception lors de la copie, l’état de `destinationArray` n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-588">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-589">Cette méthode est un O (`n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-589">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-590">
            <paramref name="sourceArray" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-590">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-591">-ou- <paramref name="destinationArray" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-591">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-592">
            <paramref name="sourceArray" /> et <paramref name="destinationArray" /> ont des classements différents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-592">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="4f8a3-593">
            <paramref name="sourceArray" /> et <paramref name="destinationArray" /> sont de types incompatibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-593">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-594">Au moins un élément de <paramref name="sourceArray" /> ne peut pas être converti en type <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-594">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-595">
            <paramref name="length" /> est inférieur à 0 ou supérieur à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-595">
              <paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-596">
            <paramref name="length" /> est supérieur au nombre d’éléments de <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-596">
              <paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="4f8a3-597">-ou- <paramref name="length" /> est supérieur au nombre d’éléments de <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-597">-or-  <paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, int32 sourceIndex, class System.Array destinationArray, int32 destinationIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, sourceIndex As Integer, destinationArray As Array, destinationIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, int sourceIndex, Array ^ destinationArray, int destinationIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="4f8a3-598">
            <see cref="T:System.Array" /> qui contient les données à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-598">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="sourceIndex">
          <span data-ttu-id="4f8a3-599">Entier 32 bits qui représente l’index du <c>sourceArray</c> auquel la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-599">A 32-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="4f8a3-600">
            <see cref="T:System.Array" /> qui reçoit les données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-600">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="4f8a3-601">Entier 32 bits qui représente l’index du <c>destinationArray</c> auquel le stockage commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-601">A 32-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-602">Entier 32 bits qui représente le nombre d'éléments à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-602">A 32-bit integer that represents the number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-603">Copie une plage d’éléments à partir d’un <see cref="T:System.Array" /> commençant à l’index source spécifié, puis les colle dans un autre <see cref="T:System.Array" /> commençant à l’index de destination spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-603">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span>
          </span>
          <span data-ttu-id="4f8a3-604">La longueur et les index sont spécifiés en tant qu'entiers 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-604">The length and the indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-605">Le `sourceArray` et `destinationArray` paramètres doivent avoir le même nombre de dimensions.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-605">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="4f8a3-606">En outre, `destinationArray` doit déjà avoir été dimensionné et doit avoir un nombre suffisant d’éléments à partir de la `destinationIndex` position pour accueillir les données copiées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-606">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements starting from the `destinationIndex` position to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="4f8a3-607">Lors de la copie entre des tableaux multidimensionnels, le tableau se comporte comme un tableau unidimensionnel de long, où les lignes (ou les colonnes) sont placés sur le plan conceptuel bout en bout.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-607">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="4f8a3-608">Par exemple, si un tableau possède trois lignes (ou colonnes) avec quatre éléments chaque, copie de six éléments à partir du début du tableau copiez toutes les quatre éléments de la première ligne (ou colonne) et les deux premiers éléments de la deuxième ligne (ou colonne).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-608">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="4f8a3-609">Pour démarrer la copie à partir du deuxième élément du troisième ligne (ou colonne), `sourceIndex` doit être la limite supérieure de la première ligne (ou colonne) plus la longueur de la deuxième ligne (ou colonne) plus deux.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-609">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="4f8a3-610">Si `sourceArray` et `destinationArray` se chevauchent, cette méthode se comporte comme si les valeurs d’origine de `sourceArray` ont été conservés dans un emplacement temporaire avant `destinationArray` est remplacé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-610">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="4f8a3-611">[C++]</span><span class="sxs-lookup"><span data-stu-id="4f8a3-611">[C++]</span></span>  
  
 <span data-ttu-id="4f8a3-612">Cette méthode est équivalente à la fonction C/C++ standard `memmove`, et non `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-612">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="4f8a3-613">Les tableaux peuvent être des tableaux de type référence ou des tableaux de type valeur.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-613">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="4f8a3-614">Cast de type est effectuée, selon les besoins.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-614">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="4f8a3-615">Lors de la copie à partir d’un tableau de type référence à un tableau de type valeur, chaque élément est unboxed, puis copié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-615">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="4f8a3-616">Lors de la copie à partir d’un tableau de type valeur dans un tableau de type référence, chaque élément est converti (boxed), puis copié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-616">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="4f8a3-617">Lors de la copie d’un tableau de type référence ou type de valeur vers un <xref:System.Object> tableau, un <xref:System.Object> est créé pour contenir chaque valeur ou référence, puis copié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-617">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="4f8a3-618">Lors de la copie d’un <xref:System.Object> un tableau de type référence ou type valeur et l’attribution de tableau n’est pas possible, un <xref:System.InvalidCastException> est levée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-618">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="4f8a3-619">Si `sourceArray` et `destinationArray` des tableaux de type référence ou des tableaux de type <xref:System.Object>, une copie superficielle est effectuée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-619">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="4f8a3-620">Une copie superficielle d’un <xref:System.Array> est un nouveau <xref:System.Array> contenant des références aux mêmes éléments que l’original <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-620">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-621">Les éléments eux-mêmes ou tout élément référencé par les éléments ne sont pas copiés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-621">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="4f8a3-622">En revanche, une copie complète d’un <xref:System.Array> copie les éléments et tout ce que fait référence directement ou indirectement par les éléments.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-622">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="4f8a3-623">Un <xref:System.ArrayTypeMismatchException> est levée si les tableaux sont de types incompatibles.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-623">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="4f8a3-624">Compatibilité de type est définie comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-624">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-625">Un type est compatible avec lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-625">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="4f8a3-626">Un type valeur est compatible avec <xref:System.Object> et avec un type interface implémenté par ce type de valeur.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-626">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="4f8a3-627">Un type valeur est considéré comme connecté à une interface uniquement s’il implémente cette interface directement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-627">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="4f8a3-628">Les types déconnectés ne sont pas compatibles.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-628">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="4f8a3-629">Deux types valeur (prédéfini) intrinsèques sont compatibles si la copie à partir du type de source pour le type de destination est une conversion étendue.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-629">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="4f8a3-630">Une conversion étendue jamais perd le plus d’informations, tandis qu’une conversion restrictive peut perdre des informations.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-630">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="4f8a3-631">Par exemple, convertir un entier signé 32 bits à un entier signé 64 bits est une conversion étendue, et la conversion d’un entier signé 64 bits à un entier signé 32 bits est une conversion restrictive.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-631">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="4f8a3-632">Pour plus d’informations sur les conversions, consultez <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-632">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="4f8a3-633">Un type non intrinsèque valeur (défini par l’utilisateur) est compatible uniquement avec lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-633">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="4f8a3-634">Les énumérations ont une conversion implicite vers <xref:System.Enum> et leur type sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-634">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="4f8a3-635">Si tous les éléments de `sourceArray` nécessite un cast aval (par exemple, à partir d’une classe de base pour une classe dérivée ou d’une interface vers un objet) et un ou plusieurs éléments ne peut pas être convertis au type correspondant dans `destinationArray`, un <xref:System.InvalidCastException> est levée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-635">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="4f8a3-636">Si cette méthode lève une exception lors de la copie, l’état de `destinationArray` n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-636">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-637">Cette méthode est un O (`n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-637">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-638">L’exemple de code suivant montre comment copier à partir d’un <xref:System.Array> de type <xref:System.Object> vers un autre <xref:System.Array> de type entier.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-638">The following code example shows how to copy from one <xref:System.Array> of type <xref:System.Object> to another <xref:System.Array> of type integer.</span></span>  
  
 [!code-cpp[Classic Array.Copy1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Copy1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Copy1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-639">
            <paramref name="sourceArray" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-639">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-640">-ou- <paramref name="destinationArray" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-640">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-641">
            <paramref name="sourceArray" /> et <paramref name="destinationArray" /> ont des classements différents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-641">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="4f8a3-642">
            <paramref name="sourceArray" /> et <paramref name="destinationArray" /> sont de types incompatibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-642">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-643">Au moins un élément de <paramref name="sourceArray" /> ne peut pas être converti en type <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-643">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-644">
            <paramref name="sourceIndex" /> est inférieur à la limite inférieure de la première dimension de <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-644">
              <paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="4f8a3-645">-ou- <paramref name="destinationIndex" /> est inférieur à la limite inférieure de la première dimension de <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-645">-or-  <paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.</span>
          </span>
          <span data-ttu-id="4f8a3-646">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-646">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-647">
            <paramref name="length" /> est supérieur au nombre d’éléments compris entre <paramref name="sourceIndex" /> et la fin de <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-647">
              <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="4f8a3-648">-ou- <paramref name="length" /> est supérieur au nombre d’éléments entre <paramref name="destinationIndex" /> et la fin de <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-648">-or-  <paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, long sourceIndex, Array destinationArray, long destinationIndex, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, int64 sourceIndex, class System.Array destinationArray, int64 destinationIndex, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Int64,System.Array,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, sourceIndex As Long, destinationArray As Array, destinationIndex As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, long sourceIndex, Array ^ destinationArray, long destinationIndex, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int64" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="4f8a3-649">
            <see cref="T:System.Array" /> qui contient les données à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-649">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="sourceIndex">
          <span data-ttu-id="4f8a3-650">Entier 64 bits qui représente l’index du <c>sourceArray</c> auquel la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-650">A 64-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="4f8a3-651">
            <see cref="T:System.Array" /> qui reçoit les données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-651">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="4f8a3-652">Entier 64 bits qui représente l’index du <c>destinationArray</c> auquel le stockage commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-652">A 64-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-653">Entier 64 bits qui représente le nombre d'éléments à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-653">A 64-bit integer that represents the number of elements to copy.</span>
          </span>
          <span data-ttu-id="4f8a3-654">L’entier doit être compris entre zéro et <see cref="F:System.Int32.MaxValue" />, inclus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-654">The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-655">Copie une plage d’éléments à partir d’un <see cref="T:System.Array" /> commençant à l’index source spécifié, puis les colle dans un autre <see cref="T:System.Array" /> commençant à l’index de destination spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-655">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span>
          </span>
          <span data-ttu-id="4f8a3-656">La longueur et les index sont spécifiés en tant qu'entiers 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-656">The length and the indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-657">Le `sourceArray` et `destinationArray` paramètres doivent avoir le même nombre de dimensions.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-657">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="4f8a3-658">En outre, `destinationArray` doit déjà avoir été dimensionné et doit avoir un nombre suffisant d’éléments à partir de la `destinationIndex` position pour accueillir les données copiées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-658">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements starting from the `destinationIndex` position to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="4f8a3-659">Lors de la copie entre des tableaux multidimensionnels, le tableau se comporte comme un tableau unidimensionnel de long, où les lignes (ou les colonnes) sont placés sur le plan conceptuel bout en bout.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-659">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="4f8a3-660">Par exemple, si un tableau possède trois lignes (ou colonnes) avec quatre éléments chaque, copie de six éléments à partir du début du tableau copiez toutes les quatre éléments de la première ligne (ou colonne) et les deux premiers éléments de la deuxième ligne (ou colonne).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-660">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="4f8a3-661">Pour démarrer la copie à partir du deuxième élément du troisième ligne (ou colonne), `sourceIndex` doit être la limite supérieure de la première ligne (ou colonne) plus la longueur de la deuxième ligne (ou colonne) plus deux.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-661">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="4f8a3-662">Si `sourceArray` et `destinationArray` se chevauchent, cette méthode se comporte comme si les valeurs d’origine de `sourceArray` ont été conservés dans un emplacement temporaire avant `destinationArray` est remplacé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-662">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="4f8a3-663">[C++]</span><span class="sxs-lookup"><span data-stu-id="4f8a3-663">[C++]</span></span>  
  
 <span data-ttu-id="4f8a3-664">Cette méthode est équivalente à la fonction C/C++ standard `memmove`, et non `memcpy`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-664">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="4f8a3-665">Les tableaux peuvent être des tableaux de type référence ou des tableaux de type valeur.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-665">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="4f8a3-666">Cast de type est effectuée, selon les besoins.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-666">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="4f8a3-667">Lors de la copie à partir d’un tableau de type référence à un tableau de type valeur, chaque élément est unboxed, puis copié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-667">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="4f8a3-668">Lors de la copie à partir d’un tableau de type valeur dans un tableau de type référence, chaque élément est converti (boxed), puis copié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-668">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="4f8a3-669">Lors de la copie d’un tableau de type référence ou type de valeur vers un <xref:System.Object> tableau, un <xref:System.Object> est créé pour contenir chaque valeur ou référence, puis copié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-669">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="4f8a3-670">Lors de la copie d’un <xref:System.Object> un tableau de type référence ou type valeur et l’attribution de tableau n’est pas possible, un <xref:System.InvalidCastException> est levée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-670">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="4f8a3-671">Si `sourceArray` et `destinationArray` des tableaux de type référence ou des tableaux de type <xref:System.Object>, une copie superficielle est effectuée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-671">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="4f8a3-672">Une copie superficielle d’un <xref:System.Array> est un nouveau <xref:System.Array> contenant des références aux mêmes éléments que l’original <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-672">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-673">Les éléments eux-mêmes ou tout élément référencé par les éléments ne sont pas copiés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-673">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="4f8a3-674">En revanche, une copie complète d’un <xref:System.Array> copie les éléments et tout ce que fait référence directement ou indirectement par les éléments.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-674">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="4f8a3-675">Un <xref:System.ArrayTypeMismatchException> est levée si les tableaux sont de types incompatibles.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-675">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="4f8a3-676">Compatibilité de type est définie comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-676">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-677">Un type est compatible avec lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-677">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="4f8a3-678">Un type valeur est compatible avec <xref:System.Object> et avec un type interface implémenté par ce type de valeur.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-678">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="4f8a3-679">Un type valeur est considéré comme connecté à une interface uniquement s’il implémente cette interface directement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-679">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="4f8a3-680">Les types déconnectés ne sont pas compatibles.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-680">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="4f8a3-681">Deux types valeur (prédéfini) intrinsèques sont compatibles si la copie à partir du type de source pour le type de destination est une conversion étendue.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-681">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="4f8a3-682">Une conversion étendue jamais perd le plus d’informations, tandis qu’une conversion restrictive peut perdre des informations.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-682">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="4f8a3-683">Par exemple, convertir un entier signé 32 bits à un entier signé 64 bits est une conversion étendue, et la conversion d’un entier signé 64 bits à un entier signé 32 bits est une conversion restrictive.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-683">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="4f8a3-684">Pour plus d’informations sur les conversions, consultez <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-684">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="4f8a3-685">Un type non intrinsèque valeur (défini par l’utilisateur) est compatible uniquement avec lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-685">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="4f8a3-686">Les énumérations ont une conversion implicite vers <xref:System.Enum> et leur type sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-686">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="4f8a3-687">Si tous les éléments de `sourceArray` nécessite un cast aval (par exemple, à partir d’une classe de base pour une classe dérivée ou d’une interface vers un objet) et un ou plusieurs éléments ne peut pas être convertis au type correspondant dans `destinationArray`, un <xref:System.InvalidCastException> est levée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-687">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="4f8a3-688">Si cette méthode lève une exception lors de la copie, l’état de `destinationArray` n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-688">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-689">Cette méthode est un O (`n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-689">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-690">L’exemple de code suivant montre comment copier à partir d’un <xref:System.Array> de type <xref:System.Object> vers un autre <xref:System.Array> de type entier.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-690">The following code example shows how to copy from one <xref:System.Array> of type <xref:System.Object> to another <xref:System.Array> of type integer.</span></span>  
  
 [!code-cpp[Classic Array.Copy1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Copy1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Copy1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-691">
            <paramref name="sourceArray" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-691">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-692">-ou- <paramref name="destinationArray" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-692">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-693">
            <paramref name="sourceArray" /> et <paramref name="destinationArray" /> ont des classements différents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-693">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="4f8a3-694">
            <paramref name="sourceArray" /> et <paramref name="destinationArray" /> sont de types incompatibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-694">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-695">Au moins un élément de <paramref name="sourceArray" /> ne peut pas être converti en type <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-695">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-696">
            <paramref name="sourceIndex" /> est en dehors de la plage d’index valides pour <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-696">
              <paramref name="sourceIndex" /> is outside the range of valid indexes for the <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="4f8a3-697">-ou- <paramref name="destinationIndex" /> est en dehors de la plage d’index valides pour <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-697">-or-  <paramref name="destinationIndex" /> is outside the range of valid indexes for the <paramref name="destinationArray" />.</span>
          </span>
          <span data-ttu-id="4f8a3-698">-ou- <paramref name="length" /> est inférieur à 0 ou supérieur à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-698">-or-  <paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-699">
            <paramref name="length" /> est supérieur au nombre d’éléments compris entre <paramref name="sourceIndex" /> et la fin de <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-699">
              <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="4f8a3-700">-ou- <paramref name="length" /> est supérieur au nombre d’éléments entre <paramref name="destinationIndex" /> et la fin de <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-700">-or-  <paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-701">Copie tous les éléments du tableau unidimensionnel actuel dans le tableau unidimensionnel spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-701">Copies all the elements of the current one-dimensional array to the specified one-dimensional array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-702">Tableau unidimensionnel constituant la destination des éléments copiés à partir du tableau actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-702">The one-dimensional array that is the destination of the elements copied from the current array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-703">Entier 32 bits qui représente l’index dans <c>array</c> auquel la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-703">A 32-bit integer that represents the index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-704">Copie tous les éléments du tableau unidimensionnel actuel dans le tableau unidimensionnel spécifié en commençant à l'index du tableau de destination spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-704">Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</span>
          </span>
          <span data-ttu-id="4f8a3-705">L'index est spécifié en tant qu'entier 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-705">The index is specified as a 32-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-706">Cette méthode copie tous les éléments de l’instance actuelle de tableau pour le `array` tableau de destination, en commençant à l’index `index`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-706">This method copies all the elements of the current array instance to the `array` destination array, starting at index `index`.</span></span> <span data-ttu-id="4f8a3-707">Le `array` tableau de destination doit déjà avoir été dimensionné et doit avoir un nombre suffisant d’éléments à prendre en compte les éléments copiés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-707">The `array` destination array must already have been dimensioned and must have a sufficient number of elements to accommodate the copied elements.</span></span> <span data-ttu-id="4f8a3-708">Sinon, la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-708">Otherwise, the method throws an exception.</span></span>  
  
 <span data-ttu-id="4f8a3-709">Cette méthode prend en charge la <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-709">This method supports the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="4f8a3-710">Si implémentant <xref:System.Collections.ICollection?displayProperty=nameWithType> est pas explicitement requise, utilisez <xref:System.Array.Copy%2A> pour éviter toute indirection supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-710">If implementing <xref:System.Collections.ICollection?displayProperty=nameWithType> is not explicitly required, use <xref:System.Array.Copy%2A> to avoid an extra indirection.</span></span>  
  
 <span data-ttu-id="4f8a3-711">Si cette méthode lève une exception lors de la copie, l’état de `array` n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-711">If this method throws an exception while copying, the state of `array` is undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-712">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Array.Length%2A>. Il effectue une copie superficielle uniquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-712">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.It performs a shallow copy only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-713">L’exemple de code suivant montre comment copier un <xref:System.Array> vers un autre <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-713">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4f8a3-714">L’exemple de code suivant montre comment copier un <xref:System.Array> vers un autre <xref:System.Array> avec une limite inférieure différente de zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-714">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array> with a nonzero lower bound.</span></span> <span data-ttu-id="4f8a3-715">Notez que la source entière <xref:System.Array> est copié, y compris les éléments vides qui remplacent les éléments existants dans la cible <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-715">Note that the entire source <xref:System.Array> is copied, including empty elements that overwrite existing elements in the target <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Array.CopyTo Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#2)]
 [!code-vb[Classic Array.CopyTo Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-716">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-716">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-717">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-717">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-718">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-718">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="4f8a3-719">-ou- Le nombre d’éléments dans le tableau source est supérieur au nombre d’éléments disponibles entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-719">-or-  The number of elements in the source array is greater than the available number of elements from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="4f8a3-720">Le type du <see cref="T:System.Array" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-720">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-721">Le tableau source est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-721">The source array is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-722">Au moins un élément du <see cref="T:System.Array" /> source ne peut pas être casté en type du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-722">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array array, int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CopyTo(System.Array,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ array, long index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-723">Tableau unidimensionnel constituant la destination des éléments copiés à partir du tableau actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-723">The one-dimensional array that is the destination of the elements copied from the current array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-724">Entier 64 bits qui représente l’index dans <c>array</c> auquel la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-724">A 64-bit integer that represents the index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-725">Copie tous les éléments du tableau unidimensionnel actuel dans le tableau unidimensionnel spécifié en commençant à l'index du tableau de destination spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-725">Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</span>
          </span>
          <span data-ttu-id="4f8a3-726">L'index est spécifié en tant qu'entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-726">The index is specified as a 64-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-727">Cette méthode copie tous les éléments de l’instance actuelle de tableau pour le `array` tableau de destination, en commençant à l’index `index`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-727">This method copies all the elements of the current array instance to the `array` destination array, starting at index `index`.</span></span> <span data-ttu-id="4f8a3-728">Le `array` tableau de destination doit déjà avoir été dimensionné et doit avoir un nombre suffisant d’éléments à prendre en compte les éléments copiés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-728">The `array` destination array must already have been dimensioned and must have a sufficient number of elements to accommodate the copied elements.</span></span> <span data-ttu-id="4f8a3-729">Sinon, la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-729">Otherwise, the method throws an exception.</span></span>  
  
 <span data-ttu-id="4f8a3-730">Cette méthode prend en charge la <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-730">This method supports the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="4f8a3-731">Si implémentant <xref:System.Collections.ICollection?displayProperty=nameWithType> est pas explicitement requise, utilisez <xref:System.Array.Copy%2A> pour éviter toute indirection supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-731">If implementing <xref:System.Collections.ICollection?displayProperty=nameWithType> is not explicitly required, use <xref:System.Array.Copy%2A> to avoid an extra indirection.</span></span>  
  
 <span data-ttu-id="4f8a3-732">Si cette méthode lève une exception lors de la copie, l’état de `array` n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-732">If this method throws an exception while copying, the state of `array` is undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-733">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Array.Length%2A>. Il effectue une copie superficielle uniquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-733">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.It performs a shallow copy only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-734">L’exemple de code suivant montre comment copier un <xref:System.Array> vers un autre <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-734">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4f8a3-735">L’exemple de code suivant montre comment copier un <xref:System.Array> vers un autre <xref:System.Array> avec une limite inférieure différente de zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-735">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array> with a nonzero lower bound.</span></span> <span data-ttu-id="4f8a3-736">Notez que la source entière <xref:System.Array> est copié, y compris les éléments vides qui remplacent les éléments existants dans la cible <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-736">Note that the entire source <xref:System.Array> is copied, including empty elements that overwrite existing elements in the target <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Array.CopyTo Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#2)]
 [!code-vb[Classic Array.CopyTo Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-737">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-737">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-738">
            <paramref name="index" /> est en dehors de la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-738">
              <paramref name="index" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-739">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-739">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="4f8a3-740">-ou- Le nombre d’éléments dans le tableau source est supérieur au nombre d’éléments disponibles entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-740">-or-  The number of elements in the source array is greater than the available number of elements from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="4f8a3-741">Le type du <see cref="T:System.Array" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-741">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-742">Le <see cref="T:System.Array" /> source est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-742">The source <see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-743">Au moins un élément du <see cref="T:System.Array" /> source ne peut pas être casté en type du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-743">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Array.Copy(System.Array,System.Array,System.Int64)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-744">Initialise une nouvelle instance de la classe <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-744">Initializes a new instance of the <see cref="T:System.Array" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="4f8a3-745">
            <see cref="T:System.Type" /> du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-745">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-746">Taille du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-746">The size of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-747">Crée un <see cref="T:System.Array" /> unidimensionnel du <see cref="T:System.Type" /> et de la longueur spécifiés, à l’aide d’un index de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-747">Creates a one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and length, with zero-based indexing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-748">Nouveau <see cref="T:System.Array" /> unidimensionnel du <see cref="T:System.Type" /> et de la longueur spécifiés, avec un index de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-748">A new one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-749">Contrairement à la plupart des classes, <xref:System.Array> fournit le <xref:System.Array.CreateInstance%2A> méthode, au lieu de constructeurs publics, pour permettre l’accès par liaison tardive.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-749">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="4f8a3-750">Les éléments de type référence sont initialisés à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-750">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="4f8a3-751">Éléments de type valeur sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-751">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="4f8a3-752">Cette méthode est un O (`n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-752">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-753">L’exemple de code suivant montre comment créer et initialiser une dimension <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-753">The following code example shows how to create and initialize a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-754">
            <paramref name="elementType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-754">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-755">
            <paramref name="elementType" /> n’est pas un <see cref="T:System.Type" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-755">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4f8a3-756">
            <paramref name="elementType" /> n'est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-756">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-757">Par exemple, <see cref="T:System.Void" /> n’est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-757">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-758">-ou- <paramref name="elementType" /> est un type générique ouvert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-758">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-759">
            <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-759">
              <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, params int[] lengths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32[] lengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, ParamArray lengths As Integer()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, ... cli::array &lt;int&gt; ^ lengths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="4f8a3-760">
            <see cref="T:System.Type" /> du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-760">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="lengths">
          <span data-ttu-id="4f8a3-761">Tableau d’entiers 32 bits qui représentent la taille de chaque dimension du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-761">An array of 32-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-762">Crée un <see cref="T:System.Array" /> multidimensionnel du <see cref="T:System.Type" /> et des longueurs de dimensions spécifiés, à l’aide d’un index de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-762">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          </span>
          <span data-ttu-id="4f8a3-763">Les longueurs de dimensions sont spécifiées en tant qu'entiers 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-763">The dimension lengths are specified in an array of 32-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-764">Nouveau <see cref="T:System.Array" /> multidimensionnel du <see cref="T:System.Type" /> spécifié avec la longueur déterminée pour chaque dimension, à l’aide d’un index de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-764">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-765">Contrairement à la plupart des classes, <xref:System.Array> fournit le <xref:System.Array.CreateInstance%2A> méthode, au lieu de constructeurs publics, pour permettre l’accès par liaison tardive.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-765">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="4f8a3-766">Le nombre d’éléments dans le `lengths` tableau doit être égal au nombre de dimensions dans le nouveau <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-766">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-767">Chaque élément de la `lengths` tableau doive spécifier la longueur de la dimension correspondante dans le nouveau <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-767">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-768">Les éléments de type référence sont initialisés à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-768">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="4f8a3-769">Éléments de type valeur sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-769">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="4f8a3-770">Cette méthode est un O (`n`) opération, où `n` est le produit de toutes les valeurs de `lengths`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-770">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-771">L’exemple de code suivant montre comment créer et initialiser un multidimensionnelles <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-771">The following code example shows how to create and initialize a multidimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-772">
            <paramref name="elementType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-772">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-773">-ou- <paramref name="lengths" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-773">-or-  <paramref name="lengths" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-774">
            <paramref name="elementType" /> n’est pas un <see cref="T:System.Type" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-774">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="4f8a3-775">-ou- Le tableau <paramref name="lengths" /> contient moins d’un élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-775">-or-  The <paramref name="lengths" /> array contains less than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4f8a3-776">
            <paramref name="elementType" /> n'est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-776">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-777">Par exemple, <see cref="T:System.Void" /> n’est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-777">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-778">-ou- <paramref name="elementType" /> est un type générique ouvert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-778">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-779">Toute valeur de <paramref name="lengths" /> est inférieure à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-779">Any value in <paramref name="lengths" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, params long[] lengths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int64[] lengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, ParamArray lengths As Long()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, ... cli::array &lt;long&gt; ^ lengths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="4f8a3-780">
            <see cref="T:System.Type" /> du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-780">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="lengths">
          <span data-ttu-id="4f8a3-781">Tableau d’entiers 64 bits qui représentent la taille de chaque dimension du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-781">An array of 64-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
          <span data-ttu-id="4f8a3-782">Chaque entier du tableau doit être compris entre zéro et <see cref="F:System.Int32.MaxValue" /> inclus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-782">Each integer in the array must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-783">Crée un <see cref="T:System.Array" /> multidimensionnel du <see cref="T:System.Type" /> et des longueurs de dimensions spécifiés, à l’aide d’un index de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-783">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          </span>
          <span data-ttu-id="4f8a3-784">Les longueurs de dimensions sont spécifiées en tant qu'entiers 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-784">The dimension lengths are specified in an array of 64-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-785">Nouveau <see cref="T:System.Array" /> multidimensionnel du <see cref="T:System.Type" /> spécifié avec la longueur déterminée pour chaque dimension, à l’aide d’un index de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-785">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-786">Contrairement à la plupart des classes, <xref:System.Array> fournit le <xref:System.Array.CreateInstance%2A> méthode, au lieu de constructeurs publics, pour permettre l’accès par liaison tardive.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-786">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="4f8a3-787">Le nombre d’éléments dans le `lengths` tableau doit être égal au nombre de dimensions dans le nouveau <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-787">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-788">Chaque élément de la `lengths` tableau doive spécifier la longueur de la dimension correspondante dans le nouveau <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-788">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-789">Les éléments de type référence sont initialisés à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-789">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="4f8a3-790">Éléments de type valeur sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-790">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="4f8a3-791">Cette méthode est un O (`n`) opération, où `n` est le produit de toutes les valeurs de `lengths`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-791">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-792">L’exemple de code suivant montre comment créer et initialiser un multidimensionnelles <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-792">The following code example shows how to create and initialize a multidimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-793">
            <paramref name="elementType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-793">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-794">-ou- <paramref name="lengths" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-794">-or-  <paramref name="lengths" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-795">
            <paramref name="elementType" /> n’est pas un <see cref="T:System.Type" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-795">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="4f8a3-796">-ou- Le tableau <paramref name="lengths" /> contient moins d’un élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-796">-or-  The <paramref name="lengths" /> array contains less than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4f8a3-797">
            <paramref name="elementType" /> n'est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-797">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-798">Par exemple, <see cref="T:System.Void" /> n’est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-798">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-799">-ou- <paramref name="elementType" /> est un type générique ouvert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-799">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-800">Toute valeur dans <paramref name="lengths" /> est inférieure à 0 ou supérieure à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-800">Any value in <paramref name="lengths" /> is less than zero or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length1, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length1, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length1 As Integer, length2 As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length1, int length2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="4f8a3-801">
            <see cref="T:System.Type" /> du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-801">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length1">
          <span data-ttu-id="4f8a3-802">Taille de la première dimension du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-802">The size of the first dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length2">
          <span data-ttu-id="4f8a3-803">Taille de la deuxième dimension du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-803">The size of the second dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-804">Crée un <see cref="T:System.Array" /> à deux dimensions du <see cref="T:System.Type" /> et des longueurs de dimensions spécifiés, à l’aide d’un index de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-804">Creates a two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-805">Nouveau <see cref="T:System.Array" /> à deux dimensions du <see cref="T:System.Type" /> spécifié avec la longueur déterminée pour chaque dimension, à l’aide d’un index de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-805">A new two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-806">Contrairement à la plupart des classes, <xref:System.Array> fournit le <xref:System.Array.CreateInstance%2A> méthode, au lieu de constructeurs publics, pour permettre l’accès par liaison tardive.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-806">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="4f8a3-807">Les éléments de type référence sont initialisés à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-807">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="4f8a3-808">Éléments de type valeur sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-808">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="4f8a3-809">Cette méthode est un O (`n`) opération, où `n` est le produit de `length1` et `length2`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-809">This method is an O(`n`) operation, where `n` is the product of `length1` and `length2`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-810">L’exemple de code suivant montre comment créer et initialiser une à deux dimensions <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-810">The following code example shows how to create and initialize a two-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-811">
            <paramref name="elementType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-811">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-812">
            <paramref name="elementType" /> n’est pas un <see cref="T:System.Type" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-812">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4f8a3-813">
            <paramref name="elementType" /> n'est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-813">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-814">Par exemple, <see cref="T:System.Void" /> n’est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-814">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-815">-ou- <paramref name="elementType" /> est un type générique ouvert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-815">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-816">
            <paramref name="length1" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-816">
              <paramref name="length1" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-817">-ou- <paramref name="length2" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-817">-or-  <paramref name="length2" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int[] lengths, int[] lowerBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32[] lengths, int32[] lowerBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, lengths As Integer(), lowerBounds As Integer()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, cli::array &lt;int&gt; ^ lengths, cli::array &lt;int&gt; ^ lowerBounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int32[]" />
        <Parameter Name="lowerBounds" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="4f8a3-818">
            <see cref="T:System.Type" /> du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-818">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="lengths">
          <span data-ttu-id="4f8a3-819">Tableau unidimensionnel qui contient la taille de chaque dimension du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-819">A one-dimensional array that contains the size of each dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="lowerBounds">
          <span data-ttu-id="4f8a3-820">Tableau unidimensionnel qui contient la limite inférieure (index de départ) de chaque dimension du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-820">A one-dimensional array that contains the lower bound (starting index) of each dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-821">Crée un <see cref="T:System.Array" /> multidimensionnel du <see cref="T:System.Type" /> et des longueurs de dimensions spécifiés, avec les limites inférieures déterminées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-821">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with the specified lower bounds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-822">Nouveau <see cref="T:System.Array" /> multidimensionnel du <see cref="T:System.Type" /> spécifié avec la longueur et la limite inférieure déterminées pour chaque dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-822">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length and lower bound for each dimension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-823">Contrairement à la plupart des classes, <xref:System.Array> fournit le <xref:System.Array.CreateInstance%2A> méthode, au lieu de constructeurs publics, pour permettre l’accès par liaison tardive.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-823">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="4f8a3-824">Le `lengths` et `lowerBounds` tableaux doivent avoir le même nombre d’éléments.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-824">The `lengths` and `lowerBounds` arrays must have the same number of elements.</span></span> <span data-ttu-id="4f8a3-825">Le nombre d’éléments dans le `lengths` tableau doit être égal au nombre de dimensions dans le nouveau <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-825">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-826">Chaque élément de la `lengths` tableau doive spécifier la longueur de la dimension correspondante dans le nouveau <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-826">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-827">Chaque élément de la `lowerBounds` tableau doive spécifier la limite inférieure de la dimension correspondante dans le nouveau <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-827">Each element of the `lowerBounds` array must specify the lower bound of the corresponding dimension in the new <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-828">En règle générale, la bibliothèque de classes .NET Framework et de nombreux langages de programmation ne gèrent pas les limites inférieures différentes de zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-828">Generally, the .NET Framework class library and many programming languages do not handle nonzero lower bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-829">Les éléments de type référence sont initialisés à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-829">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="4f8a3-830">Éléments de type valeur sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-830">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="4f8a3-831">Cette méthode est un O (`n`) opération, où `n` est le produit de toutes les valeurs de `lengths`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-831">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-832">L’exemple de code suivant montre comment créer et initialiser un multidimensionnelles <xref:System.Array> avec les limites inférieures déterminées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-832">The following code example shows how to create and initialize a multidimensional <xref:System.Array> with specified lower bounds.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance4 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance4 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-833">
            <paramref name="elementType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-833">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-834">-ou- <paramref name="lengths" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-834">-or-  <paramref name="lengths" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-835">-ou- <paramref name="lowerBounds" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-835">-or-  <paramref name="lowerBounds" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-836">
            <paramref name="elementType" /> n’est pas un <see cref="T:System.Type" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-836">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="4f8a3-837">-ou- Le tableau <paramref name="lengths" /> contient moins d’un élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-837">-or-  The <paramref name="lengths" /> array contains less than one element.</span>
          </span>
          <span data-ttu-id="4f8a3-838">-ou- Les tableaux <paramref name="lengths" /> et <paramref name="lowerBounds" /> ne contiennent pas le même nombre d’éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-838">-or-  The <paramref name="lengths" /> and <paramref name="lowerBounds" /> arrays do not contain the same number of elements.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4f8a3-839">
            <paramref name="elementType" /> n'est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-839">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-840">Par exemple, <see cref="T:System.Void" /> n’est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-840">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-841">-ou- <paramref name="elementType" /> est un type générique ouvert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-841">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-842">Toute valeur de <paramref name="lengths" /> est inférieure à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-842">Any value in <paramref name="lengths" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-843">-ou- Toute valeur de <paramref name="lowerBounds" /> est très grande, de telle sorte que la somme de la limite inférieure d’une dimension et de la longueur est supérieure à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-843">-or-  Any value in <paramref name="lowerBounds" /> is very large, such that the sum of a dimension's lower bound and length is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length1, int length2, int length3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length1, int32 length2, int32 length3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length1 As Integer, length2 As Integer, length3 As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length1, int length2, int length3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="length3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="4f8a3-844">
            <see cref="T:System.Type" /> du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-844">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length1">
          <span data-ttu-id="4f8a3-845">Taille de la première dimension du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-845">The size of the first dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length2">
          <span data-ttu-id="4f8a3-846">Taille de la deuxième dimension du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-846">The size of the second dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length3">
          <span data-ttu-id="4f8a3-847">Taille de la troisième dimension du <see cref="T:System.Array" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-847">The size of the third dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-848">Crée un <see cref="T:System.Array" /> à trois dimensions du <see cref="T:System.Type" /> et des longueurs de dimensions spécifiés, à l’aide d’un index de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-848">Creates a three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-849">Nouveau <see cref="T:System.Array" /> à trois dimensions du <see cref="T:System.Type" /> spécifié avec la longueur déterminée pour chaque dimension, à l’aide d’un index de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-849">A new three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-850">Contrairement à la plupart des classes, <xref:System.Array> fournit le <xref:System.Array.CreateInstance%2A> méthode, au lieu de constructeurs publics, pour permettre l’accès par liaison tardive.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-850">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="4f8a3-851">Les éléments de type référence sont initialisés à `null`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-851">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="4f8a3-852">Éléments de type valeur sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-852">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="4f8a3-853">Cette méthode est un O (`n`) opération, où `n` est le produit de `length1`, `length2`, et `length3`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-853">This method is an O(`n`) operation, where `n` is the product of `length1`, `length2`, and `length3`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-854">L’exemple de code suivant montre comment créer et initialiser un à trois dimensions <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-854">The following code example shows how to create and initialize a three-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-855">
            <paramref name="elementType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-855">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-856">
            <paramref name="elementType" /> n’est pas un <see cref="T:System.Type" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-856">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4f8a3-857">
            <paramref name="elementType" /> n'est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-857">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-858">Par exemple, <see cref="T:System.Void" /> n’est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-858">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-859">-ou- <paramref name="elementType" /> est un type générique ouvert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-859">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-860">
            <paramref name="length1" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-860">
              <paramref name="length1" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-861">-ou- <paramref name="length2" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-861">-or-  <paramref name="length2" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-862">-ou- <paramref name="length3" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-862">-or-  <paramref name="length3" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Empty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] Empty&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] Empty&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Empty``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Empty(Of T) () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ Empty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-863">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-863">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="4f8a3-864">Retourne un tableau vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-864">Returns an empty array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-865">Retourne un <see cref="T:System.Array" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-865">Returns an empty <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Exists&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists(Of T) (array As T(), match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool Exists(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-866">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-866">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-867">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-867">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="4f8a3-868">
            <see cref="T:System.Predicate`1" /> qui définit les conditions des éléments à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-868">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-869">Détermine si le tableau spécifié contient des éléments qui correspondent aux conditions définies par le prédicat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-869">Determines whether the specified array contains elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-870">
            <see langword="true" /> si <paramref name="array" /> contient un ou plusieurs éléments qui correspondent aux conditions définies par le prédicat spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-870">
              <see langword="true" /> if <paramref name="array" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-871">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-871">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="4f8a3-872">Les éléments de `array` sont passés individuellement à la <xref:System.Predicate%601>, et le traitement s’arrête lorsqu’une correspondance est trouvée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-872">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and processing is stopped when a match is found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-873">En c# et Visual Basic, il n’est pas nécessaire de créer le <xref:System.Predicate%601> déléguer explicitement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-873">In C# and Visual Basic, it is not necessary to create the <xref:System.Predicate%601> delegate explicitly.</span></span> <span data-ttu-id="4f8a3-874">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-874">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="4f8a3-875">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-875">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-876">L’exemple suivant spécifie les conditions de correspondance pour le <xref:System.Array.Exists%2A> expressions usinglambda de méthode pour vérifier si une planète commence par une lettre donnée, ou si la planète se trouve sur le tableau donné.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-876">The following example specifies the match conditions for the <xref:System.Array.Exists%2A> method usinglambda expressions to check whether a planet starts with a given letter or whether the planet is found on the given array.</span></span>  
  
 [!code-csharp[System.Array.Exists#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists3.cs#3)]
 [!code-vb[System.Array.Exists#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists3.vb#3)]  
  
 <span data-ttu-id="4f8a3-877">L’exemple suivant utilise la <xref:System.Array.Exists%2A> méthode pour indiquer si tous les noms dans un tableau de chaînes commencent par un caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-877">The following example uses the <xref:System.Array.Exists%2A> method to indicate whether any names in a string array begin with a specified character.</span></span> <span data-ttu-id="4f8a3-878">L’exemple instancie un `StringSearcher` en passant la chaîne à rechercher pour son constructeur de classe.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-878">The example instantiates a `StringSearcher` object by passing the string to search for to its class constructor.</span></span> <span data-ttu-id="4f8a3-879">Le `StringSearcher.StartsWith` méthode a la même signature que le <xref:System.Predicate%601> déléguer.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-879">The `StringSearcher.StartsWith` method has same signature as the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="4f8a3-880">Lorsque le <xref:System.Array.Exists%2A> est appelée, chaque membre du tableau est passé au délégué, jusqu'à ce qu’elle retourne `true` ou itère au sein de tous les éléments du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-880">When the <xref:System.Array.Exists%2A> method is called, each member of the array is passed to the delegate until it returns `true` or iterates all the elements in the array.</span></span>  
  
 [!code-csharp[System.Array.Exists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists1.cs#1)]
 [!code-vb[System.Array.Exists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists1.vb#1)]  
  
 <span data-ttu-id="4f8a3-881">Vous pouvez également utiliser une expression lambda non définir explicitement une méthode dont la signature correspond à celle du délégué.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-881">You can also use a lambda expression rather than explicitly define a method whose signature corresponds to that of the delegate.</span></span> <span data-ttu-id="4f8a3-882">L’exemple suivant remplace le `StringSearcher` classe et ses `StartsWith` méthode avec une expression lambda.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-882">The following example replaces the `StringSearcher` class and its `StartsWith` method with a lambda expression.</span></span>  
  
 [!code-csharp[System.Array.Exists#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists2.cs#2)]
 [!code-vb[System.Array.Exists#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-883">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-883">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-884">-ou- <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-884">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="Fill&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Fill&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Fill``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill(Of T) (array As T(), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Fill(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Fill&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Fill``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill(Of T) (array As T(), value As T, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Fill(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="value">To be added.</param>
        <param name="startIndex">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Find&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Find&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Find(Of T) (array As T(), match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T Find(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-885">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-885">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-886">Le tableau de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-886">The one-dimensional, zero-based array to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="4f8a3-887">Le prédicat qui définit les conditions de l’élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-887">The predicate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-888">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne la première occurrence dans le <see cref="T:System.Array" /> entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-888">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-889">Premier élément qui correspond aux conditions définies par le prédicat spécifié, s'il est trouvé ; sinon, valeur par défaut du type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-889">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-890">Le <xref:System.Predicate%601> est un délégué à une méthode ou une expression lambda qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans la délégué ou l’expression lambda.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-890">The <xref:System.Predicate%601> is a delegate to a method or a lambda expression that returns `true` if the object passed to it matches the conditions defined in the delegate or lambda expression.</span></span>  <span data-ttu-id="4f8a3-891">Les éléments de `array` sont passés individuellement à la <xref:System.Predicate%601>, en commençant par le premier élément et se terminant par le dernier élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-891">The elements of `array` are individually passed to the <xref:System.Predicate%601>, starting with the first element and ending with the last element.</span></span>  <span data-ttu-id="4f8a3-892">Le traitement est arrêté lorsqu’une correspondance est trouvée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-892">Processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="4f8a3-893">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-893">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-894">L’exemple suivant utilise un <xref:System.Predicate%601> délégué avec le <xref:System.Array.Find%2A> une méthode générique pour rechercher un tableau de <xref:System.Drawing.Point> structures.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-894">The following example uses a <xref:System.Predicate%601> delegate with the <xref:System.Array.Find%2A> generic method to search an array of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="4f8a3-895">La méthode que le délégué représente, `ProductGT10`, retourne `true` si le produit des champs X et Y est supérieur à 100 000.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-895">The method the delegate represents, `ProductGT10`, returns `true` if the product of the X and Y fields is greater than 100,000.</span></span> <span data-ttu-id="4f8a3-896">Le <xref:System.Array.Find%2A> méthode appelle le délégué pour chaque élément du tableau, en retournant le premier point qui remplit la condition de test.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-896">The <xref:System.Array.Find%2A> method calls the delegate for each element of the array, returning the first point that meets the test condition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-897">Visual Basic et c# les utilisateurs n’ont pas créer le délégué explicitement ou de spécifier l’argument de type de la méthode générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-897">Visual Basic and C# users do not have to create the delegate explicitly or specify the type argument of the generic method.</span></span> <span data-ttu-id="4f8a3-898">Les compilateurs déterminent les types nécessaires à partir de vous fournissez les arguments de la méthode.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-898">The compilers determine the necessary types from the method arguments you supply.</span></span>  
  
 [!code-csharp[System.Array.Find#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.find/cs/source.cs#1)]
 [!code-vb[System.Array.Find#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.find/vb/source.vb#1)]  
  
 <span data-ttu-id="4f8a3-899">Au lieu de définir explicitement une méthode avec la signature nécessaire, l’instanciation d’un <xref:System.Predicate%601> délégué et en passant le délégué à la <xref:System.Array.Find%2A> (méthode), il est courant d’utiliser une expression lambda.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-899">Rather than explicitly defining a method with the necessary signature, instantiating a <xref:System.Predicate%601> delegate, and passing the delegate to the <xref:System.Array.Find%2A> method, it is customary to use a lambda expression.</span></span> <span data-ttu-id="4f8a3-900">L’exemple suivant est identique au précédent, sauf qu’elle utilise une expression lambda en tant que le `match` argument.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-900">The following example is identical to the previous one, except that it uses a lambda expression as the `match` argument.</span></span>  
  
 [!code-csharp[System.Array.Find#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.find/cs/lambda.cs#2)]
 [!code-vb[System.Array.Find#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.find/vb/lambda.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-901">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-901">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-902">-ou- <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-902">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] FindAll&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] FindAll&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAll(Of T) (array As T(), match As Predicate(Of T)) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ FindAll(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-903">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-903">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-904">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-904">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="4f8a3-905">
            <see cref="T:System.Predicate`1" /> qui définit les conditions des éléments à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-905">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-906">Récupère tous les éléments qui correspondent aux conditions définies par le prédicat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-906">Retrieves all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-907">
            <see cref="T:System.Array" /> contenant tous les éléments qui correspondent aux conditions définies par le prédicat spécifié, s'il existe ; sinon, un <see cref="T:System.Array" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-907">An <see cref="T:System.Array" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-908">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-908">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="4f8a3-909">Les éléments de `array` sont passés individuellement à la <xref:System.Predicate%601>, et les éléments qui correspondent aux conditions sont enregistrés dans le tableau retourné.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-909">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and the elements that match the conditions are saved in the returned array.</span></span>  
  
 <span data-ttu-id="4f8a3-910">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-910">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-911">L’exemple suivant crée un tableau de nombres aléatoires 50 avec des valeurs qui peuvent s’échelonner de 0 à 1 000.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-911">The following example creates an array of 50 random numbers with values that can range from 0 to 1,000.</span></span> <span data-ttu-id="4f8a3-912">Il appelle ensuite la <xref:System.Array.FindAll%2A> méthode avec une expression lambda qui retourne les valeurs comprises entre 300 à 600.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-912">It then calls the <xref:System.Array.FindAll%2A> method with a lambda expression that returns the values that range from 300 to 600.</span></span> <span data-ttu-id="4f8a3-913">Notez que l’expression lambda est passée à un paramètre nommé `x`;  représente le membre du groupe individuel qui est transmis à la <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-913">Note that the lambda expression is passed a parameter named `x`;  this represents the individual array member that is passed to the <xref:System.Predicate%601>.</span></span> <span data-ttu-id="4f8a3-914">Notez également que l’ordinateur local `lBound` et `uBound` les variables sont accessibles au sein de l’expression lambda.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-914">Also note that the local `lBound` and `uBound` variables are accessible within the lambda expression.</span></span>  
  
 [!code-csharp[System.Array.FindAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.findall/cs/findall.cs#1)]
 [!code-vb[System.Array.FindAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.findall/vb/findall.vb#1)]  
  
 <span data-ttu-id="4f8a3-915">L’exemple de code suivant montre la <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, et <xref:System.Array.FindAll%2A> les méthodes génériques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-915">The following code example demonstrates the <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, and <xref:System.Array.FindAll%2A> generic methods.</span></span> <span data-ttu-id="4f8a3-916">Un tableau de chaînes est créé, contenant 8 noms dinosaure deux (aux emplacements 1 et 5) se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-916">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="4f8a3-917">L’exemple de code définit également une méthode de prédicat de recherche nommée `EndsWithSaurus`, qui accepte un paramètre de chaîne et retourne une valeur Boolean qui indique si la chaîne d’entrée se termine par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-917">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="4f8a3-918">Le <xref:System.Array.Find%2A> méthode générique parcourt le tableau à partir du début, chaque élément en passant à la `EndsWithSaurus` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-918">The <xref:System.Array.Find%2A> generic method traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="4f8a3-919">La recherche s’arrête lorsque la `EndsWithSaurus` retourne de la méthode `true` pour l’élément « Amargasaurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-919">The search stops when the `EndsWithSaurus` method returns `true` for the element "Amargasaurus".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-920">En c# et Visual Basic, il n’est pas nécessaire de créer le `Predicate<string>` déléguer (`Predicate(Of String)` en Visual Basic) explicitement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-920">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="4f8a3-921">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-921">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="4f8a3-922">Le <xref:System.Array.FindLast%2A> méthode générique est utilisée pour rechercher le tableau à partir de la fin.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-922">The <xref:System.Array.FindLast%2A> generic method is used to search the array backward from the end.</span></span> <span data-ttu-id="4f8a3-923">Il recherche l’élément « Dilophosaurus » à la position 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-923">It finds the element "Dilophosaurus" at position 5.</span></span> <span data-ttu-id="4f8a3-924">Le <xref:System.Array.FindAll%2A> méthode générique est utilisée pour retourner un tableau contenant tous les éléments qui se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-924">The <xref:System.Array.FindAll%2A> generic method is used to return an array containing all the elements that end in "saurus".</span></span> <span data-ttu-id="4f8a3-925">Les éléments sont affichés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-925">The elements are displayed.</span></span>  
  
 <span data-ttu-id="4f8a3-926">L’exemple de code montre également le <xref:System.Array.Exists%2A> et <xref:System.Array.TrueForAll%2A> les méthodes génériques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-926">The code example also demonstrates the <xref:System.Array.Exists%2A> and <xref:System.Array.TrueForAll%2A> generic methods.</span></span>  
  
 [!code-cpp[Array_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[Array_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindEtAl/cs/source.cs#1)]
 [!code-vb[Array_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-927">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-927">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-928">-ou- <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-928">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindIndex&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-929">Recherche un élément qui correspond aux conditions définies par un prédicat spécifié, et retourne l'index de base zéro de la première occurrence dans un <see cref="T:System.Array" /> ou dans l'une partie de ses parties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-929">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within an <see cref="T:System.Array" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-930">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-930">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-931">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-931">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="4f8a3-932">
            <see cref="T:System.Predicate`1" /> qui définit les conditions de l’élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-932">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-933">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la première occurrence trouvée dans le <see cref="T:System.Array" /> entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-933">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-934">Index de base zéro de la première occurrence d’un élément qui répond aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-934">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-935">Le <xref:System.Array> recherche est effectuée vers l’avant à partir du premier élément au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-935">The <xref:System.Array> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="4f8a3-936">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-936">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="4f8a3-937">Les éléments de `array` sont passés individuellement à le <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-937">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="4f8a3-938">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-938">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-939">L’exemple de code suivant illustre les trois surcharges de la <xref:System.Array.FindIndex%2A> méthode générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-939">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="4f8a3-940">Un tableau de chaînes est créé, contenant 8 noms dinosaure deux (aux emplacements 1 et 5) se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-940">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="4f8a3-941">L’exemple de code définit également une méthode de prédicat de recherche nommée `EndsWithSaurus`, qui accepte un paramètre de chaîne et retourne une valeur Boolean qui indique si la chaîne d’entrée se termine par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-941">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="4f8a3-942">Le <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode parcourt le tableau à partir du début, chaque élément en passant à la `EndsWithSaurus` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-942">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="4f8a3-943">La recherche s’arrête lorsque la `EndsWithSaurus` retourne de la méthode `true` pour l’élément à la position 1.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-943">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-944">En c# et Visual Basic, il n’est pas nécessaire de créer le `Predicate<string>` déléguer (`Predicate(Of String)` en Visual Basic) explicitement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-944">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="4f8a3-945">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-945">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="4f8a3-946">Le <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode est utilisée pour rechercher le tableau en commençant à la position 2 à la fin du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-946">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="4f8a3-947">Il recherche l’élément à la position 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-947">It finds the element at position 5.</span></span> <span data-ttu-id="4f8a3-948">Enfin, le <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode est utilisée pour rechercher la plage de trois éléments en commençant à la position 2.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-948">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="4f8a3-949">Elle retourne -1, car aucun nom de dinosaure dans cette plage qui se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-949">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-950">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-950">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-951">-ou- <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-951">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, int32 startIndex, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-952">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-952">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-953">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-953">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4f8a3-954">Index de début de base zéro de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-954">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="4f8a3-955">
            <see cref="T:System.Predicate`1" /> qui définit les conditions de l’élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-955">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-956">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la première occurrence trouvée dans la plage d'éléments de <see cref="T:System.Array" /> qui s'étend de l'index spécifié au dernier élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-956">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-957">Index de base zéro de la première occurrence d’un élément qui répond aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-957">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-958">Le <xref:System.Array> recherche est effectuée vers l’avant `startIndex` et jusqu’au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-958">The <xref:System.Array> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="4f8a3-959">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-959">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="4f8a3-960">Les éléments de `array` sont passés individuellement à le <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-960">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="4f8a3-961">Cette méthode est un O (`n`) opération, où `n` est le nombre d’éléments à partir de `startIndex` à la fin de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-961">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-962">L’exemple de code suivant illustre les trois surcharges de la <xref:System.Array.FindIndex%2A> méthode générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-962">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="4f8a3-963">Un tableau de chaînes est créé, contenant 8 noms dinosaure deux (aux emplacements 1 et 5) se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-963">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="4f8a3-964">L’exemple de code définit également une méthode de prédicat de recherche nommée `EndsWithSaurus`, qui accepte un paramètre de chaîne et retourne une valeur Boolean qui indique si la chaîne d’entrée se termine par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-964">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="4f8a3-965">Le <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode parcourt le tableau à partir du début, chaque élément en passant à la `EndsWithSaurus` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-965">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="4f8a3-966">La recherche s’arrête lorsque la `EndsWithSaurus` retourne de la méthode `true` pour l’élément à la position 1.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-966">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-967">En c# et Visual Basic, il n’est pas nécessaire de créer le `Predicate<string>` déléguer (`Predicate(Of String)` en Visual Basic) explicitement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-967">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="4f8a3-968">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-968">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="4f8a3-969">Le <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode est utilisée pour rechercher le tableau en commençant à la position 2 à la fin du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-969">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="4f8a3-970">Il recherche l’élément à la position 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-970">It finds the element at position 5.</span></span> <span data-ttu-id="4f8a3-971">Enfin, le <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode est utilisée pour rechercher la plage de trois éléments en commençant à la position 2.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-971">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="4f8a3-972">Elle retourne -1, car aucun nom de dinosaure dans cette plage qui se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-972">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-973">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-973">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-974">-ou- <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-974">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-975">
            <paramref name="startIndex" /> n’est pas compris dans la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-975">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, int32 startIndex, int32 count, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-976">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-976">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-977">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-977">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4f8a3-978">Index de début de base zéro de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-978">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4f8a3-979">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-979">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="4f8a3-980">
            <see cref="T:System.Predicate`1" /> qui définit les conditions de l’élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-980">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-981">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la première occurrence trouvée dans la plage d'éléments de <see cref="T:System.Array" /> qui commence à l'index spécifié et contient le nombre d'éléments spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-981">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-982">Index de base zéro de la première occurrence d’un élément qui répond aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-982">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-983">Le <xref:System.Array> recherche est effectuée vers l’avant `startIndex` et se terminant à `startIndex` plus `count` -1, si `count` est supérieur à 0.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-983">The <xref:System.Array> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="4f8a3-984">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-984">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="4f8a3-985">Les éléments de `array` sont passés individuellement à le <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-985">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="4f8a3-986">Cette méthode est un O (`n`) opération, où `n` est `count`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-986">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-987">L’exemple de code suivant illustre les trois surcharges de la <xref:System.Array.FindIndex%2A> méthode générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-987">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="4f8a3-988">Un tableau de chaînes est créé, contenant 8 noms dinosaure deux (aux emplacements 1 et 5) se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-988">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="4f8a3-989">L’exemple de code définit également une méthode de prédicat de recherche nommée `EndsWithSaurus`, qui accepte un paramètre de chaîne et retourne une valeur Boolean qui indique si la chaîne d’entrée se termine par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-989">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="4f8a3-990">Le <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode parcourt le tableau à partir du début, chaque élément en passant à la `EndsWithSaurus` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-990">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="4f8a3-991">La recherche s’arrête lorsque la `EndsWithSaurus` retourne de la méthode `true` pour l’élément à la position 1.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-991">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-992">En c# et Visual Basic, il n’est pas nécessaire de créer le `Predicate<string>` déléguer (`Predicate(Of String)` en Visual Basic) explicitement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-992">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="4f8a3-993">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-993">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="4f8a3-994">Le <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode est utilisée pour rechercher le tableau en commençant à la position 2 à la fin du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-994">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="4f8a3-995">Il recherche l’élément à la position 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-995">It finds the element at position 5.</span></span> <span data-ttu-id="4f8a3-996">Enfin, le <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode est utilisée pour rechercher la plage de trois éléments en commençant à la position 2.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-996">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="4f8a3-997">Elle retourne -1, car aucun nom de dinosaure dans cette plage qui se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-997">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-998">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-998">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-999">-ou- <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-999">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1000">
            <paramref name="startIndex" /> n’est pas compris dans la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1000">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1001">-ou- <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1001">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-1002">-ou- <paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas de section valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1002">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLast&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FindLast&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FindLast&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLast(Of T) (array As T(), match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T FindLast(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1003">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1003">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1004">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1004">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="4f8a3-1005">
            <see cref="T:System.Predicate`1" /> qui définit les conditions de l’élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1005">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1006">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne la dernière occurrence dans le <see cref="T:System.Array" /> entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1006">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1007">Dernier élément qui correspond aux conditions définies par le prédicat spécifié, s'il est trouvé ; sinon, valeur par défaut du type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1007">The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1008">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1008">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="4f8a3-1009">Les éléments de `array` sont passés individuellement à la <xref:System.Predicate%601>, déplacement vers l’arrière dans le <xref:System.Array>, en commençant par le dernier élément et se terminant par le premier élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1009">The elements of `array` are individually passed to the <xref:System.Predicate%601>, moving backward in the <xref:System.Array>, starting with the last element and ending with the first element.</span></span>  <span data-ttu-id="4f8a3-1010">Le traitement est arrêté lorsqu’une correspondance est trouvée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1010">Processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="4f8a3-1011">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1011">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1012">L’exemple de code suivant montre la <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, et <xref:System.Array.FindAll%2A> les méthodes génériques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1012">The following code example demonstrates the <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, and <xref:System.Array.FindAll%2A> generic methods.</span></span> <span data-ttu-id="4f8a3-1013">Un tableau de chaînes est créé, contenant 8 noms dinosaure deux (aux emplacements 1 et 5) se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1013">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="4f8a3-1014">L’exemple de code définit également une méthode de prédicat de recherche nommée `EndsWithSaurus`, qui accepte un paramètre de chaîne et retourne une valeur Boolean qui indique si la chaîne d’entrée se termine par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1014">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="4f8a3-1015">Le <xref:System.Array.Find%2A> méthode générique parcourt le tableau à partir du début, chaque élément en passant à la `EndsWithSaurus` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1015">The <xref:System.Array.Find%2A> generic method traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="4f8a3-1016">La recherche s’arrête lorsque la `EndsWithSaurus` retourne de la méthode `true` pour l’élément « Amargasaurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1016">The search stops when the `EndsWithSaurus` method returns `true` for the element "Amargasaurus".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1017">En c# et Visual Basic, il n’est pas nécessaire de créer le`Predicate<string>` déléguer (`Predicate(Of String)` en Visual Basic) explicitement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1017">In C# and Visual Basic, it is not necessary to create the`Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="4f8a3-1018">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1018">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="4f8a3-1019">Le <xref:System.Array.FindLast%2A> méthode générique est utilisée pour rechercher le tableau à partir de la fin.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1019">The <xref:System.Array.FindLast%2A> generic method is used to search the array backward from the end.</span></span> <span data-ttu-id="4f8a3-1020">Il recherche l’élément « Dilophosaurus » à la position 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1020">It finds the element "Dilophosaurus" at position 5.</span></span> <span data-ttu-id="4f8a3-1021">Le <xref:System.Array.FindAll%2A> méthode générique est utilisée pour retourner un tableau contenant tous les éléments qui se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1021">The <xref:System.Array.FindAll%2A> generic method is used to return an array containing all the elements that end in "saurus".</span></span> <span data-ttu-id="4f8a3-1022">Les éléments sont affichés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1022">The elements are displayed.</span></span>  
  
 <span data-ttu-id="4f8a3-1023">L’exemple de code montre également le <xref:System.Array.Exists%2A> et <xref:System.Array.TrueForAll%2A> les méthodes génériques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1023">The code example also demonstrates the <xref:System.Array.Exists%2A> and <xref:System.Array.TrueForAll%2A> generic methods.</span></span>  
  
 [!code-cpp[Array_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[Array_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindEtAl/cs/source.cs#1)]
 [!code-vb[Array_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1024">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1024">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1025">-ou- <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1025">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindLastIndex&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1026">Recherche un élément qui correspond aux conditions définies par un prédicat spécifié, et retourne l'index de base zéro de la dernière occurrence dans un <see cref="T:System.Array" /> ou dans l'une partie de ses parties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1026">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within an <see cref="T:System.Array" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1027">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1027">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1028">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1028">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="4f8a3-1029">
            <see cref="T:System.Predicate`1" /> qui définit les conditions de l’élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1029">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1030">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la dernière occurrence trouvée dans le <see cref="T:System.Array" /> entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1030">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1031">Index de base zéro de la dernière occurrence d'un élément qui correspond aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1031">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1032">Le <xref:System.Array> recherche est effectuée vers l’arrière à partir du dernier élément du premier élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1032">The <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="4f8a3-1033">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1033">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="4f8a3-1034">Les éléments de `array` sont passés individuellement à le <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1034">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="4f8a3-1035">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1035">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1036">L’exemple de code suivant illustre les trois surcharges de la <xref:System.Array.FindLastIndex%2A> méthode générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1036">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="4f8a3-1037">Un tableau de chaînes est créé, contenant 8 noms dinosaure deux (aux emplacements 1 et 5) se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1037">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="4f8a3-1038">L’exemple de code définit également une méthode de prédicat de recherche nommée `EndsWithSaurus`, qui accepte un paramètre de chaîne et retourne une valeur Boolean qui indique si la chaîne d’entrée se termine par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1038">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="4f8a3-1039">Le <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode parcourt le tableau vers le haut de la fin, chaque élément en passant à la `EndsWithSaurus` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1039">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="4f8a3-1040">La recherche s’arrête lorsque la `EndsWithSaurus` retourne de la méthode `true` pour l’élément à la position 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1040">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1041">En c# et Visual Basic, il n’est pas nécessaire de créer le `Predicate<string>` déléguer (`Predicate(Of String)` en Visual Basic) explicitement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1041">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="4f8a3-1042">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1042">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="4f8a3-1043">Le <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode est utilisée pour rechercher le tableau en commençant à la position 4 au début du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1043">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="4f8a3-1044">Il recherche l’élément à la position 1.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1044">It finds the element at position 1.</span></span> <span data-ttu-id="4f8a3-1045">Enfin, le <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode est utilisée pour rechercher la plage de trois éléments commençant à la position 4 et en (autrement dit, 2, 3 et 4).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1045">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="4f8a3-1046">Elle retourne -1, car aucun nom de dinosaure dans cette plage qui se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1046">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1047">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1047">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1048">-ou- <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1048">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, int32 startIndex, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1049">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1049">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1050">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1050">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4f8a3-1051">Index de début de base zéro de la recherche vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1051">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="4f8a3-1052">
            <see cref="T:System.Predicate`1" /> qui définit les conditions de l’élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1052">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1053">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la dernière occurrence trouvée dans la plage d'éléments du <see cref="T:System.Array" /> qui s'étend du premier élément à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1053">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1054">Index de base zéro de la dernière occurrence d'un élément qui correspond aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1054">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1055">Le <xref:System.Array> est effectuée vers l’arrière commençant à `startIndex` et jusqu’au premier élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1055">The <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="4f8a3-1056">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1056">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="4f8a3-1057">Les éléments de `array` sont passés individuellement à le <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1057">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="4f8a3-1058">Cette méthode est un O (`n`) opération, où `n` est le nombre d’éléments à partir du début de `array` à `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1058">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1059">L’exemple de code suivant illustre les trois surcharges de la <xref:System.Array.FindLastIndex%2A> méthode générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1059">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="4f8a3-1060">Un tableau de chaînes est créé, contenant 8 noms dinosaure deux (aux emplacements 1 et 5) se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1060">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="4f8a3-1061">L’exemple de code définit également une méthode de prédicat de recherche nommée `EndsWithSaurus`, qui accepte un paramètre de chaîne et retourne une valeur Boolean qui indique si la chaîne d’entrée se termine par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1061">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="4f8a3-1062">Le <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode parcourt le tableau vers le haut de la fin, chaque élément en passant à la `EndsWithSaurus` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1062">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="4f8a3-1063">La recherche s’arrête lorsque la `EndsWithSaurus` retourne de la méthode `true` pour l’élément à la position 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1063">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1064">En c# et Visual Basic, il n’est pas nécessaire de créer le `Predicate<string>` déléguer (`Predicate(Of String)` en Visual Basic) explicitement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1064">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="4f8a3-1065">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1065">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="4f8a3-1066">Le <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode est utilisée pour rechercher le tableau en commençant à la position 4 au début du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1066">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="4f8a3-1067">Il recherche l’élément à la position 1.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1067">It finds the element at position 1.</span></span> <span data-ttu-id="4f8a3-1068">Enfin, le <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode est utilisée pour rechercher la plage de trois éléments commençant à la position 4 et en (autrement dit, 2, 3 et 4).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1068">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="4f8a3-1069">Elle retourne -1, car aucun nom de dinosaure dans cette plage qui se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1069">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1070">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1070">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1071">-ou- <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1071">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1072">
            <paramref name="startIndex" /> n’est pas compris dans la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1072">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, int32 startIndex, int32 count, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1073">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1073">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1074">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1074">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4f8a3-1075">Index de début de base zéro de la recherche vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1075">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4f8a3-1076">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1076">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="4f8a3-1077">
            <see cref="T:System.Predicate`1" /> qui définit les conditions de l’élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1077">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1078">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la dernière occurrence trouvée dans la plage d'éléments du <see cref="T:System.Array" /> qui contient le nombre d'éléments spécifié et se termine à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1078">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1079">Index de base zéro de la dernière occurrence d'un élément qui correspond aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1079">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1080">Le <xref:System.Array> est effectuée vers l’arrière commençant à `startIndex` et se terminant à `startIndex` moins `count` + 1, si `count` est supérieur à 0.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1080">The <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="4f8a3-1081">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1081">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="4f8a3-1082">Les éléments de `array` sont passés individuellement à le <xref:System.Predicate%601>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1082">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="4f8a3-1083">Cette méthode est un O (`n`) opération, où `n` est `count`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1083">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1084">L’exemple de code suivant illustre les trois surcharges de la <xref:System.Array.FindLastIndex%2A> méthode générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1084">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="4f8a3-1085">Un tableau de chaînes est créé, contenant 8 noms dinosaure deux (aux emplacements 1 et 5) se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1085">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="4f8a3-1086">L’exemple de code définit également une méthode de prédicat de recherche nommée `EndsWithSaurus`, qui accepte un paramètre de chaîne et retourne une valeur Boolean qui indique si la chaîne d’entrée se termine par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1086">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="4f8a3-1087">Le <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode parcourt le tableau vers le haut de la fin, chaque élément en passant à la `EndsWithSaurus` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1087">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="4f8a3-1088">La recherche s’arrête lorsque la `EndsWithSaurus` retourne de la méthode `true` pour l’élément à la position 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1088">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1089">En c# et Visual Basic, il n’est pas nécessaire de créer le `Predicate<string>` déléguer (`Predicate(Of String)` en Visual Basic) explicitement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1089">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="4f8a3-1090">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1090">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="4f8a3-1091">Le <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode est utilisée pour rechercher le tableau en commençant à la position 4 au début du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1091">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="4f8a3-1092">Il recherche l’élément à la position 1.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1092">It finds the element at position 1.</span></span> <span data-ttu-id="4f8a3-1093">Enfin, le <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> surcharge de méthode est utilisée pour rechercher la plage de trois éléments commençant à la position 4 et en (autrement dit, 2, 3 et 4).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1093">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="4f8a3-1094">Elle retourne -1, car aucun nom de dinosaure dans cette plage qui se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1094">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1095">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1095">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1096">-ou- <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1096">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1097">
            <paramref name="startIndex" /> n’est pas compris dans la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1097">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1098">-ou- <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1098">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-1099">-ou- <paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas de section valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1099">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ForEach&lt;T&gt; (T[] array, Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForEach&lt;T&gt;(!!T[] array, class System.Action`1&lt;!!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ForEach``1(``0[],System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ForEach(Of T) (array As T(), action As Action(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void ForEach(cli::array &lt;T&gt; ^ array, Action&lt;T&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="action" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1100">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1100">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1101">
            <see cref="T:System.Array" /> unidimensionnel de base zéro sur les éléments duquel l'action doit être exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1101">The one-dimensional, zero-based <see cref="T:System.Array" /> on whose elements the action is to be performed.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="4f8a3-1102">
            <see cref="T:System.Action`1" /> à exécuter sur chaque élément de <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1102">The <see cref="T:System.Action`1" /> to perform on each element of <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1103">Exécute l'action spécifiée sur chaque élément du tableau spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1103">Performs the specified action on each element of the specified array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1104">Le <xref:System.Action%601> est un délégué à une méthode qui effectue une action sur l’objet passé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1104">The <xref:System.Action%601> is a delegate to a method that performs an action on the object passed to it.</span></span>  <span data-ttu-id="4f8a3-1105">Les éléments de `array` sont passés individuellement à le <xref:System.Action%601>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1105">The elements of `array` are individually passed to the <xref:System.Action%601>.</span></span>  
  
 <span data-ttu-id="4f8a3-1106">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1106">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1107">L’exemple suivant montre comment utiliser <xref:System.Array.ForEach%2A> pour afficher les carrés de chaque élément dans un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1107">The following example shows how to use <xref:System.Array.ForEach%2A> to display the squares of each element in an integer array.</span></span>  
  
 [!code-cpp[System.Array.ForEach#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.foreach/cpp/source.cpp#1)]
 [!code-csharp[System.Array.ForEach#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.foreach/cs/source.cs#1)]
 [!code-vb[System.Array.ForEach#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.foreach/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1108">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1108">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1109">-ou- <paramref name="action" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1109">-or-  <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Action`1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1110">Retourne <see cref="T:System.Collections.IEnumerator" /> pour l'objet <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1110">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1111">
            <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1111">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1112">(Visual Basic, c#)</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1112">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="4f8a3-1113">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1113">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="4f8a3-1114">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1114">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="4f8a3-1115">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1115">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="4f8a3-1116">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1116">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="4f8a3-1117"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1117"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="4f8a3-1118">À cette position, <xref:System.Collections.IEnumerator.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1118">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="4f8a3-1119">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1119">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="4f8a3-1120"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1120"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="4f8a3-1121"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1121"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="4f8a3-1122">Si <xref:System.Collections.IEnumerator.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1122">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="4f8a3-1123">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1123">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="4f8a3-1124">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.IEnumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1124">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="4f8a3-1125">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1125">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="4f8a3-1126">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1126">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="4f8a3-1127">Si des modifications sont apportées à la collection, telles que l’ajout, la modification ou la suppression d’éléments, l’énumérateur est définitivement invalidé et son comportement n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1127">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-1128">L’énumérateur ne dispose pas d’un accès exclusif à la collection. Par conséquent, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1128">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="4f8a3-1129">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1129">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="4f8a3-1130">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1130">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="4f8a3-1131">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1131">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1132">L’exemple de code suivant montre comment utiliser <xref:System.Array.GetEnumerator%2A> pour répertorier les éléments d’un tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1132">The following code example shows how to use <xref:System.Array.GetEnumerator%2A> to list the elements of an array.</span></span>  
  
 [!code-cpp[System.Array_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetEnumerator/CPP/array_getenumerator.cpp#1)]
 [!code-csharp[System.Array_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetEnumerator/CS/array_getenumerator.cs#1)]
 [!code-vb[System.Array_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetEnumerator/VB/array_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLength">
      <MemberSignature Language="C#" Value="public int GetLength (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLength(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLength (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLength(int dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <span data-ttu-id="4f8a3-1133">Dimension de base zéro de <see cref="T:System.Array" /> dont la longueur doit être déterminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1133">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1134">Obtient un entier 32 bits qui représente le nombre d'éléments dans la dimension spécifiée de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1134">Gets a 32-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1135">Entier 32 bits qui représente le nombre d'éléments dans la dimension spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1135">A 32-bit integer that represents the number of elements in the specified dimension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1136">Un exemple de <xref:System.Array.GetLength%2A> est `GetLength(0)`, qui retourne le nombre d’éléments dans la première dimension de le <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1136">An example of <xref:System.Array.GetLength%2A> is `GetLength(0)`, which returns the number of elements in the first dimension of the <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-1137">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1137">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1138">L’exemple suivant montre comment utiliser <xref:System.Array.GetLength%2A> pour afficher les dimensions de deux tableaux avec des classements différents.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1138">The following example shows how to use <xref:System.Array.GetLength%2A> to display the dimensions of two arrays with different ranks.</span></span>  
  
 [!code-cpp[System.Array.GetLength#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getlength/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetLength#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getlength/cs/source.cs#1)]
 [!code-vb[System.Array.GetLength#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getlength/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-1139">
            <paramref name="dimension" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1139">
              <paramref name="dimension" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-1140">-ou-  <paramref name="dimension" /> est supérieur ou égal à <see cref="P:System.Array.Rank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1140">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetLongLength">
      <MemberSignature Language="C#" Value="public long GetLongLength (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetLongLength(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLongLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLongLength (dimension As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetLongLength(int dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <span data-ttu-id="4f8a3-1141">Dimension de base zéro de <see cref="T:System.Array" /> dont la longueur doit être déterminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1141">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1142">Obtient un entier 64 bits qui représente le nombre d’éléments dans la dimension spécifiée de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1142">Gets a 64-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1143">Entier 64 bits qui représente le nombre d'éléments dans la dimension spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1143">A 64-bit integer that represents the number of elements in the specified dimension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1144">Un exemple de <xref:System.Array.GetLongLength%2A> est `GetLongLength(0)`, qui retourne le nombre d’éléments dans la première dimension de le <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1144">An example of <xref:System.Array.GetLongLength%2A> is `GetLongLength(0)`, which returns the number of elements in the first dimension of the <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-1145">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1145">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-1146">
            <paramref name="dimension" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1146">
              <paramref name="dimension" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-1147">-ou-  <paramref name="dimension" /> est supérieur ou égal à <see cref="P:System.Array.Rank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1147">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetLowerBound">
      <MemberSignature Language="C#" Value="public int GetLowerBound (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLowerBound(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLowerBound(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLowerBound (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLowerBound(int dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <span data-ttu-id="4f8a3-1148">Dimension de base zéro du tableau dont l'index de départ doit être déterminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1148">A zero-based dimension of the array whose starting index needs to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1149">Obtient l'index du premier élément de la dimension spécifiée dans le tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1149">Gets the index of the first element of the specified dimension in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1150">Index du premier élément de la dimension spécifiée dans le tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1150">The index of the first element of the specified dimension in the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1151">`GetLowerBound(0)` Retourne l’index de départ de la première dimension du tableau, et `GetLowerBound(Rank - 1)` retourne l’index de départ de la dernière dimension du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1151">`GetLowerBound(0)` returns the starting index of the first dimension of the array, and `GetLowerBound(Rank - 1)` returns the starting index of the last dimension of the array.</span></span>  
  
 <span data-ttu-id="4f8a3-1152">Le <xref:System.Array.GetLowerBound%2A> méthode retourne toujours une valeur qui indique l’index de la limite inférieure du tableau, même si le tableau est vide.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1152">The <xref:System.Array.GetLowerBound%2A> method always returns a value that indicates the index of the lower bound of the array, even if the array is empty.</span></span>  
  
 <span data-ttu-id="4f8a3-1153">Notez que, bien que la plupart des tableaux dans le .NET Framework sont de base zéro (autrement dit, la <xref:System.Array.GetLowerBound%2A> retourne la valeur zéro pour chaque dimension d’un tableau), le .NET Framework ne prend pas en charge les tableaux qui ne sont pas de base zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1153">Note that, although most arrays in the .NET Framework are zero-based (that is, the <xref:System.Array.GetLowerBound%2A> method returns zero for each dimension of an array), the .NET Framework does support arrays that are not zero-based.</span></span> <span data-ttu-id="4f8a3-1154">Ces tableaux peut être créés avec le <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29> (méthode) et peut également être renvoyé à partir de code non managé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1154">Such arrays can be created with the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29> method, and can also be returned from unmanaged code.</span></span>  
  
 <span data-ttu-id="4f8a3-1155">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1155">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1156">L’exemple suivant utilise le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes pour afficher les limites d’un tableau unidimensionnel et à deux dimensions et pour afficher les valeurs de leurs éléments de tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1156">The following example uses the <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods to display the bounds of a one-dimensional and two-dimensional array and to display the values of their array elements.</span></span>  
  
 [!code-cpp[System.Array.GetUpperBound#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getupperbound/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetUpperBound#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getupperbound/cs/source.cs#1)]
 [!code-vb[System.Array.GetUpperBound#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getupperbound/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-1157">
            <paramref name="dimension" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1157">
              <paramref name="dimension" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-1158">-ou-  <paramref name="dimension" /> est supérieur ou égal à <see cref="P:System.Array.Rank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1158">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetUpperBound">
      <MemberSignature Language="C#" Value="public int GetUpperBound (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetUpperBound(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetUpperBound(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpperBound (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetUpperBound(int dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <span data-ttu-id="4f8a3-1159">Dimension de base zéro du tableau dont la limite supérieure doit être déterminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1159">A zero-based dimension of the array whose upper bound needs to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1160">Obtient l'index du dernier élément de la dimension spécifiée dans le tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1160">Gets the index of the last element of the specified dimension in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1161">Index du dernier élément de la dimension spécifiée dans le tableau, ou -1 si la dimension spécifiée est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1161">The index of the last element of the specified dimension in the array, or -1 if the specified dimension is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1162">`GetUpperBound(0)` Retourne le dernier index de la première dimension du tableau, et `GetUpperBound(Rank - 1)` retourne le dernier index de la dernière dimension du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1162">`GetUpperBound(0)` returns the last index in the first dimension of the array, and `GetUpperBound(Rank - 1)` returns the last index of the last dimension of the array.</span></span>  
  
 <span data-ttu-id="4f8a3-1163">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1163">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1164">L’exemple suivant utilise le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes pour afficher les limites d’un tableau unidimensionnel et à deux dimensions et pour afficher les valeurs de leurs éléments de tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1164">The following example uses the <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods to display the bounds of a one-dimensional and two-dimensional array and to display the values of their array elements.</span></span>  
  
 [!code-cpp[System.Array.GetUpperBound#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getupperbound/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetUpperBound#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getupperbound/cs/source.cs#1)]
 [!code-vb[System.Array.GetUpperBound#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getupperbound/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-1165">
            <paramref name="dimension" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1165">
              <paramref name="dimension" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-1166">-ou-  <paramref name="dimension" /> est supérieur ou égal à <see cref="P:System.Array.Rank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1166">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1167">Obtient la valeur de l'élément spécifié dans le <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1167">Gets the value of the specified element in the current <see cref="T:System.Array" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4f8a3-1168">Entier 32 bits qui représente la position de l'élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1168">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1169">Obtient la valeur à la position spécifiée du <see cref="T:System.Array" /> unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1169">Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1170">L'index est spécifié en tant qu'entier 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1170">The index is specified as a 32-bit integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1171">Valeur à la position spécifiée du <see cref="T:System.Array" /> unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1171">The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1172">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si la valeur de `index` est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1172">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1173">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1173">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1174">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1174">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1175">Le <see cref="T:System.Array" /> en cours ne possède pas exactement une dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1175">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-1176">
            <paramref name="index" /> est en dehors de la plage d'index valide pour le <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1176">
              <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (params int[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (ParamArray indices As Integer()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(... cli::array &lt;int&gt; ^ indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indices" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indices">
          <span data-ttu-id="4f8a3-1177">Tableau unidimensionnel d'entier 32 bits qui représentent les index qui spécifient la position de l'élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1177">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1178">Obtient la valeur à la position spécifiée du <see cref="T:System.Array" /> multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1178">Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1179">Les index sont spécifiés sous la forme d'un tableau d'entiers 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1179">The indexes are specified as an array of 32-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1180">Valeur à la position spécifiée du <see cref="T:System.Array" /> multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1180">The value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1181">Le nombre d’éléments dans `indices` doit être égal au nombre de dimensions dans le <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1181">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-1182">Tous les éléments dans le `indices` tableau doit spécifier collectivement la position de l’élément souhaité dans les données multidimensionnelles <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1182">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-1183">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si un des index est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1183">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1184">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1184">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1185">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1185">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1186">
            <paramref name="indices" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1186">
              <paramref name="indices" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1187">Le nombre de dimensions dans le <see cref="T:System.Array" /> en cours n'est pas égal au nombre d'éléments dans <paramref name="indices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1187">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-1188">Tous les éléments de <paramref name="indices" /> sont en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1188">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4f8a3-1189">Entier 64 bits qui représente la position de l’élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1189">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1190">Obtient la valeur à la position spécifiée du <see cref="T:System.Array" /> unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1190">Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1191">L'index est spécifié en tant qu'entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1191">The index is specified as a 64-bit integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1192">Valeur à la position spécifiée du <see cref="T:System.Array" /> unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1192">The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1193">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si la valeur de `index` est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1193">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1194">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1194">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1195">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1195">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1196">Le <see cref="T:System.Array" /> en cours ne possède pas exactement une dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1196">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1197">
            <paramref name="index" /> est en dehors de la plage d'index valide pour le <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1197">
              <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (params long[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (ParamArray indices As Long()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(... cli::array &lt;long&gt; ^ indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indices" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indices">
          <span data-ttu-id="4f8a3-1198">Tableau unidimensionnel d’entiers 64 bits qui représentent les index spécifiant la position de l’élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1198">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1199">Obtient la valeur à la position spécifiée du <see cref="T:System.Array" /> multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1199">Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1200">Les index sont spécifiés sous la forme d'un tableau d'entiers 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1200">The indexes are specified as an array of 64-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1201">Valeur à la position spécifiée du <see cref="T:System.Array" /> multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1201">The value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1202">Le nombre d’éléments dans `indices` doit être égal au nombre de dimensions dans le <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1202">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-1203">Tous les éléments dans le `indices` tableau doit spécifier collectivement la position de l’élément souhaité dans les données multidimensionnelles <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1203">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-1204">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si un des index est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1204">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1205">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1205">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1206">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1206">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1207">
            <paramref name="indices" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1207">
              <paramref name="indices" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1208">Le nombre de dimensions dans le <see cref="T:System.Array" /> en cours n'est pas égal au nombre d'éléments dans <paramref name="indices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1208">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1209">Tous les éléments de <paramref name="indices" /> sont en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1209">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index1, int index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index1, int32 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Integer, index2 As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index1, int index2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index1">
          <span data-ttu-id="4f8a3-1210">Entier 32 bits qui représente l'index de la première dimension de l'élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1210">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="4f8a3-1211">Entier 32 bits qui représente l'index de la seconde dimension de l'élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1211">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1212">Obtient la valeur à la position spécifiée du <see cref="T:System.Array" /> à deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1212">Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1213">Les index sont spécifiés en tant qu'entiers 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1213">The indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1214">Valeur à la position spécifiée du <see cref="T:System.Array" /> à deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1214">The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1215">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si un des index est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1215">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1216">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1216">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1217">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1217">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1218">Le <see cref="T:System.Array" /> en cours ne possède pas exactement deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1218">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-1219">
            <paramref name="index1" /> ou <paramref name="index2" /> est en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1219">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index1, long index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index1, int64 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Long, index2 As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index1, long index2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index1">
          <span data-ttu-id="4f8a3-1220">Entier 64 bits qui représente l’index de la première dimension de l’élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1220">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="4f8a3-1221">Entier 64 bits qui représente l’index de la deuxième dimension de l’élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1221">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1222">Obtient la valeur à la position spécifiée du <see cref="T:System.Array" /> à deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1222">Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1223">Les index sont spécifiés en tant qu'entiers 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1223">The indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1224">Valeur à la position spécifiée du <see cref="T:System.Array" /> à deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1224">The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1225">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si un des index est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1225">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1226">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1226">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1227">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1227">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1228">Le <see cref="T:System.Array" /> en cours ne possède pas exactement deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1228">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1229">
            <paramref name="index1" /> ou <paramref name="index2" /> est en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1229">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index1, int index2, int index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index1, int32 index2, int32 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Integer, index2 As Integer, index3 As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index1, int index2, int index3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
        <Parameter Name="index3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index1">
          <span data-ttu-id="4f8a3-1230">Entier 32 bits qui représente l'index de la première dimension de l'élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1230">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="4f8a3-1231">Entier 32 bits qui représente l'index de la seconde dimension de l'élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1231">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index3">
          <span data-ttu-id="4f8a3-1232">Entier 32 bits qui représente l'index de la troisième dimension de l'élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1232">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1233">Obtient la valeur à la position spécifiée du <see cref="T:System.Array" /> à trois dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1233">Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1234">Les index sont spécifiés en tant qu'entiers 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1234">The indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1235">Valeur à la position spécifiée du <see cref="T:System.Array" /> à trois dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1235">The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1236">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si un des index est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1236">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1237">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1237">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1238">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1238">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1239">Le <see cref="T:System.Array" /> en cours ne possède pas exactement trois dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1239">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-1240">
            <paramref name="index1" />, <paramref name="index2" /> ou <paramref name="index3" /> est en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1240">
              <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index1, long index2, long index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index1, int64 index2, int64 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Long, index2 As Long, index3 As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index1, long index2, long index3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
        <Parameter Name="index3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index1">
          <span data-ttu-id="4f8a3-1241">Entier 64 bits qui représente l’index de la première dimension de l’élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1241">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="4f8a3-1242">Entier 64 bits qui représente l’index de la deuxième dimension de l’élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1242">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index3">
          <span data-ttu-id="4f8a3-1243">Entier 64 bits qui représente l’index de la troisième dimension de l’élément <see cref="T:System.Array" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1243">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1244">Obtient la valeur à la position spécifiée du <see cref="T:System.Array" /> à trois dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1244">Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1245">Les index sont spécifiés en tant qu'entiers 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1245">The indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1246">Valeur à la position spécifiée du <see cref="T:System.Array" /> à trois dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1246">The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1247">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si un des index est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1247">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1248">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1248">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1249">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1249">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1250">Le <see cref="T:System.Array" /> en cours ne possède pas exactement trois dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1250">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1251">
            <paramref name="index1" />, <paramref name="index2" /> ou <paramref name="index3" /> est en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1251">
              <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1252">Recherche l'objet spécifié et retourne l'index de sa première occurrence dans un tableau unidimensionnel ou dans une plage d'éléments dans le tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1252">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array or in a range of elements in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-1253">Tableau unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1253">The one-dimensional array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-1254">Objet à rechercher dans <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1254">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1255">Recherche l'objet spécifié et retourne l'index de sa première occurrence dans un tableau unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1255">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1256">L’index de la première occurrence de <paramref name="value" /> dans <paramref name="array" />, s’il existe ; sinon, la limite inférieure du tableau -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1256">The index of the first occurrence of <paramref name="value" /> in <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1257">Cette méthode recherche tous les éléments d’une dimension arrayfor `value`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1257">This method searches all the elements of a one-dimensional arrayfor `value`.</span></span> <span data-ttu-id="4f8a3-1258">Pour déterminer si `value` existe dans `array`, la méthode effectue une comparaison d’égalité en appelant de chaque élément `Equals` méthode jusqu'à ce qu’il trouve une correspondance.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1258">To determine whether `value` exists in `array`, the method performs an equality comparison by calling each element's `Equals` method until it finds a match.</span></span> <span data-ttu-id="4f8a3-1259">Cela signifie que si l’élément remplace la <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> méthode, ce remplacement est appelé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1259">This means that if the element overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="4f8a3-1260">Étant donné que la plupart des tableaux ont une limite inférieure de zéro, cette méthode retourne généralement -1 si`value` n’est pas trouvée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1260">Because most arrays have a lower bound of zero, this method generally returns –1 if`value` isn’t found.</span></span> <span data-ttu-id="4f8a3-1261">Dans les rares cas où la limite inférieure du tableau est égale à <xref:System.Int32.MinValue?displayProperty=nameWithType>(0 x 80000000) et `value` n’est trouvé, cette méthode retourne <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1261">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="4f8a3-1262">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1262">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1263">L’exemple appelle trois surcharges de la <xref:System.Array.IndexOf%2A> méthode pour rechercher l’index d’une chaîne dans un tableau de chaînes :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1263">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="4f8a3-1264"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, pour déterminer la première occurrence de la chaîne « the » dans un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1264"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="4f8a3-1265"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, pour déterminer la première occurrence de la chaîne « the » dans la quatrième aux derniers éléments d’un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1265"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="4f8a3-1266"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, pour déterminer la première occurrence de la chaîne « the » dans une chaîne de tableau à partir de l’élément qui suit la dernière correspondance à la fin du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1266"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1267">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1267">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1268">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1268">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-1269">Tableau unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1269">The one-dimensional array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-1270">Objet à rechercher dans <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1270">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4f8a3-1271">Index de départ de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1271">The starting index of the search.</span>
          </span>
          <span data-ttu-id="4f8a3-1272">0 (zéro) est valide dans un tableau vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1272">0 (zero) is valid in an empty array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1273">Recherche l'objet spécifié dans une plage d'éléments d'un tableau unidimensionnel, et retourne l'index de sa première occurrence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1273">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</span>
          </span>
          <span data-ttu-id="4f8a3-1274">La plage s'étend d'un index spécifié à la fin du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1274">The range extends from a specified index to the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1275">Index de la première occurrence de <paramref name="value" />, s’il est trouvé, au sein de la plage d’éléments de <paramref name="array" /> qui s’étend de <paramref name="startIndex" /> jusqu’au dernier élément ; sinon, limite inférieure du tableau moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1275">The index of the first occurrence of <paramref name="value" />, if it’s found, within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1276">Cette méthode recherche dans un tableau unidimensionnel à partir de l’élément au niveau de l’index `startIndex` jusqu’au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1276">This method searches a one-dimensional array from the element at index `startIndex` to the last element.</span></span> <span data-ttu-id="4f8a3-1277">Pour déterminer si `value` existe dans `array`, la méthode effectue une comparaison d’égalité en appelant le `Equals` (méthode) de chaque élément jusqu'à ce qu’il trouve une correspondance.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1277">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `Equals` method of every element until it finds a match.</span></span> <span data-ttu-id="4f8a3-1278">Cela signifie que si l’élément remplace la <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> méthode, ce remplacement est appelé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1278">This means that if the element overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="4f8a3-1279">Étant donné que la plupart des tableaux ont une limite inférieure de zéro, cette méthode retourne généralement -1 si `value` n’est pas trouvée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1279">Because most arrays have a lower bound of zero, this method generally returns –1 if `value` isn’t found.</span></span> <span data-ttu-id="4f8a3-1280">Dans les rares cas où la limite inférieure du tableau est égale à <xref:System.Int32.MinValue?displayProperty=nameWithType>(0 x 80000000) et `value` n’est trouvé, cette méthode retourne <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1280">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="4f8a3-1281">Si `startIndex` est égal à <xref:System.Array.Length%2A?displayProperty=nameWithType>, la méthode retourne -1.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1281">If `startIndex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>,the method returns -1.</span></span> <span data-ttu-id="4f8a3-1282">Si `startIndex` est supérieur à <xref:System.Array.Length%2A?displayProperty=nameWithType>, la méthode lève un <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1282">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="4f8a3-1283">Cette méthode est un O (`n`) opération, où `n` est le nombre d’éléments à partir de `startIndex` à la fin de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1283">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1284">L’exemple appelle trois surcharges de la <xref:System.Array.IndexOf%2A> méthode pour rechercher l’index d’une chaîne dans un tableau de chaînes :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1284">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="4f8a3-1285"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, pour déterminer la première occurrence de la chaîne « the » dans un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1285"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="4f8a3-1286"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, pour déterminer la première occurrence de la chaîne « the » dans la quatrième aux derniers éléments d’un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1286"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="4f8a3-1287"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, pour déterminer la première occurrence de la chaîne « the » dans une chaîne de tableau à partir de l’élément qui suit la dernière correspondance à la fin du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1287"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1288">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1288">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1289">
            <paramref name="startIndex" /> est en dehors de la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1289">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1290">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1290">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-1291">Tableau unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1291">The one-dimensional array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-1292">Objet à rechercher dans <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1292">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4f8a3-1293">Index de départ de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1293">The starting index of the search.</span>
          </span>
          <span data-ttu-id="4f8a3-1294">0 (zéro) est valide dans un tableau vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1294">0 (zero) is valid in an empty array.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4f8a3-1295">Nombre d'éléments à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1295">The number of elements to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1296">Recherche l'objet spécifié dans une plage d'éléments d'un tableau unidimensionnel, et retourne l'index de sa première occurrence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1296">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of ifs first occurrence.</span>
          </span>
          <span data-ttu-id="4f8a3-1297">La plage commence à un index spécifié pour un nombre d'éléments spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1297">The range extends from a specified index for a specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1298">Index de la première occurrence de <paramref name="value" />, s’il existe dans le <paramref name="array" /> entre l’index <paramref name="startIndex" /> et <paramref name="startIndex" /> + <paramref name="count" /> - 1 ; sinon, limite inférieure du tableau moins 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1298">The index of the first occurrence of <paramref name="value" />, if it’s found in the <paramref name="array" /> from index <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> - 1; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1299">Cette méthode recherche les éléments d’une dimension arrayfrom `startIndex` à `startIndex` plus `count` -1, si `count` est supérieur à 0.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1299">This method searches the elements of a one-dimensional arrayfrom `startIndex` to `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span> <span data-ttu-id="4f8a3-1300">Pour déterminer si `value` existe dans `array`, la méthode effectue une comparaison d’égalité en appelant le `Equals` (méthode) de chaque élément jusqu'à ce qu’il trouve une correspondance.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1300">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `Equals` method of every element until it finds a match.</span></span> <span data-ttu-id="4f8a3-1301">Cela signifie que si l’élément remplace la <xref:System.Object.Equals%2A?displayProperty=nameWithType> méthode, ce remplacement est appelé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1301">This means that if the element overrides the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="4f8a3-1302">Becausemost tableaux ont une limite inférieure de zéro, en règle générale, cette méthode retourne-1 si `value` n’est pas trouvée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1302">Becausemost arrays have a lower bound of zero, this method generally returns –1 when `value` isn’t found.</span></span> <span data-ttu-id="4f8a3-1303">Dans les rares cas où la limite inférieure du tableau est égale à <xref:System.Int32.MinValue?displayProperty=nameWithType> (0 x 80000000) et `value` n’est trouvé, cette méthode retourne <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1303">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> (0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="4f8a3-1304">Si `startindex` est égal à <xref:System.Array.Length%2A?displayProperty=nameWithType>, la méthode retourne -1.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1304">If `startindex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method returns -1.</span></span> <span data-ttu-id="4f8a3-1305">Si `startIndex` est supérieur à <xref:System.Array.Length%2A?displayProperty=nameWithType>, la méthode lève un <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1305">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="4f8a3-1306">Cette méthode est un O (`n`) opération, où `n` est `count`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1306">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1307">L’exemple appelle trois surcharges de la <xref:System.Array.IndexOf%2A> méthode pour rechercher l’index d’une chaîne dans un tableau de chaînes :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1307">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="4f8a3-1308"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, pour déterminer la première occurrence de la chaîne « the » dans un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1308"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="4f8a3-1309"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, pour déterminer la première occurrence de la chaîne « the » dans la quatrième aux derniers éléments d’un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1309"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="4f8a3-1310"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, pour déterminer la première occurrence de la chaîne « the » dans une chaîne de tableau à partir de l’élément qui suit la dernière correspondance à la fin du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1310"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span> <span data-ttu-id="4f8a3-1311">Pour déterminer la valeur de la `count` argument, il soustrait la limite supérieure du tableau à partir de l’index de départ et ajoute une.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1311">To determine the value of the `count` argument, it subtracts the upper bound of the array from the starting index and adds one.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1312">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1312">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1313">
            <paramref name="startIndex" /> n’est pas compris dans la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1313">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1314">-ou- <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1314">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-1315">-ou- <paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas de section valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1315">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1316">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1316">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1317">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1317">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1318">Le tableau de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1318">The one-dimensional, zero-based array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-1319">Objet à rechercher dans <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1319">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1320">Recherche l'objet spécifié et retourne l'index de sa première occurrence dans un tableau unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1320">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1321">Index de base zéro de la première occurrence de <paramref name="value" /> dans l’ensemble de l’<paramref name="array" />, s’il existe ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1321">The zero-based index of the first occurrence of <paramref name="value" /> in the entire <paramref name="array" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1322">Cette méthode recherche tous les éléments d’un tableau unidimensionnel pour `value`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1322">This method searches all the elements of a one-dimensional array for `value`.</span></span> <span data-ttu-id="4f8a3-1323">Pour déterminer si `value` existe dans `array`, la méthode effectue une comparaison d’égalité en appelant le `T.Equals` méthode sur chaque élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1323">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="4f8a3-1324">Cela signifie que si `T` remplace la <xref:System.Object.Equals%2A> méthode, ce remplacement est appelé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1324">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="4f8a3-1325">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1325">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1326">L’exemple suivant illustre les trois surcharges génériques de la <xref:System.Array.IndexOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1326">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="4f8a3-1327">Un tableau de chaînes est créé, avec une entrée qui apparaît deux fois, à l’emplacement d’index 0 et l’emplacement d’index 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1327">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="4f8a3-1328">Le <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> surcharge de méthode de recherche dans le tableau à partir du début et de la première occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1328">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="4f8a3-1329">Le <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher le tableau en commençant par l’emplacement d’index 3 et en continuant à la fin du tableau et la deuxième occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1329">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="4f8a3-1330">Enfin, le <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher une plage de deux entrées, en commençant à l’emplacement d’index deux ; elle retourne – 1, car il n’existe aucune instance de la chaîne de recherche dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1330">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1331">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1331">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1332">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1332">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1333">Le tableau de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1333">The one-dimensional, zero-based array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-1334">Objet à rechercher dans <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1334">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4f8a3-1335">Index de début de base zéro de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1335">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="4f8a3-1336">0 (zéro) est valide dans un tableau vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1336">0 (zero) is valid in an empty array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1337">Recherche l'objet spécifié dans une plage d'éléments d'un tableau unidimensionnel, et retourne l'index de sa première occurrence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1337">Searches for the specified object in a range of elements of a one dimensional array, and returns the index of its first occurrence.</span>
          </span>
          <span data-ttu-id="4f8a3-1338">La plage s'étend d'un index spécifié à la fin du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1338">The range extends from a specified index to the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1339">Index de base zéro de la première occurrence de <paramref name="value" /> dans la plage d'éléments du <paramref name="array" /> qui s'étend de <paramref name="startIndex" /> jusqu'au dernier élément, s'il existe ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1339">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1340">Cette méthode recherche dans un tableau unidimensionnel à partir de l’élément au niveau `startIndex` à la fin du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1340">This method searches a one-dimensional array from the element at `startIndex` to the end of the array.</span></span> <span data-ttu-id="4f8a3-1341">Pour déterminer si `value` existe dans `array`, la méthode effectue une comparaison d’égalité en appelant le `T.Equals` méthode sur chaque élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1341">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="4f8a3-1342">Cela signifie que si `T` remplace la <xref:System.Object.Equals%2A> méthode, ce remplacement est appelé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1342">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="4f8a3-1343">Si `startIndex` est égal à <xref:System.Array.Length%2A>, la méthode retourne - 1.If `startIndex` est supérieur à <xref:System.Array.Length%2A?displayProperty=nameWithType>, la méthode lève un <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1343">If `startIndex` equals <xref:System.Array.Length%2A>,the method returns -1.If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="4f8a3-1344">Cette méthode est un O (`n`) opération, où `n` est le nombre d’éléments à partir de `startIndex` à la fin de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1344">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1345">L’exemple suivant illustre les trois surcharges génériques de la <xref:System.Array.IndexOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1345">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="4f8a3-1346">Un tableau de chaînes est créé, avec une entrée qui apparaît deux fois, à l’emplacement d’index 0 et l’emplacement d’index 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1346">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="4f8a3-1347">Le <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> surcharge de méthode de recherche dans le tableau à partir du début et de la première occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1347">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="4f8a3-1348">Le <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher le tableau en commençant par l’emplacement d’index 3 et en continuant à la fin du tableau et la deuxième occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1348">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="4f8a3-1349">Enfin, le <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher une plage de deux entrées, en commençant à l’emplacement d’index deux ; elle retourne – 1, car il n’existe aucune instance de la chaîne de recherche dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1349">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1350">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1350">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1351">
            <paramref name="startIndex" /> n’est pas compris dans la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1351">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1352">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1352">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1353">Le tableau de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1353">The one-dimensional, zero-based array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-1354">Objet à rechercher dans <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1354">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4f8a3-1355">Index de début de base zéro de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1355">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="4f8a3-1356">0 (zéro) est valide dans un tableau vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1356">0 (zero) is valid in an empty array.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4f8a3-1357">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1357">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1358">Recherche l'objet spécifié dans une plage d'éléments d'un tableau unidimensionnel, et retourne l'index de sa première occurrence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1358">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</span>
          </span>
          <span data-ttu-id="4f8a3-1359">La plage commence à un index spécifié pour un nombre d'éléments spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1359">The range extends from a specified index for a specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1360">Index de base zéro de la première occurrence de <paramref name="value" /> dans la plage d'éléments du <paramref name="array" /> qui commence à <paramref name="startIndex" /> et qui contient le nombre d'éléments spécifiés dans <paramref name="count" />, s'il existe ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1360">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified in <paramref name="count" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1361">Cette éléments searchesthe de méthode d’un tableau unidimensionnel à partir de `startIndex` à `startIndex` plus `count` -1, si `count` est supérieur à 0.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1361">This method searchesthe elements of a one-dimensional array from `startIndex` to `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span> <span data-ttu-id="4f8a3-1362">Pour déterminer si `value` existe dans `array`, la méthode effectue une comparaison d’égalité en appelant le `T.Equals` méthode sur chaque élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1362">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="4f8a3-1363">Cela signifie que si `T` remplace la <xref:System.Object.Equals%2A> méthode, ce remplacement est appelé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1363">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="4f8a3-1364">Si `startIndex` est égal à <xref:System.Array.Length%2A?displayProperty=nameWithType>, la méthode retourne -1.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1364">If `startIndex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method returns -1.</span></span>  <span data-ttu-id="4f8a3-1365">Si `startIndex` est supérieur à <xref:System.Array.Length%2A?displayProperty=nameWithType>, la méthode lève un <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1365">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="4f8a3-1366">Cette méthode est un O (`n`) opération, où `n` est `count`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1366">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1367">L’exemple suivant illustre les trois surcharges génériques de la <xref:System.Array.IndexOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1367">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="4f8a3-1368">Un tableau de chaînes est créé, avec une entrée qui apparaît deux fois, à l’emplacement d’index 0 et l’emplacement d’index 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1368">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="4f8a3-1369">Le <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> surcharge de méthode de recherche dans le tableau à partir du début et de la première occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1369">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="4f8a3-1370">Le <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher le tableau en commençant par l’emplacement d’index 3 et en continuant à la fin du tableau et la deuxième occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1370">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="4f8a3-1371">Enfin, le <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher une plage de deux entrées, en commençant à l’emplacement d’index deux ; elle retourne – 1, car il n’existe aucune instance de la chaîne de recherche dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1371">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1372">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1372">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1373">
            <paramref name="startIndex" /> n’est pas compris dans la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1373">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1374">-ou- <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1374">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-1375">-ou- <paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas de section valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1375">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1376">Initialise tous les éléments du <see cref="T:System.Array" /> de type valeur en appelant le constructeur par défaut du type valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1376">Initializes every element of the value-type <see cref="T:System.Array" /> by calling the default constructor of the value type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1377">Cette méthode est conçue pour aider les compilateurs à prendre en charge des tableaux de type valeur ; la plupart des utilisateurs n’avez pas besoin de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1377">This method is designed to help compilers support value-type arrays; most users do not need this method.</span></span> <span data-ttu-id="4f8a3-1378">Il ne doit pas être utilisé sur des tableaux de type référence.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1378">It must not be used on reference-type arrays.</span></span>  
  
 <span data-ttu-id="4f8a3-1379">Si le <xref:System.Array> n’est pas un type valeur <xref:System.Array> ou si le type de valeur n’a pas de constructeur par défaut, le <xref:System.Array> n’est pas modifié.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1379">If the <xref:System.Array> is not a value-type <xref:System.Array> or if the value type does not have a default constructor, the <xref:System.Array> is not modified.</span></span>  
  
 <span data-ttu-id="4f8a3-1380">Le type de valeur <xref:System.Array> peut avoir une limite inférieure quelconque et n’importe quel nombre de dimensions.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1380">The value-type <xref:System.Array> can have any lower bound and any number of dimensions.</span></span>  
  
 <span data-ttu-id="4f8a3-1381">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Array.Length%2A>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1381">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4f8a3-1382">Vous pouvez utiliser cette méthode uniquement sur les types valeur qui possèdent des constructeurs. Toutefois, les types de valeur natifs c# n’ont pas de constructeurs.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1382">You can use this method only on value types that have constructors; however, value types that are native to C# do not have constructors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1383">Obtient une valeur indiquant si <see cref="T:System.Array" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1383">Gets a value indicating whether the <see cref="T:System.Array" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f8a3-1384">Cette propriété est toujours <see langword="true" /> pour tous les tableaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1384">This property is always <see langword="true" /> for all arrays.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1385"><xref:System.Array> implémente le <xref:System.Array.IsFixedSize%2A> propriété car il est requis par le <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1385"><xref:System.Array> implements the <xref:System.Array.IsFixedSize%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="4f8a3-1386">Un tableau avec une taille fixe ne permet pas l’ajout ou la suppression d’éléments après le tableau est créé, mais permet la modification des éléments existants.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1386">An array with a fixed size does not allow the addition or removal of elements after the array is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="4f8a3-1387">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1387">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.Collections.Generic.IList`1" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1388">Obtient une valeur indiquant si <see cref="T:System.Array" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1388">Gets a value indicating whether the <see cref="T:System.Array" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f8a3-1389">Cette propriété est toujours <see langword="false" /> pour tous les tableaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1389">This property is always <see langword="false" /> for all arrays.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1390"><xref:System.Array> implémente le <xref:System.Array.IsReadOnly%2A> propriété car il est requis par le <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1390"><xref:System.Array> implements the <xref:System.Array.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="4f8a3-1391">Un tableau qui est en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après que le tableau est créé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1391">An array that is read-only does not allow the addition, removal, or modification of elements after the array is created.</span></span>  
  
 <span data-ttu-id="4f8a3-1392">Si vous avez besoin d’une collection en lecture seule, utilisez un <xref:System.Collections> classe qui implémente le <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1392">If you require a read-only collection, use a <xref:System.Collections> class that implements the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="4f8a3-1393">Si vous effectuez un cast ou convertir un tableau à une <xref:System.Collections.IList> objet d’interface, le <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> propriété renvoie `false`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1393">If you cast or convert an array to an <xref:System.Collections.IList> interface object, the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> property returns `false`.</span></span> <span data-ttu-id="4f8a3-1394">Toutefois, si vous effectuez un cast ou convertir un tableau à un <xref:System.Collections.Generic.IList%601> interface, le `IsReadOnly` propriété renvoie `true`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1394">However, if you cast or convert an array to a <xref:System.Collections.Generic.IList%601> interface, the `IsReadOnly` property returns `true`.</span></span>  
  
 <span data-ttu-id="4f8a3-1395">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1395">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="N:System.Collections" />
        <altmember cref="T:System.Collections.Generic.IList`1" />
        <altmember cref="N:System.Collections.Generic" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1396">Obtient une valeur indiquant si l'accès à <see cref="T:System.Array" /> est synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1396">Gets a value indicating whether access to the <see cref="T:System.Array" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f8a3-1397">Cette propriété est toujours <see langword="false" /> pour tous les tableaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1397">This property is always <see langword="false" /> for all arrays.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1398"><xref:System.Array> implémente le <xref:System.Array.IsSynchronized%2A> propriété car il est requis par le <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1398"><xref:System.Array> implements the <xref:System.Array.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="4f8a3-1399">Les classes .NET framework basées sur <xref:System.Array> fournissent leur propre version synchronisée de la collection à l’aide de la <xref:System.Array.SyncRoot%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1399">.NET Framework classes based on <xref:System.Array> provide their own synchronized version of the collection using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="4f8a3-1400">Les classes qui utilisent des tableaux peuvent également implémenter leur propre à l’aide de la synchronisation du <xref:System.Array.SyncRoot%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1400">Classes that use arrays can also implement their own synchronization using the <xref:System.Array.SyncRoot%2A> property.</span></span> <span data-ttu-id="4f8a3-1401">Le code de synchronisation doit effectuer les opérations sur les `SyncRoot` de la collection, et non directement sur la collection.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1401">The synchronizing code must perform operations on the `SyncRoot` of the collection, not directly on the collection.</span></span> <span data-ttu-id="4f8a3-1402">Cela garantit un bon fonctionnement des collections dérivées d’autres objets.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1402">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="4f8a3-1403">Plus particulièrement, il maintient la synchronisation est assurée avec les autres threads qui pourraient modifier simultanément la collection.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1403">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection.</span></span> <span data-ttu-id="4f8a3-1404">Notez que certaines implémentations de <xref:System.Array.SyncRoot%2A> peut retourner le <xref:System.Array> lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1404">Note that some implementations of <xref:System.Array.SyncRoot%2A> might return the <xref:System.Array> itself.</span></span>  
  
 <span data-ttu-id="4f8a3-1405">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1405">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="4f8a3-1406">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1406">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="4f8a3-1407">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1407">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="4f8a3-1408">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1408">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1409">L’exemple de code suivant montre comment verrouiller un tableau pendant l’ensemble de l’énumération à l’aide de la <xref:System.Array.SyncRoot%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1409">The following code example shows how to lock an array during the entire enumeration by using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 [!code-cpp[System.Array.SyncRoot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.SyncRoot/cpp/source.cpp#1)]
 [!code-csharp[System.Array.SyncRoot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.SyncRoot/cs/source.cs#1)]
 [!code-vb[System.Array.SyncRoot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.SyncRoot/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1410">Retourne l'index de la dernière occurrence d'une valeur dans un <see cref="T:System.Array" /> unidimensionnel ou dans une partie de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1410">Returns the index of the last occurrence of a value in a one-dimensional <see cref="T:System.Array" /> or in a portion of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-1411">
            <see cref="T:System.Array" /> unidimensionnel à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1411">The one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-1412">Objet à rechercher dans <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1412">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1413">Recherche l'objet spécifié et retourne l'index de la dernière occurrence dans l'ensemble du <see cref="T:System.Array" /> unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1413">Searches for the specified object and returns the index of the last occurrence within the entire one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1414">Index de la dernière occurrence de <paramref name="value" /> dans le <paramref name="array" /> entier, s'il existe ; sinon, la limite inférieure du tableau -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1414">The index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1415">Unidimensionnel <xref:System.Array> recherche est effectuée vers l’arrière à partir du dernier élément du premier élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1415">The one-dimensional <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="4f8a3-1416">Les éléments sont comparés à la valeur spécifiée à l’aide de la <xref:System.Object.Equals%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1416">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4f8a3-1417">Si le type d’élément est un type non intrinsèque de (défini par l’utilisateur), le `Equals` implémentation de ce type est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1417">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="4f8a3-1418">Étant donné que la plupart des tableaux ont une limite inférieure de zéro, cette méthode retourne généralement-1 si `value` est introuvable.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1418">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="4f8a3-1419">Dans les rares cas où la limite inférieure du tableau est égale à <xref:System.Int32.MinValue?displayProperty=nameWithType> et `value` n’est trouvé, cette méthode retourne <xref:System.Int32.MaxValue?displayProperty=nameWithType>, qui est `System.Int32.MinValue - 1`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1419">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="4f8a3-1420">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1420">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="4f8a3-1421">Dans le .NET Framework version 2.0, cette méthode utilise le <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la <xref:System.Array> pour déterminer si le <xref:System.Object> spécifié par le `value` paramètre existe.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1421">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="4f8a3-1422">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `value` <xref:System.Object> lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1422">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
 <span data-ttu-id="4f8a3-1423"><xref:System.IComparable.CompareTo%2A> méthodes de le `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1423"><xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1424">L’exemple de code suivant montre comment déterminer l’index de la dernière occurrence d’un élément spécifié dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1424">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1425">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1425">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1426">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1426">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-1427">
            <see cref="T:System.Array" /> unidimensionnel à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1427">The one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-1428">Objet à rechercher dans <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1428">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4f8a3-1429">Index de départ de la recherche vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1429">The starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1430">Recherche l'objet spécifié et retourne l'index de la dernière occurrence dans la plage d'éléments du <see cref="T:System.Array" /> unidimensionnel qui s'étend du premier élément jusqu'à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1430">Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1431">Index de la dernière occurrence de <paramref name="value" /> dans la plage d'éléments de <paramref name="array" /> qui s'étend du premier élément jusqu'à <paramref name="startIndex" />, s'il existe ; sinon, la limite inférieure du tableau -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1431">The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1432">Unidimensionnel <xref:System.Array> est effectuée vers l’arrière commençant à `startIndex` et jusqu’au premier élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1432">The one-dimensional <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="4f8a3-1433">Les éléments sont comparés à la valeur spécifiée à l’aide de la <xref:System.Object.Equals%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1433">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4f8a3-1434">Si le type d’élément est un type non intrinsèque de (défini par l’utilisateur), le `Equals` implémentation de ce type est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1434">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="4f8a3-1435">Étant donné que la plupart des tableaux ont une limite inférieure de zéro, cette méthode retourne généralement-1 si `value` est introuvable.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1435">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="4f8a3-1436">Dans les rares cas où la limite inférieure du tableau est égale à <xref:System.Int32.MinValue?displayProperty=nameWithType> et `value` n’est trouvé, cette méthode retourne <xref:System.Int32.MaxValue?displayProperty=nameWithType>, qui est `System.Int32.MinValue - 1`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1436">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="4f8a3-1437">Cette méthode est un O (`n`) opération, où `n` est le nombre d’éléments à partir du début de `array` à `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1437">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
 <span data-ttu-id="4f8a3-1438">Dans le .NET Framework version 2.0, cette méthode utilise le <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la <xref:System.Array> pour déterminer si le <xref:System.Object> spécifié par le `value` paramètre existe.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1438">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="4f8a3-1439">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `value` <xref:System.Object> lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1439">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1440">L’exemple de code suivant montre comment déterminer l’index de la dernière occurrence d’un élément spécifié dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1440">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1441">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1441">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1442">
            <paramref name="startIndex" /> est en dehors de la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1442">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1443">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1443">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-1444">
            <see cref="T:System.Array" /> unidimensionnel à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1444">The one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-1445">Objet à rechercher dans <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1445">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4f8a3-1446">Index de départ de la recherche vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1446">The starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4f8a3-1447">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1447">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1448">Recherche l'objet spécifié et retourne l'index de la dernière occurrence dans la plage d'éléments du <see cref="T:System.Array" /> unidimensionnel qui contient le nombre d'éléments spécifié et se termine à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1448">Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1449">Index de la dernière occurrence de <paramref name="value" /> dans la plage d'éléments de <paramref name="array" /> qui contient le nombre d'éléments spécifié dans <paramref name="count" /> et se termine à <paramref name="startIndex" />, si cette occurrence existe ; sinon, la limite inférieure du tableau -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1449">The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1450">Unidimensionnel <xref:System.Array> est effectuée vers l’arrière commençant à `startIndex` et se terminant à `startIndex` moins `count` + 1, si `count` est supérieur à 0.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1450">The one-dimensional <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="4f8a3-1451">Les éléments sont comparés à la valeur spécifiée à l’aide de la <xref:System.Object.Equals%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1451">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4f8a3-1452">Si le type d’élément est un type non intrinsèque de (défini par l’utilisateur), le`Equals` implémentation de ce type est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1452">If the element type is a nonintrinsic (user-defined) type, the`Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="4f8a3-1453">Étant donné que la plupart des tableaux ont une limite inférieure de zéro, cette méthode retourne généralement-1 si `value` est introuvable.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1453">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="4f8a3-1454">Dans les rares cas où la limite inférieure du tableau est égale à <xref:System.Int32.MinValue?displayProperty=nameWithType> et `value` n’est trouvé, cette méthode retourne <xref:System.Int32.MaxValue?displayProperty=nameWithType>, qui est `System.Int32.MinValue - 1`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1454">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="4f8a3-1455">Cette méthode est un O (`n`) opération, où `n` est `count`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1455">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="4f8a3-1456">Dans le .NET Framework version 2.0, cette méthode utilise le <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la <xref:System.Array> pour déterminer si le <xref:System.Object> spécifié par le `value` paramètre existe.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1456">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="4f8a3-1457">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `value` <xref:System.Object> lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1457">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1458">L’exemple de code suivant montre comment déterminer l’index de la dernière occurrence d’un élément spécifié dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1458">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span> <span data-ttu-id="4f8a3-1459">Notez que la <xref:System.Array.LastIndexOf%2A> méthode est une recherche vers l’arrière ; par conséquent, `count` doit être inférieur ou égal à (`startIndex` -la limite inférieure du tableau + 1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1459">Note that the <xref:System.Array.LastIndexOf%2A> method is a backward search; therefore, `count` must be less than or equal to (`startIndex` minus the lower bound of the array plus 1).</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1460">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1460">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1461">
            <paramref name="startIndex" /> n’est pas compris dans la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1461">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1462">-ou- <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1462">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-1463">-ou- <paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas de section valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1463">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1464">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1464">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1465">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1465">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1466">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1466">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-1467">Objet à rechercher dans <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1467">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1468">Recherche l'objet spécifié et retourne l'index de la dernière occurrence dans le <see cref="T:System.Array" /> entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1468">Searches for the specified object and returns the index of the last occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1469">Index de base zéro de la dernière occurrence de <paramref name="value" /> dans le <paramref name="array" /> entier, si cette occurrence existe ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1469">The zero-based index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1470">Le <xref:System.Array> recherche est effectuée vers l’arrière à partir du dernier élément du premier élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1470">The <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="4f8a3-1471">Les éléments sont comparés à la valeur spécifiée à l’aide de la <xref:System.Object.Equals%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1471">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4f8a3-1472">Si le type d’élément est un type non intrinsèque de (défini par l’utilisateur), le `Equals` implémentation de ce type est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1472">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="4f8a3-1473">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1473">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1474">L’exemple de code suivant illustre les trois surcharges génériques de la <xref:System.Array.LastIndexOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1474">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="4f8a3-1475">Un tableau de chaînes est créé, avec une entrée qui apparaît deux fois, à l’emplacement d’index 0 et l’emplacement d’index 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1475">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="4f8a3-1476">Le <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> surcharge de méthode recherche l’intégralité de la fin du tableau et la deuxième occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1476">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="4f8a3-1477">Le <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher le tableau vers l’arrière en commençant par l’emplacement d’index 3 et en continuant vers le début du tableau et recherche la première occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1477">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="4f8a3-1478">Enfin, le <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher une plage de quatre entrées, en commençant à l’emplacement d’index 4 et en poursuivant vers le bas (autrement dit, il recherche les éléments aux emplacements 4, 3, 2 et 1) ; cette recherche retourne -1, car il n’existe aucune instance de la recherche chaîne dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1478">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1479">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1479">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1480">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1480">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1481">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1481">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-1482">Objet à rechercher dans <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1482">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4f8a3-1483">Index de début de base zéro de la recherche vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1483">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1484">Recherche l'objet spécifié et retourne l'index de la dernière occurrence dans la plage d'éléments du <see cref="T:System.Array" /> qui s'étend du premier élément jusqu'à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1484">Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1485">Index de base zéro de la dernière occurrence de <paramref name="value" /> dans la plage d'éléments du <paramref name="array" /> qui s'étend du premier élément jusqu'à <paramref name="startIndex" />, s'il existe ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1485">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1486">Le <xref:System.Array> est effectuée vers l’arrière commençant à `startIndex` et jusqu’au premier élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1486">The <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="4f8a3-1487">Les éléments sont comparés à la valeur spécifiée à l’aide de la <xref:System.Object.Equals%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1487">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4f8a3-1488">Si le type d’élément est un type non intrinsèque de (défini par l’utilisateur), le `Equals` implémentation de ce type est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1488">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="4f8a3-1489">Cette méthode est un O (`n`) opération, où `n` est le nombre d’éléments à partir du début de `array` à `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1489">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1490">L’exemple de code suivant illustre les trois surcharges génériques de la <xref:System.Array.LastIndexOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1490">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="4f8a3-1491">Un tableau de chaînes est créé, avec une entrée qui apparaît deux fois, à l’emplacement d’index 0 et l’emplacement d’index 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1491">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="4f8a3-1492">Le <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> surcharge de méthode recherche l’intégralité de la fin du tableau et la deuxième occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1492">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="4f8a3-1493">Le <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher le tableau vers l’arrière en commençant par l’emplacement d’index 3 et en continuant vers le début du tableau et recherche la première occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1493">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="4f8a3-1494">Enfin, le <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher une plage de quatre entrées, en commençant à l’emplacement d’index 4 et en poursuivant vers le bas (autrement dit, il recherche les éléments aux emplacements 4, 3, 2 et 1) ; cette recherche retourne -1, car il n’existe aucune instance de la recherche chaîne dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1494">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1495">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1495">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1496">
            <paramref name="startIndex" /> n’est pas compris dans la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1496">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1497">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1497">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1498">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à explorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1498">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-1499">Objet à rechercher dans <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1499">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="4f8a3-1500">Index de début de base zéro de la recherche vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1500">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4f8a3-1501">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1501">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1502">Recherche l'objet spécifié et retourne l'index de la dernière occurrence dans la plage d'éléments du <see cref="T:System.Array" /> qui contient le nombre d'éléments spécifié et se termine à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1502">Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-1503">Index de base zéro de la dernière occurrence de <paramref name="value" /> dans la plage d'éléments du <paramref name="array" /> qui contient le nombre d'éléments spécifié dans <paramref name="count" /> et se termine à <paramref name="startIndex" />, s'il existe ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1503">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1504">Le <xref:System.Array> est effectuée vers l’arrière commençant à `startIndex` et se terminant à `startIndex` moins `count` + 1, si `count` est supérieur à 0.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1504">The <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="4f8a3-1505">Les éléments sont comparés à la valeur spécifiée à l’aide de la <xref:System.Object.Equals%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1505">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4f8a3-1506">Si le type d’élément est un type non intrinsèque de (défini par l’utilisateur), le `Equals` implémentation de ce type est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1506">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="4f8a3-1507">Cette méthode est un O (`n`) opération, où `n` est `count`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1507">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1508">L’exemple de code suivant illustre les trois surcharges génériques de la <xref:System.Array.LastIndexOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1508">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="4f8a3-1509">Un tableau de chaînes est créé, avec une entrée qui apparaît deux fois, à l’emplacement d’index 0 et l’emplacement d’index 5.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1509">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="4f8a3-1510">Le <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> surcharge de méthode recherche l’intégralité de la fin du tableau et la deuxième occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1510">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="4f8a3-1511">Le <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher le tableau vers l’arrière en commençant par l’emplacement d’index 3 et en continuant vers le début du tableau et recherche la première occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1511">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="4f8a3-1512">Enfin, le <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher une plage de quatre entrées, en commençant à l’emplacement d’index 4 et en poursuivant vers le bas (autrement dit, il recherche les éléments aux emplacements 4, 3, 2 et 1) ; cette recherche retourne -1, car il n’existe aucune instance de la recherche chaîne dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1512">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1513">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1513">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1514">
            <paramref name="startIndex" /> n’est pas compris dans la plage d’index valides pour <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1514">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1515">-ou- <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1515">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-1516">-ou- <paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas de section valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1516">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Array.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1517">Obtient le nombre total d’éléments dans toutes les dimensions du <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1517">Gets the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f8a3-1518">Le nombre total d’éléments dans toutes les dimensions de la <see cref="T:System.Array" />; zéro si le tableau ne contient aucun élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1518">The total number of elements in all the dimensions of the <see cref="T:System.Array" />; zero if there are no elements in the array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1519">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1519">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1520">L’exemple suivant utilise le <xref:System.Array.Length%2A> propriété à obtenir le nombre total d’éléments dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1520">The following example uses the <xref:System.Array.Length%2A> property to get the total number of elements in an array.</span></span> <span data-ttu-id="4f8a3-1521">Elle utilise également la <xref:System.Array.GetUpperBound%2A> méthode pour déterminer le nombre d’éléments dans chaque dimension d’un tableau multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1521">It also uses the <xref:System.Array.GetUpperBound%2A> method to determine the number of elements in each dimension of a multidimensional array.</span></span>  
  
 [!code-csharp[System.Array.Length#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.length/cs/length1.cs#1)]
 [!code-vb[System.Array.Length#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.length/vb/length1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4f8a3-1522">Le tableau est multidimensionnel et contient plus de <see cref="F:System.Int32.MaxValue" /> éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1522">The array is multidimensional and contains more than <see cref="F:System.Int32.MaxValue" /> elements.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="P:System.Array.LongLength" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="LongLength">
      <MemberSignature Language="C#" Value="public long LongLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LongLength" />
      <MemberSignature Language="DocId" Value="P:System.Array.LongLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LongLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LongLength { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1523">Obtient un entier 64 bits qui représente le nombre total d’éléments dans toutes les dimensions du <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1523">Gets a 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f8a3-1524">Entier 64 bits qui représente le nombre total d'éléments dans toutes les dimensions de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1524">A 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1525">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1525">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
        <altmember cref="P:System.Array.Length" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public int Rank { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rank" />
      <MemberSignature Language="DocId" Value="P:System.Array.Rank" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rank { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1526">Obtient le rang (nombre de dimensions) de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1526">Gets the rank (number of dimensions) of the <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1527">Par exemple, un tableau unidimensionnel retourne 1, un tableau bidimensionnel retourne 2, etc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1527">For example, a one-dimensional array returns 1, a two-dimensional array returns 2, and so on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f8a3-1528">Rang (nombre de dimensions) de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1528">The rank (number of dimensions) of the <see cref="T:System.Array" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1529">Par exemple, le code Visual Basic</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1529">For example, the Visual Basic code</span></span>  
  
```vb  
Dim TDArray(0,0,0) As Integer  
```  
  
 <span data-ttu-id="4f8a3-1530">et le code c#</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1530">and the C# code</span></span>  
  
```csharp  
int[,,] TDArray = new int[1,1,1];  
```  
  
 <span data-ttu-id="4f8a3-1531">créer un tableau de trois dimensions avec un <xref:System.Array.Rank%2A> propriété dont la valeur est 3.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1531">create an array of three dimensions with a <xref:System.Array.Rank%2A> property whose value is 3.</span></span>  
  
 <span data-ttu-id="4f8a3-1532">Un tableau en escalier (tableau de tableaux) est un tableau unidimensionnel. la valeur de son <xref:System.Array.Rank%2A> propriété est 1.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1532">A jagged array (an array of arrays) is a one-dimensional array; the value of its <xref:System.Array.Rank%2A> property is 1.</span></span>  
  
 <span data-ttu-id="4f8a3-1533">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1533">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1534">L’exemple suivant initialise un tableau unidimensionnel, un tableau à deux dimensions et un tableau en escalier et récupère le <xref:System.Array.Rank%2A> propriété de chacun.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1534">The following example initializes a one-dimensional array, a two-dimensional array, and a jagged array, and retrieves the <xref:System.Array.Rank%2A> property of each.</span></span>  
  
 [!code-csharp[System.Array.Rank#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.rank/cs/rank1.cs#1)]
 [!code-vb[System.Array.Rank#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.rank/vb/rank1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="P:System.Array.LongLength" />
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Resize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Resize&lt;T&gt; (ref T[] array, int newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Resize&lt;T&gt;(!!T[]&amp; array, int32 newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Resize``1(``0[]@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Resize(Of T) (ByRef array As T(), newSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Resize(cli::array &lt;T&gt; ^ % array, int newSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]&amp;" RefType="ref" />
        <Parameter Name="newSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1535">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1535">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1536">Tableau unidimensionnel de base zéro à redimensionner, ou <see langword="null" /> pour créer un tableau avec la taille spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1536">The one-dimensional, zero-based array to resize, or <see langword="null" /> to create a new array with the specified size.</span>
          </span>
        </param>
        <param name="newSize">
          <span data-ttu-id="4f8a3-1537">Taille du nouveau tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1537">The size of the new array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1538">Modifie le nombre d'éléments d'un tableau unidimensionnel avec la nouvelle taille spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1538">Changes the number of elements of a one-dimensional array to the specified new size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1539">Cette méthode alloue un nouveau tableau avec la taille spécifiée, copie les éléments à partir de l’ancien tableau vers le nouveau, puis remplace l’ancien tableau par la nouvelle.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1539">This method allocates a new array with the specified size, copies elements from the old array to the new one, and then replaces the old array with the new one.</span></span> <span data-ttu-id="4f8a3-1540">`array` doit être un tableau unidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1540">`array` must be a one-dimensional array.</span></span>  
  
 <span data-ttu-id="4f8a3-1541">Si `array` est `null`, cette méthode crée un nouveau tableau avec la taille spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1541">If `array` is `null`, this method creates a new array with the specified size.</span></span>  
  
 <span data-ttu-id="4f8a3-1542">Si `newSize` est supérieure à la <xref:System.Array.Length%2A> de l’ancien tableau, un nouveau tableau est alloué et tous les éléments sont copiés depuis l’ancien tableau vers le nouveau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1542">If `newSize` is greater than the <xref:System.Array.Length%2A> of the old array, a new array is allocated and all the elements are copied from the old array to the new one.</span></span>  <span data-ttu-id="4f8a3-1543">Si `newSize` est inférieure à la <xref:System.Array.Length%2A> de l’ancien tableau, un nouveau tableau est alloué et les éléments sont copiés depuis l’ancien tableau vers le nouveau jusqu'à ce que le nouveau soit rempli ; le reste des éléments de l’ancien tableau sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1543">If `newSize` is less than the <xref:System.Array.Length%2A> of the old array, a new array is allocated and elements are copied from the old array to the new one until the new one is filled; the rest of the elements in the old array are ignored.</span></span>  <span data-ttu-id="4f8a3-1544">Si `newSize` est égal à la <xref:System.Array.Length%2A> de l’ancien tableau, cette méthode ne fait rien.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1544">If `newSize` is equal to the <xref:System.Array.Length%2A> of the old array, this method does nothing.</span></span>  
  
 <span data-ttu-id="4f8a3-1545">Cette méthode est un O (`n`) opération, où `n` est `newSize`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1545">This method is an O(`n`) operation, where `n` is `newSize`.</span></span>  
  
 <span data-ttu-id="4f8a3-1546">Le <xref:System.Array.Resize%2A> méthode redimensionne un tableau unidimensionnel uniquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1546">The <xref:System.Array.Resize%2A> method resizes a one-dimensional array only.</span></span> <span data-ttu-id="4f8a3-1547">Le <xref:System.Array> ne s’applique pas une méthode pour le redimensionnement des tableaux multidimensionnels.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1547">The <xref:System.Array> class does not include a method for resizing multi-dimensional arrays.</span></span> <span data-ttu-id="4f8a3-1548">Pour ce faire, vous devez fournir votre propre code ou appeler une méthode spéciale dans une bibliothèque tierce.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1548">To do this, you must either provide your own code or call a special-purpose method in a third-party library.</span></span> <span data-ttu-id="4f8a3-1549">Le code suivant illustre une implémentation possible pour une méthode qui se redimensionne un tableau de *n* dimensions.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1549">The following code illustrates one possible implementation for a method that resizes an array of *n* dimensions.</span></span>  
  
 [!code-csharp[System.Array.Resize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Resize/CS/resizexd.cs#2)]
 [!code-vb[System.Array.Resize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Resize/VB/resizexd.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1550">L’exemple suivant montre comment le redimensionnement affecte le tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1550">The following example shows how resizing affects the array.</span></span>  
  
 [!code-cpp[System.Array.Resize#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Resize/CPP/System.Array.Resize.cpp#1)]
 [!code-csharp[System.Array.Resize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Resize/CS/arrayresize.cs#1)]
 [!code-vb[System.Array.Resize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Resize/VB/arrayresize.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1551">
            <paramref name="newSize" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1551">
              <paramref name="newSize" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1552">Inverse l'ordre des éléments dans un <see cref="T:System.Array" /> unidimensionnel ou dans une partie de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1552">Reverses the order of the elements in a one-dimensional <see cref="T:System.Array" /> or in a portion of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static void Reverse (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reverse(Array ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-1553">
            <see cref="T:System.Array" /> unidimensionnel à inverser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1553">The one-dimensional <see cref="T:System.Array" /> to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1554">Inverse l'ordre des éléments dans l'intégralité du <see cref="T:System.Array" /> unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1554">Reverses the sequence of the elements in the entire one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1555">Après un appel à cette méthode, l’élément au niveau `myArray[i]`, où `i` est un index dans le tableau, la déplace vers `myArray[j]`, où `j` est égal à `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1555">After a call to this method, the element at `myArray[i]`, where `i` is any index in the array, moves to `myArray[j]`, where `j` equals `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span></span>  
  
 <span data-ttu-id="4f8a3-1556">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1556">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="4f8a3-1557">Comme le montre l’exemple suivant, la <xref:System.Array.Reverse%2A> méthode peut être utilisée pour annuler un tableau en escalier.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1557">As the following example shows, the <xref:System.Array.Reverse%2A> method can be used to reverse a jagged array.</span></span> <span data-ttu-id="4f8a3-1558">Elle initialise un tableau en escalier avec un élément pour chaque mois de l’année en cours dans le calendrier de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1558">It initializes a jagged array with one element for each month of the current year in the current culture's calendar.</span></span> <span data-ttu-id="4f8a3-1559">Chaque élément contient un tableau avec autant d’éléments que ce mois a jours.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1559">Each element contains an array with as many elements as that month has days.</span></span> <span data-ttu-id="4f8a3-1560">L’exemple affiche le contenu du tableau, appels le <xref:System.Array.Reverse%2A> (méthode), puis affiche le contenu du tableau inversé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1560">The example displays the contents of the array, calls the <xref:System.Array.Reverse%2A> method, and then displays the contents of the reversed array.</span></span>  
  
 [!code-csharp[System.Array.Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.reverse/cs/reversejagged.cs#1)]
 [!code-vb[System.Array.Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.reverse/vb/reversejagged.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1561">L’exemple de code suivant montre comment annuler le tri des valeurs dans une <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1561">The following code example shows how to reverse the sort of the values in an <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1562">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1562">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1563">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1563">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static void Reverse (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reverse(Array ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-1564">
            <see cref="T:System.Array" /> unidimensionnel à inverser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1564">The one-dimensional <see cref="T:System.Array" /> to reverse.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-1565">Index de départ de la section à inverser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1565">The starting index of the section to reverse.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-1566">Nombre d'éléments contenus dans la section à inverser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1566">The number of elements in the section to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1567">Inverse l'ordre des éléments dans la plage d'éléments d'un <see cref="T:System.Array" /> unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1567">Reverses the sequence of the elements in a range of elements in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1568">Après un appel à cette méthode, l’élément au niveau `myArray[i]`, où `i` est un index dans le tableau, la déplace vers `myArray[j]`, où `j` est égal à `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1568">After a call to this method, the element at `myArray[i]`, where `i` is any index in the array, moves to `myArray[j]`, where `j` equals `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span></span>  
  
 <span data-ttu-id="4f8a3-1569">Le <xref:System.Array.Reverse%2A> méthode peut être utilisée pour annuler un tableau en escalier.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1569">The <xref:System.Array.Reverse%2A> method can be used to reverse a jagged array.</span></span>  
  
 <span data-ttu-id="4f8a3-1570">Cette méthode est un O (`n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1570">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1571">L’exemple de code suivant montre comment annuler le tri des valeurs dans une plage d’éléments dans un <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1571">The following code example shows how to reverse the sort of the values in a range of elements in an <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1572">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1572">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1573">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1573">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1574">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1574">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1575">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1575">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1576">
            <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1576">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Reverse&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Reverse(Of T) (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Reverse(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Reverse&lt;T&gt; (T[] array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse&lt;T&gt;(!!T[] array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Reverse(Of T) (array As T(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Reverse(cli::array &lt;T&gt; ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1577">Affecte la valeur spécifiée à l'élément déterminé dans le <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1577">Sets the specified element in the current <see cref="T:System.Array" /> to the specified value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f8a3-1578">Nouvelle valeur de l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1578">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-1579">Entier 32 bits qui représente la position de l'élément <see cref="T:System.Array" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1579">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1580">Affecte une valeur à l'élément à la position spécifiée du <see cref="T:System.Array" /> unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1580">Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1581">L'index est spécifié en tant qu'entier 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1581">The index is specified as a 32-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1582">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si la valeur de `index` est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1582">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1583">Pour plus d’informations sur les conversions, consultez <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1583">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="4f8a3-1584">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1584">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1585">Si <xref:System.Array.SetValue%2A> est utilisée pour affecter `null` à un élément d’un tableau de types valeur, tous les champs de l’élément sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1585">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="4f8a3-1586">La valeur de l’élément n’est pas une référence null et ne peut pas être trouvée en recherchant une référence null.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1586">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1587">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1587">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1588">Le <see cref="T:System.Array" /> en cours ne possède pas exactement une dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1588">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-1589">Le cast automatique de <paramref name="value" /> en type d'élément du <see cref="T:System.Array" /> en cours est impossible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1589">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-1590">
            <paramref name="index" /> est en dehors de la plage d'index valide pour le <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1590">
              <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, params int[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, ParamArray indices As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, ... cli::array &lt;int&gt; ^ indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="indices" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f8a3-1591">Nouvelle valeur de l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1591">The new value for the specified element.</span>
          </span>
        </param>
        <param name="indices">
          <span data-ttu-id="4f8a3-1592">Tableau unidimensionnel d'entiers 32 bits qui représentent les index spécifiant la position de l'élément à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1592">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1593">Affecte une valeur à l'élément à la position spécifiée du <see cref="T:System.Array" /> multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1593">Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1594">Les index sont spécifiés sous la forme d'un tableau d'entiers 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1594">The indexes are specified as an array of 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1595">Le nombre d’éléments dans `indices` doit être égal au nombre de dimensions dans le <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1595">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-1596">Tous les éléments dans le `indices` tableau doit spécifier collectivement la position de l’élément souhaité dans les données multidimensionnelles <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1596">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-1597">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si une des valeurs dans le `indices` tableau est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1597">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the values in the `indices` array is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1598">Pour plus d’informations sur les conversions, consultez <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1598">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="4f8a3-1599">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1599">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1600">Si <xref:System.Array.SetValue%2A> est utilisée pour affecter `null` à un élément d’un tableau de types valeur, tous les champs de l’élément sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1600">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="4f8a3-1601">La valeur de l’élément n’est pas une référence null et ne peut pas être trouvée en recherchant une référence null.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1601">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1602">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1602">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1603">
            <paramref name="indices" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1603">
              <paramref name="indices" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1604">Le nombre de dimensions dans le <see cref="T:System.Array" /> en cours n'est pas égal au nombre d'éléments dans <paramref name="indices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1604">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-1605">Le cast automatique de <paramref name="value" /> en type d'élément du <see cref="T:System.Array" /> en cours est impossible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1605">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-1606">Tous les éléments de <paramref name="indices" /> sont en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1606">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f8a3-1607">Nouvelle valeur de l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1607">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-1608">Entier 64 bits qui représente la position de l’élément <see cref="T:System.Array" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1608">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1609">Affecte une valeur à l'élément à la position spécifiée du <see cref="T:System.Array" /> unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1609">Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1610">L'index est spécifié en tant qu'entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1610">The index is specified as a 64-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1611">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si la valeur de `index` est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1611">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1612">Pour plus d’informations sur les conversions, consultez <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1612">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="4f8a3-1613">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1613">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1614">Si <xref:System.Array.SetValue%2A> est utilisée pour affecter `null` à un élément d’un tableau de types valeur, tous les champs de l’élément sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1614">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="4f8a3-1615">La valeur de l’élément n’est pas une référence null et ne peut pas être trouvée en recherchant une référence null.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1615">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1616">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1616">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1617">Le <see cref="T:System.Array" /> en cours ne possède pas exactement une dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1617">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-1618">Le cast automatique de <paramref name="value" /> en type d'élément du <see cref="T:System.Array" /> en cours est impossible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1618">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1619">
            <paramref name="index" /> est en dehors de la plage d'index valide pour le <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1619">
              <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, params long[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, ParamArray indices As Long())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, ... cli::array &lt;long&gt; ^ indices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="indices" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f8a3-1620">Nouvelle valeur de l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1620">The new value for the specified element.</span>
          </span>
        </param>
        <param name="indices">
          <span data-ttu-id="4f8a3-1621">Tableau unidimensionnel d'entiers 64 bits qui représentent les index spécifiant la position de l'élément à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1621">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1622">Affecte une valeur à l'élément à la position spécifiée du <see cref="T:System.Array" /> multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1622">Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1623">Les index sont spécifiés sous la forme d'un tableau d'entiers 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1623">The indexes are specified as an array of 64-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1624">Le nombre d’éléments dans `indices` doit être égal au nombre de dimensions dans le <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1624">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-1625">Tous les éléments dans le `indices` tableau doit spécifier collectivement la position de l’élément souhaité dans les données multidimensionnelles <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1625">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-1626">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si une des valeurs dans le `indices` tableau est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1626">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the values in the `indices` array is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1627">Pour plus d’informations sur les conversions, consultez <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1627">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="4f8a3-1628">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1628">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1629">Si <xref:System.Array.SetValue%2A> est utilisée pour affecter `null` à un élément d’un tableau de types valeur, tous les champs de l’élément sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1629">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="4f8a3-1630">La valeur de l’élément n’est pas une référence null et ne peut pas être trouvée en recherchant une référence null.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1630">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1631">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1631">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1632">
            <paramref name="indices" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1632">
              <paramref name="indices" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1633">Le nombre de dimensions dans le <see cref="T:System.Array" /> en cours n'est pas égal au nombre d'éléments dans <paramref name="indices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1633">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-1634">Le cast automatique de <paramref name="value" /> en type d'élément du <see cref="T:System.Array" /> en cours est impossible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1634">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1635">Tous les éléments de <paramref name="indices" /> sont en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1635">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index1, int index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index1, int32 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Integer, index2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index1, int index2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f8a3-1636">Nouvelle valeur de l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1636">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index1">
          <span data-ttu-id="4f8a3-1637">Entier 32 bits qui représente l'index de la première dimension de l'élément <see cref="T:System.Array" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1637">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="4f8a3-1638">Entier 32 bits qui représente l'index de la seconde dimension de l'élément <see cref="T:System.Array" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1638">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1639">Affecte une valeur à l'élément à la position spécifiée du <see cref="T:System.Array" /> à deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1639">Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1640">Les index sont spécifiés en tant qu'entiers 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1640">The indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1641">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si un des index est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1641">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1642">Pour plus d’informations sur les conversions, consultez <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1642">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="4f8a3-1643">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1643">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1644">Si <xref:System.Array.SetValue%2A> est utilisée pour affecter `null` à un élément d’un tableau de types valeur, tous les champs de l’élément sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1644">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="4f8a3-1645">La valeur de l’élément n’est pas une référence null et ne peut pas être trouvée en recherchant une référence null.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1645">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1646">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1646">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1647">Le <see cref="T:System.Array" /> en cours ne possède pas exactement deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1647">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-1648">Le cast automatique de <paramref name="value" /> en type d'élément du <see cref="T:System.Array" /> en cours est impossible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1648">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-1649">
            <paramref name="index1" /> ou <paramref name="index2" /> est en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1649">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index1, long index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index1, int64 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Long, index2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index1, long index2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f8a3-1650">Nouvelle valeur de l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1650">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index1">
          <span data-ttu-id="4f8a3-1651">Entier 64 bits qui représente l’index de la première dimension de l’élément <see cref="T:System.Array" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1651">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="4f8a3-1652">Entier 64 bits qui représente l’index de la deuxième dimension de l’élément <see cref="T:System.Array" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1652">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1653">Affecte une valeur à l'élément à la position spécifiée du <see cref="T:System.Array" /> à deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1653">Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1654">Les index sont spécifiés en tant qu'entiers 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1654">The indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1655">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si un des index est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1655">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1656">Pour plus d’informations sur les conversions, consultez <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1656">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="4f8a3-1657">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1657">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1658">Si <xref:System.Array.SetValue%2A> est utilisée pour affecter `null` à un élément d’un tableau de types valeur, tous les champs de l’élément sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1658">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="4f8a3-1659">La valeur de l’élément n’est pas une référence null et ne peut pas être trouvée en recherchant une référence null.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1659">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1660">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1660">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1661">Le <see cref="T:System.Array" /> en cours ne possède pas exactement deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1661">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-1662">Le cast automatique de <paramref name="value" /> en type d'élément du <see cref="T:System.Array" /> en cours est impossible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1662">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1663">
            <paramref name="index1" /> ou <paramref name="index2" /> est en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1663">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index1, int index2, int index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index1, int32 index2, int32 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Integer, index2 As Integer, index3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index1, int index2, int index3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
        <Parameter Name="index3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f8a3-1664">Nouvelle valeur de l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1664">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index1">
          <span data-ttu-id="4f8a3-1665">Entier 32 bits qui représente l'index de la première dimension de l'élément <see cref="T:System.Array" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1665">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="4f8a3-1666">Entier 32 bits qui représente l'index de la seconde dimension de l'élément <see cref="T:System.Array" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1666">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index3">
          <span data-ttu-id="4f8a3-1667">Entier 32 bits qui représente l'index de la troisième dimension de l'élément <see cref="T:System.Array" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1667">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1668">Affecte une valeur à l'élément à la position spécifiée du <see cref="T:System.Array" /> à trois dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1668">Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1669">Les index sont spécifiés en tant qu'entiers 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1669">The indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1670">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si un des index est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1670">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1671">Pour plus d’informations sur les conversions, consultez <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1671">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="4f8a3-1672">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1672">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1673">Si <xref:System.Array.SetValue%2A> est utilisée pour affecter `null` à un élément d’un tableau de types valeur, tous les champs de l’élément sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1673">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="4f8a3-1674">La valeur de l’élément n’est pas une référence null et ne peut pas être trouvée en recherchant une référence null.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1674">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1675">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1675">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1676">Le <see cref="T:System.Array" /> en cours ne possède pas exactement trois dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1676">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-1677">Le cast automatique de <paramref name="value" /> en type d'élément du <see cref="T:System.Array" /> en cours est impossible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1677">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="4f8a3-1678">
            <paramref name="index1" />, <paramref name="index2" /> ou <paramref name="index3" /> est en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1678">
              <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index1, long index2, long index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index1, int64 index2, int64 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Long, index2 As Long, index3 As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index1, long index2, long index3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
        <Parameter Name="index3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f8a3-1679">Nouvelle valeur de l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1679">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index1">
          <span data-ttu-id="4f8a3-1680">Entier 64 bits qui représente l’index de la première dimension de l’élément <see cref="T:System.Array" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1680">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="4f8a3-1681">Entier 64 bits qui représente l’index de la deuxième dimension de l’élément <see cref="T:System.Array" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1681">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index3">
          <span data-ttu-id="4f8a3-1682">Entier 64 bits qui représente l’index de la troisième dimension de l’élément <see cref="T:System.Array" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1682">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1683">Affecte une valeur à l'élément à la position spécifiée du <see cref="T:System.Array" /> à trois dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1683">Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1684">Les index sont spécifiés en tant qu'entiers 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1684">The indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1685">Le <xref:System.Array.GetLowerBound%2A> et <xref:System.Array.GetUpperBound%2A> méthodes peuvent déterminer si un des index est hors limites.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1685">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="4f8a3-1686">Pour plus d’informations sur les conversions, consultez <xref:System.Convert>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1686">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="4f8a3-1687">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1687">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1688">Si <xref:System.Array.SetValue%2A> est utilisée pour affecter `null` à un élément d’un tableau de types valeur, tous les champs de l’élément sont initialisés à zéro.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1688">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="4f8a3-1689">La valeur de l’élément n’est pas une référence null et ne peut pas être trouvée en recherchant une référence null.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1689">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1690">L’exemple de code suivant montre comment définir et obtenir une valeur spécifique dans un tableau unidimensionnel ou multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1690">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1691">Le <see cref="T:System.Array" /> en cours ne possède pas exactement trois dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1691">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4f8a3-1692">Le cast automatique de <paramref name="value" /> en type d'élément du <see cref="T:System.Array" /> en cours est impossible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1692">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1693">
            <paramref name="index1" />, <paramref name="index2" /> ou <paramref name="index3" /> est en dehors de la plage d'index valide pour la dimension correspondante du <see cref="T:System.Array" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1693">
              <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-1694">Trie les éléments dans un tableau unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1694">Sorts the elements in a one-dimensional array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-1695">
            <see cref="T:System.Array" /> unidimensionnel à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1695">The one-dimensional <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1696">Trie les éléments dans l'intégralité d'un <see cref="T:System.Array" /> unidimensionnel à l'aide de l'implémentation de <see cref="T:System.IComparable" /> de chaque élément de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1696">Sorts the elements in an entire one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1697">Chaque élément de `array` doit implémenter la <xref:System.IComparable> interface afin de pouvoir faire des comparaisons avec tous les autres éléments de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1697">Each element of `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="4f8a3-1698">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1698">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-1699">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1699">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-1700">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1700">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1701">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1701">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1702">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1702">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-1703">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1703">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-1704">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1704">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-1705">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1705">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1706">L’exemple de code suivant montre comment trier les valeurs dans une <xref:System.Array> à l’aide du comparateur par défaut et un comparateur personnalisé qui inverse l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1706">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="4f8a3-1707">Notez que le résultat peut varier en fonction d’actuel <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1707">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1708">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1708">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1709">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1709">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-1710">Un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1710">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="4f8a3-1711">
            <see cref="T:System.Array" /> unidimensionnel qui contient les clés à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1711">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="4f8a3-1712">
            <see cref="T:System.Array" /> unidimensionnel qui contient les éléments correspondant à chaque clé dans <c>keys</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1712">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1713">-ou- <see langword="null" /> pour trier uniquement le <see cref="T:System.Array" /> de <c>clés</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1713">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1714">Trie une paire d'objets <see cref="T:System.Array" /> unidimensionnels (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1714">Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1715">Chaque clé dans le `keys` <xref:System.Array> possède un élément correspondant le `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1715">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-1716">Lorsqu’une clé est repositionnée pendant le tri, l’élément correspondant dans le `items` <xref:System.Array> est repositionnée de la même façon.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1716">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="4f8a3-1717">Par conséquent, le `items` <xref:System.Array> est trié selon la disposition des clés correspondantes dans le `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1717">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-1718">Chaque clé dans le `keys` <xref:System.Array> doit implémenter la <xref:System.IComparable> interface afin de pouvoir faire des comparaisons avec toutes les autres clés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1718">Each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="4f8a3-1719">Vous pouvez trier s’il existe plusieurs éléments clés, mais les éléments qui n’ont aucune clé correspondante ne seront pas triés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1719">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="4f8a3-1720">Vous ne pouvez pas trier s’il existe plusieurs clés que d’éléments ; cela lèverait une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1720">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="4f8a3-1721">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1721">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-1722">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1722">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-1723">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1723">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1724">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1724">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1725">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1725">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-1726">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1726">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-1727">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1727">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-1728">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `keys`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1728">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `keys`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1729">L’exemple suivant montre comment trier deux tableaux associés où le premier tableau contient les clés et le second contient les valeurs.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1729">The following example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="4f8a3-1730">Les tris sont effectués à l’aide du comparateur par défaut et un comparateur personnalisé qui inverse l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1730">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="4f8a3-1731">Notez que le résultat peut varier en fonction d’actuel <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1731">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1732">
            <paramref name="keys" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1732">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1733">
            <paramref name="keys" />
            <see cref="T:System.Array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1733">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="4f8a3-1734">-ou- <paramref name="items" /><see cref="T:System.Array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1734">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1735">
            <paramref name="items" /> n'est pas <see langword="null" /> et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1735">
              <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-1736">Un ou plusieurs éléments de <paramref name="keys" /><see cref="T:System.Array" /> n’implémentent pas l’interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1736">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-1737">Tableau unidimensionnel à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1737">The one-dimensional array to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-1738">Implémentation à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1738">The implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="4f8a3-1739">-ou- <see langword="null" /> pour utiliser l’implémentation de <see cref="T:System.IComparable" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1739">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1740">Trie les éléments d'un <see cref="T:System.Array" /> unidimensionnel à l'aide de l'objet <see cref="T:System.Collections.IComparer" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1740">Sorts the elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1741">Si `comparer` est `null`, chaque élément de `array` doit implémenter la <xref:System.IComparable> interface afin de pouvoir faire des comparaisons avec tous les autres éléments de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1741">If `comparer` is `null`, each element of `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="4f8a3-1742">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1742">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-1743">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1743">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-1744">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1744">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1745">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1745">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1746">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1746">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-1747">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1747">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-1748">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1748">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-1749">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1749">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="4f8a3-1750">Le .NET Framework inclut prédéfinis <xref:System.Collections.IComparer> implémentations répertoriés dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1750">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="4f8a3-1751">Implémentation</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1751">Implementation</span></span>|<span data-ttu-id="4f8a3-1752">Description </span><span class="sxs-lookup"><span data-stu-id="4f8a3-1752">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1753">Compare deux objets, mais effectue une comparaison respectant la casse des chaînes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1753">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1754">Compare deux objets en utilisant les conventions de tri de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1754">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1755">Compare deux objets en utilisant les conventions de tri de la culture dite indifférente.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1755">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1756">Compare deux objets de type `T` à l’aide d’ordre de tri par défaut du type.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1756">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="4f8a3-1757">Vous pouvez prennent également en charge les comparaisons personnalisées en fournissant une instance de votre propre <xref:System.Collections.IComparer> implémentation à la `comparer` paramètre.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1757">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="4f8a3-1758">L’exemple fait cela en définissant un `ReverseComparer` classe qui inverse l’ordre de tri par défaut pour les instances d’un type et effectue la comparaison de chaînes sans respecter la casse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1758">The example does this by defining a `ReverseComparer` class that reverses the default sort order for instances of a type and performs case-insensitive string comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1759">L’exemple suivant trie les valeurs dans un arrayby de chaîne à l’aide du comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1759">The following example sorts the values in a string arrayby using the default comparer.</span></span> <span data-ttu-id="4f8a3-1760">Il définit également une personnalisée <xref:System.Collections.IComparer> implémentation nommée `ReverseComparer` qui inverse l’ordre de tri par défaut d’un objet lors de l’exécution d’une comparaison de chaînes sans respecter la casse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1760">It also defines a custom <xref:System.Collections.IComparer> implementation named `ReverseComparer` that reverses an object's default sort order while performing a case-insensitive string comparison.</span></span> <span data-ttu-id="4f8a3-1761">Notez que la sortie peut varier en fonction de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1761">Note that the output might vary depending on the current culture.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1762">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1762">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1763">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1763">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-1764">
            <paramref name="comparer" /> est <see langword="null" /> et un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1764">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1765">L’implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1765">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="4f8a3-1766">Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 pendant la comparaison d’un élément à lui-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1766">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="4f8a3-1767">
            <para>Le .NET Framework 4 et versions antérieures utilisé uniquement l’algorithme de tri rapide. Tri rapide identifie les comparateurs non valides dans certaines situations dans lesquelles l’opération de tri lève une <see cref="T:System.IndexOutOfRangeException" /> exception et lève un <see cref="T:System.ArgumentException" /> exception à l’appelant. En commençant par la [ ! Include[net_v45](~/Includes/NET-V45-MD.MD)], il est possible que les opérations de tri précédemment a levé <see cref="T:System.ArgumentException" /> pas lève une exception, car les algorithmes de tri et heapsort d’insertion ne détectent pas un comparateur non valide. La plupart des cas, cela s’applique aux tableaux avec moins de 16 éléments.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1767">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="4f8a3-1768">
            <see cref="T:System.Array" /> unidimensionnel qui contient les clés à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1768">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="4f8a3-1769">
            <see cref="T:System.Array" /> unidimensionnel qui contient les éléments correspondant à chaque clé dans <c>keys</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1769">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1770">-ou- <see langword="null" /> pour trier uniquement le <see cref="T:System.Array" /> de <c>clés</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1770">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-1771">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1771">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="4f8a3-1772">-ou- <see langword="null" /> pour utiliser l’implémentation de <see cref="T:System.IComparable" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1772">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1773">Trie une paire d'objets <see cref="T:System.Array" /> unidimensionnels (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'objet <see cref="T:System.Collections.IComparer" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1773">Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1774">Chaque clé dans le `keys` <xref:System.Array> possède un élément correspondant le `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1774">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-1775">Lorsqu’une clé est repositionnée pendant le tri, l’élément correspondant dans le `items` <xref:System.Array> est repositionnée de la même façon.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1775">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="4f8a3-1776">Par conséquent, le `items` <xref:System.Array> est trié selon la disposition des clés correspondantes dans le `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1776">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-1777">Si `comparer` est `null`, chaque clé dans le `keys` <xref:System.Array> doit implémenter la <xref:System.IComparable> interface afin de pouvoir faire des comparaisons avec toutes les autres clés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1777">If `comparer` is `null`, each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="4f8a3-1778">Vous pouvez trier s’il existe plusieurs éléments clés, mais les éléments qui n’ont aucune clé correspondante ne seront pas triés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1778">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="4f8a3-1779">Vous ne pouvez pas trier s’il existe plusieurs clés que d’éléments ; cela lèverait une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1779">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="4f8a3-1780">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1780">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-1781">Le .NET Framework inclut prédéfinis <xref:System.Collections.IComparer> implémentations répertoriés dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1781">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="4f8a3-1782">Implémentation</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1782">Implementation</span></span>|<span data-ttu-id="4f8a3-1783">Description </span><span class="sxs-lookup"><span data-stu-id="4f8a3-1783">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1784">Compare deux objets, mais effectue une comparaison respectant la casse des chaînes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1784">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1785">Compare deux objets en utilisant les conventions de tri de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1785">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1786">Compare deux objets en utilisant les conventions de tri de la culture dite indifférente.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1786">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1787">Compare deux objets de type `T` à l’aide d’ordre de tri par défaut du type.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1787">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="4f8a3-1788">Vous pouvez prennent également en charge les comparaisons personnalisées en fournissant une instance de votre propre <xref:System.Collections.IComparer> implémentation à la `comparer` paramètre.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1788">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="4f8a3-1789">L’exemple fait cela en définissant un <xref:System.Collections.IComparer> implémentation qui inverse l’ordre de tri par défaut et effectue la comparaison de chaînes sans respecter la casse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1789">The example does this by defining an <xref:System.Collections.IComparer> implementation that reverses the default sort order and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="4f8a3-1790">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1790">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-1791">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1791">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1792">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1792">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1793">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1793">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-1794">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1794">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-1795">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1795">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-1796">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `keys`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1796">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `keys`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1797">L’exemple suivant montre comment trier deux tableaux associés où le premier tableau contient les clés et le second contient les valeurs.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1797">The following example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="4f8a3-1798">Les tris sont effectués à l’aide du comparateur par défaut et un comparateur personnalisé qui inverse l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1798">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="4f8a3-1799">Notez que le résultat peut varier en fonction d’actuel <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1799">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1800">
            <paramref name="keys" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1800">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1801">
            <paramref name="keys" />
            <see cref="T:System.Array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1801">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="4f8a3-1802">-ou- <paramref name="items" /><see cref="T:System.Array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1802">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1803">
            <paramref name="items" /> n'est pas <see langword="null" /> et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1803">
              <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1804">-ou- L’implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1804">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="4f8a3-1805">Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 pendant la comparaison d’un élément à lui-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1805">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-1806">
            <paramref name="comparer" /> est <see langword="null" />, et un ou plusieurs éléments de <paramref name="keys" /><see cref="T:System.Array" /> n’implémentent pas l’interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1806">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="4f8a3-1807">
            <para>Le .NET Framework 4 et versions antérieures utilisé uniquement l’algorithme de tri rapide. Tri rapide identifie les comparateurs non valides dans certaines situations dans lesquelles l’opération de tri lève une <see cref="T:System.IndexOutOfRangeException" /> exception et lève un <see cref="T:System.ArgumentException" /> exception à l’appelant. En commençant par la [ ! Include[net_v45](~/Includes/NET-V45-MD.MD)], il est possible que les opérations de tri que previouslythrew <see cref="T:System.ArgumentException" /> pas lève une exception, car les algorithmes de tri et heapsort d’insertion ne détectent pas un comparateur non valide. La plupart des cas, cela s’applique aux tableaux avec moins de 16 éléments.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1807">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previouslythrew <see cref="T:System.ArgumentException" /> will not throw an exception, becausethe insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-1808">
            <see cref="T:System.Array" /> unidimensionnel à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1808">The one-dimensional <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-1809">Index de départ de la plage à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1809">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-1810">Nombre d'éléments à trier dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1810">The number of elements in the range to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1811">Trie les éléments d'une plage d'éléments d'un <see cref="T:System.Array" /> unidimensionnel à l'aide de l'implémentation de <see cref="T:System.IComparable" /> de chaque élément de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1811">Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1812">Chaque élément dans la plage spécifiée d’éléments dans `array` doit implémenter la <xref:System.IComparable> interface afin de pouvoir faire des comparaisons avec tous les autres éléments de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1812">Each element within the specified range of elements in `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="4f8a3-1813">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1813">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-1814">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1814">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-1815">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1815">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1816">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1816">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1817">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1817">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-1818">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1818">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-1819">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1819">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-1820">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1820">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1821">L’exemple de code suivant montre comment trier les valeurs dans une <xref:System.Array> à l’aide du comparateur par défaut et un comparateur personnalisé qui inverse l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1821">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="4f8a3-1822">Notez que le résultat peut varier en fonction d’actuel <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1822">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1823">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1823">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1824">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1824">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1825">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1825">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1826">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1826">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1827">
            <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1827">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-1828">Un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1828">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="4f8a3-1829">
            <see cref="T:System.Array" /> unidimensionnel qui contient les clés à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1829">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="4f8a3-1830">
            <see cref="T:System.Array" /> unidimensionnel qui contient les éléments correspondant à chaque clé dans <c>keys</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1830">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1831">-ou- <see langword="null" /> pour trier uniquement le <see cref="T:System.Array" /> de <c>clés</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1831">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-1832">Index de départ de la plage à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1832">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-1833">Nombre d'éléments à trier dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1833">The number of elements in the range to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1834">Trie une plage d'éléments dans une paire d'objets <see cref="T:System.Array" /> unidimensionnels (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1834">Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1835">Chaque clé dans le `keys` <xref:System.Array> possède un élément correspondant le `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1835">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-1836">Lorsqu’une clé est repositionnée pendant le tri, l’élément correspondant dans le `items` <xref:System.Array> est repositionnée de la même façon.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1836">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="4f8a3-1837">Par conséquent, le `items` <xref:System.Array> est trié selon la disposition des clés correspondantes dans le `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1837">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-1838">Chaque clé de la plage spécifiée d’éléments dans le `keys` <xref:System.Array> doit implémenter la <xref:System.IComparable> interface afin de pouvoir faire des comparaisons avec toutes les autres clés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1838">Each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="4f8a3-1839">Vous pouvez trier s’il existe plusieurs éléments clés, mais les éléments qui n’ont aucune clé correspondante ne seront pas triés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1839">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="4f8a3-1840">Vous ne pouvez pas trier s’il existe plusieurs clés que d’éléments ; cela lèverait une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1840">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="4f8a3-1841">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1841">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-1842">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1842">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-1843">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1843">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1844">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1844">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1845">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1845">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-1846">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1846">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-1847">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1847">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-1848">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1848">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1849">L’exemple de code suivant montre comment trier deux tableaux associés où le premier tableau contient les clés et le second contient les valeurs.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1849">The following code example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="4f8a3-1850">Les tris sont effectués à l’aide du comparateur par défaut et un comparateur personnalisé qui inverse l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1850">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="4f8a3-1851">Notez que le résultat peut varier en fonction d’actuel <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1851">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1852">
            <paramref name="keys" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1852">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1853">
            <paramref name="keys" />
            <see cref="T:System.Array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1853">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="4f8a3-1854">-ou- <paramref name="items" /><see cref="T:System.Array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1854">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1855">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1855">
              <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1856">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1856">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1857">
            <paramref name="items" /> n'est pas <see langword="null" /> et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1857">
              <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1858">-ou- <paramref name="index" /> et <paramref name="length" /> ne spécifient pas de plage valide dans <paramref name="keys" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1858">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1859">-ou- <paramref name="items" /> n’est pas <see langword="null" />, et <paramref name="index" /> et <paramref name="length" /> ne spécifient pas de plage valide dans <paramref name="items" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1859">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-1860">Un ou plusieurs éléments de <paramref name="keys" /><see cref="T:System.Array" /> n’implémentent pas l’interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1860">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, int index, int length, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, int32 index, int32 length, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, int index, int length, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4f8a3-1861">
            <see cref="T:System.Array" /> unidimensionnel à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1861">The one-dimensional <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-1862">Index de départ de la plage à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1862">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-1863">Nombre d'éléments à trier dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1863">The number of elements in the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-1864">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1864">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="4f8a3-1865">-ou- <see langword="null" /> pour utiliser l’implémentation de <see cref="T:System.IComparable" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1865">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1866">Trie les éléments d'une plage d'éléments d'un <see cref="T:System.Array" /> unidimensionnel à l'aide de l'objet <see cref="T:System.Collections.IComparer" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1866">Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1867">Si `comparer` est `null`, chaque élément dans la plage spécifiée d’éléments dans `array` doit implémenter la <xref:System.IComparable> interface afin de pouvoir faire des comparaisons avec tous les autres éléments de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1867">If `comparer` is `null`, each element within the specified range of elements in `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="4f8a3-1868">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1868">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-1869">Le .NET Framework inclut prédéfinis <xref:System.Collections.IComparer> implémentations répertoriés dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1869">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="4f8a3-1870">Implémentation</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1870">Implementation</span></span>|<span data-ttu-id="4f8a3-1871">Description </span><span class="sxs-lookup"><span data-stu-id="4f8a3-1871">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1872">Compare deux objets, mais effectue une comparaison respectant la casse des chaînes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1872">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1873">Compare deux objets en utilisant les conventions de tri de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1873">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1874">Compare deux objets en utilisant les conventions de tri de la culture dite indifférente.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1874">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1875">Compare deux objets de type `T` à l’aide d’ordre de tri par défaut du type.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1875">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="4f8a3-1876">Vous pouvez prennent également en charge les comparaisons personnalisées en fournissant une instance de votre propre <xref:System.Collections.IComparer> implémentation à la `comparer` paramètre.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1876">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="4f8a3-1877">L’exemple fait cela en définissant un `ReverseComparer` classe qui inverse l’ordre de tri par défaut pour les instances d’un type et effectue la comparaison de chaînes sans respecter la casse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1877">The example does this by defining a `ReverseComparer` class that reverses the default sort order for instances of a type and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="4f8a3-1878">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1878">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-1879">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1879">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1880">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1880">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1881">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1881">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-1882">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1882">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-1883">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1883">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-1884">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1884">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1885">L’exemple de code suivant montre comment trier les valeurs dans une <xref:System.Array> à l’aide du comparateur par défaut et un comparateur personnalisé qui inverse l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1885">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="4f8a3-1886">Notez que le résultat peut varier en fonction d’actuel <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1886">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1887">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1887">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1888">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1888">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1889">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1889">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1890">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1890">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1891">
            <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1891">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1892">-ou- L’implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1892">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="4f8a3-1893">Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 pendant la comparaison d’un élément à lui-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1893">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-1894">
            <paramref name="comparer" /> est <see langword="null" /> et un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1894">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="4f8a3-1895">
            <para>Le .NET Framework 4 et versions antérieures utilisé uniquement l’algorithme de tri rapide. Tri rapide identifie les comparateurs non valides dans certaines situations dans lesquelles l’opération de tri lève une <see cref="T:System.IndexOutOfRangeException" /> exception et lève un <see cref="T:System.ArgumentException" /> exception à l’appelant. En commençant par la [ ! Include[net_v45](~/Includes/NET-V45-MD.MD)], il est possible que les opérations de tri précédemment a levé <see cref="T:System.ArgumentException" /> pas lève une exception, car les algorithmes de tri et heapsort d’insertion ne détectent pas un comparateur non valide. La plupart des cas, cela s’applique aux tableaux avec moins de 16 éléments.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1895">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, int index, int length, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, int32 index, int32 length, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, index As Integer, length As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, int index, int length, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="4f8a3-1896">
            <see cref="T:System.Array" /> unidimensionnel qui contient les clés à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1896">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="4f8a3-1897">
            <see cref="T:System.Array" /> unidimensionnel qui contient les éléments correspondant à chaque clé dans <c>keys</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1897">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1898">-ou- <see langword="null" /> pour trier uniquement le <see cref="T:System.Array" /> de <c>clés</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1898">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-1899">Index de départ de la plage à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1899">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-1900">Nombre d'éléments à trier dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1900">The number of elements in the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-1901">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1901">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="4f8a3-1902">-ou- <see langword="null" /> pour utiliser l’implémentation de <see cref="T:System.IComparable" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1902">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1903">Trie une plage d'éléments dans une paire d'objets <see cref="T:System.Array" /> unidimensionnels (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'objet <see cref="T:System.Collections.IComparer" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1903">Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1904">Chaque clé dans le `keys` <xref:System.Array> possède un élément correspondant le `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1904">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-1905">Lorsqu’une clé est repositionnée pendant le tri, l’élément correspondant dans le `items` <xref:System.Array> est repositionnée de la même façon.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1905">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="4f8a3-1906">Par conséquent, le `items` <xref:System.Array> est trié selon la disposition des clés correspondantes dans le `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1906">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-1907">Si `comparer` est `null`, chaque clé de la plage spécifiée d’éléments dans le `keys` <xref:System.Array> doit implémenter la <xref:System.IComparable> interface afin de pouvoir faire des comparaisons avec toutes les autres clés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1907">If `comparer` is `null`, each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="4f8a3-1908">Vous pouvez trier s’il existe plusieurs éléments clés, mais les éléments qui n’ont aucune clé correspondante ne seront pas triés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1908">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="4f8a3-1909">Vous ne pouvez pas trier s’il existe plusieurs clés que d’éléments ; cela lèverait une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1909">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="4f8a3-1910">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1910">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-1911">Le .NET Framework inclut prédéfinis <xref:System.Collections.IComparer> implémentations répertoriés dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1911">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="4f8a3-1912">Implémentation</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1912">Implementation</span></span>|<span data-ttu-id="4f8a3-1913">Description </span><span class="sxs-lookup"><span data-stu-id="4f8a3-1913">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1914">Compare deux objets, mais effectue une comparaison respectant la casse des chaînes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1914">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1915">Compare deux objets en utilisant les conventions de tri de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1915">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1916">Compare deux objets en utilisant les conventions de tri de la culture dite indifférente.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1916">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="4f8a3-1917">Compare deux objets de type `T` à l’aide d’ordre de tri par défaut du type.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1917">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="4f8a3-1918">Vous pouvez prennent également en charge les comparaisons personnalisées en fournissant une instance de votre propre <xref:System.Collections.IComparer> implémentation à la `comparer` paramètre.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1918">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="4f8a3-1919">L’exemple fait cela en définissant un personnalisé <xref:System.Collections.IComparer> implémentation qui inverse l’ordre de tri par défaut et effectue la comparaison de chaînes sans respecter la casse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1919">The example does this by defining a custom <xref:System.Collections.IComparer> implementation that reverses the default sort order and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="4f8a3-1920">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1920">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-1921">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1921">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1922">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1922">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1923">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1923">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-1924">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1924">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-1925">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1925">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-1926">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1926">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1927">L’exemple de code suivant montre comment trier deux tableaux associés où le premier tableau contient les clés et le second contient les valeurs.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1927">The following code example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="4f8a3-1928">Les tris sont effectués à l’aide du comparateur par défaut et un comparateur personnalisé qui inverse l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1928">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="4f8a3-1929">Notez que le résultat peut varier en fonction d’actuel <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1929">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1930">
            <paramref name="keys" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1930">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="4f8a3-1931">
            <paramref name="keys" />
            <see cref="T:System.Array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1931">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="4f8a3-1932">-ou- <paramref name="items" /><see cref="T:System.Array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1932">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-1933">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1933">
              <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1934">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1934">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1935">
            <paramref name="items" /> n'est pas <see langword="null" /> et la limite inférieure de <paramref name="keys" /> ne correspond pas à la limite inférieure de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1935">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1936">-ou- <paramref name="items" /> n’est pas <see langword="null" /> et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1936">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1937">-ou- <paramref name="index" /> et <paramref name="length" /> ne spécifient pas de plage valide dans <paramref name="keys" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1937">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1938">-ou- <paramref name="items" /> n’est pas <see langword="null" />, et <paramref name="index" /> et <paramref name="length" /> ne spécifient pas de plage valide dans <paramref name="items" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1938">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-1939">-ou- L’implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1939">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="4f8a3-1940">Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 pendant la comparaison d’un élément à lui-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1940">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-1941">
            <paramref name="comparer" /> est <see langword="null" />, et un ou plusieurs éléments de <paramref name="keys" /><see cref="T:System.Array" /> n’implémentent pas l’interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1941">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="4f8a3-1942">
            <para>Le .NET Framework 4 et versions antérieures utilisé uniquement l’algorithme de tri rapide. Tri rapide identifie les comparateurs non valides dans certaines situations dans lesquelles l’opération de tri lève une <see cref="T:System.IndexOutOfRangeException" /> exception et lève un <see cref="T:System.ArgumentException" /> exception à l’appelant. En commençant par la [ ! Include[net_v45](~/Includes/NET-V45-MD.MD)], il est possible que les opérations de tri précédemment a levé <see cref="T:System.ArgumentException" /> pas lève une exception, car les algorithmes de tri et heapsort d’insertion ne détectent pas un comparateur non valide. La plupart des cas, cela s’applique aux tableaux avec moins de 16 éléments.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1942">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1943">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1943">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1944">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1944">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1945">Trie les éléments dans l'intégralité d'un <see cref="T:System.Array" /> à l'aide de l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque élément de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1945">Sorts the elements in an entire <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1946">Chaque élément de `array` doit implémenter la <xref:System.IComparable%601> interface générique afin de pouvoir faire des comparaisons avec tous les autres éléments de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1946">Each element of `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="4f8a3-1947">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1947">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-1948">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1948">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-1949">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1949">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1950">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1950">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1951">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1951">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-1952">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1952">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-1953">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1953">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-1954">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1954">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1955">L’exemple de code suivant montre la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> surcharge de méthode générique et le <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> surcharge de méthode générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1955">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload.</span></span> <span data-ttu-id="4f8a3-1956">Un tableau de chaînes est créé, dans aucun ordre particulier.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1956">An array of strings is created, in no particular order.</span></span>  
  
 <span data-ttu-id="4f8a3-1957">Le tableau est affiché, trié et affiche de nouveau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1957">The array is displayed, sorted, and displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1958">Les appels à la <xref:System.Array.Sort%2A> et <xref:System.Array.BinarySearch%2A> les méthodes génériques ne pas rechercher les appels à leurs équivalents non génériques, car Visual Basic, c# et C++ déduisent le type du paramètre de type générique à partir du type du premier argument.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1958">The calls to the <xref:System.Array.Sort%2A> and <xref:System.Array.BinarySearch%2A> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="4f8a3-1959">Si vous utilisez la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) pour examiner le langage intermédiaire Microsoft (MSIL), vous pouvez voir que les méthodes génériques sont appelées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1959">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="4f8a3-1960">Le <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> surcharge de méthode générique est ensuite utilisée pour rechercher des deux chaînes, qui n’est pas dans le tableau et l’autre qui est.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1960">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="4f8a3-1961">Le tableau et la valeur de retour de la <xref:System.Array.BinarySearch%2A> méthode sont passés à la `ShowWhere` une méthode générique, qui affiche la valeur d’index si la chaîne est trouvée, sinon les éléments de la chaîne de recherche se situant entre s’il s’agissait du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1961">The array and the return value of the <xref:System.Array.BinarySearch%2A> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="4f8a3-1962">L’index est négatif si la chaîne n’est pas n tableau, donc la `ShowWhere` méthode accepte le complément de bits (le ~ opérateur en c# et Visual C++, `Xor` -1 en Visual Basic) pour obtenir l’index du premier élément dans la liste qui est supérieure à la recherche de String NG.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1962">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearch/cs/source.cs#1)]
 [!code-vb[Array_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1963">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1963">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-1964">Un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1964">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1965">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1965">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1966">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1966">The one-dimensional, zero-base <see cref="T:System.Array" /> to sort</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-1967">Implémentation de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser lors de la comparaison d'éléments, ou <see langword="null" /> pour utiliser l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1967">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1968">Trie les éléments dans un <see cref="T:System.Array" /> unidimensionnel à l'aide de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1968">Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1969">Si `comparer` est `null`, chaque élément de `array` doit implémenter la <xref:System.IComparable%601> interface générique afin de pouvoir faire des comparaisons avec tous les autres éléments de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1969">If `comparer` is `null`, each element of `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="4f8a3-1970">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1970">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-1971">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1971">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-1972">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1972">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1973">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1973">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-1974">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1974">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-1975">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1975">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-1976">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1976">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-1977">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1977">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-1978">L’exemple de code suivant montre la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge de méthode générique et le <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge de méthode générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1978">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload.</span></span>  
  
 <span data-ttu-id="4f8a3-1979">L’exemple de code définit un autre comparateur pour les chaînes nommées `ReverseCompare`, qui implémente le `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` dans Visual C++) interface générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1979">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="4f8a3-1980">Le comparateur appelle la <xref:System.String.CompareTo%28System.String%29> méthode, en inversant l’ordre des comparateurs afin que les chaînes triées de haut en bas au lieu de faible à élevé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1980">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="4f8a3-1981">Le tableau est affiché, trié et affiche de nouveau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1981">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="4f8a3-1982">Les tableaux doivent être triées pour pouvoir utiliser le <xref:System.Array.BinarySearch%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1982">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-1983">Les appels à la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> et <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> les méthodes génériques ne pas rechercher les appels à leurs équivalents non génériques, car Visual Basic, c# et C++ déduisent le type du paramètre de type générique à partir du type du premier argument.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1983">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="4f8a3-1984">Si vous utilisez la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) pour examiner le langage intermédiaire Microsoft (MSIL), vous pouvez voir que les méthodes génériques sont appelées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1984">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="4f8a3-1985">Le <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge de méthode générique est ensuite utilisée pour rechercher des deux chaînes, qui n’est pas dans le tableau et l’autre qui est.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1985">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="4f8a3-1986">Le tableau et la valeur de retour de la <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> méthode sont passés à la `ShowWhere` une méthode générique, qui affiche la valeur d’index si la chaîne est trouvée, sinon les éléments de la chaîne de recherche se situant entre s’il s’agissait du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1986">The array and the return value of the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="4f8a3-1987">L’index est négatif si la chaîne n’est pas n tableau, donc la `ShowWhere` méthode accepte le complément de bits (le ~ opérateur en c# et Visual C++, `Xor` -1 en Visual Basic) pour obtenir l’index du premier élément dans la liste qui est supérieure à la recherche de String NG.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1987">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[Array_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-1988">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1988">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-1989">
            <paramref name="comparer" /> est <see langword="null" /> et un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1989">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-1990">L’implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1990">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="4f8a3-1991">Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 pendant la comparaison d’un élément à lui-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1991">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="4f8a3-1992">
            <para>Le .NET Framework 4 et versions antérieures utilisé uniquement l’algorithme de tri rapide. Tri rapide identifie les comparateurs non valides dans certaines situations dans lesquelles l’opération de tri lève une <see cref="T:System.IndexOutOfRangeException" /> exception et lève un <see cref="T:System.ArgumentException" /> exception à l’appelant. En commençant par la [ ! Include[net_v45](~/Includes/NET-V45-MD.MD)], il est possible que les opérations de tri précédemment a levé <see cref="T:System.ArgumentException" /> pas lève une exception, car les algorithmes de tri et heapsort d’insertion ne détectent pas un comparateur non valide. La plupart des cas, cela s’applique aux tableaux avec moins de 16 éléments.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1992">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, class System.Comparison`1&lt;!!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Comparison{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, Comparison&lt;T&gt; ^ comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-1993">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1993">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-1994">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1994">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="4f8a3-1995">
            <see cref="T:System.Comparison`1" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1995">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-1996">Trie les éléments dans un <see cref="T:System.Array" /> à l'aide de l'objet <see cref="T:System.Comparison`1" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-1996">Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Comparison`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-1997">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1997">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-1998">Cette méthode utilise algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1998">This method uses introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-1999">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-1999">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2000">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2000">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2001">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2001">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-2002">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2002">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-2003">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2003">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-2004">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2004">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-2005">L’exemple de code suivant montre la <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2005">The following code example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="4f8a3-2006">L’exemple de code définit une autre méthode de comparaison des chaînes, nommée `CompareDinosByLength`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2006">The code example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="4f8a3-2007">Cette méthode fonctionne comme suit : tout d’abord, le comparandsare testé pour`null`, et une référence null est traitée comme inférieure à une valeur non null.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2007">This method works as follows: First, the comparandsare tested for`null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="4f8a3-2008">En second lieu, les longueurs de chaîne sont comparées, et la plus longue chaîne est jugée supérieure.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2008">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="4f8a3-2009">Troisièmement, si les longueurs sont égales, la comparaison de chaînes ordinaire est utilisé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2009">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="4f8a3-2010">Un tableau de chaînes est créé et rempli avec quatre chaînes, dans aucun ordre particulier.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2010">A array of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="4f8a3-2011">La liste inclut également une chaîne vide et une référence null.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2011">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="4f8a3-2012">La liste est affichée, trié à l’aide un <xref:System.Comparison%601> délégué générique représentant le `CompareDinosByLength` (méthode) et affiche à nouveau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2012">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[Array_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[Array_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortComparison/cs/source.cs#1)]
 [!code-vb[Array_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortComparison/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-2013">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2013">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2014">-ou- <paramref name="comparison" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2014">-or-  <paramref name="comparison" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-2015">L’implémentation de <paramref name="comparison" /> a provoqué une erreur pendant le tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2015">The implementation of <paramref name="comparison" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="4f8a3-2016">Par exemple, <paramref name="comparison" /> peut ne pas retourner 0 pendant la comparaison d’un élément à lui-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2016">For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="4f8a3-2017">
            <para>Le .NET Framework 4 et versions antérieures utilisé uniquement l’algorithme de tri rapide. Tri rapide identifie les comparateurs non valides dans certaines situations dans lesquelles l’opération de tri lève une <see cref="T:System.IndexOutOfRangeException" /> exception et lève un <see cref="T:System.ArgumentException" /> exception à l’appelant. En commençant par la [ ! Include[net_v45](~/Includes/NET-V45-MD.MD)], il est possible que les opérations de tri précédemment a levé <see cref="T:System.ArgumentException" /> pas lève une exception, car les algorithmes de tri et heapsort d’insertion ne détectent pas un comparateur non valide. La plupart des cas, cela s’applique aux tableaux avec moins de 16 éléments.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2017">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Comparison`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-2018">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2018">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-2019">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2019">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-2020">Index de départ de la plage à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2020">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-2021">Nombre d'éléments à trier dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2021">The number of elements in the range to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2022">Trie les éléments d'une plage d'éléments d'un <see cref="T:System.Array" /> à l'aide de l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque élément de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2022">Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2023">Chaque élément dans la plage spécifiée d’éléments dans `array` doit implémenter la <xref:System.IComparable%601> interface générique afin de pouvoir faire des comparaisons avec tous les autres éléments de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2023">Each element within the specified range of elements in `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="4f8a3-2024">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2024">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-2025">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2025">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-2026">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2026">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2027">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2027">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2028">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2028">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-2029">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2029">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-2030">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2030">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-2031">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2031">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-2032">L’exemple de code suivant montre la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode générique et le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> la surcharge de méthode générique pour le tri d’une plage dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2032">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload and the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload for sorting a range in an array.</span></span>  
  
 <span data-ttu-id="4f8a3-2033">L’exemple de code définit un autre comparateur pour les chaînes nommées `ReverseCompare`, qui implémente le `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` dans Visual C++) interface générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2033">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="4f8a3-2034">Le comparateur appelle la <xref:System.String.CompareTo%28System.String%29> méthode, en inversant l’ordre des comparateurs afin que les chaînes triées de haut en bas au lieu de faible à élevé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2034">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="4f8a3-2035">L’exemple de code crée et affiche un tableau de noms de dinosaure, composé de trois herbivores suivis par trois carnivores (tyrannosaures, pour être précis).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2035">The code example creates and displays an array of dinosaur names, consisting of three herbivores followed by three carnivores (tyrannosaurids, to be precise).</span></span> <span data-ttu-id="4f8a3-2036">Le <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode générique est utilisée pour trier les trois derniers éléments du tableau, qui sont ensuite affichées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2036">The <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload is used to sort the last three elements of the array, which is then displayed.</span></span> <span data-ttu-id="4f8a3-2037">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge de méthode générique est utilisée avec `ReverseCompare` pour trier les trois derniers éléments dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2037">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is used with `ReverseCompare` to sort the last three elements in reverse order.</span></span> <span data-ttu-id="4f8a3-2038">Dinosaures entièrement désordonnés sont affichent à nouveau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2038">The thoroughly confused dinosaurs are displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-2039">Les appels à la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> et <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> les méthodes génériques ne pas rechercher les appels à leurs équivalents non génériques, car Visual Basic, c# et C++ déduisent le type du paramètre de type générique à partir du type du premier argument.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2039">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="4f8a3-2040">Si vous utilisez la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) pour examiner le langage intermédiaire Microsoft (MSIL), vous pouvez voir que les méthodes génériques sont appelées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2040">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_SortIntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortIntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortIntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortIntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_SortIntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortIntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-2041">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2041">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-2042">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2042">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2043">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2043">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-2044">
            <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2044">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-2045">Un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2045">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, int index, int length, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, int32 index, int32 length, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), index As Integer, length As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, int index, int length, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-2046">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2046">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-2047">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2047">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-2048">Index de départ de la plage à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2048">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-2049">Nombre d'éléments à trier dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2049">The number of elements in the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-2050">Implémentation de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser lors de la comparaison d'éléments, ou <see langword="null" /> pour utiliser l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2050">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2051">Trie les éléments dans une plage d'éléments d'un <see cref="T:System.Array" /> à l'aide de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2051">Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2052">Si `comparer` est `null`, chaque élément dans la plage spécifiée d’éléments dans `array` doit implémenter la <xref:System.IComparable%601> interface générique afin de pouvoir faire des comparaisons avec tous les autres éléments de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2052">If `comparer` is `null`, each element within the specified range of elements in `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="4f8a3-2053">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2053">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-2054">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2054">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-2055">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2055">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2056">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2056">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2057">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2057">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-2058">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2058">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-2059">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2059">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-2060">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2060">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-2061">L’exemple de code suivant montre la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode générique et le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> la surcharge de méthode générique pour le tri d’une plage dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2061">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload and the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload for sorting a range in an array.</span></span>  
  
 <span data-ttu-id="4f8a3-2062">L’exemple de code définit un autre comparateur pour les chaînes nommées `ReverseCompare`, qui implémente le `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` dans Visual C++) interface générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2062">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="4f8a3-2063">Le comparateur appelle la <xref:System.String.CompareTo%28System.String%29> méthode, en inversant l’ordre des comparateurs afin que les chaînes triées de haut en bas au lieu de faible à élevé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2063">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="4f8a3-2064">L’exemple de code crée et affiche un tableau de noms de dinosaure, composé de trois herbivores suivis par trois carnivores (tyrannosaures, pour être précis).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2064">The code example creates and displays an array of dinosaur names, consisting of three herbivores followed by three carnivores (tyrannosaurids, to be precise).</span></span> <span data-ttu-id="4f8a3-2065">Le <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode générique est utilisée pour trier les trois derniers éléments du tableau, qui sont ensuite affichées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2065">The <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload is used to sort the last three elements of the array, which is then displayed.</span></span> <span data-ttu-id="4f8a3-2066">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge de méthode générique est utilisée avec `ReverseCompare` pour trier les trois derniers éléments dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2066">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is used with `ReverseCompare` to sort the last three elements in reverse order.</span></span> <span data-ttu-id="4f8a3-2067">Dinosaures entièrement désordonnés sont affichent à nouveau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2067">The thoroughly confused dinosaurs are displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-2068">Les appels à la <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> et <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> les méthodes génériques ne pas rechercher les appels à leurs équivalents non génériques, car Visual Basic, c# et C++ déduisent le type du paramètre de type générique à partir du type du premier argument.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2068">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="4f8a3-2069">Si vous utilisez la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) pour examiner le langage intermédiaire Microsoft (MSIL), vous pouvez voir que les méthodes génériques sont appelées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2069">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_SortIntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortIntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortIntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortIntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_SortIntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortIntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-2070">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2070">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-2071">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2071">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2072">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2072">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-2073">
            <paramref name="index" /> et <paramref name="length" /> ne spécifient pas une plage valide dans <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2073">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2074">-ou- L’implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2074">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="4f8a3-2075">Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 pendant la comparaison d’un élément à lui-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2075">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-2076">
            <paramref name="comparer" /> est <see langword="null" /> et un ou plusieurs éléments de <paramref name="array" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2076">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="4f8a3-2077">
            <para>Le .NET Framework 4 et versions antérieures utilisé uniquement l’algorithme de tri rapide. Tri rapide identifie les comparateurs non valides dans certaines situations dans lesquelles l’opération de tri lève une <see cref="T:System.IndexOutOfRangeException" /> exception et lève un <see cref="T:System.ArgumentException" /> exception à l’appelant. En commençant par la [ ! Include[net_v45](~/Includes/NET-V45-MD.MD)], il est possible que les opérations de tri précédemment a levé <see cref="T:System.ArgumentException" /> pas lève une exception, car les algorithmes de tri et heapsort d’insertion ne détectent pas un comparateur non valide. La plupart des cas, cela s’applique aux tableaux avec moins de 16 éléments.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2077">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="4f8a3-2078">Type des éléments du tableau des clés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2078">The type of the elements of the key array.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="4f8a3-2079">Type des éléments du tableau des éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2079">The type of the elements of the items array.</span>
          </span>
        </typeparam>
        <param name="keys">
          <span data-ttu-id="4f8a3-2080">
            <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les clés à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2080">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="4f8a3-2081">
            <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les éléments correspondant aux clés dans <c>keys</c>, ou <see langword="null" /> pour trier uniquement <c>keys</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2081">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2082">Trie une paire d'objets <see cref="T:System.Array" /> (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2082">Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2083">Chaque clé dans le `keys` <xref:System.Array> possède un élément correspondant le `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2083">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-2084">Lorsqu’une clé est repositionnée pendant le tri, l’élément correspondant dans le `items` <xref:System.Array> est repositionnée de la même façon.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2084">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="4f8a3-2085">Par conséquent, le `items` <xref:System.Array> est trié selon la disposition des clés correspondantes dans le `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2085">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-2086">Chaque clé dans le `keys` <xref:System.Array> doit implémenter la <xref:System.IComparable%601> interface générique afin de pouvoir faire des comparaisons avec toutes les autres clés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2086">Each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="4f8a3-2087">Vous pouvez trier s’il existe plusieurs éléments clés, mais les éléments qui n’ont aucune clé correspondante ne seront pas triés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2087">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="4f8a3-2088">Vous ne pouvez pas trier s’il existe plusieurs clés que d’éléments ; cela lèverait une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2088">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="4f8a3-2089">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2089">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-2090">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2090">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-2091">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2091">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2092">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2092">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2093">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2093">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-2094">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2094">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-2095">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2095">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-2096">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2096">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-2097">L’exemple de code suivant montre la <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, et <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> des surcharges de méthode générique, pour le tri de paires de tableaux qui représentent les clés et valeurs.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2097">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="4f8a3-2098">L’exemple de code définit un autre comparateur pour les chaînes nommées `ReverseCompare`, qui implémente le `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` dans Visual C++) interface générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2098">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="4f8a3-2099">Le comparateur appelle la <xref:System.String.CompareTo%28System.String%29> méthode, en inversant l’ordre des comparateurs afin que les chaînes triées de haut en bas au lieu de faible à élevé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2099">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="4f8a3-2100">L’exemple de code crée et affiche un tableau de noms de dinosaure (les clés) et un tableau d’entiers représentant la longueur maximale de chaque dinosaure en mètres (les valeurs).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2100">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="4f8a3-2101">Les tableaux sont ensuite triés et affiche plusieurs fois :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2101">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="4f8a3-2102">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> surcharge est utilisée pour trier les deux tableaux dans l’ordre des noms dinosaure dans le premier tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2102">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="4f8a3-2103">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge et une instance de `ReverseCompare` sont utilisées pour inverser l’ordre de tri des tableaux associés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2103">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="4f8a3-2104">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> surcharge est utilisée pour trier les trois derniers éléments des deux tableaux.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2104">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="4f8a3-2105">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge est utilisée pour trier les trois derniers éléments des deux tableaux dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2105">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-2106">Les appels aux méthodes génériques ne pas rechercher les appels à leurs équivalents non génériques, car Visual Basic, c# et C++ déduisent le type du paramètre de type générique à partir du type des deux premiers arguments.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2106">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="4f8a3-2107">Si vous utilisez la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) pour examiner le langage intermédiaire Microsoft (MSIL), vous pouvez voir que les méthodes génériques sont appelées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2107">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-2108">
            <paramref name="keys" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2108">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-2109">
            <paramref name="items" /> n'est pas <see langword="null" /> et la limite inférieure de <paramref name="keys" /> ne correspond pas à la limite inférieure de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2109">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2110">-ou- <paramref name="items" /> n’est pas <see langword="null" /> et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2110">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-2111">Un ou plusieurs éléments de <paramref name="keys" /><see cref="T:System.Array" /> n’implémentent pas l’interface générique <see cref="T:System.IComparable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2111">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="4f8a3-2112">Type des éléments du tableau des clés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2112">The type of the elements of the key array.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="4f8a3-2113">Type des éléments du tableau des éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2113">The type of the elements of the items array.</span>
          </span>
        </typeparam>
        <param name="keys">
          <span data-ttu-id="4f8a3-2114">
            <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les clés à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2114">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="4f8a3-2115">
            <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les éléments correspondant aux clés dans <c>keys</c>, ou <see langword="null" /> pour trier uniquement <c>keys</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2115">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-2116">Implémentation de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser lors de la comparaison d'éléments, ou <see langword="null" /> pour utiliser l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2116">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2117">Trie une paire d'objets <see cref="T:System.Array" /> (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2117">Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2118">Chaque clé dans le `keys` <xref:System.Array> possède un élément correspondant le `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2118">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-2119">Lorsqu’une clé est repositionnée pendant le tri, l’élément correspondant dans le `items` <xref:System.Array> est repositionnée de la même façon.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2119">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="4f8a3-2120">Par conséquent, le `items` <xref:System.Array> est trié selon la disposition des clés correspondantes dans le `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2120">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-2121">Si `comparer` est `null`, chaque clé dans le `keys` <xref:System.Array> doit implémenter la <xref:System.IComparable%601> interface générique afin de pouvoir faire des comparaisons avec toutes les autres clés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2121">If `comparer` is `null`, each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="4f8a3-2122">Vous pouvez trier s’il existe plusieurs éléments clés, mais les éléments qui n’ont aucune clé correspondante ne seront pas triés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2122">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="4f8a3-2123">Vous ne pouvez pas trier s’il existe plusieurs clés que d’éléments ; cela lèverait une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2123">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="4f8a3-2124">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2124">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-2125">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2125">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-2126">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2126">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2127">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2127">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2128">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2128">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-2129">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2129">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-2130">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2130">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-2131">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2131">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-2132">L’exemple de code suivant montre la <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 >,<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, et <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> des surcharges de méthode générique, pour le tri de paires de tableaux qui représentent les clés et valeurs.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2132">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>,<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="4f8a3-2133">L’exemple de code définit un autre comparateur pour les chaînes nommées `ReverseCompare`, qui implémente le `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` dans Visual C++) interface générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2133">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="4f8a3-2134">Le comparateur appelle la <xref:System.String.CompareTo%28System.String%29> méthode, en inversant l’ordre des comparateurs afin que les chaînes triées de haut en bas au lieu de faible à élevé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2134">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="4f8a3-2135">L’exemple de code crée et affiche un tableau de noms de dinosaure (les clés) et un tableau d’entiers représentant la longueur maximale de chaque dinosaure en mètres (les valeurs).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2135">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="4f8a3-2136">Les tableaux sont ensuite triés et affiche plusieurs fois :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2136">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="4f8a3-2137">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> surcharge est utilisée pour trier les deux tableaux dans l’ordre des noms dinosaure dans le premier tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2137">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="4f8a3-2138">Le [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > surcharge et une instance de `ReverseCompare` sont utilisées pour inverser l’ordre de tri des tableaux associés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2138">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="4f8a3-2139">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> surcharge est utilisée pour trier les trois derniers éléments des deux tableaux.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2139">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="4f8a3-2140">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge est utilisée pour trier les trois derniers éléments des deux tableaux dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2140">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-2141">Les appels aux méthodes génériques ne pas rechercher les appels à leurs équivalents non génériques, car Visual Basic, c# et C++ déduisent le type du paramètre de type générique à partir du type des deux premiers arguments.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2141">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="4f8a3-2142">Si vous utilisez la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) pour examiner le langage intermédiaire Microsoft (MSIL), vous pouvez voir que les méthodes génériques sont appelées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2142">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-2143">
            <paramref name="keys" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2143">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-2144">
            <paramref name="items" /> n'est pas <see langword="null" /> et la limite inférieure de <paramref name="keys" /> ne correspond pas à la limite inférieure de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2144">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2145">-ou- <paramref name="items" /> n’est pas <see langword="null" /> et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2145">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2146">-ou- L’implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2146">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="4f8a3-2147">Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 pendant la comparaison d’un élément à lui-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2147">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-2148">
            <paramref name="comparer" /> est <see langword="null" />, et un ou plusieurs éléments de <paramref name="keys" /><see cref="T:System.Array" /> n’implémentent pas l’interface générique <see cref="T:System.IComparable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2148">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="4f8a3-2149">
            <para>Le .NET Framework 4 et versions antérieures utilisé uniquement l’algorithme de tri rapide. Tri rapide identifie les comparateurs non valides dans certaines situations dans lesquelles l’opération de tri lève une <see cref="T:System.IndexOutOfRangeException" /> exception et lève un <see cref="T:System.ArgumentException" /> exception à l’appelant. En commençant par la [ ! Include[net_v45](~/Includes/NET-V45-MD.MD)], il est possible que les opérations de tri précédemment a levé <see cref="T:System.ArgumentException" /> pas lève une exception, car les algorithmes de tri et heapsort d’insertion ne détectent pas un comparateur non valide. La plupart des cas, cela s’applique aux tableaux avec moins de 16 éléments.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2149">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="4f8a3-2150">Type des éléments du tableau des clés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2150">The type of the elements of the key array.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="4f8a3-2151">Type des éléments du tableau des éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2151">The type of the elements of the items array.</span>
          </span>
        </typeparam>
        <param name="keys">
          <span data-ttu-id="4f8a3-2152">
            <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les clés à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2152">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="4f8a3-2153">
            <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les éléments correspondant aux clés dans <c>keys</c>, ou <see langword="null" /> pour trier uniquement <c>keys</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2153">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-2154">Index de départ de la plage à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2154">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-2155">Nombre d'éléments à trier dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2155">The number of elements in the range to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2156">Trie une plage d'éléments dans une paire d'objets <see cref="T:System.Array" /> unidimensionnels (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'implémentation d'interface générique <see cref="T:System.IComparable`1" /> de chaque clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2156">Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2157">Chaque clé dans le `keys` <xref:System.Array> possède un élément correspondant le `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2157">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-2158">Lorsqu’une clé est repositionnée pendant le tri, l’élément correspondant dans le `items` <xref:System.Array> est repositionnée de la même façon.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2158">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="4f8a3-2159">Par conséquent, le `items` <xref:System.Array> est trié selon la disposition des clés correspondantes dans le `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2159">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-2160">Chaque clé de la plage spécifiée d’éléments dans le `keys` <xref:System.Array> doit implémenter la <xref:System.IComparable%601> interface générique afin de pouvoir faire des comparaisons avec toutes les autres clés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2160">Each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="4f8a3-2161">Vous pouvez trier s’il existe plusieurs éléments clés, mais les éléments qui n’ont aucune clé correspondante ne seront pas triés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2161">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="4f8a3-2162">Vous ne pouvez pas trier s’il existe plusieurs clés que d’éléments ; cela lèverait une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2162">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="4f8a3-2163">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2163">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-2164">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2164">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-2165">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2165">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2166">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2166">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2167">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2167">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-2168">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2168">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-2169">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2169">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-2170">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2170">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-2171">L’exemple de code suivant montre la <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29 >, et <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharges de méthode générique, pour le tri de paires de tableaux qui représentent les clés et valeurs.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2171">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="4f8a3-2172">L’exemple de code définit un autre comparateur pour les chaînes nommées `ReverseCompare`, qui implémente le `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` dans Visual C++) interface générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2172">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="4f8a3-2173">Le comparateur appelle la <xref:System.String.CompareTo%28System.String%29> méthode, en inversant l’ordre des comparateurs afin que les chaînes triées de haut en bas au lieu de faible à élevé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2173">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="4f8a3-2174">L’exemple de code crée et affiche un tableau de noms de dinosaure (les clés) et un tableau d’entiers représentant la longueur maximale de chaque dinosaure en mètres (les valeurs).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2174">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="4f8a3-2175">Les tableaux sont ensuite triés et affiche plusieurs fois :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2175">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="4f8a3-2176">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> surcharge est utilisée pour trier les deux tableaux dans l’ordre des noms dinosaure dans le premier tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2176">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="4f8a3-2177">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge et une instance de `ReverseCompare` sont utilisées pour inverser l’ordre de tri des tableaux associés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2177">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="4f8a3-2178">Le [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29 > surcharge est utilisée pour trier les trois derniers éléments des deux tableaux.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2178">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="4f8a3-2179">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge est utilisée pour trier les trois derniers éléments des deux tableaux dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2179">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-2180">Les appels aux méthodes génériques ne pas rechercher les appels à leurs équivalents non génériques, car Visual Basic, c# et C++ déduisent le type du paramètre de type générique à partir du type des deux premiers arguments.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2180">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="4f8a3-2181">Si vous utilisez la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) pour examiner le langage intermédiaire Microsoft (MSIL), vous pouvez voir que les méthodes génériques sont appelées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2181">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-2182">
            <paramref name="keys" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2182">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-2183">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2183">
              <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2184">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2184">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-2185">
            <paramref name="items" /> n'est pas <see langword="null" /> et la limite inférieure de <paramref name="keys" /> ne correspond pas à la limite inférieure de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2185">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2186">-ou- <paramref name="items" /> n’est pas <see langword="null" /> et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2186">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2187">-ou- <paramref name="index" /> et <paramref name="length" /> ne spécifient pas de plage valide dans <paramref name="keys" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2187">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2188">-ou- <paramref name="items" /> n’est pas <see langword="null" />, et <paramref name="index" /> et <paramref name="length" /> ne spécifient pas de plage valide dans <paramref name="items" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2188">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-2189">Un ou plusieurs éléments de <paramref name="keys" /><see cref="T:System.Array" /> n’implémentent pas l’interface générique <see cref="T:System.IComparable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2189">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, int index, int length, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, int32 index, int32 length, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), index As Integer, length As Integer, comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, int index, int length, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="4f8a3-2190">Type des éléments du tableau des clés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2190">The type of the elements of the key array.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="4f8a3-2191">Type des éléments du tableau des éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2191">The type of the elements of the items array.</span>
          </span>
        </typeparam>
        <param name="keys">
          <span data-ttu-id="4f8a3-2192">
            <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les clés à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2192">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="4f8a3-2193">
            <see cref="T:System.Array" /> unidimensionnel de base zéro qui contient les éléments correspondant aux clés dans <c>keys</c>, ou <see langword="null" /> pour trier uniquement <c>keys</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2193">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4f8a3-2194">Index de départ de la plage à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2194">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4f8a3-2195">Nombre d'éléments à trier dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2195">The number of elements in the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-2196">Implémentation de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser lors de la comparaison d'éléments, ou <see langword="null" /> pour utiliser l'implémentation de l'interface générique <see cref="T:System.IComparable`1" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2196">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2197">Trie une plage d'éléments dans une paire d'objets <see cref="T:System.Array" /> unidimensionnels (l'un contient les clés et l'autre, les éléments correspondants) en fonction des clés du premier <see cref="T:System.Array" /> à l'aide de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2197">Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2198">Chaque clé dans le `keys` <xref:System.Array> possède un élément correspondant le `items` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2198">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="4f8a3-2199">Lorsqu’une clé est repositionnée pendant le tri, l’élément correspondant dans le `items` <xref:System.Array> est repositionnée de la même façon.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2199">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="4f8a3-2200">Par conséquent, le `items` <xref:System.Array> est trié selon la disposition des clés correspondantes dans le `keys` <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2200">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="4f8a3-2201">Si `comparer` est `null`, chaque clé de la plage spécifiée d’éléments dans le `keys` <xref:System.Array> doit implémenter la <xref:System.IComparable%601> interface générique afin de pouvoir faire des comparaisons avec toutes les autres clés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2201">If `comparer` is `null`, each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="4f8a3-2202">Vous pouvez trier s’il existe plusieurs éléments clés, mais les éléments qui n’ont aucune clé correspondante ne seront pas triés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2202">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="4f8a3-2203">Vous ne pouvez pas trier s’il existe plusieurs clés que d’éléments ; cela lèverait une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2203">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="4f8a3-2204">Si le tri n’est pas terminé, les résultats sont indéfinis.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2204">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="4f8a3-2205">Cette méthode utilise l’algorithme de tri approfondie (introsort) comme suit :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2205">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="4f8a3-2206">Si la taille de la partition est inférieur à 16 éléments, il utilise un [tri d’insertion](https://en.wikipedia.org/wiki/Insertion_sort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2206">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2207">Si le nombre de partitions est supérieure à 2 \* journal<sup>N</sup>, où *N* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2207">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="4f8a3-2208">Sinon, il utilise un [tri rapide](https://en.wikipedia.org/wiki/Quicksort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2208">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="4f8a3-2209">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2209">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="4f8a3-2210">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2210">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="4f8a3-2211">Pour les groupes qui sont triés à l’aide d’algorithmes Heapsort et trions rapidement, dans le pire des cas, cette méthode est un O (`n` journal `n`) opération, où `n` est `length`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2211">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-2212">L’exemple de code suivant montre la <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, et [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32% 2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > des surcharges de méthode générique, pour le tri de paires de tableaux qui représentent les clés et valeurs.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2212">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="4f8a3-2213">L’exemple de code définit un autre comparateur pour les chaînes nommées `ReverseCompare`, qui implémente le `IComparer<string>`(`IComparer(Of String)` en Visual Basic, `IComparer<String^>` dans Visual C++) interface générique.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2213">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>`(`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="4f8a3-2214">Le comparateur appelle la <xref:System.String.CompareTo%28System.String%29> méthode, en inversant l’ordre des comparateurs afin que les chaînes triées de haut en bas au lieu de faible à élevé.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2214">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="4f8a3-2215">L’exemple de code crée et affiche un tableau de noms de dinosaure (les clés) et un tableau d’entiers représentant la longueur maximale de chaque dinosaure en mètres (les valeurs).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2215">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="4f8a3-2216">Les tableaux sont ensuite triés et affiche plusieurs fois :</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2216">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="4f8a3-2217">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> surcharge est utilisée pour trier les deux tableaux dans l’ordre des noms dinosaure dans le premier tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2217">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="4f8a3-2218">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> surcharge et une instance de `ReverseCompare` sont utilisées pour inverser l’ordre de tri des tableaux associés.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2218">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="4f8a3-2219">Le <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> surcharge est utilisée pour trier les trois derniers éléments des deux tableaux.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2219">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="4f8a3-2220">Le [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > surcharge est utilisée pour trier les trois derniers éléments des deux tableaux dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2220">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-2221">Les appels aux méthodes génériques ne pas rechercher les appels à leurs équivalents non génériques, car Visual Basic, c# et C++ déduisent le type du paramètre de type générique à partir du type des deux premiers arguments.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2221">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="4f8a3-2222">Si vous utilisez la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) pour examiner le langage intermédiaire Microsoft (MSIL), vous pouvez voir que les méthodes génériques sont appelées.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2222">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-2223">
            <paramref name="keys" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2223">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-2224">
            <paramref name="index" /> est inférieur à la limite inférieure d’<paramref name="keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2224">
              <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2225">-ou- <paramref name="length" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2225">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-2226">
            <paramref name="items" /> n'est pas <see langword="null" /> et la limite inférieure de <paramref name="keys" /> ne correspond pas à la limite inférieure de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2226">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2227">-ou- <paramref name="items" /> n’est pas <see langword="null" /> et la longueur de <paramref name="keys" /> est supérieure à celle de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2227">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2228">-ou- <paramref name="index" /> et <paramref name="length" /> ne spécifient pas de plage valide dans <paramref name="keys" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2228">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2229">-ou- <paramref name="items" /> n’est pas <see langword="null" />, et <paramref name="index" /> et <paramref name="length" /> ne spécifient pas de plage valide dans <paramref name="items" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2229">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2230">-ou- L’implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2230">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="4f8a3-2231">Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 pendant la comparaison d’un élément à lui-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2231">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4f8a3-2232">
            <paramref name="comparer" /> est <see langword="null" />, et un ou plusieurs éléments de <paramref name="keys" /><see cref="T:System.Array" /> n’implémentent pas l’interface générique <see cref="T:System.IComparable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2232">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="4f8a3-2233">
            <para>Le .NET Framework 4 et versions antérieures utilisé uniquement l’algorithme de tri rapide. Tri rapide identifie les comparateurs non valides dans certaines situations dans lesquelles l’opération de tri lève une <see cref="T:System.IndexOutOfRangeException" /> exception et lève un <see cref="T:System.ArgumentException" /> exception à l’appelant. En commençant par la [ ! Include[net_v45](~/Includes/NET-V45-MD.MD)], il est possible que les opérations de tri précédemment a levé <see cref="T:System.ArgumentException" /> pas lève une exception, car les algorithmes de tri et heapsort d’insertion ne détectent pas un comparateur non valide. La plupart des cas, cela s’applique aux tableaux avec moins de 16 éléments.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2233">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Array.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-2234">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2234">Gets an object that can be used to synchronize access to the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f8a3-2235">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2235">An object that can be used to synchronize access to the <see cref="T:System.Array" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2236">Cette propriété implémente la <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2236">This property implements the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="4f8a3-2237">Les classes .NET framework basées sur <xref:System.Array> fournissent leur propre version synchronisée de la collection à l’aide de la <xref:System.Array.SyncRoot%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2237">.NET Framework classes based on <xref:System.Array> provide their own synchronized version of the collection using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="4f8a3-2238">Les classes qui utilisent des tableaux peuvent également implémenter leur propre à l’aide de la synchronisation du <xref:System.Array.SyncRoot%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2238">Classes that use arrays can also implement their own synchronization using the <xref:System.Array.SyncRoot%2A> property.</span></span> <span data-ttu-id="4f8a3-2239">Le code de synchronisation doit effectuer les opérations sur les `SyncRoot` de la collection, et non directement sur la collection.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2239">The synchronizing code must perform operations on the `SyncRoot` of the collection, not directly on the collection.</span></span> <span data-ttu-id="4f8a3-2240">Cela garantit un bon fonctionnement des collections dérivées d’autres objets.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2240">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="4f8a3-2241">Plus particulièrement, il maintient la synchronisation est assurée avec les autres threads qui pourraient modifier simultanément la collection.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2241">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection.</span></span> <span data-ttu-id="4f8a3-2242">Notez que certaines implémentations de <xref:System.Array.SyncRoot%2A> peut retourner le <xref:System.Array> lui-même.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2242">Note that some implementations of <xref:System.Array.SyncRoot%2A> might return the <xref:System.Array> itself.</span></span>  
  
 <span data-ttu-id="4f8a3-2243">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2243">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="4f8a3-2244">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2244">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="4f8a3-2245">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2245">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="4f8a3-2246">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2246">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-2247">L’exemple de code suivant montre comment verrouiller un tableau pendant l’ensemble de l’énumération à l’aide de la <xref:System.Array.SyncRoot%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2247">The following code example shows how to lock an array during the entire enumeration by using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 [!code-cpp[System.Array.SyncRoot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.SyncRoot/cpp/source.cpp#1)]
 [!code-csharp[System.Array.SyncRoot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.SyncRoot/cs/source.cs#1)]
 [!code-vb[System.Array.SyncRoot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.SyncRoot/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-2248">Obtient le nombre d'éléments contenus dans le <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2248">Gets the number of elements contained in the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f8a3-2249">Nombre d’éléments contenus dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2249">The number of elements contained in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2250">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2250">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f8a3-2251">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Array> est castée en interface <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2251">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f8a3-2252">Objet à ajouter à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2252">The object to be added to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2253">L’appel de cette méthode lève toujours une exception <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2253">Calling this method always throws a <see cref="T:System.NotSupportedException" /> exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-2254">L'ajout d'une valeur à un tableau n'est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2254">Adding a value to an array is not supported.</span>
          </span>
          <span data-ttu-id="4f8a3-2255">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2255">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2256">En règle générale, un <xref:System.Collections.IList.Add%2A?displayProperty=nameWithType> implémentation ajoute un membre à une collection.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2256">Ordinarily, an <xref:System.Collections.IList.Add%2A?displayProperty=nameWithType> implementation adds a member to a collection.</span></span> <span data-ttu-id="4f8a3-2257">Toutefois, étant donné que les tableaux ont une taille fixe (la <xref:System.Array.IsFixedSize%2A> propriété retourne toujours `true`), cette méthode lève toujours une <xref:System.NotSupportedException> exception.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2257">However, because arrays have a fixed size (the <xref:System.Array.IsFixedSize%2A> property always returns `true`), this method always throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 <span data-ttu-id="4f8a3-2258">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2258">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f8a3-2259">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Array> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2259">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4f8a3-2260">
            <see cref="T:System.Collections.IList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2260">The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f8a3-2261">Supprime tous les éléments de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2261">Removes all items from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2262">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2262">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f8a3-2263">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Array> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2263">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4f8a3-2264">
            <see cref="T:System.Collections.IList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2264">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f8a3-2265">Objet à rechercher dans la liste active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2265">The object to locate in the current list.</span>
          </span>
          <span data-ttu-id="4f8a3-2266">L'élément à trouver peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2266">The element to locate can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2267">Détermine si le <see cref="T:System.Collections.IList" /> contient un élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2267">Determines whether an element is in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-2268">
            <see langword="true" /> si <paramref name="value" /> existe dans <see cref="T:System.Collections.IList" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2268">
              <see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2269">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2269">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f8a3-2270">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Array> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2270">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f8a3-2271">Objet à rechercher dans la liste active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2271">The object to locate in the current list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2272">Détermine l'index d'un élément spécifique d'<see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2272">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-2273">Index de valeur s'il figure dans la liste ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2273">The index of value if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2274">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2274">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f8a3-2275">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Array> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2275">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4f8a3-2276">Index au niveau duquel <c>value</c> doit être inséré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2276">The index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4f8a3-2277">Objet à insérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2277">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2278">Insère un élément dans <see cref="T:System.Collections.IList" /> à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2278">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2279">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f8a3-2280">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Array> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2280">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-2281">
            <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2281">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4f8a3-2282">
            <see cref="T:System.Collections.IList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2282">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="4f8a3-2283">-ou- <see cref="T:System.Collections.IList" /> a une taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2283">-or-  The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="4f8a3-2284">
            <paramref name="value" /> est une référence null dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2284">
              <paramref name="value" /> is null reference in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4f8a3-2285">Index de l'élément à obtenir ou à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2285">The index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2286">Obtient ou définit l'élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2286">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f8a3-2287">Élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2287">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2288">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2288">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f8a3-2289">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Array> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2289">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-2290">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2290">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4f8a3-2291">-ou-  <paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.ICollection.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2291">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f8a3-2292">Le <see cref="T:System.Array" /> en cours ne possède pas exactement une dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2292">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f8a3-2293">Objet à supprimer de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2293">The object to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2294">Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2294">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2295">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2295">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f8a3-2296">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Array> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2296">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4f8a3-2297">
            <see cref="T:System.Collections.IList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2297">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="4f8a3-2298">-ou- <see cref="T:System.Collections.IList" /> a une taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2298">-or-  The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4f8a3-2299">Index de l'élément à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2299">The index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2300">Supprime l'élément <see cref="T:System.Collections.IList" /> au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2300">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2301">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2301">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f8a3-2302">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Array> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2302">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4f8a3-2303">index n'est pas un index valide dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2303">index is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4f8a3-2304">
            <see cref="T:System.Collections.IList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2304">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="4f8a3-2305">-ou- <see cref="T:System.Collections.IList" /> a une taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2305">-or-  The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="4f8a3-2306">Objet à comparer à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2306">The object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-2307">Objet qui compare l’objet actuel et <c>other</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2307">An object that compares the current object and <c>other</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2308">Détermine si l’objet collection actuel précède, se situe à la même position que, ou suit un autre objet dans l’ordre de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2308">Determines whether the current collection object precedes, occurs in the same position as, or follows another object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-2309">Entier qui indique la relation de l'objet de collection actuel par rapport aux autres objets, comme indiqué dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2309">An integer that indicates the relationship of the current collection object to other, as shown in the following table.</span>
          </span>
          <span data-ttu-id="4f8a3-2310">
            <list type="table">
              <listheader>
                <term> Valeur renvoyée  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> -1  </term>
                <description> L’instance actuelle précède <paramref name="other" />.  </description>
              </item>
              <item>
                <term> 0  </term>
                <description> L’instance actuelle et <paramref name="other" /> sont égaux.  </description>
              </item>
              <item>
                <term> 1  </term>
                <description> L’instance actuelle suit <paramref name="other" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2310">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description> The current instance precedes <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description> The current instance and <paramref name="other" /> are equal.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> The current instance follows <paramref name="other" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2311">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2311">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f8a3-2312">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Array> est castée en interface <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2312">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="4f8a3-2313">Objet à comparer à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2313">The object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="4f8a3-2314">Objet qui détermine si l’instance active et <c>other</c> sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2314">An object that determines whether the current instance and <c>other</c> are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2315">Détermine si un objet est identique à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2315">Determines whether an object is equal to the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-2316">
            <see langword="true" /> si les deux objets sont égaux ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2316">
              <see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2317">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2317">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f8a3-2318">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Array> est castée en interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2318">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="4f8a3-2319">Objet qui calcule le code de hachage de l'objet actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2319">An object that computes the hash code of the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2320">Retourne un code de hachage pour l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2320">Returns a hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-2321">Code de hachage de l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2321">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2322">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2322">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f8a3-2323">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Array> est castée en interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2323">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueForAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TrueForAll&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TrueForAll&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrueForAll(Of T) (array As T(), match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TrueForAll(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4f8a3-2324">Type des éléments du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2324">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="4f8a3-2325">
            <see cref="T:System.Array" /> de base zéro unidimensionnel à vérifier par rapport aux conditions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2325">The one-dimensional, zero-based <see cref="T:System.Array" /> to check against the conditions.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="4f8a3-2326">Le prédicat qui définit les conditions à vérifier par rapport aux éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2326">The predicate that defines the conditions to check against the elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f8a3-2327">Détermine si chaque élément dans le tableau correspond aux conditions définies par le prédicat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2327">Determines whether every element in the array matches the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f8a3-2328">
            <see langword="true" /> si chaque élément dans <paramref name="array" /> correspond aux conditions définies par le prédicat spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2328">
              <see langword="true" /> if every element in <paramref name="array" /> matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2329">Si le tableau ne contient pas d'élément, la valeur de retour est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2329">If there are no elements in the array, the return value is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f8a3-2330">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne`true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2330">The <xref:System.Predicate%601> is a delegate to a method that returns`true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="4f8a3-2331">Les éléments de `array` sont passés individuellement à la <xref:System.Predicate%601>, et le traitement est interrompu lorsque le délégué retourne `false` pour n’importe quel élément.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2331">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and processing is stopped when the delegate returns `false` for any element.</span></span>  
  
 <span data-ttu-id="4f8a3-2332">Cette méthode est un O (`n`) opération, où `n` est la <xref:System.Array.Length%2A> de `array`.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2332">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f8a3-2333">L’exemple suivant détermine si le dernier caractère de chaque élément dans un tableau de chaînes est un nombre.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2333">The following example determines whether the last character of each element in a string array is a number.</span></span> <span data-ttu-id="4f8a3-2334">Il crée deux tableaux de chaînes.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2334">It creates two string arrays.</span></span> <span data-ttu-id="4f8a3-2335">La première arrayincludes à la fois des chaînes qui se terminent par des caractères alphabétiques et des chaînes qui se terminent par des caractères numériques. Le deuxième tableau se compose uniquement de chaînes qui se terminent par des caractères numériques.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2335">The first arrayincludes both strings that end with alphabetic characters and strings that end with numeric characters.The second array consists only of strings that end with numeric characters.</span></span> <span data-ttu-id="4f8a3-2336">L’exemple définit également un `EndWithANumber` méthode dont la signature correspond à la <xref:System.Predicate%601> déléguer.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2336">The example also defines an `EndWithANumber` method whose signature matches the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="4f8a3-2337">L’exemple passe chaque tableau à la <xref:System.Array.TrueForAll%2A> (méthode), ainsi que d’un délégué qui représente le `EndsWithANumber` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2337">The example passes each array to the <xref:System.Array.TrueForAll%2A> method along with a delegate that represents the `EndsWithANumber` method.</span></span>  
  
 [!code-csharp[System.Array.TrueForAll#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.trueforall/cs/trueforall2.cs#2)]
 [!code-vb[System.Array.TrueForAll#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.trueforall/vb/trueforall2.vb#2)]  
  
 <span data-ttu-id="4f8a3-2338">L’exemple suivant est similaire à la première, sauf qu’elle transmet le tableau de chaînes à la <xref:System.Array.TrueForAll%2A> méthode avec une expression lambda qui détermine si un élément de tableau particulier se termine par la représentation sous forme de chaîne d’un nombre.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2338">The following example is similar to the first, except that it passes the string array to the <xref:System.Array.TrueForAll%2A> method along with  a lambda expression that determines whether a particular array element ends with the string representation of a number.</span></span>  
  
 [!code-csharp[System.Array.TrueForAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.trueforall/cs/trueforall1.cs#1)]
 [!code-vb[System.Array.TrueForAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.trueforall/vb/trueforall1.vb#1)]  
  
 <span data-ttu-id="4f8a3-2339">Dans les deux cas, le <xref:System.Array.TrueForAll%2A> méthode retourne `false` dès qu’il rencontre le premier élément du tableau qui ne se termine pas par un nombre.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2339">In both cases, the <xref:System.Array.TrueForAll%2A> method returns `false` as soon as it encounters the first array element that does not end in a number.</span></span> <span data-ttu-id="4f8a3-2340">Sinon, elle retourne `true` après l’itération de tous les éléments du tableau.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2340">Otherwise, it returns `true` after iterating all the elements in the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f8a3-2341">Comme le montrent les deux exemples, en c# et Visual Basic, il n’est pas nécessaire de créer le `Predicate<string>` déléguer (`Predicate(Of String)` en Visual Basic) explicitement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2341">As both examples show, in C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="4f8a3-2342">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="4f8a3-2342">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f8a3-2343">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2343">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4f8a3-2344">-ou- <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f8a3-2344">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
  </Members>
</Type>