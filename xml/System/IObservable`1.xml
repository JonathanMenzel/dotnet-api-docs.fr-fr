<Type Name="IObservable&lt;T&gt;" FullName="System.IObservable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="273ff4990891b6ccd268f3e0d66f89a6f1fa9839" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430251" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IObservable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObservable`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObservable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObservable(Of Out T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObservable" />
  <TypeSignature Language="F#" Value="type IObservable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="b3151-101">Objet qui fournit des informations de notification.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b3151-101">The object that provides notification information.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="b3151-102">Définit un fournisseur pour la notification de type push.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b3151-102">Defines a provider for push-based notification.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3151-103">Le <xref:System.IObserver%601> et <xref:System.IObservable%601> interfaces fournissent un mécanisme généralisé pour la notification de type push, également connu sous le modèle de design observateur.</span><span class="sxs-lookup"><span data-stu-id="b3151-103">The <xref:System.IObserver%601> and <xref:System.IObservable%601> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</span></span> <span data-ttu-id="b3151-104">Le <xref:System.IObservable%601> interface représente la classe qui envoie des notifications (fournisseur) ; le <xref:System.IObserver%601> interface représente la classe qui les reçoit (Observateur).</span><span class="sxs-lookup"><span data-stu-id="b3151-104">The <xref:System.IObservable%601> interface represents the class that sends notifications (the provider); the <xref:System.IObserver%601> interface represents the class that receives them (the observer).</span></span> <span data-ttu-id="b3151-105">`T` représente la classe qui fournit les informations de notification.</span><span class="sxs-lookup"><span data-stu-id="b3151-105">`T` represents the class that provides the notification information.</span></span> <span data-ttu-id="b3151-106">Dans certaines notifications de type push, la <xref:System.IObserver%601> mise en œuvre et `T` peut représenter le même type.</span><span class="sxs-lookup"><span data-stu-id="b3151-106">In some push-based notifications, the <xref:System.IObserver%601> implementation and `T` can represent the same type.</span></span>  
  
 <span data-ttu-id="b3151-107">Le fournisseur doit implémenter une méthode unique, <xref:System.IObservable%601.Subscribe%2A>, qui indique qu’un observateur souhaite recevoir des notifications de type push.</span><span class="sxs-lookup"><span data-stu-id="b3151-107">The provider must implement a single method, <xref:System.IObservable%601.Subscribe%2A>, that indicates that an observer wants to receive push-based notifications.</span></span> <span data-ttu-id="b3151-108">Aux appelants de la méthode de passer une instance de l’Observateur.</span><span class="sxs-lookup"><span data-stu-id="b3151-108">Callers to the method pass an instance of the observer.</span></span> <span data-ttu-id="b3151-109">La méthode retourne un <xref:System.IDisposable> implémentation qui permet aux observateurs d’annuler des notifications à tout moment avant que le fournisseur a cessé de les envoyer.</span><span class="sxs-lookup"><span data-stu-id="b3151-109">The method returns an <xref:System.IDisposable> implementation that enables observers to cancel notifications at any time before the provider has stopped sending them.</span></span>  
  
 <span data-ttu-id="b3151-110">À un moment donné, un fournisseur donné peut avoir zéro, un ou plusieurs observateurs.</span><span class="sxs-lookup"><span data-stu-id="b3151-110">At any given time, a given provider may have zero, one, or multiple observers.</span></span> <span data-ttu-id="b3151-111">Le fournisseur est chargé de stocker les références aux observateurs et de s’assurer qu’ils sont valides avant d’envoyer des notifications.</span><span class="sxs-lookup"><span data-stu-id="b3151-111">The provider is responsible for storing references to observers and ensuring that they are valid before it sends notifications.</span></span> <span data-ttu-id="b3151-112">Le <xref:System.IObservable%601> interface ne fait pas d’hypothèses concernant le nombre d’observateurs ou à l’ordre dans lequel les notifications sont envoyées.</span><span class="sxs-lookup"><span data-stu-id="b3151-112">The <xref:System.IObservable%601> interface does not make any assumptions about the number of observers or the order in which notifications are sent.</span></span>  
  
 <span data-ttu-id="b3151-113">Le fournisseur envoie les trois types suivants de notifications à l’Observateur en appelant <xref:System.IObserver%601> méthodes :</span><span class="sxs-lookup"><span data-stu-id="b3151-113">The provider sends the following three kinds of notifications to the observer by calling <xref:System.IObserver%601> methods:</span></span>  
  
-   <span data-ttu-id="b3151-114">Les données actuelles.</span><span class="sxs-lookup"><span data-stu-id="b3151-114">The current data.</span></span> <span data-ttu-id="b3151-115">Le fournisseur peut appeler le <xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType> méthode pour passer à l’Observateur un `T` objet comportant des données actuelles, les données modifiées ou les données actualisées.</span><span class="sxs-lookup"><span data-stu-id="b3151-115">The provider can call the <xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType> method to pass the observer a `T` object that has current data, changed data, or fresh data.</span></span>  
  
-   <span data-ttu-id="b3151-116">Une condition d’erreur.</span><span class="sxs-lookup"><span data-stu-id="b3151-116">An error condition.</span></span> <span data-ttu-id="b3151-117">Le fournisseur peut appeler le <xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType> méthode pour signaler à l’observateur qu’une condition d’erreur s’est produit.</span><span class="sxs-lookup"><span data-stu-id="b3151-117">The provider can call the <xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType> method to notify the observer that some error condition has occurred.</span></span>  
  
-   <span data-ttu-id="b3151-118">Aucune autre donnée.</span><span class="sxs-lookup"><span data-stu-id="b3151-118">No further data.</span></span> <span data-ttu-id="b3151-119">Le fournisseur peut appeler le <xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType> méthode pour signaler à l’observateur qu’il a terminé l’envoi de notifications.</span><span class="sxs-lookup"><span data-stu-id="b3151-119">The provider can call the <xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType> method to notify the observer that it has finished sending notifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3151-120">L’exemple suivant illustre le modèle de design observateur.</span><span class="sxs-lookup"><span data-stu-id="b3151-120">The following example illustrates the observer design pattern.</span></span> <span data-ttu-id="b3151-121">Il définit un `Location` classe qui contient les informations de latitude et longitude.</span><span class="sxs-lookup"><span data-stu-id="b3151-121">It defines a `Location` class that contains latitude and longitude information.</span></span>  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 <span data-ttu-id="b3151-122">Le `LocationTracker` classe fournit le <xref:System.IObservable%601> implémentation.</span><span class="sxs-lookup"><span data-stu-id="b3151-122">The `LocationTracker` class provides the <xref:System.IObservable%601> implementation.</span></span> <span data-ttu-id="b3151-123">Son `TrackLocation` autorisant des valeurs NULL est passé à méthode `Location` objet qui contient les données de latitude et longitude.</span><span class="sxs-lookup"><span data-stu-id="b3151-123">Its `TrackLocation` method is passed a nullable `Location` object that contains the latitude and longitude data.</span></span> <span data-ttu-id="b3151-124">Si le `Location` valeur n’est pas `null`, le `TrackLocation` les appels de méthode le <xref:System.IObserver%601.OnNext%2A> (méthode) de chaque observateur.</span><span class="sxs-lookup"><span data-stu-id="b3151-124">If the `Location` value is not `null`, the `TrackLocation` method calls the <xref:System.IObserver%601.OnNext%2A> method of each observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 <span data-ttu-id="b3151-125">Si le `Location` valeur est `null`, le `TrackLocation` méthode instancie un `LocationUnknownException` objet, qui est indiqué dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="b3151-125">If the `Location` value is `null`, the `TrackLocation` method instantiates a `LocationUnknownException` object, which is shown in the following example.</span></span> <span data-ttu-id="b3151-126">Il appelle ensuite chaque observateur <xref:System.IObserver%601.OnError%2A> (méthode) et lui passe la `LocationUnknownException` objet.</span><span class="sxs-lookup"><span data-stu-id="b3151-126">It then calls each observer's <xref:System.IObserver%601.OnError%2A> method and passes it the `LocationUnknownException` object.</span></span> <span data-ttu-id="b3151-127">Notez que `LocationUnknownException` dérive <xref:System.Exception>, mais n’ajoute ne pas tous les nouveaux membres.</span><span class="sxs-lookup"><span data-stu-id="b3151-127">Note that `LocationUnknownException` derives from <xref:System.Exception>, but does not add any new members.</span></span>  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 <span data-ttu-id="b3151-128">Observateurs s’inscrire pour recevoir des notifications à partir d’un `TrackLocation` objet en appelant son <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> (méthode), qui assigne une référence à l’objet observateur générique privé <xref:System.Collections.Generic.List%601> objet.</span><span class="sxs-lookup"><span data-stu-id="b3151-128">Observers register to receive notifications from a `TrackLocation` object by calling its <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method, which assigns a reference to the observer object to a private generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="b3151-129">La méthode retourne un `Unsubscriber` objet, qui est un <xref:System.IDisposable> implémentation qui permet aux observateurs d’arrêter de recevoir des notifications.</span><span class="sxs-lookup"><span data-stu-id="b3151-129">The method returns an `Unsubscriber` object, which is an <xref:System.IDisposable> implementation that enables observers to stop receiving notifications.</span></span> <span data-ttu-id="b3151-130">Le `LocationTracker` classe inclut également un `EndTransmission` (méthode).</span><span class="sxs-lookup"><span data-stu-id="b3151-130">The `LocationTracker` class also includes an `EndTransmission` method.</span></span> <span data-ttu-id="b3151-131">Lorsqu’aucune autre donnée d’emplacement n’est disponible, la méthode appelle chaque observateur <xref:System.IObserver%601.OnCompleted%2A> (méthode), puis efface la liste interne des observateurs.</span><span class="sxs-lookup"><span data-stu-id="b3151-131">When no further location data is available, the method calls each observer's <xref:System.IObserver%601.OnCompleted%2A> method and then clears the internal list of observers.</span></span>  
  
 <span data-ttu-id="b3151-132">Dans cet exemple, le `LocationReporter` classe fournit le <xref:System.IObserver%601> implémentation.</span><span class="sxs-lookup"><span data-stu-id="b3151-132">In this example, the `LocationReporter` class provides the <xref:System.IObserver%601> implementation.</span></span> <span data-ttu-id="b3151-133">Il affiche des informations sur l’emplacement actuel dans la console.</span><span class="sxs-lookup"><span data-stu-id="b3151-133">It displays information about the current location to the console.</span></span> <span data-ttu-id="b3151-134">Son constructeur inclut un `name` paramètre, ce qui permet la `LocationReporter` instance identifier dans sa sortie de chaîne.</span><span class="sxs-lookup"><span data-stu-id="b3151-134">Its constructor includes a `name` parameter, which enables the `LocationReporter` instance to identify itself in its string output.</span></span> <span data-ttu-id="b3151-135">Il inclut également un `Subscribe` méthode qui encapsule un appel à du fournisseur <xref:System.IObservable%601.Subscribe%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b3151-135">It also includes a `Subscribe` method, which wraps a call to the provider's <xref:System.IObservable%601.Subscribe%2A> method.</span></span> <span data-ttu-id="b3151-136">Cela permet à la méthode attribuer le retourné <xref:System.IDisposable> référence à une variable privée.</span><span class="sxs-lookup"><span data-stu-id="b3151-136">This allows the method to assign the returned <xref:System.IDisposable> reference to a private variable.</span></span> <span data-ttu-id="b3151-137">Le `LocationReporter` classe inclut également un `Unsubscribe` (méthode), qui appelle la <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> méthode de l’objet retourné par la <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b3151-137">The `LocationReporter` class also includes an `Unsubscribe` method, which calls the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method of the object that is returned by the <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b3151-138">Le code suivant définit la `LocationReporter` classe.</span><span class="sxs-lookup"><span data-stu-id="b3151-138">The following code defines the `LocationReporter` class.</span></span>  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 <span data-ttu-id="b3151-139">Le code suivant instancie ensuite le fournisseur et l’Observateur.</span><span class="sxs-lookup"><span data-stu-id="b3151-139">The following code then instantiates the provider and the observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObserver`1" />
  </Docs>
  <Members>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;out T&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;!T&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subscribe (observer As IObserver(Of Out T)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Subscribe(IObserver&lt;T&gt; ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : IObserver&lt;'T&gt; -&gt; IDisposable" Usage="iObservable.Subscribe observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="observer">
          <span data-ttu-id="b3151-140">Objet qui doit recevoir des notifications.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3151-140">The object that is to receive notifications.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b3151-141">Notifie le fournisseur qu’un observateur doit recevoir des notifications.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3151-141">Notifies the provider that an observer is to receive notifications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b3151-142">Référence à une interface qui permet aux observateurs de cesser de recevoir des notifications avant que le fournisseur ait fini de les envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3151-142">A reference to an interface that allows observers to stop receiving notifications before the provider has finished sending them.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3151-143">Le <xref:System.IObservable%601.Subscribe%2A> méthode doit être appelée pour inscrire un observateur pour les notifications push.</span><span class="sxs-lookup"><span data-stu-id="b3151-143">The <xref:System.IObservable%601.Subscribe%2A> method must be called to register an observer for push-based notifications.</span></span> <span data-ttu-id="b3151-144">Une implémentation classique de la <xref:System.IObservable%601.Subscribe%2A> méthode effectue les opérations suivantes :</span><span class="sxs-lookup"><span data-stu-id="b3151-144">A typical implementation of the <xref:System.IObservable%601.Subscribe%2A> method does the following:</span></span>  
  
-   <span data-ttu-id="b3151-145">Il stocke une référence à l’Observateur dans un objet de collection, comme un <xref:System.Collections.Generic.List%601> objet.</span><span class="sxs-lookup"><span data-stu-id="b3151-145">It stores a reference to the observer in a collection object, such as a <xref:System.Collections.Generic.List%601> object.</span></span>  
  
-   <span data-ttu-id="b3151-146">Il retourne une référence à un <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="b3151-146">It returns a reference to an <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="b3151-147">Cela permet aux observateurs d’annuler l’abonnement (autrement dit, pour ne plus recevoir de notifications) avant que le fournisseur ait fini de les envoyer et appelée de l’abonné <xref:System.IObserver%601.OnCompleted%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b3151-147">This enables observers to unsubscribe (that is, to stop receiving notifications) before the provider has finished sending them and called the subscriber's <xref:System.IObserver%601.OnCompleted%2A> method.</span></span>  
  
 <span data-ttu-id="b3151-148">À tout moment donné, une instance particulière d’un <xref:System.IObservable%601> implémentation est chargée pour la gestion de tous les abonnements et d’informer tous les abonnés.</span><span class="sxs-lookup"><span data-stu-id="b3151-148">At any given time, a particular instance of an <xref:System.IObservable%601> implementation is responsible for handling all subscriptions and notifying all subscribers.</span></span> <span data-ttu-id="b3151-149">À moins que la documentation relative à un particulier <xref:System.IObservable%601> implémentation n’indique le contraire, les observateurs doivent faire aucune hypothèse sur le <xref:System.IObservable%601> implémentation, tels que l’ordre des notifications que plusieurs observateurs recevront.</span><span class="sxs-lookup"><span data-stu-id="b3151-149">Unless the documentation for a particular <xref:System.IObservable%601> implementation indicates otherwise, observers should make no assumptions about the <xref:System.IObservable%601> implementation, such as the order of notifications that multiple observers will receive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3151-150">L’exemple suivant illustre la <xref:System.IObservable%601.Subscribe%2A> méthode pour une application qui fournit des informations de latitude et longitude.</span><span class="sxs-lookup"><span data-stu-id="b3151-150">The following example illustrates the <xref:System.IObservable%601.Subscribe%2A> method for an application that reports latitude and longitude information.</span></span> <span data-ttu-id="b3151-151">Il définit un <xref:System.Collections.Generic.IList%601> objet de collection qui stocke des références à tous les observateurs.</span><span class="sxs-lookup"><span data-stu-id="b3151-151">It defines an <xref:System.Collections.Generic.IList%601> collection object that stores references to all observers.</span></span> <span data-ttu-id="b3151-152">Il retourne également une classe privée nommée `Unsubscriber` qui implémente le <xref:System.IDisposable> de l’interface et permet aux abonnés d’arrêter de recevoir des notifications d’événements.</span><span class="sxs-lookup"><span data-stu-id="b3151-152">It also returns a private class named `Unsubscriber` that implements the <xref:System.IDisposable> interface and enables subscribers to stop receiving event notifications.</span></span>  <span data-ttu-id="b3151-153">Consultez la section exemple de la <xref:System.IObservable%601> rubrique pour obtenir un exemple complet.</span><span class="sxs-lookup"><span data-stu-id="b3151-153">See the Example section of the <xref:System.IObservable%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#13)]
 [!code-vb[System.IObserver.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IObserver`1" />
      </Docs>
    </Member>
  </Members>
</Type>