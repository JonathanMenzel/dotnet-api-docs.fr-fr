<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IObservable`1.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c2589d1e6912470385b77aa8afee4b096c72c259.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2589d1e6912470385b77aa8afee4b096c72c259</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The object that provides notification information.</source>
          <target state="translated">Objet qui fournit des informations de notification.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IObservable`1">
          <source>Defines a provider for push-based notification.</source>
          <target state="translated">Définit un fournisseur pour la notification de type push.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> and <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> et <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> interfaces fournissent un mécanisme généralisé pour la notification de type push, également connu sous le modèle de design observateur.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface represents the class that sends notifications (the provider); the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> interface represents the class that receives them (the observer).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface représente la classe qui envoie des notifications (fournisseur) ; le <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> interface représente la classe qui les reçoit (Observateur).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source><ph id="ph1">`T`</ph> represents the class that provides the notification information.</source>
          <target state="translated"><ph id="ph1">`T`</ph> représente la classe qui fournit les informations de notification.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>In some push-based notifications, the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> implementation and <ph id="ph2">`T`</ph> can represent the same type.</source>
          <target state="translated">Dans certaines notifications de type push, la <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> mise en œuvre et <ph id="ph2">`T`</ph> peut représenter le même type.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The provider must implement a single method, <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph>, that indicates that an observer wants to receive push-based notifications.</source>
          <target state="translated">Le fournisseur doit implémenter une méthode unique, <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph>, qui indique qu’un observateur souhaite recevoir des notifications de type push.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>Callers to the method pass an instance of the observer.</source>
          <target state="translated">Aux appelants de la méthode de passer une instance de l’Observateur.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The method returns an <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> implementation that enables observers to cancel notifications at any time before the provider has stopped sending them.</source>
          <target state="translated">La méthode retourne un <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> implémentation qui permet aux observateurs d’annuler des notifications à tout moment avant que le fournisseur a cessé de les envoyer.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>At any given time, a given provider may have zero, one, or multiple observers.</source>
          <target state="translated">À un moment donné, un fournisseur donné peut avoir zéro, un ou plusieurs observateurs.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The provider is responsible for storing references to observers and ensuring that they are valid before it sends notifications.</source>
          <target state="translated">Le fournisseur est chargé de stocker les références aux observateurs et de s’assurer qu’ils sont valides avant d’envoyer des notifications.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface does not make any assumptions about the number of observers or the order in which notifications are sent.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface ne fait pas d’hypothèses concernant le nombre d’observateurs ou à l’ordre dans lequel les notifications sont envoyées.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The provider sends the following three kinds of notifications to the observer by calling <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> methods:</source>
          <target state="translated">Le fournisseur envoie les trois types suivants de notifications à l’Observateur en appelant <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> méthodes :</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The current data.</source>
          <target state="translated">Les données actuelles.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The provider can call the <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType&gt;</ph> method to pass the observer a <ph id="ph2">`T`</ph> object that has current data, changed data, or fresh data.</source>
          <target state="translated">Le fournisseur peut appeler le <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType&gt;</ph> méthode pour passer à l’Observateur un <ph id="ph2">`T`</ph> objet comportant des données actuelles, les données modifiées ou les données actualisées.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>An error condition.</source>
          <target state="translated">Une condition d’erreur.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The provider can call the <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType&gt;</ph> method to notify the observer that some error condition has occurred.</source>
          <target state="translated">Le fournisseur peut appeler le <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType&gt;</ph> méthode pour signaler à l’observateur qu’une condition d’erreur s’est produit.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>No further data.</source>
          <target state="translated">Aucune autre donnée.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The provider can call the <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType&gt;</ph> method to notify the observer that it has finished sending notifications.</source>
          <target state="translated">Le fournisseur peut appeler le <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType&gt;</ph> méthode pour signaler à l’observateur qu’il a terminé l’envoi de notifications.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The following example illustrates the observer design pattern.</source>
          <target state="translated">L’exemple suivant illustre le modèle de design observateur.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>It defines a <ph id="ph1">`Location`</ph> class that contains latitude and longitude information.</source>
          <target state="translated">Il définit un <ph id="ph1">`Location`</ph> classe qui contient les informations de latitude et longitude.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class provides the <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation.</source>
          <target state="translated">Le <ph id="ph1">`LocationTracker`</ph> classe fournit le <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>Its <ph id="ph1">`TrackLocation`</ph> method is passed a nullable <ph id="ph2">`Location`</ph> object that contains the latitude and longitude data.</source>
          <target state="translated">Son <ph id="ph1">`TrackLocation`</ph> autorisant des valeurs NULL est passé à méthode <ph id="ph2">`Location`</ph> objet qui contient les données de latitude et longitude.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>If the <ph id="ph1">`Location`</ph> value is not <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method calls the <ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method of each observer.</source>
          <target state="translated">Si le <ph id="ph1">`Location`</ph> valeur n’est pas <ph id="ph2">`null`</ph>, le <ph id="ph3">`TrackLocation`</ph> les appels de méthode le <ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> (méthode) de chaque observateur.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>If the <ph id="ph1">`Location`</ph> value is <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method instantiates a <ph id="ph4">`LocationUnknownException`</ph> object, which is shown in the following example.</source>
          <target state="translated">Si le <ph id="ph1">`Location`</ph> valeur est <ph id="ph2">`null`</ph>, le <ph id="ph3">`TrackLocation`</ph> méthode instancie un <ph id="ph4">`LocationUnknownException`</ph> objet, qui est indiqué dans l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>It then calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method and passes it the <ph id="ph2">`LocationUnknownException`</ph> object.</source>
          <target state="translated">Il appelle ensuite chaque observateur <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> (méthode) et lui passe la <ph id="ph2">`LocationUnknownException`</ph> objet.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>Note that <ph id="ph1">`LocationUnknownException`</ph> derives from <ph id="ph2">&lt;xref:System.Exception&gt;</ph>, but does not add any new members.</source>
          <target state="translated">Notez que <ph id="ph1">`LocationUnknownException`</ph> dérive <ph id="ph2">&lt;xref:System.Exception&gt;</ph>, mais n’ajoute ne pas tous les nouveaux membres.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>Observers register to receive notifications from a <ph id="ph1">`TrackLocation`</ph> object by calling its <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method, which assigns a reference to the observer object to a private generic <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">Observateurs s’inscrire pour recevoir des notifications à partir d’un <ph id="ph1">`TrackLocation`</ph> objet en appelant son <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> (méthode), qui assigne une référence à l’objet observateur générique privé <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The method returns an <ph id="ph1">`Unsubscriber`</ph> object, which is an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implementation that enables observers to stop receiving notifications.</source>
          <target state="translated">La méthode retourne un <ph id="ph1">`Unsubscriber`</ph> objet, qui est un <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implémentation qui permet aux observateurs d’arrêter de recevoir des notifications.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class also includes an <ph id="ph2">`EndTransmission`</ph> method.</source>
          <target state="translated">Le <ph id="ph1">`LocationTracker`</ph> classe inclut également un <ph id="ph2">`EndTransmission`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>When no further location data is available, the method calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method and then clears the internal list of observers.</source>
          <target state="translated">Lorsqu’aucune autre donnée d’emplacement n’est disponible, la méthode appelle chaque observateur <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> (méthode), puis efface la liste interne des observateurs.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>In this example, the <ph id="ph1">`LocationReporter`</ph> class provides the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> implementation.</source>
          <target state="translated">Dans cet exemple, le <ph id="ph1">`LocationReporter`</ph> classe fournit le <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>It displays information about the current location to the console.</source>
          <target state="translated">Il affiche des informations sur l’emplacement actuel dans la console.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>Its constructor includes a <ph id="ph1">`name`</ph> parameter, which enables the <ph id="ph2">`LocationReporter`</ph> instance to identify itself in its string output.</source>
          <target state="translated">Son constructeur inclut un <ph id="ph1">`name`</ph> paramètre, ce qui permet la <ph id="ph2">`LocationReporter`</ph> instance identifier dans sa sortie de chaîne.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>It also includes a <ph id="ph1">`Subscribe`</ph> method, which wraps a call to the provider's <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method.</source>
          <target state="translated">Il inclut également un <ph id="ph1">`Subscribe`</ph> méthode qui encapsule un appel à du fournisseur <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>This allows the method to assign the returned <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> reference to a private variable.</source>
          <target state="translated">Cela permet à la méthode attribuer le retourné <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> référence à une variable privée.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The <ph id="ph1">`LocationReporter`</ph> class also includes an <ph id="ph2">`Unsubscribe`</ph> method, which calls the <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method of the object that is returned by the <ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">`LocationReporter`</ph> classe inclut également un <ph id="ph2">`Unsubscribe`</ph> (méthode), qui appelle la <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> méthode de l’objet retourné par la <ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The following code defines the <ph id="ph1">`LocationReporter`</ph> class.</source>
          <target state="translated">Le code suivant définit la <ph id="ph1">`LocationReporter`</ph> classe.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObservable`1">
          <source>The following code then instantiates the provider and the observer.</source>
          <target state="translated">Le code suivant instancie ensuite le fournisseur et l’Observateur.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>The object that is to receive notifications.</source>
          <target state="translated">Objet qui doit recevoir des notifications.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>Notifies the provider that an observer is to receive notifications.</source>
          <target state="translated">Notifie le fournisseur qu’un observateur doit recevoir des notifications.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>A reference to an interface that allows observers to stop receiving notifications before the provider has finished sending them.</source>
          <target state="translated">Référence à une interface qui permet aux observateurs de cesser de recevoir des notifications avant que le fournisseur ait fini de les envoyer.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>The <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method must be called to register an observer for push-based notifications.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> méthode doit être appelée pour inscrire un observateur pour les notifications push.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>A typical implementation of the <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method does the following:</source>
          <target state="translated">Une implémentation classique de la <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> méthode effectue les opérations suivantes :</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>It stores a reference to the observer in a collection object, such as a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">Il stocke une référence à l’Observateur dans un objet de collection, comme un <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>It returns a reference to an <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Il retourne une référence à un <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>This enables observers to unsubscribe (that is, to stop receiving notifications) before the provider has finished sending them and called the subscriber's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method.</source>
          <target state="translated">Cela permet aux observateurs d’annuler l’abonnement (autrement dit, pour ne plus recevoir de notifications) avant que le fournisseur ait fini de les envoyer et appelée de l’abonné <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>At any given time, a particular instance of an <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> implementation is responsible for handling all subscriptions and notifying all subscribers.</source>
          <target state="translated">À tout moment donné, une instance particulière d’un <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> implémentation est chargée pour la gestion de tous les abonnements et d’informer tous les abonnés.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>Unless the documentation for a particular <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> implementation indicates otherwise, observers should make no assumptions about the <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation, such as the order of notifications that multiple observers will receive.</source>
          <target state="translated">À moins que la documentation relative à un particulier <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> implémentation n’indique le contraire, les observateurs doivent faire aucune hypothèse sur le <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implémentation, tels que l’ordre des notifications que plusieurs observateurs recevront.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method for an application that reports latitude and longitude information.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> méthode pour une application qui fournit des informations de latitude et longitude.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>It defines an <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> collection object that stores references to all observers.</source>
          <target state="translated">Il définit un <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> objet de collection qui stocke des références à tous les observateurs.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>It also returns a private class named <ph id="ph1">`Unsubscriber`</ph> that implements the <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface and enables subscribers to stop receiving event notifications.</source>
          <target state="translated">Il retourne également une classe privée nommée <ph id="ph1">`Unsubscriber`</ph> qui implémente le <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> de l’interface et permet aux abonnés d’arrêter de recevoir des notifications d’événements.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">Consultez la section exemple de la <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> rubrique pour obtenir un exemple complet.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>