<Type Name="ReadOnlySpan&lt;T&gt;+Enumerator" FullName="System.ReadOnlySpan&lt;T&gt;+Enumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d2a57b3f525dbf0a6e7a5df42a7f9b84a37f33bc" /><Meta Name="ms.sourcegitcommit" Value="22744e2f9d07a51900a968efffd9e390117d64a1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/03/2019" /><Meta Name="ms.locfileid" Value="55672225" /></Metadata><TypeSignature Language="C#" Value="public struct ReadOnlySpan&lt;T&gt;.Enumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ReadOnlySpan`1/Enumerator&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ReadOnlySpan`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure ReadOnlySpan(Of T).Enumerator" />
  <TypeSignature Language="C++ CLI" Value="public: value class ReadOnlySpan&lt;T&gt;::Enumerator" />
  <TypeSignature Language="F#" Value="type ReadOnlySpan&lt;'T&gt;.Enumerator = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ed9fc-101">Fournit un énumérateur pour les éléments d’un <see cref="T:System.ReadOnlySpan`1" />.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-101">Provides an enumerator for the elements of a <see cref="T:System.ReadOnlySpan`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[<span data-ttu-id="ed9fc-102">C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) du langage c# et le [pour chaque... Suivant](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construction dans Visual Basic masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-102">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) of the C# language and the [For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construct in Visual Basic hides the complexity of enumerators.</span></span> <span data-ttu-id="ed9fc-103">Plutôt que de manipuler directement l’énumérateur à l’aide de `foreach` ou `For Each...Next` est recommandé.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-103">Instead of directly manipulating the enumerator, using `foreach` or `For Each...Next` is recommended.</span></span> 

<span data-ttu-id="ed9fc-104">Initialement, l’énumérateur est positionné avant le premier élément dans le <xref:System.ReadOnlySpan`1>.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-104">Initially, the enumerator is positioned before the first element in the <xref:System.ReadOnlySpan`1>.</span></span> <span data-ttu-id="ed9fc-105">À cette position, <xref:System.ReadOnlySpan`1.Enumerator.Current> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-105">At this position, <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="ed9fc-106">Vous devez appeler <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> pour avancer l’énumérateur vers le premier élément dans le <xref:System.ReadOnlySpan`1> avant de lire la valeur de <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-106">You must call <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> to advance the enumerator to the first item in the <xref:System.ReadOnlySpan`1> before reading the value of <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span></span>

<span data-ttu-id="ed9fc-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> Retourne la même valeur jusqu'à ce que <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="ed9fc-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> définit <xref:System.ReadOnlySpan`1.Enumerator.Current> à l’élément suivant dans le <xref:System.ReadOnlySpan`1>.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> sets <xref:System.ReadOnlySpan`1.Enumerator.Current> to the next item in the <xref:System.ReadOnlySpan`1>.</span></span>

<span data-ttu-id="ed9fc-109">Si <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> passe la fin de la <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-109">If <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> passes the end of the <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ed9fc-110">Lorsque l’énumérateur se trouve à cet état, les appels suivants à <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> également retourner `false` et <xref:System.ReadOnlySpan`1.Enumerator.Current> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-110">When the enumerator is at this state, subsequent calls to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> also return `false` and <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="ed9fc-111">Vous ne pouvez pas définir <xref:System.ReadOnlySpan`1.Enumerator.Current> vers le premier élément dans le <xref:System.ReadOnlySpan`1> à nouveau ; vous devez créer une nouvelle instance de l’énumérateur à la place.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-111">You cannot set <xref:System.ReadOnlySpan`1.Enumerator.Current> to the first item in the <xref:System.ReadOnlySpan`1> again; you must create a new enumerator instance instead.</span></span> 

<span data-ttu-id="ed9fc-112">Bien que le <xref:System.ReadOnlySpan`1> est allouée sur la pile, les données sous-jacentes sur lesquelles le <xref:System.ReadOnlySpan`1> points, ne peuvent pas être.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-112">Though the <xref:System.ReadOnlySpan`1> is allocated on the stack, the underlying data on which the <xref:System.ReadOnlySpan`1> points to, may not be.</span></span> <span data-ttu-id="ed9fc-113">Par conséquent, l’énumération d’un <xref:System.ReadOnlySpan`1> n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-113">Therefore, enumerating through a <xref:System.ReadOnlySpan`1> is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ed9fc-114">Pour garantir la sécurité des threads pendant l’énumération, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-114">To guarantee thread safety during enumeration, you must implement your own synchronization.</span></span>

<span data-ttu-id="ed9fc-115">Contrairement à certains autres structures d’énumérateur dans .NET, le <xref:System.ReadOnlySpan`1.Enumerator>:</span><span class="sxs-lookup"><span data-stu-id="ed9fc-115">Unlike some other enumerator structures in .NET, the <xref:System.ReadOnlySpan`1.Enumerator>:</span></span>

- <span data-ttu-id="ed9fc-116">N’implémente pas le <xref:System.Collections.IEnumerator> ou <xref:System.Collections.Generic.IEnumerator`1> interface.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-116">Does not implement the <xref:System.Collections.IEnumerator> or <xref:System.Collections.Generic.IEnumerator`1> interface.</span></span> <span data-ttu-id="ed9fc-117">Il s’agit, car <xref:System.ReadOnlySpan`1.Enumerator> est un [ref struct](~/docs/csharp/language-reference/keywords/ref.md#ref-struct-types) et ne peut pas être converti (boxed).</span><span class="sxs-lookup"><span data-stu-id="ed9fc-117">This is because <xref:System.ReadOnlySpan`1.Enumerator> is a [ref struct](~/docs/csharp/language-reference/keywords/ref.md#ref-struct-types) and cannot be boxed.</span></span>

- <span data-ttu-id="ed9fc-118">N’inclut pas un `Reset` (méthode), qui peut l’énumérateur à sa position initiale avant le premier élément dans l’étendue.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-118">Does not include a `Reset` method, which can set the enumerator to its initial position before the first element in the span.</span></span> <span data-ttu-id="ed9fc-119">(Le <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> méthode doit être implémentée en tant que partie de l’interface, mais la plupart des implémenteurs lever une exception ou ne fournir aucune implémentation.)</span><span class="sxs-lookup"><span data-stu-id="ed9fc-119">(The <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> method must be implemented as part of the interface, but most implementors either throw an exception or provide no implementation.)</span></span>]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T&amp; Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance T&amp; modreq(System.Runtime.InteropServices.InAttribute) Current" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlySpan`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T&amp; ^ Current { T&amp; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : T&amp;" Usage="System.ReadOnlySpan&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
          <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue RefType="Ref">
        <ReturnType>T&amp;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed9fc-120">Obtient une référence à l’élément à la position actuelle de l’énumérateur.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-120">Gets a reference to the item at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="ed9fc-121">Élément situé dans le <see cref="T:System.ReadOnlySpan`1" /> à la position actuelle de l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-121">The element in the <see cref="T:System.ReadOnlySpan`1" /> at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="ed9fc-122">`Current` n’est pas définie dans une des conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="ed9fc-122">`Current` is undefined under either of the following conditions:</span></span> 

- <span data-ttu-id="ed9fc-123">Immédiatement après la création de l’énumérateur, l’énumérateur est positionné avant le premier élément dans l’étendue.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-123">Immediately after the enumerator is created, the enumerator is positioned before the first element in the span.</span></span> <span data-ttu-id="ed9fc-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> doit être appelée pour avancer l’énumérateur vers le premier élément de l’étendue avant de lire la valeur de `Current`.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> must be called to advance the enumerator to the first element of the span before reading the value of `Current`.</span></span>

- <span data-ttu-id="ed9fc-125">Le dernier appel à <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> retourné `false`, ce qui indique la fin de l’étendue.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-125">The last call to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> returned `false`, which indicates the end of the span.</span></span> 

<span data-ttu-id="ed9fc-126">`Current` Retourne la même valeur jusqu'à ce que <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> est appelée.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-126">`Current` returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> is called.</span></span> <span data-ttu-id="ed9fc-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> définit `Current` à l’élément suivant dans l’étendue.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> sets `Current` to the next item in the span.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ed9fc-128">Avance l’énumérateur à l’élément suivant de <see cref="System.ReadOnlySpan`1" />.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-128">Advances the enumerator to the next item of the <see cref="System.ReadOnlySpan`1" />.</span></span></summary>
        <returns><span data-ttu-id="ed9fc-129">`true` si l’énumérateur a avancé jusqu’à l’élément suivant ; `false` si la fin de l’étendue a été dépassée.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-129">`true` if the enumerator successfully advanced to the next item; `false` if the end of the span has been passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="ed9fc-130">Une fois un énumérateur est créé, il est positionné avant le premier élément dans l’étendue et le premier appel à `MoveNext` avance l’énumérateur au premier élément dans l’étendue.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-130">After an enumerator is created, it is positioned before the first element in the span, and the first call to `MoveNext` advances the enumerator to the first item in the span.</span></span> 

<span data-ttu-id="ed9fc-131">Si `MoveNext` passe la fin de l’étendue, `MoveNext` retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-131">If `MoveNext` passes the end of the span, `MoveNext` returns `false`.</span></span> <span data-ttu-id="ed9fc-132">Lorsque l’énumérateur se trouve à cet état, les appels suivants à `MoveNext` également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="ed9fc-132">When the enumerator is at this state, subsequent calls to `MoveNext` also return `false`.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>