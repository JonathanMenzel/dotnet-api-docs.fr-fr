<Type Name="GenericUriParser" FullName="System.GenericUriParser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df1082446a95937cd93cd58c704e34204d3b971d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37727872" /></Metadata><TypeSignature Language="C#" Value="public class GenericUriParser : UriParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GenericUriParser extends System.UriParser" />
  <TypeSignature Language="DocId" Value="T:System.GenericUriParser" />
  <TypeSignature Language="VB.NET" Value="Public Class GenericUriParser&#xA;Inherits UriParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenericUriParser : UriParser" />
  <TypeSignature Language="F#" Value="type GenericUriParser = class&#xA;    inherit UriParser" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.UriParser</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Analyseur personnalisable pour un URI hiérarchique.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous souhaitez créer un analyseur basé sur un schéma connu, utilisez <xref:System.HttpStyleUriParser>, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>, ou <xref:System.NewsStyleUriParser>.  
  
 Lorsque vous créez un analyseur personnalisable, le comportement de l’analyseur est spécifié en passant une combinaison au niveau du bit des valeurs disponibles dans le <xref:System.GenericUriParserOptions?displayProperty=nameWithType> énumération à la <xref:System.GenericUriParser> constructeur.  
  
 Existant <xref:System.Uri?displayProperty=nameWithType> classe a été étendue pour prendre en charge pour les identificateurs IRI (International Resource) et les noms de domaine international (IDN). Les utilisateurs actuels ne verront aucun changement dans le comportement de .NET Framework 2.0, sauf s’ils activent spécifiquement les IRI. Cela garantit la compatibilité des applications avec les versions antérieures de .NET Framework.  
  
 Les analyseurs dérivés de <xref:System.GenericUriParser> ne bénéficierez pas de prise en charge des IRI et des IDN par défaut. Le <xref:System.GenericUriParserOptions.Default> option n’inclut pas les IRI et des IDN prennent en charge. Deux nouvelles valeurs sont ajoutés à la <xref:System.GenericUriParserOptions?displayProperty=nameWithType> énumération pour indiquer si un analyseur personnalisé prend en charge des IRI et des IDN.  
  
 Pour plus d’informations sur la prise en charge des IRI et des IDN, consultez la section Notes pour la <xref:System.Uri?displayProperty=nameWithType> classe.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenericUriParser (GenericUriParserOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.GenericUriParserOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GenericUriParser.#ctor(System.GenericUriParserOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As GenericUriParserOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GenericUriParser(GenericUriParserOptions options);" />
      <MemberSignature Language="F#" Value="new GenericUriParser : GenericUriParserOptions -&gt; GenericUriParser" Usage="new System.GenericUriParser options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.GenericUriParserOptions" />
      </Parameters>
      <Docs>
        <param name="options">Spécifiez les options pour ce <see cref="T:System.GenericUriParser" />.</param>
        <summary>Créer un analyseur personnalisable pour un URI hiérarchique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur en tant qu’argument à <xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType>  
  
 Si vous souhaitez créer un analyseur basé sur un schéma connu, utilisez <xref:System.HttpStyleUriParser>, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>, ou <xref:System.NewsStyleUriParser>.  
  
 Lorsque vous créez un analyseur personnalisable, le comportement de l’analyseur est spécifié en passant une combinaison au niveau du bit des valeurs disponibles dans le <xref:System.GenericUriParserOptions?displayProperty=nameWithType> énumération à la <xref:System.GenericUriParser> constructeur.  
  
 Existant <xref:System.Uri?displayProperty=nameWithType> classe a été étendue pour prendre en charge pour les identificateurs IRI (International Resource) et les noms de domaine international (IDN). Les utilisateurs actuels ne verront aucun changement dans le comportement de .NET Framework 2.0, sauf s’ils activent spécifiquement les IRI. Cela garantit la compatibilité des applications avec les versions antérieures de .NET Framework.  
  
 Les analyseurs dérivés de <xref:System.GenericUriParser> ne bénéficierez pas de prise en charge des IRI et des IDN par défaut. Le <xref:System.GenericUriParserOptions.Default> option n’inclut pas les IRI et des IDN prennent en charge. Deux nouvelles valeurs sont ajoutés à la <xref:System.GenericUriParserOptions?displayProperty=nameWithType> énumération pour indiquer si un analyseur personnalisé prend en charge des IRI et des IDN.  
  
 Le type <xref:System.GenericUriParserOptions.IriParsing> indique que l’analyseur prend en charge les règles d’analyse spécifiées dans la norme RFC 3987 pour les IRI (International Resource Identifier). L'utilisation des IRI est dictée par les valeurs de configuration.  
  
 Le type <xref:System.GenericUriParserOptions.Idn> indique que l’analyseur prend en charge l’analyse des IDN pour les noms d’hôte. L'utilisation des IDN est dictée par les valeurs de configuration.  
  
 Le paramètre de configuration pour le <xref:System.Configuration.IdnElement?displayProperty=nameWithType> est contrôlé indirectement par le <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> paramètre de configuration qui contrôle le traitement des IRI dans la <xref:System.Uri?displayProperty=nameWithType> classe. Le traitement des IRI doit être activé pour permettre le traitement des IDN. Si le traitement des IRI est désactivé, le traitement des IDN est effectué selon le paramètre par défaut (le comportement de .NET Framework 2.0 est utilisé pour la compatibilité et les noms IDN ne sont pas utilisés).  
  
 L’attribut de nom de domaine international (IDN) contrôle uniquement le traitement des IDN. Tout autre traitement des IRI (normalisation des caractères, par exemple) est effectuée par défaut.  
  
 Pour plus d’informations sur la prise en charge des IRI et des IDN, consultez la section Notes pour la <xref:System.Uri?displayProperty=nameWithType> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.GenericUriParserOptions" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>