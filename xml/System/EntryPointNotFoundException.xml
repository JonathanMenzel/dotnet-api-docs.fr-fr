<Type Name="EntryPointNotFoundException" FullName="System.EntryPointNotFoundException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b0c1540e8940e0d3c6f23966a4f7e1f425aa7961" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52201935" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EntryPointNotFoundException : TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit EntryPointNotFoundException extends System.TypeLoadException" />
  <TypeSignature Language="DocId" Value="T:System.EntryPointNotFoundException" />
  <TypeSignature Language="VB.NET" Value="Public Class EntryPointNotFoundException&#xA;Inherits TypeLoadException" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntryPointNotFoundException : TypeLoadException" />
  <TypeSignature Language="F#" Value="type EntryPointNotFoundException = class&#xA;    inherit TypeLoadException" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.TypeLoadException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Exception levée lorsqu'une tentative de chargement d'une classe échoue en raison de l'absence de méthode d'entrée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.EntryPointNotFoundException> exception est levée lorsque le common language runtime ne peut pas charger un assembly, car il ne peut pas identifier le point d’entrée de l’assembly.  Cette exception peut être levée dans les conditions suivantes :  
  
-   Le common language runtime ne peut pas localiser un point d’entrée application (généralement un `Main` méthode) dans un assembly exécutable. Le point d’entrée de l’application doit être global ou `static` méthode qui n’a aucun paramètre ou un tableau de chaînes comme seul paramètre. Le point d’entrée peut retourner `void`, ou elle peut retourner un <xref:System.Int32> ou <xref:System.UInt32> code de sortie. Un assembly d’application ne peut pas définir plus d’un point d’entrée.  
  
-   L’appel à une fonction dans une DLL de Windows ne peut pas être résolu, car la fonction ne peut pas être trouvé. Dans l’exemple suivant, un <xref:System.EntryPointNotFoundException> exception est levée car User32.dll n’inclut pas une fonction nommée `GetMyNumber`.  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/nofunction1.cs#1)]
     [!code-vb[System.EntryPointNotFoundException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/nofunction1.vb#1)]  
  
-   L’appel à une fonction dans une DLL de Windows ne peut pas être résolu, car le nom utilisé dans l’appel de méthode ne correspond pas à un nom trouvé dans l’assembly. Cela se produit fréquemment, étant donné que le <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=nameWithType> champ est implicitement ou explicitement défini sur `true`, la méthode appelée inclut un ou plusieurs paramètres de chaîne et a les versions ANSI et Unicode, et n’est pas le cas du nom utilisé dans l’appel de méthode correspond au nom de cette version ANSI ou Unicode. L’exemple suivant fournit une illustration par une tentative d’appel de la Windows `MessageBox` fonction dans User32.dll. Étant donné que la première définition de méthode spécifie <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType> pour le marshaling des chaînes, le common language recherche la version à caractères larges de la fonction, `MessageBoxW`, au lieu du nom utilisé dans l’appel de méthode `MessageBox`.  La deuxième définition de méthode corrige ce problème en appelant le `MessageBoxW` au lieu du `MessageBox` (fonction).  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/badcall1.cs#2)]
     [!code-vb[System.EntryPointNotFoundException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/badcall1.vb#2)]  
  
-   Vous essayez d’appeler une fonction dans une bibliothèque de liens dynamiques par son nom simple plutôt que son nom décoré. En règle générale, le compilateur C++ génère un nom décoré pour les fonctions de la DLL. Par exemple, le code C++ suivant définit une fonction nommée `Double` dans une bibliothèque nommée TestDll.dll.  
  
     [!code-cpp[System.EntryPointNotFoundException.Class#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cpp/testdll.cpp#6)]  
  
     Lorsque le code dans l’exemple suivant tente d’appeler la fonction, un <xref:System.EntryPointNotFoundException> exception est levée car le `Double` fonction ne peut pas être trouvée.  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/mangle1.cs#7)]
     [!code-vb[System.EntryPointNotFoundException.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/mangle1.vb#7)]  
  
     Toutefois, si la fonction est appelée à l’aide de son nom décoré (dans ce cas, `?Double@@YAHH@Z`), l’appel de fonction réussit, comme le montre l’exemple suivant.  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/mangle2.cs#8)]
     [!code-vb[System.EntryPointNotFoundException.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/mangle2.vb#8)]  
  
     Vous pouvez trouver les noms décorés des fonctions exportées par une DLL à l’aide d’un utilitaire tel que Dumpbin.exe.  
  
-   Vous tentez d’appeler une méthode dans un assembly managé comme s’il s’agissait d’une bibliothèque de liens dynamiques non managé. Pour voir comment cela fonctionne, compilez l’exemple suivant dans un assembly nommé StringUtilities.dll.  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/stringutilities.cs#3)]
     [!code-vb[System.EntryPointNotFoundException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/stringutilities.vb#3)]  
  
     Puis compiler et exécuter l’exemple suivant, qui tente d’appeler le `StringUtilities.SayGoodMorning` méthode dans la bibliothèque de liens dynamiques StringUtilities.dll comme s’il s’agissait de code non managé. Le résultat est un <xref:System.EntryPointNotFoundException> exception.  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/importassembly1.cs#4)]
     [!code-vb[System.EntryPointNotFoundException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/importassembly1.vb#4)]  
  
     Pour éliminer l’exception, ajoutez une référence à l’assembly managé et l’accès le `StringUtilities.SayGoodMorning` méthode tout comme vous accéderiez à n’importe quelle autre méthode dans le code managé, comme dans l’exemple suivant.  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/fiximportassembly1.cs#5)]
     [!code-vb[System.EntryPointNotFoundException.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/fiximportassembly1.vb#5)]  
  
-   Vous essayez d’appeler une méthode dans une DLL COM comme s’il s’agissait d’une DLL de Windows. Pour accéder à une DLL COM, sélectionnez le **ajouter une référence** option dans Visual Studio pour ajouter une référence au projet, puis sélectionnez la bibliothèque de types à partir de la **COM** onglet.  
  
 Pour obtenir la liste des valeurs initiales des propriétés d’une instance de <xref:System.EntryPointNotFoundException>, consultez le <xref:System.EntryPointNotFoundException.%23ctor%2A> constructeurs.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">Gestion et levée des exceptions</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.EntryPointNotFoundException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.EntryPointNotFoundException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la <xref:System.Exception.Message%2A> propriété de la nouvelle instance à un message fourni par le système qui décrit l’erreur, tel que « point d’entrée est introuvable. » Ce message prend en compte la culture système en cours.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.EntryPointNotFoundException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Référence Null (`Nothing` en Visual Basic).|  
|<xref:System.TypeLoadException.Message%2A>|Chaîne du message d'erreur localisé.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : string -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.EntryPointNotFoundException" /> avec un message d'erreur spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le contenu de `message` doit être compréhensible par les utilisateurs. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.EntryPointNotFoundException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Référence Null (`Nothing` en Visual Basic).|  
|<xref:System.TypeLoadException.Message%2A>|Chaîne du message d'erreur.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EntryPointNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EntryPointNotFoundException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
        <param name="context">Informations contextuelles sur la source ou la destination.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.EntryPointNotFoundException" /> avec des données sérialisées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est appelé lors de la désérialisation pour reconstituer l’objet exception transmis sur un flux.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : string * Exception -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
        <param name="inner">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="inner" /> n'est pas une référence null (<see langword="Nothing" /> en Visual Basic), l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.EntryPointNotFoundException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une exception levée en conséquence directe d'une exception précédente doit contenir une référence à celle-ci dans la propriété <xref:System.Exception.InnerException%2A>. La propriété <xref:System.Exception.InnerException%2A> retourne la même valeur que celle qui a été passée dans le constructeur ou une référence Null (`Nothing` en Visual Basic), si la propriété <xref:System.Exception.InnerException%2A> ne fournit pas la valeur de l'exception interne au constructeur.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.EntryPointNotFoundException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|La référence à l'exception interne.|  
|<xref:System.TypeLoadException.Message%2A>|Chaîne du message d'erreur.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md">Gestion et levée des exceptions</related>
      </Docs>
    </Member>
  </Members>
</Type>