<Type Name="ResolveEventHandler" FullName="System.ResolveEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="544c1cce139b6e89b655271d0ef106b43778c4f9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36428584" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate System.Reflection.Assembly ResolveEventHandler(object sender, ResolveEventArgs args);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ResolveEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ResolveEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ResolveEventHandler(sender As Object, args As ResolveEventArgs) As Assembly " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Reflection::Assembly ^ ResolveEventHandler(System::Object ^ sender, ResolveEventArgs ^ args);" />
  <TypeSignature Language="F#" Value="type ResolveEventHandler = delegate of obj * ResolveEventArgs -&gt; Assembly" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="args" Type="System.ResolveEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Reflection.Assembly</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Source de l'événement.</param>
    <param name="args">Données d'événement.</param>
    <summary>Représente une méthode qui gère l'événement <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" /> ou <see cref="E:System.AppDomain.AssemblyResolve" /> d'un <see cref="T:System.AppDomain" />.</summary>
    <returns>Assembly qui résout le type, l'assembly ou la ressource ; ou <see langword="null" /> si l'assembly ne peut pas être résolu.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le chargeur de classes du runtime ne peut pas résoudre une référence à un assembly, un type ou une ressource, les événements correspondants sont déclenchés pour permettre le rappel pour indiquer à quel assembly de l’assembly référencé, le type ou la ressource est dans le runtime. Il incombe à le <xref:System.ResolveEventHandler> pour retourner l’assembly qui résout le type, un assembly ou une ressource, ou pour retourner une valeur null si l’assembly n’est pas reconnu. Pour plus d’informations, consultez [résoudre les chargements d’assemblys](~/docs/framework/app-domains/resolve-assembly-loads.md) et <xref:System.AppDomain.ResourceResolve?displayProperty=nameWithType>, <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType>, et <xref:System.AppDomain.ReflectionOnlyAssemblyResolve?displayProperty=nameWithType> événements.  
  
> [!IMPORTANT]
>  Compter les [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], le <xref:System.ResolveEventHandler?displayProperty=nameWithType> événement est déclenché pour tous les assemblys, y compris les assemblys de ressources. Dans les versions antérieures, l’événement a été pas déclenché pour les assemblys de ressources. Si le système d’exploitation est localisé, le gestionnaire peut être appelé plusieurs fois : une fois pour chaque culture dans la chaîne de secours.  
  
 Chaque classe dérivée de <xref:System.Delegate> et <xref:System.MulticastDelegate> a un constructeur et un `Invoke` (méthode). Consultez l’exemple de code C++ dans la description de la <xref:System.Delegate> classe.  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.ResourceResolve" />
    <altmember cref="E:System.AppDomain.AssemblyResolve" />
    <altmember cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
  </Docs>
</Type>