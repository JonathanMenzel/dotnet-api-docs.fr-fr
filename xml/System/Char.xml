<Type Name="Char" FullName="System.Char">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d749c6a63f9748e113f570ba94e2982062f0213d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39854160" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit char extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Char" />
  <TypeSignature Language="VB.NET" Value="Public Structure Char&#xA;Implements IComparable, IComparable(Of Char), IConvertible, IEquatable(Of Char)" />
  <TypeSignature Language="C++ CLI" Value="public value class Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="F#" Value="type char = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2de2b-101">Représente un caractère sous forme d'une unité de code UTF-16.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2de2b-101">Represents a character as a UTF-16 code unit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-102">Le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] utilise le <xref:System.Char> structure pour représenter un caractère Unicode.</span><span class="sxs-lookup"><span data-stu-id="2de2b-102">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character.</span></span> <span data-ttu-id="2de2b-103">La norme Unicode identifie chaque caractère Unicode avec un nombre scalaire unique de 21 bits appelé point de code et définit le format de codage UTF-16 qui spécifie la façon dont un point de code est encodé dans une séquence d’une ou plusieurs valeurs 16 bits.</span><span class="sxs-lookup"><span data-stu-id="2de2b-103">The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</span></span> <span data-ttu-id="2de2b-104">Chaque valeur de 16 bits comprise entre hexadécimale 0 x 0000 à 0xFFFF et est stocké dans un <xref:System.Char> structure.</span><span class="sxs-lookup"><span data-stu-id="2de2b-104">Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.</span></span>  <span data-ttu-id="2de2b-105">La valeur d’un <xref:System.Char> objet est sa valeur numérique 16 bits (ordinale).</span><span class="sxs-lookup"><span data-stu-id="2de2b-105">The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.</span></span>  
  
 <span data-ttu-id="2de2b-106">Les sections suivantes étudient la relation entre un <xref:System.Char> objet et un caractère et aborder certaines tâches courantes effectuées avec <xref:System.Char> instances.</span><span class="sxs-lookup"><span data-stu-id="2de2b-106">The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.</span></span>  
  
 <span data-ttu-id="2de2b-107">[Objets Char, caractères Unicode et chaînes](#Relationship) </span><span class="sxs-lookup"><span data-stu-id="2de2b-107">[Char objects, Unicode characters, and strings](#Relationship) </span></span>  
 <span data-ttu-id="2de2b-108">[Caractères et les catégories de caractères](#Categories) </span><span class="sxs-lookup"><span data-stu-id="2de2b-108">[Characters and character categories](#Categories) </span></span>  
 <span data-ttu-id="2de2b-109">[Caractères et des éléments de texte](#Elements) </span><span class="sxs-lookup"><span data-stu-id="2de2b-109">[Characters and text elements](#Elements) </span></span>  
 <span data-ttu-id="2de2b-110">[Opérations courantes](#Operations) </span><span class="sxs-lookup"><span data-stu-id="2de2b-110">[Common operations](#Operations) </span></span>  
 [<span data-ttu-id="2de2b-111">Interopérabilité et valeurs char</span><span class="sxs-lookup"><span data-stu-id="2de2b-111">Char values and interop</span></span>](#Interop)  
  
<a name="Relationship"></a>   
## <a name="char-objects-unicode-characters-and-strings"></a><span data-ttu-id="2de2b-112">Objets Char, caractères Unicode et chaînes</span><span class="sxs-lookup"><span data-stu-id="2de2b-112">Char objects, Unicode characters, and strings</span></span>  
 <span data-ttu-id="2de2b-113">Un <xref:System.String> objet est une collection séquentielle de <xref:System.Char> structures qui représente une chaîne de texte.</span><span class="sxs-lookup"><span data-stu-id="2de2b-113">A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text.</span></span> <span data-ttu-id="2de2b-114">La plupart des caractères Unicode peuvent être représentées par un seul <xref:System.Char> de l’objet, mais un caractère qui est encodé comme un caractère de base, paire de substitution et/ou la séquence de caractères d’association est représenté par plusieurs <xref:System.Char> objets.</span><span class="sxs-lookup"><span data-stu-id="2de2b-114">Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="2de2b-115">Pour cette raison, un <xref:System.Char> structure dans un <xref:System.String> objet n’est pas nécessairement équivalent à un caractère Unicode.</span><span class="sxs-lookup"><span data-stu-id="2de2b-115">For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.</span></span>  
  
 <span data-ttu-id="2de2b-116">Plusieurs unités de code 16 bits sont utilisées pour représenter les caractères Unicode uniques dans les cas suivants :</span><span class="sxs-lookup"><span data-stu-id="2de2b-116">Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</span></span>  
  
-   <span data-ttu-id="2de2b-117">Glyphes, ce qui peuvent se composer d’un caractère unique ou un caractère de base suivie d’un ou plusieurs caractères d’association.</span><span class="sxs-lookup"><span data-stu-id="2de2b-117">Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</span></span> <span data-ttu-id="2de2b-118">Par exemple, le caractère ä est représenté par un <xref:System.Char> objet dont le code de l’unité est U + 0061, suivi par un <xref:System.Char> objet dont unité de code est U + 0308.</span><span class="sxs-lookup"><span data-stu-id="2de2b-118">For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308.</span></span> <span data-ttu-id="2de2b-119">(Le caractère ä peut également être défini par un seul <xref:System.Char> objet qui possède une unité de code de U + 00E4.) L’exemple suivant montre que le caractère ä se compose de deux <xref:System.Char> objets.</span><span class="sxs-lookup"><span data-stu-id="2de2b-119">(The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.</span></span>  
  
     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]
     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  
  
-   <span data-ttu-id="2de2b-120">Caractères en dehors de l’Unicode Basic Multilingual Plane (BMP).</span><span class="sxs-lookup"><span data-stu-id="2de2b-120">Characters outside the Unicode Basic Multilingual Plane (BMP).</span></span> <span data-ttu-id="2de2b-121">Unicode prend en charge les plans de seize outre BMP, qui représente le plan de 0.</span><span class="sxs-lookup"><span data-stu-id="2de2b-121">Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</span></span> <span data-ttu-id="2de2b-122">Un point de code Unicode est représenté en UTF-32 en une valeur de 21 bits qui inclut le plan.</span><span class="sxs-lookup"><span data-stu-id="2de2b-122">A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</span></span> <span data-ttu-id="2de2b-123">Par exemple, U + 1D160 représente le caractère de la NOTE de symbole musique.</span><span class="sxs-lookup"><span data-stu-id="2de2b-123">For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</span></span> <span data-ttu-id="2de2b-124">Étant donné que l’encodage UTF-16 comporte uniquement 16 bits, les caractères extérieurs au BMP sont représentées par les paires de substitution UTF-16.</span><span class="sxs-lookup"><span data-stu-id="2de2b-124">Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</span></span> <span data-ttu-id="2de2b-125">L’exemple suivant montre que l’équivalent UTF-32 de U + 1D160, le caractère de la NOTE de symbole musique, est U + D834 U + DD60.</span><span class="sxs-lookup"><span data-stu-id="2de2b-125">The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</span></span> <span data-ttu-id="2de2b-126">U + D834 est le caractère de substitution étendu ; les substituts étendus plage comprise entre U + D800 et U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="2de2b-126">U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</span></span> <span data-ttu-id="2de2b-127">U + DD60 est le substitut faible ; substituts faibles plage comprise entre U + DC00 et U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="2de2b-127">U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</span></span>  
  
     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]
     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  
  
<a name="Categories"></a>   
## <a name="characters-and-character-categories"></a><span data-ttu-id="2de2b-128">Caractères et les catégories de caractères</span><span class="sxs-lookup"><span data-stu-id="2de2b-128">Characters and character categories</span></span>  
 <span data-ttu-id="2de2b-129">Chaque caractère Unicode ou une paire de substitution valide appartient à une catégorie Unicode.</span><span class="sxs-lookup"><span data-stu-id="2de2b-129">Each Unicode character or valid surrogate pair belongs to a Unicode category.</span></span> <span data-ttu-id="2de2b-130">Dans le .NET Framework, les catégories Unicode sont représentés par les membres de la <xref:System.Globalization.UnicodeCategory> énumération et incluent des valeurs comme <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, et <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, par exemple.</span><span class="sxs-lookup"><span data-stu-id="2de2b-130">In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, and <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, for example.</span></span>  
  
 <span data-ttu-id="2de2b-131">Pour déterminer la catégorie Unicode d’un caractère, vous appelez le <xref:System.Char.GetUnicodeCategory%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2de2b-131">To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method.</span></span> <span data-ttu-id="2de2b-132">Par exemple, l’exemple suivant appelle la <xref:System.Char.GetUnicodeCategory%2A> pour afficher la catégorie Unicode de chaque caractère dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="2de2b-132">For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.</span></span>  
  
 [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]
 [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  
  
 <span data-ttu-id="2de2b-133">En interne, pour les caractères en dehors de la plage ASCII (U + 0000 à U + 00FF), le <xref:System.Char.GetUnicodeCategory%2A> méthode varie selon les catégories Unicode signalés par le <xref:System.Globalization.CharUnicodeInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="2de2b-133">Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class.</span></span> <span data-ttu-id="2de2b-134">En commençant par le [!INCLUDE[net_v462](~/includes/net-v462-md.md)], les caractères Unicode sont classés en fonction de [la norme Unicode, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="2de2b-134">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="2de2b-135">Dans les versions du .NET Framework à partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] à la [!INCLUDE[net_v461](~/includes/net-v461-md.md)], ils sont classés en fonction de [la norme Unicode, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="2de2b-135">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
<a name="Elements"></a>   
## <a name="characters-and-text-elements"></a><span data-ttu-id="2de2b-136">Caractères et des éléments de texte</span><span class="sxs-lookup"><span data-stu-id="2de2b-136">Characters and text elements</span></span>  
 <span data-ttu-id="2de2b-137">Un caractère unique pouvant être représentés par plusieurs <xref:System.Char> objets, il n’est pas toujours significatif pour travailler avec personne <xref:System.Char> objets.</span><span class="sxs-lookup"><span data-stu-id="2de2b-137">Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects.</span></span> <span data-ttu-id="2de2b-138">Par exemple, l’exemple suivant convertit les points de code Unicode qui représentent les numéros mineures de 0 à 9 pour les unités de code encodée en UTF-16.</span><span class="sxs-lookup"><span data-stu-id="2de2b-138">For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</span></span> <span data-ttu-id="2de2b-139">Car il équivaut à tort <xref:System.Char> objets avec des caractères, il signale incorrectement que la chaîne résultante a 20 caractères.</span><span class="sxs-lookup"><span data-stu-id="2de2b-139">Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.</span></span>  
  
 [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]
 [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  
  
 <span data-ttu-id="2de2b-140">Vous pouvez procédez comme suit pour éviter l’hypothèse qu’un <xref:System.Char> objet représente un caractère unique.</span><span class="sxs-lookup"><span data-stu-id="2de2b-140">You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.</span></span>  
  
-   <span data-ttu-id="2de2b-141">Vous pouvez travailler avec un <xref:System.String> objet dans son intégralité, au lieu de travailler avec ses caractères individuels pour représenter et analyser le contenu linguistique.</span><span class="sxs-lookup"><span data-stu-id="2de2b-141">You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</span></span>  
  
-   <span data-ttu-id="2de2b-142">Vous pouvez utiliser la <xref:System.Globalization.StringInfo> classe pour travailler avec des éléments de texte au lieu de l’individu <xref:System.Char> objets.</span><span class="sxs-lookup"><span data-stu-id="2de2b-142">You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects.</span></span> <span data-ttu-id="2de2b-143">L’exemple suivant utilise le <xref:System.Globalization.StringInfo> objet pour compter le nombre d’éléments de texte dans une chaîne qui se compose de l’Égée chiffres zéro à neuf.</span><span class="sxs-lookup"><span data-stu-id="2de2b-143">The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</span></span> <span data-ttu-id="2de2b-144">Car il considère un caractère unique à une paire de substitution, il signale correctement que la chaîne contient dix caractères.</span><span class="sxs-lookup"><span data-stu-id="2de2b-144">Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</span></span>  
  
     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]
     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  
  
-   <span data-ttu-id="2de2b-145">Si une chaîne contient un caractère de base qui a un ou plusieurs caractères d’association, vous pouvez appeler la <xref:System.String.Normalize%2A?displayProperty=nameWithType> méthode pour convertir la sous-chaîne en une seule unité de code encodé UTF-16.</span><span class="sxs-lookup"><span data-stu-id="2de2b-145">If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the substring to a single UTF-16 encoded code unit.</span></span> <span data-ttu-id="2de2b-146">L’exemple suivant appelle la <xref:System.String.Normalize%2A?displayProperty=nameWithType> méthode pour convertir le caractère de base U + 0061 (LETTRE MINUSCULE LATINE A) et U + 0308 (combinant le tréma) les caractères d’association à U + 00E4 (LATIN petite lettre A avec tréma).</span><span class="sxs-lookup"><span data-stu-id="2de2b-146">The following example calls the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</span></span>  
  
     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]
     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="2de2b-147">Opérations courantes</span><span class="sxs-lookup"><span data-stu-id="2de2b-147">Common operations</span></span>  
 <span data-ttu-id="2de2b-148">Le <xref:System.Char> structure fournit des méthodes permettant de comparer <xref:System.Char> objets, convertir la valeur de la <xref:System.Char> à un objet d’un autre type d’objet et déterminer la catégorie Unicode d’un <xref:System.Char> objet :</span><span class="sxs-lookup"><span data-stu-id="2de2b-148">The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:</span></span>  
  
|<span data-ttu-id="2de2b-149">Pour</span><span class="sxs-lookup"><span data-stu-id="2de2b-149">To do this</span></span>|<span data-ttu-id="2de2b-150">Utilisez ces `System.Char` méthodes</span><span class="sxs-lookup"><span data-stu-id="2de2b-150">Use these `System.Char` methods</span></span>|  
|----------------|-------------------------------------|  
|<span data-ttu-id="2de2b-151">Comparer <xref:System.Char> objets</span><span class="sxs-lookup"><span data-stu-id="2de2b-151">Compare <xref:System.Char> objects</span></span>|<span data-ttu-id="2de2b-152"><xref:System.Char.CompareTo%2A> et <xref:System.Char.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="2de2b-152"><xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A></span></span>|  
|<span data-ttu-id="2de2b-153">Convertir un point de code en une chaîne</span><span class="sxs-lookup"><span data-stu-id="2de2b-153">Convert a code point to a string</span></span>|<xref:System.Char.ConvertFromUtf32%2A>|  
|<span data-ttu-id="2de2b-154">Convertir un <xref:System.Char> objet ou une paire de substitution de <xref:System.Char> objets à un point de code</span><span class="sxs-lookup"><span data-stu-id="2de2b-154">Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point</span></span>|<span data-ttu-id="2de2b-155">Pour un seul caractère : <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2de2b-155">For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span></span><br /><br /> <span data-ttu-id="2de2b-156">Pour une paire de substitution ou un caractère dans une chaîne : <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2de2b-156">For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="2de2b-157">Obtenir la catégorie Unicode d’un caractère</span><span class="sxs-lookup"><span data-stu-id="2de2b-157">Get the Unicode category of a character</span></span>|<xref:System.Char.GetUnicodeCategory%2A>|  
|<span data-ttu-id="2de2b-158">Déterminer si un caractère est dans une catégorie Unicode particulière tels que des chiffres, lettres, signes de ponctuation, les caractères de contrôle et ainsi de suite</span><span class="sxs-lookup"><span data-stu-id="2de2b-158">Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</span></span>|<span data-ttu-id="2de2b-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, et <xref:System.Char.IsWhiteSpace%2A></span><span class="sxs-lookup"><span data-stu-id="2de2b-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A></span></span>|  
|<span data-ttu-id="2de2b-160">Convertir un <xref:System.Char> objet qui représente un nombre en un type de valeur numérique</span><span class="sxs-lookup"><span data-stu-id="2de2b-160">Convert a <xref:System.Char> object that represents a number to a numeric value type</span></span>|<xref:System.Char.GetNumericValue%2A>|  
|<span data-ttu-id="2de2b-161">Convertir un caractère d’une chaîne en un <xref:System.Char> objet</span><span class="sxs-lookup"><span data-stu-id="2de2b-161">Convert a character in a string into a <xref:System.Char> object</span></span>|<span data-ttu-id="2de2b-162"><xref:System.Char.Parse%2A> et <xref:System.Char.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="2de2b-162"><xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A></span></span>|  
|<span data-ttu-id="2de2b-163">Convertir un <xref:System.Char> de l’objet à un <xref:System.String> objet</span><span class="sxs-lookup"><span data-stu-id="2de2b-163">Convert a <xref:System.Char> object to a <xref:System.String> object</span></span>|<xref:System.Char.ToString%2A>|  
|<span data-ttu-id="2de2b-164">Modifier la casse d’un <xref:System.Char> objet</span><span class="sxs-lookup"><span data-stu-id="2de2b-164">Change the case of a <xref:System.Char> object</span></span>|<span data-ttu-id="2de2b-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A> et <xref:System.Char.ToUpperInvariant%2A></span><span class="sxs-lookup"><span data-stu-id="2de2b-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A></span></span>|  
  
<a name="Interop"></a>   
## <a name="char-values-and-interop"></a><span data-ttu-id="2de2b-166">Interopérabilité et valeurs char</span><span class="sxs-lookup"><span data-stu-id="2de2b-166">Char values and interop</span></span>  
<span data-ttu-id="2de2b-167">Quand un géré <xref:System.Char> type, qui est représentée comme une unité de code Unicode UTF-16 encodés, est passé au code non managé, le marshaleur d’interopérabilité convertit le jeu de caractères à ANSI par défaut.</span><span class="sxs-lookup"><span data-stu-id="2de2b-167">When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</span></span> <span data-ttu-id="2de2b-168">Vous pouvez appliquer le <xref:System.Runtime.InteropServices.DllImportAttribute> déclarations d’appel de l’attribut à la plateforme et le <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribut à une déclaration COM interop pour contrôler le jeu de caractères un marshalé <xref:System.Char> tapez utilise.</span><span class="sxs-lookup"><span data-stu-id="2de2b-168">You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-169">L’exemple de code suivant montre certaines des méthodes dans <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-169">The following code example demonstrates some of the methods in <xref:System.Char>.</span></span>  
  
 [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]
 [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]
 [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2de2b-170">Tous les membres de ce type sont thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2de2b-170">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="2de2b-171">Les membres qui semblent modifier l’état de l’instance retournent en fait une nouvelle instance initialisée avec la nouvelle valeur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2de2b-171">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="2de2b-172">Comme avec tout autre type, la lecture et écriture à une variable partagée qui contient une instance de ce type doivent être protégées par un verrou pour garantir la sécurité des threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2de2b-172">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-173">Compare cette instance à un objet ou un type valeur spécifié et indique si cette instance précède, suit ou apparaît à la même position dans l'ordre de tri que l'objet ou le type valeur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : char -&gt; int&#xA;override this.CompareTo : char -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2de2b-174">Objet <see cref="T:System.Char" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-174">A <see cref="T:System.Char" /> object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-175">Compare cette instance à un objet <see cref="T:System.Char" /> spécifié et indique si cette instance précède, suit ou apparaît à la même position dans l'ordre de tri que l'objet <see cref="T:System.Char" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-176">Nombre signé indiquant la position de cette instance dans l'ordre de tri par rapport au paramètre <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="2de2b-177">
            <list type="table">
              <listheader>
                <term> Valeur de retour  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Inférieur à zéro  </term>
                <description> Cette instance précède <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zéro  </term>
                <description> Cette instance a la même position que <paramref name="value" /> dans l’ordre de tri.  </description>
              </item>
              <item>
                <term> Supérieur à zéro  </term>
                <description> Cette instance suit <paramref name="value" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-177">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-178">Cette méthode implémente la <xref:System.IComparable%601?displayProperty=nameWithType> interface et effectue légèrement meilleures que le <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> (méthode), car il n’a pas à convertir le `value` paramètre à un objet.</span><span class="sxs-lookup"><span data-stu-id="2de2b-178">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="2de2b-179">La comparaison effectuée par cette méthode est basée sur les valeurs encodées de cette instance et `value`, pas sur leurs caractéristiques lexicographiques.</span><span class="sxs-lookup"><span data-stu-id="2de2b-179">The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.</span></span>  
  
 <span data-ttu-id="2de2b-180">Si le <xref:System.Char.CompareTo%2A> type de paramètre de méthode comporte moins de bits (est plus restreint) que le type d’instance, certains langages de programmation procèdent à une conversion étendue implicite qui transforme la valeur du paramètre en valeur possédant plus de bits.</span><span class="sxs-lookup"><span data-stu-id="2de2b-180">If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="2de2b-181">Par exemple, supposons que le type d’instance est <xref:System.Int32> et le type de paramètre est <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-181">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="2de2b-182">Le compilateur Microsoft c# génère des instructions pour représenter la valeur du paramètre comme un <xref:System.Int32> de l’objet, puis génère un <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> méthode qui compare les valeurs de la <xref:System.Int32> instance et le <xref:System.Int32> paramètre représentation sous forme de.</span><span class="sxs-lookup"><span data-stu-id="2de2b-182">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="2de2b-183">En règle générale, les conversions étendues implicites sont effectuées sur les types numériques.</span><span class="sxs-lookup"><span data-stu-id="2de2b-183">Typically, implicit widening conversions are performed on numeric types.</span></span> <span data-ttu-id="2de2b-184">Consultez la documentation de votre langage de programmation pour déterminer si son compilateur exécute des conversions étendues.</span><span class="sxs-lookup"><span data-stu-id="2de2b-184">Consult your programming language's documentation to determine if its compiler performs widening conversions.</span></span> <span data-ttu-id="2de2b-185">Si l’incompatibilité de types d’instance et de paramètre et une conversion appropriée n’est pas disponible, le compilateur génère des instructions pour le paramètre de boxing et appeler le <xref:System.Char.CompareTo%2A> surcharge qui accepte un <xref:System.Object> paramètre.</span><span class="sxs-lookup"><span data-stu-id="2de2b-185">If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-186">L’exemple de code suivant montre des versions génériques et non génériques de la `CompareTo` méthode pour plusieurs types valeur et référence.</span><span class="sxs-lookup"><span data-stu-id="2de2b-186">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2de2b-187">Objet auquel comparer cette instance ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-187">An object to compare this instance to, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-188">Compare cette instance à un objet spécifié et indique si cette instance précède, suit ou apparaît à la même position dans l'ordre de tri que le <see cref="T:System.Object" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-188">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-189">Nombre signé indiquant la position de cette instance dans l'ordre de tri par rapport au paramètre <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-189">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="2de2b-190">
            <list type="table">
              <listheader>
                <term> Valeur de retour  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Inférieur à zéro  </term>
                <description> Cette instance précède <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zéro  </term>
                <description> Cette instance a la même position que <paramref name="value" /> dans l’ordre de tri.  </description>
              </item>
              <item>
                <term> Supérieur à zéro  </term>
                <description> Cette instance suit <paramref name="value" />. -ou- <paramref name="value" /> est <see langword="null" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-190">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-191">Le <xref:System.Char.CompareTo%2A> méthode implémente la <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="2de2b-191">The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="2de2b-192">Le `value` paramètre doit être `null` ou une instance de <xref:System.Char>; sinon, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="2de2b-192">The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="2de2b-193">La comparaison effectuée par cette méthode est basée sur les valeurs encodées de cette instance et `value`, pas nécessairement leurs caractéristiques lexicographiques.</span><span class="sxs-lookup"><span data-stu-id="2de2b-193">The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics.</span></span> <span data-ttu-id="2de2b-194">N’importe quelle instance de <xref:System.Char>, quelle que soit sa valeur, est considéré comme supérieur `null`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-194">Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-195">L’exemple de code suivant montre <xref:System.Char.CompareTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-195">The following code example demonstrates <xref:System.Char.CompareTo%2A>.</span></span>  
  
 [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]
 [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]
 [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2de2b-196">
            <paramref name="value" /> n’est pas un objet <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-196">
              <paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromUtf32">
      <MemberSignature Language="C#" Value="public static string ConvertFromUtf32 (int utf32);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertFromUtf32(int32 utf32) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertFromUtf32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertFromUtf32 (utf32 As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertFromUtf32(int utf32);" />
      <MemberSignature Language="F#" Value="static member ConvertFromUtf32 : int -&gt; string" Usage="System.char.ConvertFromUtf32 utf32" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf32" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf32">
          <span data-ttu-id="2de2b-197">Point de code Unicode 21 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-197">A 21-bit Unicode code point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-198">Convertit le point de code Unicode spécifié en une chaîne encodée UTF-16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-198">Converts the specified Unicode code point into a UTF-16 encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-199">Chaîne composée d'un objet <see cref="T:System.Char" /> ou d'une paire de substitution d'objets <see cref="T:System.Char" /> équivalents au point de code spécifié par le paramètre <paramref name="utf32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-199">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-200">Utilisez cette méthode pour convertir un point de code Unicode 21 bits en une chaîne encodée UTF-16 avant de tester la chaîne avec des méthodes telles que <xref:System.Char.IsLowSurrogate%28System.Char%29> et <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-200">Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span></span>  
  
 <span data-ttu-id="2de2b-201">Un point de code valide en dehors de la base plan BMP (Multilingual Plane) génère toujours une paire de substitution valide.</span><span class="sxs-lookup"><span data-stu-id="2de2b-201">A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</span></span> <span data-ttu-id="2de2b-202">Toutefois, un point de code valide au sein du BMP peut ne pas donne un résultat valide selon la norme Unicode, car aucun traitement linguistique n’est utilisé dans la conversion.</span><span class="sxs-lookup"><span data-stu-id="2de2b-202">However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</span></span> <span data-ttu-id="2de2b-203">Pour cette raison, utilisez la <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> classe dans laquelle convertir en bloc des données UTF-32 en bloc les données UTF-16 en.</span><span class="sxs-lookup"><span data-stu-id="2de2b-203">For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class to convert bulk UTF-32 data into bulk UTF-16 data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-204">L’exemple de code suivant montre le <xref:System.Char.ConvertToUtf32%2A> et <xref:System.Char.ConvertFromUtf32%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="2de2b-204">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-205">
            <paramref name="utf32" /> n’est pas un point de code Unicode 21 bits valide compris entre U+0 et U+10FFFF, à l’exclusion de la plage de paires de substitution entre U+D800 et U+DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-205">
              <paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToUtf32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-206">Convertit la valeur d'une paire de substitution encodée UTF-16 en point de code Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-206">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (highSurrogate As Char, lowSurrogate As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : char * char -&gt; int" Usage="System.char.ConvertToUtf32 (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="2de2b-207">Unité de code de substitution étendue (autrement dit, unité de code comprise entre U+D800 et U+DBFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-207">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="2de2b-208">Unité de code de substitution faible (autrement dit, unité de code comprise entre U+DC00 et U+DFFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-208">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-209">Convertit la valeur d'une paire de substitution encodée UTF-16 en point de code Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-209">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-210">Point de code Unicode 21 bits représenté par les paramètres <paramref name="highSurrogate" /> et <paramref name="lowSurrogate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-210">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-211">Utilisez cette méthode pour convertir une paire de substitution en un point de code Unicode 21 bits.</span><span class="sxs-lookup"><span data-stu-id="2de2b-211">Use this method to convert a surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="2de2b-212">Pour convertir des données UTF-16 en données UTF-32, utilisez la <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="2de2b-212">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="2de2b-213">En règle générale, le codage UTF-16 représente un caractère Unicode sous la forme d’une unité de code 16 bits.</span><span class="sxs-lookup"><span data-stu-id="2de2b-213">Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</span></span> <span data-ttu-id="2de2b-214">Toutefois, il prend également en charge les paires de substitution, permettant à un seul caractère abstrait être représenté en tant que deux unités de code 16 bits.</span><span class="sxs-lookup"><span data-stu-id="2de2b-214">However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</span></span> <span data-ttu-id="2de2b-215">Ces deux <xref:System.Char> objets doivent avoir des unités de code comprises entre U + D800 à U + DBFF pour le premier substitut (élevé) et de U + DC00 à U + DFFF pour le second substitut (faible).</span><span class="sxs-lookup"><span data-stu-id="2de2b-215">These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</span></span> <span data-ttu-id="2de2b-216">Les paires de substitution sont prises en charge uniquement par UTF-16 de codage.</span><span class="sxs-lookup"><span data-stu-id="2de2b-216">Surrogate pairs are supported only by UTF-16 encoding.</span></span> <span data-ttu-id="2de2b-217">Cette méthode permet à un caractère représenté par une paire de substitution UTF-16 à convertir en un caractère à l’aide du codage UTF-32.</span><span class="sxs-lookup"><span data-stu-id="2de2b-217">This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-218">L’exemple de code suivant montre le <xref:System.Char.ConvertToUtf32%2A> et <xref:System.Char.ConvertFromUtf32%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="2de2b-218">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-219">
            <paramref name="highSurrogate" /> n’appartient pas à la plage U+D800 à U+DBFF, ou <paramref name="lowSurrogate" /> n’appartient pas à la plage U+DC00 à U+DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-219">
              <paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : string * int -&gt; int" Usage="System.char.ConvertToUtf32 (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-220">Chaîne qui contient un caractère ou une paire de substitution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-220">A string that contains a character or surrogate pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-221">Position d’index du caractère ou de la paire de substitution dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-221">The index position of the character or surrogate pair in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-222">Convertit la valeur d'une paire de substitution ou d'un caractère encodé UTF-16 à un emplacement précis d'une chaîne en un point de code Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-222">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-223">Point de code Unicode 21 bits représenté par le caractère ou la paire de substitution à l'emplacement du paramètre <paramref name="s" /> spécifié par le paramètre <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-223">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-224">Utilisez cette méthode pour convertir une paire de substitution ou caractère en un point de code Unicode 21 bits.</span><span class="sxs-lookup"><span data-stu-id="2de2b-224">Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="2de2b-225">Pour convertir des données UTF-16 en données UTF-32, utilisez la <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="2de2b-225">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-226">L’exemple de code suivant montre le <xref:System.Char.ConvertToUtf32%2A> et <xref:System.Char.ConvertFromUtf32%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="2de2b-226">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-227">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-227">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-228">
            <paramref name="index" /> n’est pas une position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-228">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2de2b-229">La position d’index spécifiée contient une paire de substitution, et le premier caractère de la paire n’est pas un substitut étendu valide ou le deuxième caractère de la paire n’est pas un substitut faible valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-229">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-230">Retourne une valeur qui indique si cette instance équivaut à un objet spécifique ou à la valeur <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-230">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : char -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2de2b-231">Objet à comparer à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-231">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-232">Retourne une valeur qui indique si cette instance équivaut à l'objet <see cref="T:System.Char" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-232">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-233">
            <see langword="true" /> si le paramètre <paramref name="obj" /> est égal à la valeur de cette instance ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-233">
              <see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-234">Cette méthode implémente la <xref:System.IEquatable%601?displayProperty=nameWithType> interface et effectue légèrement meilleures que <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> car il n’a pas besoin d’unboxing le `obj` paramètre.</span><span class="sxs-lookup"><span data-stu-id="2de2b-234">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> because it does not need to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2de2b-235">Objet à comparer à cette instance ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-235">An object to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-236">Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-236">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-237">
            <see langword="true" /> si <paramref name="obj" /> est une instance de <see cref="T:System.Char" /> et est égal à la valeur de cette instance ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-237">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-238">La comparaison effectuée par cette méthode est basée sur les valeurs encodées de cette instance et `obj`, pas nécessairement leurs caractéristiques lexicographiques.</span><span class="sxs-lookup"><span data-stu-id="2de2b-238">The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-239">L’exemple de code suivant montre <xref:System.Char.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-239">The following code example demonstrates <xref:System.Char.Equals%2A>.</span></span>  
  
 [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]
 [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]
 [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="char.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-240">Retourne le code de hachage de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-240">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-241">Code de hachage d'un entier signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-241">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-242">Convertit un caractère Unicode numérique spécifié en un nombre à virgule flottante double précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-242">Converts a specified numeric Unicode character to a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (c As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char c);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.char.GetNumericValue c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-243">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-243">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-244">Convertit le caractère Unicode numérique spécifié en un nombre à virgule flottante double précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-244">Converts the specified numeric Unicode character to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-245">Valeur numérique de <paramref name="c" /> si ce caractère représente un nombre ; sinon, -1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-245">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-246">Le `c` paramètre doit être le <xref:System.Char> la représentation sous forme d’une valeur numérique.</span><span class="sxs-lookup"><span data-stu-id="2de2b-246">The `c` parameter must be the <xref:System.Char> representation of a numeric value.</span></span> <span data-ttu-id="2de2b-247">Par exemple, si `c` est « 5 », la valeur de retour est 5.</span><span class="sxs-lookup"><span data-stu-id="2de2b-247">For example, if `c` is "5", the return value is 5.</span></span> <span data-ttu-id="2de2b-248">Toutefois, si `c` est « z », la valeur de retour est -1,0.</span><span class="sxs-lookup"><span data-stu-id="2de2b-248">However, if `c` is "z", the return value is -1.0.</span></span>  
  
 <span data-ttu-id="2de2b-249">Un caractère a une valeur numérique associée si et seulement si elle est membre de l’un des éléments suivants <xref:System.Globalization.UnicodeCategory> catégories : `DecimalDigitNumber`, `LetterNumber`, ou `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-249">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="2de2b-250">Le <xref:System.Char.GetNumericValue%2A> méthode suppose que `c` correspond à un caractère linguistique unique et vérifie si ce caractère peut être converti en un chiffre décimal.</span><span class="sxs-lookup"><span data-stu-id="2de2b-250">The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="2de2b-251">Toutefois, certains nombres dans la norme Unicode sont représentées par deux <xref:System.Char> objets qui forment une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="2de2b-251">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="2de2b-252">Par exemple, la système de numérotation d’Égée se compose de points de code U + 10107 et U + 10133.</span><span class="sxs-lookup"><span data-stu-id="2de2b-252">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="2de2b-253">L’exemple suivant utilise la <xref:System.Char.ConvertFromUtf32%2A> méthode pour instancier une chaîne qui représente les mineures numéro un.</span><span class="sxs-lookup"><span data-stu-id="2de2b-253">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="2de2b-254">Comme le résultat de l’exemple montre la <xref:System.Char.GetNumericValue%28System.Char%29> méthode retourne -1 s’il est passé de substitut étendu ou faible de ce caractère.</span><span class="sxs-lookup"><span data-stu-id="2de2b-254">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]
 [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-255">L’exemple suivant montre <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-255">The following example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.char.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-256">
            <see cref="T:System.String" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-256">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-257">Position du caractère dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-257">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-258">Convertit le caractère Unicode numérique à la position spécifiée dans une chaîne spécifiée en un nombre à virgule flottante double précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-258">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-259">Valeur numérique du caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> si ce caractère représente un nombre ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-259">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-260">Le `s` paramètre doit être la représentation sous forme de chaîne d’une valeur numérique.</span><span class="sxs-lookup"><span data-stu-id="2de2b-260">The `s` parameter must be the string representation of a numeric value.</span></span> <span data-ttu-id="2de2b-261">Par exemple, si le caractère situé à la position `index` dans `s` est « 5 », la valeur de retour est 5.</span><span class="sxs-lookup"><span data-stu-id="2de2b-261">For example, if the character at position `index` in `s` is "5", the return value is 5.</span></span> <span data-ttu-id="2de2b-262">Toutefois, si le caractère situé à la position `index` dans `s` est « z », la valeur de retour est -1.</span><span class="sxs-lookup"><span data-stu-id="2de2b-262">However, if the character at position `index` in `s` is "z", the return value is -1.</span></span>  
  
 <span data-ttu-id="2de2b-263">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-263">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-264">Un caractère a une valeur numérique associée si et seulement si elle est membre de l’un des éléments suivants <xref:System.Globalization.UnicodeCategory> catégories : `DecimalDigitNumber`, `LetterNumber`, ou `OtherNumber`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-264">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="2de2b-265">Si le <xref:System.Char> objet à la position `index` est le premier caractère d’une paire de substitution valide, la <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> méthode détermine si la paire de substitution forme un chiffre.</span><span class="sxs-lookup"><span data-stu-id="2de2b-265">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="2de2b-266">Par exemple, la système de numérotation d’Égée se compose de points de code U + 10107 et U + 10133.</span><span class="sxs-lookup"><span data-stu-id="2de2b-266">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="2de2b-267">L’exemple suivant utilise la <xref:System.Char.ConvertFromUtf32%2A> méthode pour instancier une chaîne qui représente chaque nombre mineures.</span><span class="sxs-lookup"><span data-stu-id="2de2b-267">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="2de2b-268">Comme le résultat de l’exemple montre la <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> méthode retourne la valeur numérique correcte si elle est passée de substitut étendu d’un nombre mineures.</span><span class="sxs-lookup"><span data-stu-id="2de2b-268">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="2de2b-269">Toutefois, s’il est passé de substitut faible, elle considère uniquement le substitut faible de manière isolée et retourne -1.</span><span class="sxs-lookup"><span data-stu-id="2de2b-269">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]
 [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-270">L’exemple de code suivant montre <xref:System.Char.GetNumericValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-270">The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-271">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-271">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-272">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-272">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="char.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-273">Retourne le <see cref="T:System.TypeCode" /> du type valeur <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-273">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-274">Constante énumérée, <see cref="F:System.TypeCode.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-274">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-275">Classe un caractère Unicode dans un groupe identifié par l'une des valeurs <see cref="T:System.Globalization.UnicodeCategory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-275">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (c As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char c);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-276">Caractère Unicode à classer par catégorie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-276">The Unicode character to categorize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-277">Classe un caractère Unicode spécifié dans un groupe identifié par l'une des valeurs <see cref="T:System.Globalization.UnicodeCategory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-277">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-278">Valeur <see cref="T:System.Globalization.UnicodeCategory" /> identifiant le groupe qui contient <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-278">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-279">Le <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> méthode ne retourne pas toujours le même <xref:System.Globalization.UnicodeCategory> valeur en tant que le <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> lorsqu’il est passé à un caractère particulier en tant que paramètre de méthode.</span><span class="sxs-lookup"><span data-stu-id="2de2b-279">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="2de2b-280">Le <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> méthode est conçue pour refléter la version actuelle de la norme Unicode.</span><span class="sxs-lookup"><span data-stu-id="2de2b-280">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="2de2b-281">En revanche, bien que le <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> méthode reflète habituellement la version actuelle de la norme Unicode, elle peut retourner la catégorie d’un caractère basée sur une version antérieure de la norme ou elle peut retourner une catégorie différente de la norme actuelle dans l’ordre Pour préserver la compatibilité descendante.</span><span class="sxs-lookup"><span data-stu-id="2de2b-281">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="2de2b-282">Par conséquent, nous vous recommandons d’utiliser le <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> méthode au lieu de <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-282">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2de2b-283">En commençant par le [!INCLUDE[net_v462](~/includes/net-v462-md.md)], les caractères Unicode sont classés en fonction de [Unix de la norme, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="2de2b-283">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="2de2b-284">Dans les versions du .NET Framework à partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] à la [!INCLUDE[net_v461](~/includes/net-v461-md.md)], ils sont classés en fonction de [Unix de la norme, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="2de2b-284">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-285">L’exemple de code suivant montre <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-285">The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-286">
            <see cref="T:System.String" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-286">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-287">Position du caractère dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-287">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-288">Classe le caractère figurant à la position spécifiée dans une chaîne spécifiée dans un groupe identifié par l'une des valeurs <see cref="T:System.Globalization.UnicodeCategory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-288">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-289">Constante énumérée <see cref="T:System.Globalization.UnicodeCategory" /> qui identifie le groupe contenant le caractère à la position <paramref name="index" /> dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-289">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-290">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-290">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-291">Le <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> méthode ne retourne pas toujours le même <xref:System.Globalization.UnicodeCategory> valeur en tant que le <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> lorsqu’il est passé à un caractère particulier en tant que paramètre de méthode.</span><span class="sxs-lookup"><span data-stu-id="2de2b-291">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="2de2b-292">Le <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> méthode est conçue pour refléter la version actuelle de la norme Unicode.</span><span class="sxs-lookup"><span data-stu-id="2de2b-292">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="2de2b-293">En revanche, bien que le <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> méthode reflète habituellement la version actuelle de la norme Unicode, elle peut retourner la catégorie d’un caractère basée sur une version antérieure de la norme ou elle peut retourner une catégorie différente de la norme actuelle dans l’ordre Pour préserver la compatibilité descendante.</span><span class="sxs-lookup"><span data-stu-id="2de2b-293">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="2de2b-294">Par conséquent, nous vous recommandons d’utiliser le <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> méthode au lieu de <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-294">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2de2b-295">En commençant par le [!INCLUDE[net_v462](~/includes/net-v462-md.md)], les caractères Unicode sont classés en fonction de [Unix de la norme, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="2de2b-295">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="2de2b-296">Dans les versions du .NET Framework à partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] à la [!INCLUDE[net_v461](~/includes/net-v461-md.md)], ils sont classés en fonction de [Unix de la norme, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span><span class="sxs-lookup"><span data-stu-id="2de2b-296">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-297">L’exemple suivant montre <xref:System.Char.GetUnicodeCategory%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-297">The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-298">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-298">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-299">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-299">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsControl">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-300">Indique si un caractère Unicode spécifié est classé dans la catégorie des caractères de contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-300">Indicates whether a specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-301">Mise en forme des caractères de contrôle et d’autres caractères non imprimables, tels que l’accusé de réception, BEL, CR, FF, LF et VT.</span><span class="sxs-lookup"><span data-stu-id="2de2b-301">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="2de2b-302">La norme Unicode assigne les points de code de \U0000 à \U001F, \U007F et de \U0080 à \U009F pour les caractères de contrôle.</span><span class="sxs-lookup"><span data-stu-id="2de2b-302">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="2de2b-303">Selon la norme Unicode, ces valeurs doivent être interprétées comme des caractères de contrôle, sauf si leur utilisation est sinon définie par une application.</span><span class="sxs-lookup"><span data-stu-id="2de2b-303">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="2de2b-304">Caractères de contrôle valides sont des membres de la <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-304">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(char c);" />
      <MemberSignature Language="F#" Value="static member IsControl : char -&gt; bool" Usage="System.char.IsControl c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-305">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-305">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-306">Indique si le caractère Unicode spécifié est classé dans la catégorie des caractères de contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-306">Indicates whether the specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-307">
            <see langword="true" /> si <paramref name="c" /> est un caractère de contrôle ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-307">
              <see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-308">Mise en forme des caractères de contrôle et d’autres caractères non imprimables, tels que l’accusé de réception, BEL, CR, FF, LF et VT.</span><span class="sxs-lookup"><span data-stu-id="2de2b-308">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="2de2b-309">T la convention Unicode standard attribue des points de code de \U0000 à \U001F, \U007F et de \U0080 à \U009F pour les caractères de contrôle.</span><span class="sxs-lookup"><span data-stu-id="2de2b-309">T The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="2de2b-310">Selon la norme Unicode, ces valeurs doivent être interprétées comme des caractères de contrôle, sauf si leur utilisation est sinon définie par une application.</span><span class="sxs-lookup"><span data-stu-id="2de2b-310">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="2de2b-311">Caractères de contrôle valides sont des membres de la <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-311">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-312">L’exemple suivant répertorie le point de code Unicode de chacun des caractères de contrôle.</span><span class="sxs-lookup"><span data-stu-id="2de2b-312">The following example lists the Unicode code point of each of the control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]
 [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]
 [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsControl : string * int -&gt; bool" Usage="System.char.IsControl (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-313">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-313">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-314">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-314">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-315">Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des caractères de contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-315">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-316">
            <see langword="true" /> si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un caractère de contrôle ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-316">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-317">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-317">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-318">Mise en forme des caractères de contrôle et d’autres caractères non imprimables, tels que l’accusé de réception, BEL, CR, FF, LF et VT.</span><span class="sxs-lookup"><span data-stu-id="2de2b-318">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="2de2b-319">La norme Unicode assigne les points de code de \U0000 à \U001F, \U007F et de \U0080 à \U009F pour les caractères de contrôle.</span><span class="sxs-lookup"><span data-stu-id="2de2b-319">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="2de2b-320">Selon la norme Unicode, ces valeurs doivent être interprétées comme des caractères de contrôle, sauf si leur utilisation est sinon définie par une application.</span><span class="sxs-lookup"><span data-stu-id="2de2b-320">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="2de2b-321">Caractères de contrôle valides sont des membres de la <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-321">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-322">L’exemple suivant énumère les caractères dans une chaîne et détermine si certains sont des caractères de contrôle.</span><span class="sxs-lookup"><span data-stu-id="2de2b-322">The following example enumerates the characters in a string and determines whether any are control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]
 [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]
 [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-323">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-323">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-324">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-324">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-325">Indique si un caractère Unicode est classé dans la catégorie des chiffres décimaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-325">Indicates whether a Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-326">Les chiffres valides sont membres de la <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-326">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsDigit : char -&gt; bool" Usage="System.char.IsDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-327">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-327">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-328">Indique si le caractère Unicode spécifié est classé dans la catégorie des chiffres décimaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-328">Indicates whether the specified Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-329">
            <see langword="true" /> si <paramref name="c" /> est un chiffre décimal ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-329">
              <see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-330">Cette méthode détermine si un <xref:System.Char> est un chiffre de base 10.</span><span class="sxs-lookup"><span data-stu-id="2de2b-330">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="2de2b-331">Ceci contraste avec <xref:System.Char.IsNumber%2A>, qui détermine si un `Char` est une catégorie Unicode numérique.</span><span class="sxs-lookup"><span data-stu-id="2de2b-331">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category.</span></span> <span data-ttu-id="2de2b-332">Numéros des caractères tels que les fractions, indices, des exposants, des chiffres romains, numérateurs de devise, des nombres et les chiffres spécifiques à un script.</span><span class="sxs-lookup"><span data-stu-id="2de2b-332">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="2de2b-333">Les chiffres valides sont membres de la <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-333">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-334">L’exemple de code suivant montre <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-334">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsDigit : string * int -&gt; bool" Usage="System.char.IsDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-335">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-335">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-336">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-336">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-337">Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des chiffres décimaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-337">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-338">
            <see langword="true" /> si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un chiffre décimal ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-338">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-339">Cette méthode détermine si un <xref:System.Char> est un chiffre de base 10.</span><span class="sxs-lookup"><span data-stu-id="2de2b-339">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="2de2b-340">Ceci contraste avec <xref:System.Char.IsNumber%2A>, qui détermine si un <xref:System.Char> est une catégorie Unicode numérique.</span><span class="sxs-lookup"><span data-stu-id="2de2b-340">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="2de2b-341">Numéros des caractères tels que les fractions, indices, des exposants, des chiffres romains, numérateurs de devise, des nombres et les chiffres spécifiques à un script.</span><span class="sxs-lookup"><span data-stu-id="2de2b-341">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="2de2b-342">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-342">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-343">Les chiffres valides sont membres de la <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-343">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-344">L’exemple de code suivant montre <xref:System.Char.IsDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-344">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-345">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-345">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-346">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-346">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsHighSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-347">Indique si l'objet <see cref="T:System.Char" /> spécifié est un caractère de substitution étendu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-347">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : char -&gt; bool" Usage="System.char.IsHighSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-348">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-348">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-349">Indique si l'objet <see cref="T:System.Char" /> spécifié est un caractère de substitution étendu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-349">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-350">
            <see langword="true" /> si la valeur numérique du paramètre <paramref name="c" /> est comprise entre U+D800 et U+DBFF ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-350">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-351">En plus de représenter des caractères uniques à l’aide d’un point de code 16 bits, encodage UTF-16 permet de représenter des caractères abstraites à l’aide de deux points de code 16 bits, qui est appelé une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="2de2b-351">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="2de2b-352">Le premier élément de cette paire est un substitut étendu.</span><span class="sxs-lookup"><span data-stu-id="2de2b-352">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="2de2b-353">Son point de code peut comprise entre U + D800 et U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="2de2b-353">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="2de2b-354">Un substitut individuel n’a aucune interprétation propre ; Il est pertinent uniquement s’il est utilisé dans le cadre d’une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="2de2b-354">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-355">L’exemple de code suivant montre le <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, et <xref:System.Char.IsSurrogatePair%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="2de2b-355">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : string * int -&gt; bool" Usage="System.char.IsHighSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-356">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-356">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-357">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-357">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-358">Indique si l'objet <see cref="T:System.Char" /> à la position spécifiée dans une chaîne est un caractère de substitution étendu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-358">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-359">
            <see langword="true" /> si la valeur numérique du caractère spécifié dans le paramètre <paramref name="s" /> est comprise entre U+D800 et U+DBFF ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-359">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-360">Le `index` paramètre est de base zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-360">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="2de2b-361">En plus de représenter des caractères uniques à l’aide d’un point de code 16 bits, encodage UTF-16 permet de représenter des caractères abstraites à l’aide de deux points de code 16 bits, qui est appelé une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="2de2b-361">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="2de2b-362">Le premier élément de cette paire est un substitut étendu.</span><span class="sxs-lookup"><span data-stu-id="2de2b-362">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="2de2b-363">Son point de code peut comprise entre U + D800 et U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="2de2b-363">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="2de2b-364">Un substitut individuel n’a aucune interprétation propre ; Il est pertinent uniquement s’il est utilisé dans le cadre d’une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="2de2b-364">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-365">L’exemple de code suivant montre le <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, et <xref:System.Char.IsSurrogatePair%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="2de2b-365">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-366">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-366">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-367">
            <paramref name="index" /> n’est pas une position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-367">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-368">Indique si un caractère Unicode est classé dans la catégorie des lettres Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-368">Indicates whether a Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-369">Cette méthode détermine si un <xref:System.Char> est un membre de n’importe quelle catégorie de lettre Unicode.</span><span class="sxs-lookup"><span data-stu-id="2de2b-369">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="2de2b-370">Des lettres Unicode sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="2de2b-370">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="2de2b-371">Lettres majuscules, telles que U + 0041 (LETTRE MAJUSCULE LATINE A) à U + 005 a (LETTRE MAJUSCULE LATINE Z), ou U + 0400 (lettre majuscule cyrillique IE avec ACCENT GRAVE) jusqu'à U + 042F (lettre majuscule cyrillique YA).</span><span class="sxs-lookup"><span data-stu-id="2de2b-371">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="2de2b-372">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-372">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="2de2b-373">Lettres minuscules, telles que U + 0061 (LETTRE MINUSCULE LATINE A) à U + 007 a (LETTRE MINUSCULE LATINE Z), ou U + 03AC (lettre petit GRECQUE ALPHA TONOS) à U + 03CE (grecque petite lettre OMÉGA avec accent).</span><span class="sxs-lookup"><span data-stu-id="2de2b-373">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="2de2b-374">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-374">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="2de2b-375">Titre de casse des lettres, telles que U + 01 C 5 (LATIN MAJUSCULE D avec petite lettre Z avec CARON) ou U + 1FFC (lettre majuscule grecque oméga avec iota souscrit).</span><span class="sxs-lookup"><span data-stu-id="2de2b-375">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="2de2b-376">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-376">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="2de2b-377">Modificateurs, tels que U + 02 b 0 (LETTRE MODIFICATIVE petit H) à U + 02C1 (modificateur lettre GLOTTE inversé), ou U + 1D2C (LETTRE MODIFICATIVE A majuscule) à U + 1D 61 (LETTRE MODIFICATIVE petit CHI).</span><span class="sxs-lookup"><span data-stu-id="2de2b-377">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="2de2b-378">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-378">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="2de2b-379">Autres lettres, telles que de U + 05 D 0 (LETTRE HÉBRAÏQUE ALEF) à U + 05EA (LETTRE HÉBRAÏQUE TAV), U + 0621 (LETTRE ARABE HAMZA) à U + 063 a (LETTRE ARABE GHAÏN), ou U + 4E00 (\<CJC IDÉOGRAMME, première >) à U + 9 FC 3 (\<CJC IDÉOGRAMME, dernier >).</span><span class="sxs-lookup"><span data-stu-id="2de2b-379">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="2de2b-380">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-380">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetter : char -&gt; bool" Usage="System.char.IsLetter c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-381">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-381">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-382">Indique si le caractère Unicode spécifié est classé dans la catégorie des lettres Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-382">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-383">
            <see langword="true" /> si <paramref name="c" /> est une lettre ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-383">
              <see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-384">Cette méthode détermine si un <xref:System.Char> est un membre de n’importe quelle catégorie de lettre Unicode.</span><span class="sxs-lookup"><span data-stu-id="2de2b-384">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="2de2b-385">Des lettres Unicode sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="2de2b-385">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="2de2b-386">Lettres majuscules, telles que U + 0041 (LETTRE MAJUSCULE LATINE A) à U + 005 a (LETTRE MAJUSCULE LATINE Z), ou U + 0400 (lettre majuscule cyrillique IE avec ACCENT GRAVE) jusqu'à U + 042F (lettre majuscule cyrillique YA).</span><span class="sxs-lookup"><span data-stu-id="2de2b-386">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="2de2b-387">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-387">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="2de2b-388">Lettres minuscules, telles que U + 0061 (LETTRE MINUSCULE LATINE A) à U + 007 a (LETTRE MINUSCULE LATINE Z), ou U + 03AC (lettre petit GRECQUE ALPHA TONOS) à U + 03CE (grecque petite lettre OMÉGA avec accent).</span><span class="sxs-lookup"><span data-stu-id="2de2b-388">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="2de2b-389">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-389">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="2de2b-390">Titre de casse des lettres, telles que U + 01 C 5 (LATIN MAJUSCULE D avec petite lettre Z avec CARON) ou U + 1FFC (lettre majuscule grecque oméga avec iota souscrit).</span><span class="sxs-lookup"><span data-stu-id="2de2b-390">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="2de2b-391">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-391">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="2de2b-392">Modificateurs, tels que U + 02 b 0 (LETTRE MODIFICATIVE petit H) à U + 02C1 (modificateur lettre GLOTTE inversé), ou U + 1D2C (LETTRE MODIFICATIVE A majuscule) à U + 1D 61 (LETTRE MODIFICATIVE petit CHI).</span><span class="sxs-lookup"><span data-stu-id="2de2b-392">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="2de2b-393">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-393">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="2de2b-394">Autres lettres, telles que de U + 05 D 0 (LETTRE HÉBRAÏQUE ALEF) à U + 05EA (LETTRE HÉBRAÏQUE TAV), U + 0621 (LETTRE ARABE HAMZA) à U + 063 a (LETTRE ARABE GHAÏN), ou U + 4E00 (\<CJC IDÉOGRAMME, première >) à U + 9 FC 3 (\<CJC IDÉOGRAMME, dernier >).</span><span class="sxs-lookup"><span data-stu-id="2de2b-394">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="2de2b-395">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-395">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-396">L’exemple de code suivant montre <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-396">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetter : string * int -&gt; bool" Usage="System.char.IsLetter (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-397">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-397">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-398">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-398">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-399">Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des lettres Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-399">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-400">
            <see langword="true" /> si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est une lettre ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-400">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-401">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-401">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-402">Cette méthode détermine si le caractère situé à la position d’index spécifiée dans une chaîne est un membre de n’importe quelle catégorie de lettre Unicode.</span><span class="sxs-lookup"><span data-stu-id="2de2b-402">This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</span></span> <span data-ttu-id="2de2b-403">Des lettres Unicode sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="2de2b-403">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="2de2b-404">Lettres majuscules, telles que U + 0041 (LETTRE MAJUSCULE LATINE A) à U + 005 a (LETTRE MAJUSCULE LATINE Z), ou U + 0400 (lettre majuscule cyrillique IE avec ACCENT GRAVE) jusqu'à U + 042F (lettre majuscule cyrillique YA).</span><span class="sxs-lookup"><span data-stu-id="2de2b-404">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="2de2b-405">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-405">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="2de2b-406">Lettres minuscules, telles que U + 0061 (LETTRE MINUSCULE LATINE A) à U + 007 a (LETTRE MINUSCULE LATINE Z), ou U + 03AC (lettre petit GRECQUE ALPHA TONOS) à U + 03CE (grecque petite lettre OMÉGA avec accent).</span><span class="sxs-lookup"><span data-stu-id="2de2b-406">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="2de2b-407">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-407">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="2de2b-408">Titre de casse des lettres, telles que U + 01 C 5 (LATIN MAJUSCULE D avec petite lettre Z avec CARON) ou U + 1FFC (lettre majuscule grecque oméga avec iota souscrit).</span><span class="sxs-lookup"><span data-stu-id="2de2b-408">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="2de2b-409">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-409">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="2de2b-410">Modificateurs, tels que U + 02 b 0 (LETTRE MODIFICATIVE petit H) à U + 02C1 (modificateur lettre GLOTTE inversé), ou U + 1D2C (LETTRE MODIFICATIVE A majuscule) à U + 1D 61 (LETTRE MODIFICATIVE petit CHI).</span><span class="sxs-lookup"><span data-stu-id="2de2b-410">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="2de2b-411">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-411">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="2de2b-412">Autres lettres, telles que de U + 05 D 0 (LETTRE HÉBRAÏQUE ALEF) à U + 05EA (LETTRE HÉBRAÏQUE TAV), U + 0621 (LETTRE ARABE HAMZA) à U + 063 a (LETTRE ARABE GHAÏN), ou U + 4E00 (\<CJC IDÉOGRAMME, première >) à U + 9 FC 3 (\<CJC IDÉOGRAMME, dernier >).</span><span class="sxs-lookup"><span data-stu-id="2de2b-412">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="2de2b-413">Ces caractères sont membres de la <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-413">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-414">L’exemple de code suivant montre <xref:System.Char.IsLetter%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-414">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-415">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-415">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-416">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-416">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetterOrDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-417">Indique si un caractère Unicode est classé dans la catégorie des lettres ou des chiffres décimaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-417">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-418">Valides lettres et chiffres décimaux sont membres des catégories suivantes dans <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, ou `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-418">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : char -&gt; bool" Usage="System.char.IsLetterOrDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-419">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-419">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-420">Indique si le caractère Unicode spécifié est classé dans la catégorie des lettres ou des chiffres décimaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-420">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-421">
            <see langword="true" /> si <paramref name="c" /> est une lettre ou un chiffre décimal ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-421">
              <see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-422">Valides lettres et chiffres décimaux sont membres des catégories suivantes dans <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, ou `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-422">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-423">L’exemple de code suivant montre <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-423">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : string * int -&gt; bool" Usage="System.char.IsLetterOrDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-424">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-424">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-425">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-425">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-426">Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des lettres ou des chiffres décimaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-426">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-427">
            <see langword="true" /> si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est une lettre ou un chiffre décimal ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-427">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-428">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-428">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-429">Valides lettres et chiffres décimaux sont membres des catégories suivantes dans <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, ou `DecimalDigitNumber`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-429">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-430">L’exemple de code suivant montre <xref:System.Char.IsLetterOrDigit%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-430">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-431">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-431">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-432">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-432">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-433">Indique si un caractère Unicode est classé dans la catégorie des lettres minuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-433">Indicates whether a Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(char c);" />
      <MemberSignature Language="F#" Value="static member IsLower : char -&gt; bool" Usage="System.char.IsLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-434">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-434">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-435">Indique si le caractère Unicode spécifié est classé dans la catégorie des lettres minuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-435">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-436">
            <see langword="true" /> si <paramref name="c" /> est une lettre minuscule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-436">
              <see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-437">Minuscules valides sont membres de la catégorie suivante dans <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-437">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-438">L’exemple de code suivant montre <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-438">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLower : string * int -&gt; bool" Usage="System.char.IsLower (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-439">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-439">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-440">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-440">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-441">Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des minuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-441">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-442">
            <see langword="true" /> si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est une lettre minuscule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-442">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-443">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-443">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-444">Minuscules valides sont membres de la catégorie suivante dans <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-444">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-445">L’exemple de code suivant montre <xref:System.Char.IsLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-445">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-446">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-446">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-447">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-447">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLowSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-448">Indique si l'objet <see cref="T:System.Char" /> spécifié est un caractère de substitution faible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-448">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : char -&gt; bool" Usage="System.char.IsLowSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-449">Caractère à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-449">The character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-450">Indique si l'objet <see cref="T:System.Char" /> spécifié est un caractère de substitution faible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-450">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-451">
            <see langword="true" /> si la valeur numérique du paramètre <paramref name="c" /> est comprise entre U+DC00 et U+DFFF ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-451">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-452">En plus de représenter des caractères uniques à l’aide d’un point de code 16 bits, encodage UTF-16 permet de représenter des caractères abstraites à l’aide de deux points de code 16 bits, qui est appelé une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="2de2b-452">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="2de2b-453">Le deuxième élément de cette paire est un substitut faible.</span><span class="sxs-lookup"><span data-stu-id="2de2b-453">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="2de2b-454">Son point de code peut être comprise entre U + DC00 et U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="2de2b-454">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="2de2b-455">Un substitut individuel n’a aucune interprétation propre ; Il est pertinent uniquement s’il est utilisé dans le cadre d’une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="2de2b-455">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-456">L’exemple de code suivant montre le <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, et <xref:System.Char.IsSurrogatePair%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="2de2b-456">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : string * int -&gt; bool" Usage="System.char.IsLowSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-457">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-457">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-458">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-458">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-459">Indique si l'objet <see cref="T:System.Char" /> à la position spécifiée dans une chaîne est un caractère de substitution faible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-459">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-460">
            <see langword="true" /> si la valeur numérique du caractère spécifié dans le paramètre <paramref name="s" /> est comprise entre U+DC00 et U+DFFF ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-460">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-461">Le `index` paramètre est de base zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-461">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="2de2b-462">En plus de représenter des caractères uniques à l’aide d’un point de code 16 bits, encodage UTF-16 permet de représenter des caractères abstraites à l’aide de deux points de code 16 bits, qui est appelé une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="2de2b-462">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="2de2b-463">Le deuxième élément de cette paire est un substitut faible.</span><span class="sxs-lookup"><span data-stu-id="2de2b-463">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="2de2b-464">Son point de code peut être comprise entre U + DC00 et U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="2de2b-464">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="2de2b-465">Un substitut individuel n’a aucune interprétation propre ; Il est pertinent uniquement s’il est utilisé dans le cadre d’une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="2de2b-465">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-466">L’exemple de code suivant montre le <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, et <xref:System.Char.IsSurrogatePair%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="2de2b-466">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-467">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-467">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-468">
            <paramref name="index" /> n’est pas une position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-468">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNumber">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-469">Indique si un caractère Unicode est classé dans la catégorie des nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-469">Indicates whether a Unicode character is categorized as a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(char c);" />
      <MemberSignature Language="F#" Value="static member IsNumber : char -&gt; bool" Usage="System.char.IsNumber c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-470">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-470">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-471">Indique si le caractère Unicode spécifié est classé dans la catégorie des nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-471">Indicates whether the specified Unicode character is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-472">
            <see langword="true" /> si <paramref name="c" /> est un nombre ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-472">
              <see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-473">Cette méthode détermine si un <xref:System.Char> est une catégorie Unicode numérique.</span><span class="sxs-lookup"><span data-stu-id="2de2b-473">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="2de2b-474">En plus d’inclure les chiffres, les numéros d’inclure caractères fractions, indices, des exposants, des chiffres romains, numérateurs de devise et des nombres.</span><span class="sxs-lookup"><span data-stu-id="2de2b-474">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="2de2b-475">Cette méthode est comparée à la <xref:System.Char.IsDigit%2A> (méthode), qui détermine si un <xref:System.Char> est un chiffre de base 10.</span><span class="sxs-lookup"><span data-stu-id="2de2b-475">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2de2b-476">Le <xref:System.Char.IsNumber%28System.Char%29> méthode n’est pas destinée à déterminer si une chaîne se compose de caractères numériques (par exemple, en appelant la méthode pour chaque caractère dans une chaîne).</span><span class="sxs-lookup"><span data-stu-id="2de2b-476">The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="2de2b-477">Pour déterminer si une chaîne se compose de caractères numériques, appelez une des surcharges de la `TryParse` (méthode) (tel que <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> ou <xref:System.Double.TryParse%2A?displayProperty=nameWithType> d’un type intégral ou à virgule flottante.</span><span class="sxs-lookup"><span data-stu-id="2de2b-477">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="2de2b-478">Les nombres valides sont membres de la <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, ou <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-478">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="2de2b-479">Le <xref:System.Char.IsNumber%28System.Char%29> méthode suppose que `c` correspond à un caractère linguistique unique et vérifie si ce caractère représente un nombre.</span><span class="sxs-lookup"><span data-stu-id="2de2b-479">The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number.</span></span> <span data-ttu-id="2de2b-480">Toutefois, certains nombres dans la norme Unicode sont représentées par deux <xref:System.Char> objets qui forment une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="2de2b-480">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="2de2b-481">Par exemple, la système de numérotation d’Égée se compose de points de code U + 10107 et U + 10133.</span><span class="sxs-lookup"><span data-stu-id="2de2b-481">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="2de2b-482">L’exemple suivant utilise la <xref:System.Char.ConvertFromUtf32%2A> méthode pour instancier une chaîne qui représente les mineures numéro un.</span><span class="sxs-lookup"><span data-stu-id="2de2b-482">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="2de2b-483">Comme le résultat de l’exemple montre le <xref:System.Char.IsNumber%28System.Char%29> retourne de la méthode `false` si elle est passée de substitut étendu ou faible de ce caractère.</span><span class="sxs-lookup"><span data-stu-id="2de2b-483">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]
 [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-484">L’exemple suivant montre <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-484">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsNumber : string * int -&gt; bool" Usage="System.char.IsNumber (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-485">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-485">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-486">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-486">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-487">Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-487">Indicates whether the character at the specified position in a specified string is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-488">
            <see langword="true" /> si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un nombre ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-488">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-489">Cette méthode détermine si un <xref:System.Char> est une catégorie Unicode numérique.</span><span class="sxs-lookup"><span data-stu-id="2de2b-489">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="2de2b-490">En plus d’inclure les chiffres, les numéros d’inclure caractères fractions, indices, des exposants, des chiffres romains, numérateurs de devise et des nombres.</span><span class="sxs-lookup"><span data-stu-id="2de2b-490">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="2de2b-491">Cette méthode est comparée à la <xref:System.Char.IsDigit%2A> (méthode), qui détermine si un <xref:System.Char> est un chiffre de base 10.</span><span class="sxs-lookup"><span data-stu-id="2de2b-491">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
 <span data-ttu-id="2de2b-492">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-492">Character positions in a string are indexed starting from zero.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2de2b-493">Le <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> méthode n’est pas destinée à déterminer si une chaîne se compose de caractères numériques (par exemple, en appelant la méthode pour chaque caractère dans une chaîne).</span><span class="sxs-lookup"><span data-stu-id="2de2b-493">The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="2de2b-494">Pour déterminer si une chaîne se compose de caractères numériques, appelez une des surcharges de la `TryParse` (méthode) (tel que <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> ou <xref:System.Double.TryParse%2A?displayProperty=nameWithType> d’un type intégral ou à virgule flottante.</span><span class="sxs-lookup"><span data-stu-id="2de2b-494">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="2de2b-495">Les nombres valides sont membres de la <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, ou <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-495">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="2de2b-496">Si le <xref:System.Char> objet à la position `index` est le premier caractère d’une paire de substitution valide, la <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> méthode détermine si la paire de substitution forme un chiffre.</span><span class="sxs-lookup"><span data-stu-id="2de2b-496">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="2de2b-497">Par exemple, la système de numérotation d’Égée se compose de points de code U + 10107 et U + 10133.</span><span class="sxs-lookup"><span data-stu-id="2de2b-497">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="2de2b-498">L’exemple suivant utilise la <xref:System.Char.ConvertFromUtf32%2A> méthode pour instancier une chaîne qui représente les mineures numéro un.</span><span class="sxs-lookup"><span data-stu-id="2de2b-498">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="2de2b-499">Comme le résultat de l’exemple montre le <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> retourne de la méthode `true` s’il est passé de mineures numéro un substitut étendu.</span><span class="sxs-lookup"><span data-stu-id="2de2b-499">As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="2de2b-500">Toutefois, si le substitut faible lui est passé, elle considère uniquement la catégorie de substitut faible et renvoie `false`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-500">However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]
 [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-501">L’exemple suivant montre <xref:System.Char.IsNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-501">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-502">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-502">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-503">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-503">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPunctuation">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-504">Indique si un caractère Unicode est classé dans la catégorie des signes de ponctuation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-504">Indicates whether a Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-505">Ponctuation valides sont membres des catégories suivantes dans <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, ou `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-505">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="2de2b-506">Elles incluent des caractères avec les points de code Unicode répertoriées dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="2de2b-506">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="2de2b-507">U + 0021 à U + 0023</span><span class="sxs-lookup"><span data-stu-id="2de2b-507">U+0021 to U+0023</span></span>|<span data-ttu-id="2de2b-508">U + 060C et U + 060D</span><span class="sxs-lookup"><span data-stu-id="2de2b-508">U+060C and U+060D</span></span>|<span data-ttu-id="2de2b-509">U + 1800 à U + 180 a</span><span class="sxs-lookup"><span data-stu-id="2de2b-509">U+1800 to U+180A</span></span>|<span data-ttu-id="2de2b-510">U + 3014 à U + 301F</span><span class="sxs-lookup"><span data-stu-id="2de2b-510">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="2de2b-511">U + 0025 à U + 002 a</span><span class="sxs-lookup"><span data-stu-id="2de2b-511">U+0025 to U+002A</span></span>|<span data-ttu-id="2de2b-512">U + 061B</span><span class="sxs-lookup"><span data-stu-id="2de2b-512">U+061B</span></span>|<span data-ttu-id="2de2b-513">U + 1944 et U + 1945</span><span class="sxs-lookup"><span data-stu-id="2de2b-513">U+1944 and U+1945</span></span>|<span data-ttu-id="2de2b-514">U + 3030</span><span class="sxs-lookup"><span data-stu-id="2de2b-514">U+3030</span></span>|  
|<span data-ttu-id="2de2b-515">U + 002C à U + 002F</span><span class="sxs-lookup"><span data-stu-id="2de2b-515">U+002C to U+002F</span></span>|<span data-ttu-id="2de2b-516">U + 061E et U + 061F</span><span class="sxs-lookup"><span data-stu-id="2de2b-516">U+061E and U+061F</span></span>|<span data-ttu-id="2de2b-517">U + 19DE et U + 19DF</span><span class="sxs-lookup"><span data-stu-id="2de2b-517">U+19DE and U+19DF</span></span>|<span data-ttu-id="2de2b-518">U + 303D</span><span class="sxs-lookup"><span data-stu-id="2de2b-518">U+303D</span></span>|  
|<span data-ttu-id="2de2b-519">U + 003 a et U + 003B</span><span class="sxs-lookup"><span data-stu-id="2de2b-519">U+003A and U+003B</span></span>|<span data-ttu-id="2de2b-520">U + 066A à U + 066D</span><span class="sxs-lookup"><span data-stu-id="2de2b-520">U+066A to U+066D</span></span>|<span data-ttu-id="2de2b-521">U + 1A1E et U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="2de2b-521">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="2de2b-522">U + 30 A 0</span><span class="sxs-lookup"><span data-stu-id="2de2b-522">U+30A0</span></span>|  
|<span data-ttu-id="2de2b-523">U + 003F et U + 0040</span><span class="sxs-lookup"><span data-stu-id="2de2b-523">U+003F and U+0040</span></span>|<span data-ttu-id="2de2b-524">U + 06D 4</span><span class="sxs-lookup"><span data-stu-id="2de2b-524">U+06D4</span></span>|<span data-ttu-id="2de2b-525">U + 1B5A à U + 1B60</span><span class="sxs-lookup"><span data-stu-id="2de2b-525">U+1B5A to U+1B60</span></span>|<span data-ttu-id="2de2b-526">U + 30FB</span><span class="sxs-lookup"><span data-stu-id="2de2b-526">U+30FB</span></span>|  
|<span data-ttu-id="2de2b-527">U + 005B à U + 005D</span><span class="sxs-lookup"><span data-stu-id="2de2b-527">U+005B to U+005D</span></span>|<span data-ttu-id="2de2b-528">U + 0700 à U + D 070</span><span class="sxs-lookup"><span data-stu-id="2de2b-528">U+0700 to U+070D</span></span>|<span data-ttu-id="2de2b-529">U + 2010 à U + 2027</span><span class="sxs-lookup"><span data-stu-id="2de2b-529">U+2010 to U+2027</span></span>|<span data-ttu-id="2de2b-530">U + A874 à U + A877</span><span class="sxs-lookup"><span data-stu-id="2de2b-530">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="2de2b-531">U + 005F</span><span class="sxs-lookup"><span data-stu-id="2de2b-531">U+005F</span></span>|<span data-ttu-id="2de2b-532">U + 07F7 à U + 07F9</span><span class="sxs-lookup"><span data-stu-id="2de2b-532">U+07F7 to U+07F9</span></span>|<span data-ttu-id="2de2b-533">U + 2030 à U + 2043</span><span class="sxs-lookup"><span data-stu-id="2de2b-533">U+2030 to U+2043</span></span>|<span data-ttu-id="2de2b-534">U + FD3E et U + FD3F</span><span class="sxs-lookup"><span data-stu-id="2de2b-534">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="2de2b-535">U + 007B</span><span class="sxs-lookup"><span data-stu-id="2de2b-535">U+007B</span></span>|<span data-ttu-id="2de2b-536">U + 0964 et U + 0965</span><span class="sxs-lookup"><span data-stu-id="2de2b-536">U+0964 and U+0965</span></span>|<span data-ttu-id="2de2b-537">U + 2045 à U + 2051</span><span class="sxs-lookup"><span data-stu-id="2de2b-537">U+2045 to U+2051</span></span>|<span data-ttu-id="2de2b-538">U + FE10 à U + FE19</span><span class="sxs-lookup"><span data-stu-id="2de2b-538">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="2de2b-539">U + 007D</span><span class="sxs-lookup"><span data-stu-id="2de2b-539">U+007D</span></span>|<span data-ttu-id="2de2b-540">U + 0970</span><span class="sxs-lookup"><span data-stu-id="2de2b-540">U+0970</span></span>|<span data-ttu-id="2de2b-541">2053 U + à U + 205E</span><span class="sxs-lookup"><span data-stu-id="2de2b-541">U+2053 to U+205E</span></span>|<span data-ttu-id="2de2b-542">U + FE30 à U + FE52</span><span class="sxs-lookup"><span data-stu-id="2de2b-542">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="2de2b-543">U + 00 A 1</span><span class="sxs-lookup"><span data-stu-id="2de2b-543">U+00A1</span></span>|<span data-ttu-id="2de2b-544">U + 0DF4</span><span class="sxs-lookup"><span data-stu-id="2de2b-544">U+0DF4</span></span>|<span data-ttu-id="2de2b-545">U + D 207 et U + 207E</span><span class="sxs-lookup"><span data-stu-id="2de2b-545">U+207D and  U+207E</span></span>|<span data-ttu-id="2de2b-546">U + FE54 à U + FE61</span><span class="sxs-lookup"><span data-stu-id="2de2b-546">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="2de2b-547">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="2de2b-547">U+00AB</span></span>|<span data-ttu-id="2de2b-548">U + 0E4F à U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="2de2b-548">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="2de2b-549">U + 208D et U + 208E</span><span class="sxs-lookup"><span data-stu-id="2de2b-549">U+208D and U+208E</span></span>|<span data-ttu-id="2de2b-550">U + FE63</span><span class="sxs-lookup"><span data-stu-id="2de2b-550">U+FE63</span></span>|  
|<span data-ttu-id="2de2b-551">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="2de2b-551">U+00AD</span></span>|<span data-ttu-id="2de2b-552">U + 0F04 à U + 0F12</span><span class="sxs-lookup"><span data-stu-id="2de2b-552">U+0F04 to U+0F12</span></span>|<span data-ttu-id="2de2b-553">U + 2329 et U + 232A</span><span class="sxs-lookup"><span data-stu-id="2de2b-553">U+2329 and U+232A</span></span>|<span data-ttu-id="2de2b-554">U + FE68</span><span class="sxs-lookup"><span data-stu-id="2de2b-554">U+FE68</span></span>|  
|<span data-ttu-id="2de2b-555">U + 00B7</span><span class="sxs-lookup"><span data-stu-id="2de2b-555">U+00B7</span></span>|<span data-ttu-id="2de2b-556">U + 0F3A à U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="2de2b-556">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="2de2b-557">U + 2768 à U + 2775</span><span class="sxs-lookup"><span data-stu-id="2de2b-557">U+2768 to U+2775</span></span>|<span data-ttu-id="2de2b-558">U + FE6A et U + FE6B</span><span class="sxs-lookup"><span data-stu-id="2de2b-558">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="2de2b-559">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="2de2b-559">U+00BB</span></span>|<span data-ttu-id="2de2b-560">U + 0F85</span><span class="sxs-lookup"><span data-stu-id="2de2b-560">U+0F85</span></span>|<span data-ttu-id="2de2b-561">U + 5 27C à U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="2de2b-561">U+27C5 to U+27C6</span></span>|<span data-ttu-id="2de2b-562">U + entre FF01 à U + FF03</span><span class="sxs-lookup"><span data-stu-id="2de2b-562">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="2de2b-563">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="2de2b-563">U+00BF</span></span>|<span data-ttu-id="2de2b-564">U + 0FD0 et U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="2de2b-564">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="2de2b-565">U + 27E6 à U + 27EB</span><span class="sxs-lookup"><span data-stu-id="2de2b-565">U+27E6 to U+27EB</span></span>|<span data-ttu-id="2de2b-566">U + FF05 à U + FF0A</span><span class="sxs-lookup"><span data-stu-id="2de2b-566">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="2de2b-567">U + 037E</span><span class="sxs-lookup"><span data-stu-id="2de2b-567">U+037E</span></span>|<span data-ttu-id="2de2b-568">U + 104 à U + 104 °</span><span class="sxs-lookup"><span data-stu-id="2de2b-568">U+104A to U+104F</span></span>|<span data-ttu-id="2de2b-569">U + 2983 à U + 2998</span><span class="sxs-lookup"><span data-stu-id="2de2b-569">U+2983 to U+2998</span></span>|<span data-ttu-id="2de2b-570">U + FF0C à U + FF0F</span><span class="sxs-lookup"><span data-stu-id="2de2b-570">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="2de2b-571">U + 0387</span><span class="sxs-lookup"><span data-stu-id="2de2b-571">U+0387</span></span>|<span data-ttu-id="2de2b-572">U + 10FB</span><span class="sxs-lookup"><span data-stu-id="2de2b-572">U+10FB</span></span>|<span data-ttu-id="2de2b-573">U + 8 29D à U + 29DB</span><span class="sxs-lookup"><span data-stu-id="2de2b-573">U+29D8 to U+29DB</span></span>|<span data-ttu-id="2de2b-574">U + FF1A et U + FF1B</span><span class="sxs-lookup"><span data-stu-id="2de2b-574">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="2de2b-575">U + 055A à U + 055F</span><span class="sxs-lookup"><span data-stu-id="2de2b-575">U+055A to U+055F</span></span>|<span data-ttu-id="2de2b-576">U + 1361 à U + 1368</span><span class="sxs-lookup"><span data-stu-id="2de2b-576">U+1361 to U+1368</span></span>|<span data-ttu-id="2de2b-577">U + 29FC et U + 29FD</span><span class="sxs-lookup"><span data-stu-id="2de2b-577">U+29FC and U+29FD</span></span>|<span data-ttu-id="2de2b-578">U + FF1F et U + FF20</span><span class="sxs-lookup"><span data-stu-id="2de2b-578">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="2de2b-579">U + 0589 et U + 058A</span><span class="sxs-lookup"><span data-stu-id="2de2b-579">U+0589 and U+058A</span></span>|<span data-ttu-id="2de2b-580">U + 166D et U + 166E</span><span class="sxs-lookup"><span data-stu-id="2de2b-580">U+166D and U+166E</span></span>|<span data-ttu-id="2de2b-581">U + 2CF9 à U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="2de2b-581">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="2de2b-582">U + FF3B à U + FF3D</span><span class="sxs-lookup"><span data-stu-id="2de2b-582">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="2de2b-583">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="2de2b-583">U+05BE</span></span>|<span data-ttu-id="2de2b-584">U + 169C et U + 169C</span><span class="sxs-lookup"><span data-stu-id="2de2b-584">U+169B and U+169C</span></span>|<span data-ttu-id="2de2b-585">U + 2CFE et U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="2de2b-585">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="2de2b-586">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="2de2b-586">U+FF3F</span></span>|  
|<span data-ttu-id="2de2b-587">U + 05C 0</span><span class="sxs-lookup"><span data-stu-id="2de2b-587">U+05C0</span></span>|<span data-ttu-id="2de2b-588">U + 16EB à U + 16ED</span><span class="sxs-lookup"><span data-stu-id="2de2b-588">U+16EB to U+16ED</span></span>|<span data-ttu-id="2de2b-589">U + 2E00 à U + 2E17</span><span class="sxs-lookup"><span data-stu-id="2de2b-589">U+2E00 to U+2E17</span></span>|<span data-ttu-id="2de2b-590">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="2de2b-590">U+FF5B</span></span>|  
|<span data-ttu-id="2de2b-591">U + 05C 3</span><span class="sxs-lookup"><span data-stu-id="2de2b-591">U+05C3</span></span>|<span data-ttu-id="2de2b-592">U + 1735 et U + 1736</span><span class="sxs-lookup"><span data-stu-id="2de2b-592">U+1735 and U+1736</span></span>|<span data-ttu-id="2de2b-593">U + 2E1C et U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="2de2b-593">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="2de2b-594">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="2de2b-594">U+FF5D</span></span>|  
|<span data-ttu-id="2de2b-595">U + 05C 6</span><span class="sxs-lookup"><span data-stu-id="2de2b-595">U+05C6</span></span>|<span data-ttu-id="2de2b-596">U + 4 17D à U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="2de2b-596">U+17D4 to U+17D6</span></span>|<span data-ttu-id="2de2b-597">U + 3001 à U + 3003</span><span class="sxs-lookup"><span data-stu-id="2de2b-597">U+3001 to U+3003</span></span>|<span data-ttu-id="2de2b-598">U + FF5F à U + FF65</span><span class="sxs-lookup"><span data-stu-id="2de2b-598">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="2de2b-599">U + 05F3 et U + 05F4</span><span class="sxs-lookup"><span data-stu-id="2de2b-599">U+05F3 and U+05F4</span></span>|<span data-ttu-id="2de2b-600">U + 8 17D à U + 17DA</span><span class="sxs-lookup"><span data-stu-id="2de2b-600">U+17D8 to U+17DA</span></span>|<span data-ttu-id="2de2b-601">3008 U + à U + 3011</span><span class="sxs-lookup"><span data-stu-id="2de2b-601">U+3008 to U+3011</span></span>||  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(char c);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : char -&gt; bool" Usage="System.char.IsPunctuation c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-602">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-602">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-603">Indique si le caractère Unicode spécifié est classé dans la catégorie des signes de ponctuation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-603">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-604">
            <see langword="true" /> si <paramref name="c" /> est un signe de ponctuation ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-604">
              <see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-605">Ponctuation valides sont membres des catégories suivantes dans <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, ou `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-605">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="2de2b-606">Elles incluent des caractères avec les points de code Unicode répertoriées dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="2de2b-606">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="2de2b-607">U + 0021 à U + 0023</span><span class="sxs-lookup"><span data-stu-id="2de2b-607">U+0021 to U+0023</span></span>|<span data-ttu-id="2de2b-608">U + 060C et U + 060D</span><span class="sxs-lookup"><span data-stu-id="2de2b-608">U+060C and U+060D</span></span>|<span data-ttu-id="2de2b-609">U + 1800 à U + 180 a</span><span class="sxs-lookup"><span data-stu-id="2de2b-609">U+1800 to U+180A</span></span>|<span data-ttu-id="2de2b-610">U + 3014 à U + 301F</span><span class="sxs-lookup"><span data-stu-id="2de2b-610">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="2de2b-611">U + 0025 à U + 002 a</span><span class="sxs-lookup"><span data-stu-id="2de2b-611">U+0025 to U+002A</span></span>|<span data-ttu-id="2de2b-612">U + 061B</span><span class="sxs-lookup"><span data-stu-id="2de2b-612">U+061B</span></span>|<span data-ttu-id="2de2b-613">U + 1944 et U + 1945</span><span class="sxs-lookup"><span data-stu-id="2de2b-613">U+1944 and U+1945</span></span>|<span data-ttu-id="2de2b-614">U + 3030</span><span class="sxs-lookup"><span data-stu-id="2de2b-614">U+3030</span></span>|  
|<span data-ttu-id="2de2b-615">U + 002C à U + 002F</span><span class="sxs-lookup"><span data-stu-id="2de2b-615">U+002C to U+002F</span></span>|<span data-ttu-id="2de2b-616">U + 061E et U + 061F</span><span class="sxs-lookup"><span data-stu-id="2de2b-616">U+061E and U+061F</span></span>|<span data-ttu-id="2de2b-617">U + 19DE et U + 19DF</span><span class="sxs-lookup"><span data-stu-id="2de2b-617">U+19DE and U+19DF</span></span>|<span data-ttu-id="2de2b-618">U + 303D</span><span class="sxs-lookup"><span data-stu-id="2de2b-618">U+303D</span></span>|  
|<span data-ttu-id="2de2b-619">U + 003 a et U + 003B</span><span class="sxs-lookup"><span data-stu-id="2de2b-619">U+003A and U+003B</span></span>|<span data-ttu-id="2de2b-620">U + 066A à U + 066D</span><span class="sxs-lookup"><span data-stu-id="2de2b-620">U+066A to U+066D</span></span>|<span data-ttu-id="2de2b-621">U + 1A1E et U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="2de2b-621">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="2de2b-622">U + 30 A 0</span><span class="sxs-lookup"><span data-stu-id="2de2b-622">U+30A0</span></span>|  
|<span data-ttu-id="2de2b-623">U + 003F et U + 0040</span><span class="sxs-lookup"><span data-stu-id="2de2b-623">U+003F and U+0040</span></span>|<span data-ttu-id="2de2b-624">U + 06D 4</span><span class="sxs-lookup"><span data-stu-id="2de2b-624">U+06D4</span></span>|<span data-ttu-id="2de2b-625">U + 1B5A à U + 1B60</span><span class="sxs-lookup"><span data-stu-id="2de2b-625">U+1B5A to U+1B60</span></span>|<span data-ttu-id="2de2b-626">U + 30FB</span><span class="sxs-lookup"><span data-stu-id="2de2b-626">U+30FB</span></span>|  
|<span data-ttu-id="2de2b-627">U + 005B à U + 005D</span><span class="sxs-lookup"><span data-stu-id="2de2b-627">U+005B to U+005D</span></span>|<span data-ttu-id="2de2b-628">U + 0700 à U + D 070</span><span class="sxs-lookup"><span data-stu-id="2de2b-628">U+0700 to U+070D</span></span>|<span data-ttu-id="2de2b-629">U + 2010 à U + 2027</span><span class="sxs-lookup"><span data-stu-id="2de2b-629">U+2010 to U+2027</span></span>|<span data-ttu-id="2de2b-630">U + A874 à U + A877</span><span class="sxs-lookup"><span data-stu-id="2de2b-630">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="2de2b-631">U + 005F</span><span class="sxs-lookup"><span data-stu-id="2de2b-631">U+005F</span></span>|<span data-ttu-id="2de2b-632">U + 07F7 à U + 07F9</span><span class="sxs-lookup"><span data-stu-id="2de2b-632">U+07F7 to U+07F9</span></span>|<span data-ttu-id="2de2b-633">U + 2030 à U + 2043</span><span class="sxs-lookup"><span data-stu-id="2de2b-633">U+2030 to U+2043</span></span>|<span data-ttu-id="2de2b-634">U + FD3E et U + FD3F</span><span class="sxs-lookup"><span data-stu-id="2de2b-634">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="2de2b-635">U + 007B</span><span class="sxs-lookup"><span data-stu-id="2de2b-635">U+007B</span></span>|<span data-ttu-id="2de2b-636">U + 0964 et U + 0965</span><span class="sxs-lookup"><span data-stu-id="2de2b-636">U+0964 and U+0965</span></span>|<span data-ttu-id="2de2b-637">U + 2045 à U + 2051</span><span class="sxs-lookup"><span data-stu-id="2de2b-637">U+2045 to U+2051</span></span>|<span data-ttu-id="2de2b-638">U + FE10 à U + FE19</span><span class="sxs-lookup"><span data-stu-id="2de2b-638">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="2de2b-639">U + 007D</span><span class="sxs-lookup"><span data-stu-id="2de2b-639">U+007D</span></span>|<span data-ttu-id="2de2b-640">U + 0970</span><span class="sxs-lookup"><span data-stu-id="2de2b-640">U+0970</span></span>|<span data-ttu-id="2de2b-641">2053 U + à U + 205E</span><span class="sxs-lookup"><span data-stu-id="2de2b-641">U+2053 to U+205E</span></span>|<span data-ttu-id="2de2b-642">U + FE30 à U + FE52</span><span class="sxs-lookup"><span data-stu-id="2de2b-642">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="2de2b-643">U + 00 A 1</span><span class="sxs-lookup"><span data-stu-id="2de2b-643">U+00A1</span></span>|<span data-ttu-id="2de2b-644">U + 0DF4</span><span class="sxs-lookup"><span data-stu-id="2de2b-644">U+0DF4</span></span>|<span data-ttu-id="2de2b-645">U + D 207 et U + 207E</span><span class="sxs-lookup"><span data-stu-id="2de2b-645">U+207D and  U+207E</span></span>|<span data-ttu-id="2de2b-646">U + FE54 à U + FE61</span><span class="sxs-lookup"><span data-stu-id="2de2b-646">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="2de2b-647">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="2de2b-647">U+00AB</span></span>|<span data-ttu-id="2de2b-648">U + 0E4F à U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="2de2b-648">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="2de2b-649">U + 208D et U + 208E</span><span class="sxs-lookup"><span data-stu-id="2de2b-649">U+208D and U+208E</span></span>|<span data-ttu-id="2de2b-650">U + FE63</span><span class="sxs-lookup"><span data-stu-id="2de2b-650">U+FE63</span></span>|  
|<span data-ttu-id="2de2b-651">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="2de2b-651">U+00AD</span></span>|<span data-ttu-id="2de2b-652">U + 0F04 à U + 0F12</span><span class="sxs-lookup"><span data-stu-id="2de2b-652">U+0F04 to U+0F12</span></span>|<span data-ttu-id="2de2b-653">U + 2329 et U + 232A</span><span class="sxs-lookup"><span data-stu-id="2de2b-653">U+2329 and U+232A</span></span>|<span data-ttu-id="2de2b-654">U + FE68</span><span class="sxs-lookup"><span data-stu-id="2de2b-654">U+FE68</span></span>|  
|<span data-ttu-id="2de2b-655">U + 00B7</span><span class="sxs-lookup"><span data-stu-id="2de2b-655">U+00B7</span></span>|<span data-ttu-id="2de2b-656">U + 0F3A à U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="2de2b-656">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="2de2b-657">U + 2768 à U + 2775</span><span class="sxs-lookup"><span data-stu-id="2de2b-657">U+2768 to U+2775</span></span>|<span data-ttu-id="2de2b-658">U + FE6A et U + FE6B</span><span class="sxs-lookup"><span data-stu-id="2de2b-658">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="2de2b-659">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="2de2b-659">U+00BB</span></span>|<span data-ttu-id="2de2b-660">U + 0F85</span><span class="sxs-lookup"><span data-stu-id="2de2b-660">U+0F85</span></span>|<span data-ttu-id="2de2b-661">U + 5 27C à U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="2de2b-661">U+27C5 to U+27C6</span></span>|<span data-ttu-id="2de2b-662">U + entre FF01 à U + FF03</span><span class="sxs-lookup"><span data-stu-id="2de2b-662">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="2de2b-663">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="2de2b-663">U+00BF</span></span>|<span data-ttu-id="2de2b-664">U + 0FD0 et U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="2de2b-664">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="2de2b-665">U + 27E6 à U + 27EB</span><span class="sxs-lookup"><span data-stu-id="2de2b-665">U+27E6 to U+27EB</span></span>|<span data-ttu-id="2de2b-666">U + FF05 à U + FF0A</span><span class="sxs-lookup"><span data-stu-id="2de2b-666">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="2de2b-667">U + 037E</span><span class="sxs-lookup"><span data-stu-id="2de2b-667">U+037E</span></span>|<span data-ttu-id="2de2b-668">U + 104 à U + 104 °</span><span class="sxs-lookup"><span data-stu-id="2de2b-668">U+104A to U+104F</span></span>|<span data-ttu-id="2de2b-669">U + 2983 à U + 2998</span><span class="sxs-lookup"><span data-stu-id="2de2b-669">U+2983 to U+2998</span></span>|<span data-ttu-id="2de2b-670">U + FF0C à U + FF0F</span><span class="sxs-lookup"><span data-stu-id="2de2b-670">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="2de2b-671">U + 0387</span><span class="sxs-lookup"><span data-stu-id="2de2b-671">U+0387</span></span>|<span data-ttu-id="2de2b-672">U + 10FB</span><span class="sxs-lookup"><span data-stu-id="2de2b-672">U+10FB</span></span>|<span data-ttu-id="2de2b-673">U + 8 29D à U + 29DB</span><span class="sxs-lookup"><span data-stu-id="2de2b-673">U+29D8 to U+29DB</span></span>|<span data-ttu-id="2de2b-674">U + FF1A et U + FF1B</span><span class="sxs-lookup"><span data-stu-id="2de2b-674">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="2de2b-675">U + 055A à U + 055F</span><span class="sxs-lookup"><span data-stu-id="2de2b-675">U+055A to U+055F</span></span>|<span data-ttu-id="2de2b-676">U + 1361 à U + 1368</span><span class="sxs-lookup"><span data-stu-id="2de2b-676">U+1361 to U+1368</span></span>|<span data-ttu-id="2de2b-677">U + 29FC et U + 29FD</span><span class="sxs-lookup"><span data-stu-id="2de2b-677">U+29FC and U+29FD</span></span>|<span data-ttu-id="2de2b-678">U + FF1F et U + FF20</span><span class="sxs-lookup"><span data-stu-id="2de2b-678">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="2de2b-679">U + 0589 et U + 058A</span><span class="sxs-lookup"><span data-stu-id="2de2b-679">U+0589 and U+058A</span></span>|<span data-ttu-id="2de2b-680">U + 166D et U + 166E</span><span class="sxs-lookup"><span data-stu-id="2de2b-680">U+166D and U+166E</span></span>|<span data-ttu-id="2de2b-681">U + 2CF9 à U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="2de2b-681">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="2de2b-682">U + FF3B à U + FF3D</span><span class="sxs-lookup"><span data-stu-id="2de2b-682">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="2de2b-683">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="2de2b-683">U+05BE</span></span>|<span data-ttu-id="2de2b-684">U + 169C et U + 169C</span><span class="sxs-lookup"><span data-stu-id="2de2b-684">U+169B and U+169C</span></span>|<span data-ttu-id="2de2b-685">U + 2CFE et U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="2de2b-685">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="2de2b-686">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="2de2b-686">U+FF3F</span></span>|  
|<span data-ttu-id="2de2b-687">U + 05C 0</span><span class="sxs-lookup"><span data-stu-id="2de2b-687">U+05C0</span></span>|<span data-ttu-id="2de2b-688">U + 16EB à U + 16ED</span><span class="sxs-lookup"><span data-stu-id="2de2b-688">U+16EB to U+16ED</span></span>|<span data-ttu-id="2de2b-689">U + 2E00 à U + 2E17</span><span class="sxs-lookup"><span data-stu-id="2de2b-689">U+2E00 to U+2E17</span></span>|<span data-ttu-id="2de2b-690">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="2de2b-690">U+FF5B</span></span>|  
|<span data-ttu-id="2de2b-691">U + 05C 3</span><span class="sxs-lookup"><span data-stu-id="2de2b-691">U+05C3</span></span>|<span data-ttu-id="2de2b-692">U + 1735 et U + 1736</span><span class="sxs-lookup"><span data-stu-id="2de2b-692">U+1735 and U+1736</span></span>|<span data-ttu-id="2de2b-693">U + 2E1C et U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="2de2b-693">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="2de2b-694">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="2de2b-694">U+FF5D</span></span>|  
|<span data-ttu-id="2de2b-695">U + 05C 6</span><span class="sxs-lookup"><span data-stu-id="2de2b-695">U+05C6</span></span>|<span data-ttu-id="2de2b-696">U + 4 17D à U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="2de2b-696">U+17D4 to U+17D6</span></span>|<span data-ttu-id="2de2b-697">U + 3001 à U + 3003</span><span class="sxs-lookup"><span data-stu-id="2de2b-697">U+3001 to U+3003</span></span>|<span data-ttu-id="2de2b-698">U + FF5F à U + FF65</span><span class="sxs-lookup"><span data-stu-id="2de2b-698">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="2de2b-699">U + 05F3 et U + 05F4</span><span class="sxs-lookup"><span data-stu-id="2de2b-699">U+05F3 and U+05F4</span></span>|<span data-ttu-id="2de2b-700">U + 8 17D à U + 17DA</span><span class="sxs-lookup"><span data-stu-id="2de2b-700">U+17D8 to U+17DA</span></span>|<span data-ttu-id="2de2b-701">3008 U + à U + 3011</span><span class="sxs-lookup"><span data-stu-id="2de2b-701">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-702">L’exemple de code suivant montre <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-702">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : string * int -&gt; bool" Usage="System.char.IsPunctuation (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-703">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-703">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-704">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-704">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-705">Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des signes de ponctuation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-705">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-706">
            <see langword="true" /> si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un signe de ponctuation ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-706">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-707">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-707">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-708">Ponctuation valides sont membres des catégories suivantes dans <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, ou `OtherPunctuation`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-708">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="2de2b-709">Elles incluent des caractères avec les points de code Unicode répertoriées dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="2de2b-709">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="2de2b-710">U + 0021 à U + 0023</span><span class="sxs-lookup"><span data-stu-id="2de2b-710">U+0021 to U+0023</span></span>|<span data-ttu-id="2de2b-711">U + 060C et U + 060D</span><span class="sxs-lookup"><span data-stu-id="2de2b-711">U+060C and U+060D</span></span>|<span data-ttu-id="2de2b-712">U + 1800 à U + 180 a</span><span class="sxs-lookup"><span data-stu-id="2de2b-712">U+1800 to U+180A</span></span>|<span data-ttu-id="2de2b-713">U + 3014 à U + 301F</span><span class="sxs-lookup"><span data-stu-id="2de2b-713">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="2de2b-714">U + 0025 à U + 002 a</span><span class="sxs-lookup"><span data-stu-id="2de2b-714">U+0025 to U+002A</span></span>|<span data-ttu-id="2de2b-715">U + 061B</span><span class="sxs-lookup"><span data-stu-id="2de2b-715">U+061B</span></span>|<span data-ttu-id="2de2b-716">U + 1944 et U + 1945</span><span class="sxs-lookup"><span data-stu-id="2de2b-716">U+1944 and U+1945</span></span>|<span data-ttu-id="2de2b-717">U + 3030</span><span class="sxs-lookup"><span data-stu-id="2de2b-717">U+3030</span></span>|  
|<span data-ttu-id="2de2b-718">U + 002C à U + 002F</span><span class="sxs-lookup"><span data-stu-id="2de2b-718">U+002C to U+002F</span></span>|<span data-ttu-id="2de2b-719">U + 061E et U + 061F</span><span class="sxs-lookup"><span data-stu-id="2de2b-719">U+061E and U+061F</span></span>|<span data-ttu-id="2de2b-720">U + 19DE et U + 19DF</span><span class="sxs-lookup"><span data-stu-id="2de2b-720">U+19DE and U+19DF</span></span>|<span data-ttu-id="2de2b-721">U + 303D</span><span class="sxs-lookup"><span data-stu-id="2de2b-721">U+303D</span></span>|  
|<span data-ttu-id="2de2b-722">U + 003 a et U + 003B</span><span class="sxs-lookup"><span data-stu-id="2de2b-722">U+003A and U+003B</span></span>|<span data-ttu-id="2de2b-723">U + 066A à U + 066D</span><span class="sxs-lookup"><span data-stu-id="2de2b-723">U+066A to U+066D</span></span>|<span data-ttu-id="2de2b-724">U + 1A1E et U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="2de2b-724">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="2de2b-725">U + 30 A 0</span><span class="sxs-lookup"><span data-stu-id="2de2b-725">U+30A0</span></span>|  
|<span data-ttu-id="2de2b-726">U + 003F et U + 0040</span><span class="sxs-lookup"><span data-stu-id="2de2b-726">U+003F and U+0040</span></span>|<span data-ttu-id="2de2b-727">U + 06D 4</span><span class="sxs-lookup"><span data-stu-id="2de2b-727">U+06D4</span></span>|<span data-ttu-id="2de2b-728">U + 1B5A à U + 1B60</span><span class="sxs-lookup"><span data-stu-id="2de2b-728">U+1B5A to U+1B60</span></span>|<span data-ttu-id="2de2b-729">U + 30FB</span><span class="sxs-lookup"><span data-stu-id="2de2b-729">U+30FB</span></span>|  
|<span data-ttu-id="2de2b-730">U + 005B à U + 005D</span><span class="sxs-lookup"><span data-stu-id="2de2b-730">U+005B to U+005D</span></span>|<span data-ttu-id="2de2b-731">U + 0700 à U + D 070</span><span class="sxs-lookup"><span data-stu-id="2de2b-731">U+0700 to U+070D</span></span>|<span data-ttu-id="2de2b-732">U + 2010 à U + 2027</span><span class="sxs-lookup"><span data-stu-id="2de2b-732">U+2010 to U+2027</span></span>|<span data-ttu-id="2de2b-733">U + A874 à U + A877</span><span class="sxs-lookup"><span data-stu-id="2de2b-733">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="2de2b-734">U + 005F</span><span class="sxs-lookup"><span data-stu-id="2de2b-734">U+005F</span></span>|<span data-ttu-id="2de2b-735">U + 07F7 à U + 07F9</span><span class="sxs-lookup"><span data-stu-id="2de2b-735">U+07F7 to U+07F9</span></span>|<span data-ttu-id="2de2b-736">U + 2030 à U + 2043</span><span class="sxs-lookup"><span data-stu-id="2de2b-736">U+2030 to U+2043</span></span>|<span data-ttu-id="2de2b-737">U + FD3E et U + FD3F</span><span class="sxs-lookup"><span data-stu-id="2de2b-737">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="2de2b-738">U + 007B</span><span class="sxs-lookup"><span data-stu-id="2de2b-738">U+007B</span></span>|<span data-ttu-id="2de2b-739">U + 0964 et U + 0965</span><span class="sxs-lookup"><span data-stu-id="2de2b-739">U+0964 and U+0965</span></span>|<span data-ttu-id="2de2b-740">U + 2045 à U + 2051</span><span class="sxs-lookup"><span data-stu-id="2de2b-740">U+2045 to U+2051</span></span>|<span data-ttu-id="2de2b-741">U + FE10 à U + FE19</span><span class="sxs-lookup"><span data-stu-id="2de2b-741">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="2de2b-742">U + 007D</span><span class="sxs-lookup"><span data-stu-id="2de2b-742">U+007D</span></span>|<span data-ttu-id="2de2b-743">U + 0970</span><span class="sxs-lookup"><span data-stu-id="2de2b-743">U+0970</span></span>|<span data-ttu-id="2de2b-744">2053 U + à U + 205E</span><span class="sxs-lookup"><span data-stu-id="2de2b-744">U+2053 to U+205E</span></span>|<span data-ttu-id="2de2b-745">U + FE30 à U + FE52</span><span class="sxs-lookup"><span data-stu-id="2de2b-745">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="2de2b-746">U + 00 A 1</span><span class="sxs-lookup"><span data-stu-id="2de2b-746">U+00A1</span></span>|<span data-ttu-id="2de2b-747">U + 0DF4</span><span class="sxs-lookup"><span data-stu-id="2de2b-747">U+0DF4</span></span>|<span data-ttu-id="2de2b-748">U + D 207 et U + 207E</span><span class="sxs-lookup"><span data-stu-id="2de2b-748">U+207D and  U+207E</span></span>|<span data-ttu-id="2de2b-749">U + FE54 à U + FE61</span><span class="sxs-lookup"><span data-stu-id="2de2b-749">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="2de2b-750">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="2de2b-750">U+00AB</span></span>|<span data-ttu-id="2de2b-751">U + 0E4F à U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="2de2b-751">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="2de2b-752">U + 208D et U + 208E</span><span class="sxs-lookup"><span data-stu-id="2de2b-752">U+208D and U+208E</span></span>|<span data-ttu-id="2de2b-753">U + FE63</span><span class="sxs-lookup"><span data-stu-id="2de2b-753">U+FE63</span></span>|  
|<span data-ttu-id="2de2b-754">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="2de2b-754">U+00AD</span></span>|<span data-ttu-id="2de2b-755">U + 0F04 à U + 0F12</span><span class="sxs-lookup"><span data-stu-id="2de2b-755">U+0F04 to U+0F12</span></span>|<span data-ttu-id="2de2b-756">U + 2329 et U + 232A</span><span class="sxs-lookup"><span data-stu-id="2de2b-756">U+2329 and U+232A</span></span>|<span data-ttu-id="2de2b-757">U + FE68</span><span class="sxs-lookup"><span data-stu-id="2de2b-757">U+FE68</span></span>|  
|<span data-ttu-id="2de2b-758">U + 00B7</span><span class="sxs-lookup"><span data-stu-id="2de2b-758">U+00B7</span></span>|<span data-ttu-id="2de2b-759">U + 0F3A à U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="2de2b-759">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="2de2b-760">U + 2768 à U + 2775</span><span class="sxs-lookup"><span data-stu-id="2de2b-760">U+2768 to U+2775</span></span>|<span data-ttu-id="2de2b-761">U + FE6A et U + FE6B</span><span class="sxs-lookup"><span data-stu-id="2de2b-761">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="2de2b-762">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="2de2b-762">U+00BB</span></span>|<span data-ttu-id="2de2b-763">U + 0F85</span><span class="sxs-lookup"><span data-stu-id="2de2b-763">U+0F85</span></span>|<span data-ttu-id="2de2b-764">U + 5 27C à U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="2de2b-764">U+27C5 to U+27C6</span></span>|<span data-ttu-id="2de2b-765">U + entre FF01 à U + FF03</span><span class="sxs-lookup"><span data-stu-id="2de2b-765">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="2de2b-766">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="2de2b-766">U+00BF</span></span>|<span data-ttu-id="2de2b-767">U + 0FD0 et U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="2de2b-767">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="2de2b-768">U + 27E6 à U + 27EB</span><span class="sxs-lookup"><span data-stu-id="2de2b-768">U+27E6 to U+27EB</span></span>|<span data-ttu-id="2de2b-769">U + FF05 à U + FF0A</span><span class="sxs-lookup"><span data-stu-id="2de2b-769">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="2de2b-770">U + 037E</span><span class="sxs-lookup"><span data-stu-id="2de2b-770">U+037E</span></span>|<span data-ttu-id="2de2b-771">U + 104 à U + 104 °</span><span class="sxs-lookup"><span data-stu-id="2de2b-771">U+104A to U+104F</span></span>|<span data-ttu-id="2de2b-772">U + 2983 à U + 2998</span><span class="sxs-lookup"><span data-stu-id="2de2b-772">U+2983 to U+2998</span></span>|<span data-ttu-id="2de2b-773">U + FF0C à U + FF0F</span><span class="sxs-lookup"><span data-stu-id="2de2b-773">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="2de2b-774">U + 0387</span><span class="sxs-lookup"><span data-stu-id="2de2b-774">U+0387</span></span>|<span data-ttu-id="2de2b-775">U + 10FB</span><span class="sxs-lookup"><span data-stu-id="2de2b-775">U+10FB</span></span>|<span data-ttu-id="2de2b-776">U + 8 29D à U + 29DB</span><span class="sxs-lookup"><span data-stu-id="2de2b-776">U+29D8 to U+29DB</span></span>|<span data-ttu-id="2de2b-777">U + FF1A et U + FF1B</span><span class="sxs-lookup"><span data-stu-id="2de2b-777">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="2de2b-778">U + 055A à U + 055F</span><span class="sxs-lookup"><span data-stu-id="2de2b-778">U+055A to U+055F</span></span>|<span data-ttu-id="2de2b-779">U + 1361 à U + 1368</span><span class="sxs-lookup"><span data-stu-id="2de2b-779">U+1361 to U+1368</span></span>|<span data-ttu-id="2de2b-780">U + 29FC et U + 29FD</span><span class="sxs-lookup"><span data-stu-id="2de2b-780">U+29FC and U+29FD</span></span>|<span data-ttu-id="2de2b-781">U + FF1F et U + FF20</span><span class="sxs-lookup"><span data-stu-id="2de2b-781">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="2de2b-782">U + 0589 et U + 058A</span><span class="sxs-lookup"><span data-stu-id="2de2b-782">U+0589 and U+058A</span></span>|<span data-ttu-id="2de2b-783">U + 166D et U + 166E</span><span class="sxs-lookup"><span data-stu-id="2de2b-783">U+166D and U+166E</span></span>|<span data-ttu-id="2de2b-784">U + 2CF9 à U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="2de2b-784">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="2de2b-785">U + FF3B à U + FF3D</span><span class="sxs-lookup"><span data-stu-id="2de2b-785">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="2de2b-786">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="2de2b-786">U+05BE</span></span>|<span data-ttu-id="2de2b-787">U + 169C et U + 169C</span><span class="sxs-lookup"><span data-stu-id="2de2b-787">U+169B and U+169C</span></span>|<span data-ttu-id="2de2b-788">U + 2CFE et U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="2de2b-788">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="2de2b-789">U + FF3F</span><span class="sxs-lookup"><span data-stu-id="2de2b-789">U+FF3F</span></span>|  
|<span data-ttu-id="2de2b-790">U + 05C 0</span><span class="sxs-lookup"><span data-stu-id="2de2b-790">U+05C0</span></span>|<span data-ttu-id="2de2b-791">U + 16EB à U + 16ED</span><span class="sxs-lookup"><span data-stu-id="2de2b-791">U+16EB to U+16ED</span></span>|<span data-ttu-id="2de2b-792">U + 2E00 à U + 2E17</span><span class="sxs-lookup"><span data-stu-id="2de2b-792">U+2E00 to U+2E17</span></span>|<span data-ttu-id="2de2b-793">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="2de2b-793">U+FF5B</span></span>|  
|<span data-ttu-id="2de2b-794">U + 05C 3</span><span class="sxs-lookup"><span data-stu-id="2de2b-794">U+05C3</span></span>|<span data-ttu-id="2de2b-795">U + 1735 et U + 1736</span><span class="sxs-lookup"><span data-stu-id="2de2b-795">U+1735 and U+1736</span></span>|<span data-ttu-id="2de2b-796">U + 2E1C et U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="2de2b-796">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="2de2b-797">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="2de2b-797">U+FF5D</span></span>|  
|<span data-ttu-id="2de2b-798">U + 05C 6</span><span class="sxs-lookup"><span data-stu-id="2de2b-798">U+05C6</span></span>|<span data-ttu-id="2de2b-799">U + 4 17D à U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="2de2b-799">U+17D4 to U+17D6</span></span>|<span data-ttu-id="2de2b-800">U + 3001 à U + 3003</span><span class="sxs-lookup"><span data-stu-id="2de2b-800">U+3001 to U+3003</span></span>|<span data-ttu-id="2de2b-801">U + FF5F à U + FF65</span><span class="sxs-lookup"><span data-stu-id="2de2b-801">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="2de2b-802">U + 05F3 et U + 05F4</span><span class="sxs-lookup"><span data-stu-id="2de2b-802">U+05F3 and U+05F4</span></span>|<span data-ttu-id="2de2b-803">U + 8 17D à U + 17DA</span><span class="sxs-lookup"><span data-stu-id="2de2b-803">U+17D8 to U+17DA</span></span>|<span data-ttu-id="2de2b-804">3008 U + à U + 3011</span><span class="sxs-lookup"><span data-stu-id="2de2b-804">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-805">L’exemple de code suivant montre <xref:System.Char.IsPunctuation%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-805">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-806">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-806">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-807">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-807">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSeparator">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-808">Indique si un caractère Unicode est classé dans la catégorie des caractères de séparation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-808">Indicates whether a Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-809">La norme Unicode reconnaît trois sous-catégories de séparateurs :</span><span class="sxs-lookup"><span data-stu-id="2de2b-809">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="2de2b-810">Séparateurs d’espace (le <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> catégorie), qui inclut des caractères tels que \u0020.</span><span class="sxs-lookup"><span data-stu-id="2de2b-810">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="2de2b-811">Séparateurs de ligne (le <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> catégorie), qui incluent \u2028.</span><span class="sxs-lookup"><span data-stu-id="2de2b-811">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="2de2b-812">Séparateurs de paragraphe (le <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> catégorie), qui incluent \u2029.</span><span class="sxs-lookup"><span data-stu-id="2de2b-812">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2de2b-813">La norme Unicode classifie les caractères \u000A (saut de ligne), \u000C (FF) et \u000D (CR) comme caractères de contrôle (membres de la <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> catégorie), et non comme caractères de séparation.</span><span class="sxs-lookup"><span data-stu-id="2de2b-813">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(char c);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : char -&gt; bool" Usage="System.char.IsSeparator c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-814">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-814">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-815">Indique si le caractère Unicode spécifié est classé dans la catégorie des caractères de séparation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-815">Indicates whether the specified Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-816">
            <see langword="true" /> si <paramref name="c" /> est un caractère de séparation ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-816">
              <see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-817">La norme Unicode reconnaît trois sous-catégories de séparateurs :</span><span class="sxs-lookup"><span data-stu-id="2de2b-817">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="2de2b-818">Séparateurs d’espace (le <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> catégorie), qui inclut des caractères tels que \u0020.</span><span class="sxs-lookup"><span data-stu-id="2de2b-818">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="2de2b-819">Séparateurs de ligne (le <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> catégorie), qui incluent \u2028.</span><span class="sxs-lookup"><span data-stu-id="2de2b-819">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="2de2b-820">Séparateurs de paragraphe (le <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> catégorie), qui incluent \u2029.</span><span class="sxs-lookup"><span data-stu-id="2de2b-820">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2de2b-821">La norme Unicode classifie les caractères \u000A (saut de ligne), \u000C (FF) et \u000D (CR) comme caractères de contrôle (membres de la <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> catégorie), et non comme caractères de séparation.</span><span class="sxs-lookup"><span data-stu-id="2de2b-821">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-822">L’exemple suivant liste les <xref:System.Char> les objets qui sont classés comme caractères de séparation.</span><span class="sxs-lookup"><span data-stu-id="2de2b-822">The following example lists the <xref:System.Char> objects that are classified as separator characters.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]
 [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]
 [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : string * int -&gt; bool" Usage="System.char.IsSeparator (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-823">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-823">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-824">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-824">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-825">Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des caractères de séparation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-825">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-826">
            <see langword="true" /> si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un caractère de séparation ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-826">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-827">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-827">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-828">La norme Unicode reconnaît trois sous-catégories de séparateurs :</span><span class="sxs-lookup"><span data-stu-id="2de2b-828">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="2de2b-829">Séparateurs d’espace (le <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> catégorie), qui inclut des caractères tels que \u0020.</span><span class="sxs-lookup"><span data-stu-id="2de2b-829">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="2de2b-830">Séparateurs de ligne (le <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> catégorie), qui incluent \u2028.</span><span class="sxs-lookup"><span data-stu-id="2de2b-830">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="2de2b-831">Séparateurs de paragraphe (le <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> catégorie), qui incluent \u2029.</span><span class="sxs-lookup"><span data-stu-id="2de2b-831">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2de2b-832">La norme Unicode classifie les caractères \u000A (saut de ligne), \u000C (FF) et \u000D (CR) comme caractères de contrôle (membres de la <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> catégorie), et non comme caractères de séparation.</span><span class="sxs-lookup"><span data-stu-id="2de2b-832">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-833">L’exemple suivant montre <xref:System.Char.IsSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-833">The following example demonstrates <xref:System.Char.IsSeparator%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]
 [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]
 [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-834">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-834">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-835">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-835">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-836">Indique si un caractère possède une unité de code de substitution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-836">Indicates whether a character has a surrogate code unit.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : char -&gt; bool" Usage="System.char.IsSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-837">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-837">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-838">Indique si le caractère spécifié possède une unité de code de substitution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-838">Indicates whether the specified character has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-839">
            <see langword="true" /> si <paramref name="c" /> est un substitut étendu ou faible ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-839">
              <see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-840">Un substitut est un <xref:System.Char> objet avec une unité de code UTF-16 dans la plage comprise entre U + D800 à U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="2de2b-840">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="2de2b-841">Chaque caractère d’une unité de code dans cette plage appartient à la <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-841">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="2de2b-842">L’unité de code de substitution individuel n’a aucune interprétation propre, mais sens uniquement lorsqu’il est utilisé dans le cadre d’une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="2de2b-842">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="2de2b-843">Pour plus d’informations sur les paires de substitution, consultez la norme Unicode à le [page d’accueil Unicode](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="2de2b-843">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-844">L’exemple suivant montre le <xref:System.Char.IsSurrogate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2de2b-844">The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : string * int -&gt; bool" Usage="System.char.IsSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-845">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-845">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-846">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-846">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-847">Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée possède une unité de code de substitution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-847">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-848">
            <see langword="true" /> si le caractère à la position <paramref name="index" /> dans <paramref name="s" /> est un substitut étendu ou faible ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-848">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-849">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-849">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-850">Un substitut est un <xref:System.Char> objet avec une unité de code UTF-16 dans la plage comprise entre U + D800 à U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="2de2b-850">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="2de2b-851">Chaque caractère d’une unité de code dans cette plage appartient à la <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> catégorie.</span><span class="sxs-lookup"><span data-stu-id="2de2b-851">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="2de2b-852">L’unité de code de substitution individuel n’a aucune interprétation propre, mais sens uniquement lorsqu’il est utilisé dans le cadre d’une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="2de2b-852">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="2de2b-853">Pour plus d’informations sur les paires de substitution, consultez la norme Unicode à le [page d’accueil Unicode](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="2de2b-853">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-854">L’exemple de code suivant montre <xref:System.Char.IsSurrogate%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-854">The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-855">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-855">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-856">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-856">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogatePair">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-857">Indique si deux objets <see cref="T:System.Char" /> spécifiés forment une paire de substitution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-857">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (highSurrogate As Char, lowSurrogate As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : char * char -&gt; bool" Usage="System.char.IsSurrogatePair (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="2de2b-858">Caractère à évaluer comme substitut étendu d'une paire de substitution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-858">The character to evaluate as the high surrogate of a surrogate pair.</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="2de2b-859">Caractère à évaluer comme substitut faible d'une paire de substitution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-859">The character to evaluate as the low surrogate of a surrogate pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-860">Indique si les deux objets <see cref="T:System.Char" /> spécifiés forment une paire de substitution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-860">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-861">
            <see langword="true" /> si la valeur numérique du paramètre <paramref name="highSurrogate" /> est comprise entre U+D800 et U+DBFF, et si la valeur numérique du paramètre <paramref name="lowSurrogate" /> est comprise entre U+DC00 et U+DFFF ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-861">
              <see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-862">En règle générale, un seul caractère est représenté par une seule unité de code Unicode 16 bits.</span><span class="sxs-lookup"><span data-stu-id="2de2b-862">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="2de2b-863">Encodage UTF-16 prend également en charge les paires de substitution, permettant à un seul caractère abstrait être représentée par deux unités de code 16 bits.</span><span class="sxs-lookup"><span data-stu-id="2de2b-863">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="2de2b-864">La première unité de code, dont la valeur peut être comprise entre U + D800 et U + DBFF, est un substitut étendu.</span><span class="sxs-lookup"><span data-stu-id="2de2b-864">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="2de2b-865">La deuxième unité de code, dont la valeur peut être comprise entre U + DC00 et U + DFFF, est le substitut faible.</span><span class="sxs-lookup"><span data-stu-id="2de2b-865">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="2de2b-866">Les points de code de substitution individuels n’ont aucune interprétation de leurs propres.</span><span class="sxs-lookup"><span data-stu-id="2de2b-866">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="2de2b-867">Pour plus d’informations sur les substituts et la norme Unicode, consultez le [page d’accueil Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="2de2b-867">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-868">L’exemple de code suivant montre le <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, et <xref:System.Char.IsSurrogatePair%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="2de2b-868">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : string * int -&gt; bool" Usage="System.char.IsSurrogatePair (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-869">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-869">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-870">Position de départ de la paire de caractères à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-870">The starting position of the pair of characters to evaluate within <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-871">Indique si deux objets <see cref="T:System.Char" /> adjacents à une position spécifiée dans une chaîne forment une paire de substitution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-871">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-872">
            <see langword="true" /> si le paramètre <paramref name="s" /> inclut des caractères adjacents aux positions <paramref name="index" /> et <paramref name="index" /> + 1, et que la valeur numérique du caractère à la position <paramref name="index" /> est comprise entre U+D800 et U+DBFF, et que la valeur numérique du caractère à la position <paramref name="index" />+1 est comprise entre U+DC00 et U+DFFF ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-872">
              <see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-873">En règle générale, un seul caractère est représenté par une seule unité de code Unicode 16 bits.</span><span class="sxs-lookup"><span data-stu-id="2de2b-873">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="2de2b-874">Encodage UTF-16 prend également en charge les paires de substitution, permettant à un seul caractère abstrait être représentée par deux unités de code 16 bits.</span><span class="sxs-lookup"><span data-stu-id="2de2b-874">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="2de2b-875">La première unité de code, dont la valeur peut être comprise entre U + D800 et U + DBFF, est un substitut étendu.</span><span class="sxs-lookup"><span data-stu-id="2de2b-875">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="2de2b-876">La deuxième unité de code, dont la valeur peut être comprise entre U + DC00 et U + DFFF, est le substitut faible.</span><span class="sxs-lookup"><span data-stu-id="2de2b-876">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="2de2b-877">Les points de code de substitution individuels n’ont aucune interprétation de leurs propres.</span><span class="sxs-lookup"><span data-stu-id="2de2b-877">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="2de2b-878">Pour plus d’informations sur les substituts et la norme Unicode, consultez le [page d’accueil Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="2de2b-878">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-879">L’exemple de code suivant montre le <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, et <xref:System.Char.IsSurrogatePair%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="2de2b-879">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-880">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-880">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-881">
            <paramref name="index" /> n’est pas une position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-881">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSymbol">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-882">Indique si un caractère Unicode est classé dans la catégorie des symboles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-882">Indicates whether a Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-883">Symboles valides sont membres des catégories suivantes dans <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, et `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-883">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="2de2b-884">Symboles dans la norme Unicode sont un ensemble défini de faiblement de caractères qui incluent les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="2de2b-884">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="2de2b-885">Symboles monétaires.</span><span class="sxs-lookup"><span data-stu-id="2de2b-885">Currency symbols.</span></span>  
  
-   <span data-ttu-id="2de2b-886">Symboles de type lettre, qui comprennent un ensemble de symboles d’alphanumériques mathématiques, ainsi que des symboles tels que ℅, № et™.</span><span class="sxs-lookup"><span data-stu-id="2de2b-886">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="2de2b-887">Plusieurs formes, telles que des exposants et indices.</span><span class="sxs-lookup"><span data-stu-id="2de2b-887">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="2de2b-888">Opérateurs mathématiques et des flèches.</span><span class="sxs-lookup"><span data-stu-id="2de2b-888">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="2de2b-889">Symboles géométriques.</span><span class="sxs-lookup"><span data-stu-id="2de2b-889">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="2de2b-890">Symboles techniques.</span><span class="sxs-lookup"><span data-stu-id="2de2b-890">Technical symbols.</span></span>  
  
-   <span data-ttu-id="2de2b-891">Motifs en braille.</span><span class="sxs-lookup"><span data-stu-id="2de2b-891">Braille patterns.</span></span>  
  
-   <span data-ttu-id="2de2b-892">Casseau.</span><span class="sxs-lookup"><span data-stu-id="2de2b-892">Dingbats.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(char c);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : char -&gt; bool" Usage="System.char.IsSymbol c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-893">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-893">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-894">Indique si le caractère Unicode spécifié est classé dans la catégorie des symboles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-894">Indicates whether the specified Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-895">
            <see langword="true" /> si <paramref name="c" /> est un symbole ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-895">
              <see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-896">Symboles valides sont membres des catégories suivantes dans <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, et `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-896">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="2de2b-897">Symboles dans la norme Unicode sont un ensemble défini de faiblement de caractères qui incluent les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="2de2b-897">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="2de2b-898">Symboles monétaires.</span><span class="sxs-lookup"><span data-stu-id="2de2b-898">Currency symbols.</span></span>  
  
-   <span data-ttu-id="2de2b-899">Symboles de type lettre, qui comprennent un ensemble de symboles d’alphanumériques mathématiques, ainsi que des symboles tels que ℅, № et™.</span><span class="sxs-lookup"><span data-stu-id="2de2b-899">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="2de2b-900">Plusieurs formes, telles que des exposants et indices.</span><span class="sxs-lookup"><span data-stu-id="2de2b-900">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="2de2b-901">Opérateurs mathématiques et des flèches.</span><span class="sxs-lookup"><span data-stu-id="2de2b-901">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="2de2b-902">Symboles géométriques.</span><span class="sxs-lookup"><span data-stu-id="2de2b-902">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="2de2b-903">Symboles techniques.</span><span class="sxs-lookup"><span data-stu-id="2de2b-903">Technical symbols.</span></span>  
  
-   <span data-ttu-id="2de2b-904">Motifs en braille.</span><span class="sxs-lookup"><span data-stu-id="2de2b-904">Braille patterns.</span></span>  
  
-   <span data-ttu-id="2de2b-905">Casseau.</span><span class="sxs-lookup"><span data-stu-id="2de2b-905">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-906">L’exemple de code suivant montre <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-906">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : string * int -&gt; bool" Usage="System.char.IsSymbol (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-907">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-907">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-908">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-908">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-909">Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des symboles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-909">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-910">
            <see langword="true" /> si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un symbole ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-910">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-911">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-911">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-912">Symboles valides sont membres des catégories suivantes dans <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, et `OtherSymbol`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-912">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="2de2b-913">Symboles dans la norme Unicode sont un ensemble défini de faiblement de caractères qui incluent les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="2de2b-913">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="2de2b-914">Symboles monétaires.</span><span class="sxs-lookup"><span data-stu-id="2de2b-914">Currency symbols.</span></span>  
  
-   <span data-ttu-id="2de2b-915">Symboles de type lettre, qui comprennent un ensemble de symboles d’alphanumériques mathématiques, ainsi que des symboles tels que ℅, № et™.</span><span class="sxs-lookup"><span data-stu-id="2de2b-915">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="2de2b-916">Plusieurs formes, telles que des exposants et indices.</span><span class="sxs-lookup"><span data-stu-id="2de2b-916">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="2de2b-917">Opérateurs mathématiques et des flèches.</span><span class="sxs-lookup"><span data-stu-id="2de2b-917">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="2de2b-918">Symboles géométriques.</span><span class="sxs-lookup"><span data-stu-id="2de2b-918">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="2de2b-919">Symboles techniques.</span><span class="sxs-lookup"><span data-stu-id="2de2b-919">Technical symbols.</span></span>  
  
-   <span data-ttu-id="2de2b-920">Motifs en braille.</span><span class="sxs-lookup"><span data-stu-id="2de2b-920">Braille patterns.</span></span>  
  
-   <span data-ttu-id="2de2b-921">Casseau.</span><span class="sxs-lookup"><span data-stu-id="2de2b-921">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-922">L’exemple de code suivant montre <xref:System.Char.IsSymbol%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-922">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-923">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-923">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-924">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-924">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-925">Indique si un caractère Unicode est classé dans la catégorie des lettres majuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-925">Indicates whether a Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(char c);" />
      <MemberSignature Language="F#" Value="static member IsUpper : char -&gt; bool" Usage="System.char.IsUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-926">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-926">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-927">Indique si le caractère Unicode spécifié est classé dans la catégorie des lettres majuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-927">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-928">
            <see langword="true" /> si <paramref name="c" /> est une lettre majuscule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-928">
              <see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-929">Majuscules valides sont membres de la catégorie suivante dans <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-929">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsLower(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsUpper : string * int -&gt; bool" Usage="System.char.IsUpper (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-930">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-930">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-931">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-931">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-932">Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des majuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-932">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-933">
            <see langword="true" /> si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est une lettre majuscule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-933">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-934">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-934">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-935">Majuscules valides sont membres de la catégorie suivante dans <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-935">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-936">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-936">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-937">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-937">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWhiteSpace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-938">Indique si un caractère Unicode est classé dans la catégorie des espaces blancs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-938">Indicates whether a Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-939">Caractères d’espace blanc sont les caractères Unicode suivants :</span><span class="sxs-lookup"><span data-stu-id="2de2b-939">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="2de2b-940">Membres de la <xref:System.Globalization.UnicodeCategory.SpaceSeparator> catégorie, qui comprend les caractères espacement (U + 0020), espace d’OGAM marquer (U + 1680), EN quatre (U + 2000), EM quadruple (U + 2001), EN l’espace (U + 2002), EM (U + 2003), l’espace trois-cadratin (U + 2004), quatre-cadratin (U + 2005), SIX par EM ESPACE (U + 2006), FIGURE espace (U + 2007), signes de ponctuation (U + 2008), l’espace dynamique espace (U + 2009), espace cheveux (U + 200 a), espace insécable étroite (U + 202F), espace moyenne mathématique (U + 205F) et espace IDÉOGRAPHIQUE (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="2de2b-940">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="2de2b-941">Membres de la <xref:System.Globalization.UnicodeCategory.LineSeparator> catégorie, qui se compose uniquement du caractère séparateur de ligne (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="2de2b-941">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="2de2b-942">Membres de la <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> catégorie, qui se compose uniquement du caractère séparateur de paragraphe (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="2de2b-942">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="2de2b-943">Les caractères de tabulation horizontale (U + 0009), saut de ligne (U + 000D), tabulation horizontale (U + 000C) de la ligne, saut de page (U + 000C), le retour chariot (U + 000D), ensuite de ligne (U + 0085) et espace insécable (U + 00 a 0).</span><span class="sxs-lookup"><span data-stu-id="2de2b-943">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), NEXT LINE (U+0085), and NO-BREAK SPACE (U+00A0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(char c);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : char -&gt; bool" Usage="System.char.IsWhiteSpace c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-944">Caractère Unicode à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-944">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-945">Indique si le caractère Unicode spécifié est classé dans la catégorie des espaces blancs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-945">Indicates whether the specified Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-946">
            <see langword="true" /> si <paramref name="c" /> est un espace blanc ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-946">
              <see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-947">Caractères d’espace blanc sont les caractères Unicode suivants :</span><span class="sxs-lookup"><span data-stu-id="2de2b-947">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="2de2b-948">Membres de la <xref:System.Globalization.UnicodeCategory.SpaceSeparator> catégorie, qui inclut les caractères espace (U + 0020), espace insécable (U + 00 a 0), marquer d’espace OGAM (U + 1680), EN quatre (U + 2000), EM quadruple (U + 2001), EN espace (U + 2002), EM (U + 2003), l’espace trois-cadratin (U + 2004), quatre-cadratin ( U+ 2005), SIX-cadratin (U + 2006), espace de FIGURE (U + 2007), signes de ponctuation (U + 2008), l’espace dynamique (U + 2009), l’espace cheveux espace (U + 200 a), espace insécable étroite (U + 202F), espace moyenne mathématique (U + 205F) et espace IDÉOGRAPHIQUE (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="2de2b-948">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="2de2b-949">Membres de la <xref:System.Globalization.UnicodeCategory.LineSeparator> catégorie, qui se compose uniquement du caractère séparateur de ligne (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="2de2b-949">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="2de2b-950">Membres de la <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> catégorie, qui se compose uniquement du caractère séparateur de paragraphe (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="2de2b-950">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="2de2b-951">Les caractères de tabulation horizontale (U + 0009), ligne flux (U + 000D), tabulation horizontale (U + 000C) de la ligne, saut de page (U + 000C), le retour chariot (U + 000D) et ensuite de ligne (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="2de2b-951">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-952">L’exemple suivant montre le <xref:System.Char.IsWhiteSpace%28System.Char%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2de2b-952">The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : string * int -&gt; bool" Usage="System.char.IsWhiteSpace (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-953">Chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-953">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2de2b-954">Position du caractère à évaluer dans <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-954">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-955">Indique si le caractère figurant à la position spécifiée dans une chaîne spécifiée est classé dans la catégorie des espaces blancs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-955">Indicates whether the character at the specified position in a specified string is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-956">
            <see langword="true" /> si le caractère situé à la position <paramref name="index" /> dans <paramref name="s" /> est un espace blanc ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-956">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-957">Positions des caractères dans une chaîne sont indexées à partir de zéro.</span><span class="sxs-lookup"><span data-stu-id="2de2b-957">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="2de2b-958">Caractères d’espace blanc sont les caractères Unicode suivants :</span><span class="sxs-lookup"><span data-stu-id="2de2b-958">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="2de2b-959">Membres de la <xref:System.Globalization.UnicodeCategory.SpaceSeparator> catégorie, qui inclut les caractères espace (U + 0020), espace insécable (U + 00 a 0), marquer d’espace OGAM (U + 1680), EN quatre (U + 2000), EM quadruple (U + 2001), EN espace (U + 2002), EM (U + 2003), l’espace trois-cadratin (U + 2004), quatre-cadratin ( U+ 2005), SIX-cadratin (U + 2006), espace de FIGURE (U + 2007), signes de ponctuation (U + 2008), l’espace dynamique (U + 2009), l’espace cheveux espace (U + 200 a), espace insécable étroite (U + 202F), espace moyenne mathématique (U + 205F) et espace IDÉOGRAPHIQUE (U + 3000).</span><span class="sxs-lookup"><span data-stu-id="2de2b-959">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="2de2b-960">Membres de la <xref:System.Globalization.UnicodeCategory.LineSeparator> catégorie, qui se compose uniquement du caractère séparateur de ligne (U + 2028).</span><span class="sxs-lookup"><span data-stu-id="2de2b-960">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="2de2b-961">Membres de la <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> catégorie, qui se compose uniquement du caractère séparateur de paragraphe (U + 2029).</span><span class="sxs-lookup"><span data-stu-id="2de2b-961">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="2de2b-962">Les caractères de tabulation horizontale (U + 0009), ligne flux (U + 000D), tabulation horizontale (U + 000C) de la ligne, saut de page (U + 000C), le retour chariot (U + 000D) et ensuite de ligne (U + 0085).</span><span class="sxs-lookup"><span data-stu-id="2de2b-962">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-963">L’exemple de code suivant montre <xref:System.Char.IsWhiteSpace%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-963">The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-964">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-964">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2de2b-965">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la dernière position dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-965">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : char" Usage="System.char.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-966">Représente la plus grande valeur possible d'un <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-966">Represents the largest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="2de2b-967">Ce champ est constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-967">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-968">La valeur de cette constante est 0xFFFF hexadécimal.</span><span class="sxs-lookup"><span data-stu-id="2de2b-968">The value of this constant is hexadecimal 0xFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : char" Usage="System.char.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-969">Représente la plus petite valeur possible de <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-969">Represents the smallest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="2de2b-970">Ce champ est constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-970">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-971">La valeur de cette constante est 0 x 00 hexadécimal.</span><span class="sxs-lookup"><span data-stu-id="2de2b-971">The value of this constant is hexadecimal 0x00.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static char Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; char" Usage="System.char.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-972">Chaîne qui contient un seul caractère, ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-972">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-973">Convertit la valeur de la chaîne spécifiée en caractère Unicode équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-973">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-974">Caractère Unicode équivalant au caractère unique dans <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-974">A Unicode character equivalent to the sole character in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2de2b-975">L’exemple de code suivant montre <xref:System.Char.Parse%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-975">The following code example demonstrates <xref:System.Char.Parse%2A>.</span></span>  
  
 [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]
 [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]
 [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-976">
            <paramref name="s" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-976">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2de2b-977">La longueur de <paramref name="s" /> n'est pas 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-977">The length of <paramref name="s" /> is not 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-978">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-978">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-979">**Remarque** Cette conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-979">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="2de2b-980">Toute tentative de ce type lève <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-980">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-981">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-981">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="2de2b-982">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-982">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="2de2b-983">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-983">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-984">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-984">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-985">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-985">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-986">Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-986">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-987">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="2de2b-987">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2de2b-988">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Char> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-988">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2de2b-989">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="2de2b-989">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-990">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-990">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-991">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-991">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-992">Valeur de l'objet <see cref="T:System.Char" /> actuel inchangée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-992">The value of the current <see cref="T:System.Char" /> object unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-993">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="2de2b-993">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2de2b-994">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Char> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-994">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-995">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-995">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-996">**Remarque** Cette conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-996">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="2de2b-997">Toute tentative de ce type lève <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-997">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-998">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-998">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="2de2b-999">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-999">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-1000">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1000">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1001">**Remarque** Cette conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1001">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="2de2b-1002">Toute tentative de ce type lève <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1002">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1003">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1003">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="2de2b-1004">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1004">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-1005">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1005">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1006">**Remarque** Cette conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1006">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="2de2b-1007">Toute tentative de ce type lève <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1007">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1008">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1008">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="2de2b-1009">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1009">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-1010">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1010">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1011">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1011">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1012">Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1012">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1013">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1013">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2de2b-1014">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Char> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1014">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2de2b-1015">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1015">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-1016">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1016">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1017">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1017">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1018">Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1018">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1019">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1019">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2de2b-1020">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Char> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1020">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2de2b-1021">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1021">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-1022">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1022">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1023">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1023">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1024">Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1024">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1025">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1025">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2de2b-1026">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Char> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1026">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2de2b-1027">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1027">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-1028">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1028">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1029">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1029">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1030">Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1030">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1031">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1031">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2de2b-1032">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Char> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1032">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2de2b-1033">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1033">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-1034">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1034">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1035">**Remarque** Cette conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1035">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="2de2b-1036">Toute tentative de ce type lève <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1036">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1037">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1037">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="2de2b-1038">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1038">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2de2b-1039">Objet <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1039">A <see cref="T:System.Type" /> object.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="2de2b-1040">Objet <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1040">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1041">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1041">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1042">Objet du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1042">An object of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1043">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1043">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2de2b-1044">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Char> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1044">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2de2b-1045">L’alternative recommandée consiste à appeler le <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1045">The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-1046">
            <paramref name="type" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1046">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="2de2b-1047">La valeur de l'objet <see cref="T:System.Char" /> en cours ne peut pas être convertie dans le type spécifié par le paramètre <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1047">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-1048">Objet <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1048">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="2de2b-1049">(Spécifiez <see langword="null" />, car le paramètre <c>provider</c> est ignoré.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1049">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1050">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1050">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1051">Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1051">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1052">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1052">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2de2b-1053">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Char> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1053">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2de2b-1054">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1054">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-1055">Objet <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1055">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="2de2b-1056">(Spécifiez <see langword="null" />, car le paramètre <c>provider</c> est ignoré.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1056">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1057">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1057">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1058">Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1058">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1059">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1059">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2de2b-1060">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Char> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1060">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2de2b-1061">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1061">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-1062">Objet <see cref="T:System.IFormatProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1062">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="2de2b-1063">(Spécifiez <see langword="null" />, car le paramètre <c>provider</c> est ignoré.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1063">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1064">Pour obtenir une description de ce membre, consultez <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1064">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1065">Valeur convertie de l'objet <see cref="T:System.Char" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1065">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1066">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1066">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2de2b-1067">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Char> est castée en interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1067">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2de2b-1068">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1068">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-1069">Convertit la valeur d'un caractère Unicode en son équivalent en minuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1069">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c);" />
      <MemberSignature Language="F#" Value="static member ToLower : char -&gt; char" Usage="System.char.ToLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-1070">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1070">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1071">Convertit la valeur d'un caractère Unicode en son équivalent en minuscules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1071">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1072">L'équivalent en minuscule de <paramref name="c" />, ou la valeur inchangée de <paramref name="c" /> si <paramref name="c" /> est déjà en minuscule ou non alphabétique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1072">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1073">Règles de casse sont obtenues à partir de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1073">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="2de2b-1074">Utilisez <xref:System.String.ToLower%2A?displayProperty=nameWithType> pour convertir une chaîne en minuscules.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1074">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-1075">L’exemple suivant montre <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1075">The following example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="2de2b-1076">
            <para>Comme expliqué dans [meilleures pratiques pour l’utilisation de chaînes](~/docs/standard/base-types/best-practices-strings.md), nous vous recommandons d’éviter d’appeler des méthodes de casse de caractère et de la casse de la chaîne que remplacer les valeurs par défaut. Au lieu de cela, vous devez appeler des méthodes qui requièrent des paramètres explicitement spécifiés. Pour convertir un caractère en minuscule à l’aide des conventions de casse de la culture actuelle, appelez le <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> surcharge de méthode avec une valeur de <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> pour son <paramref name="culture" /> paramètre.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1076">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToLower (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-1077">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1077">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2de2b-1078">Objet qui fournit les règles de casse propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1078">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1079">Convertit la valeur d'un caractère Unicode spécifié en son équivalent en minuscules à l'aide des informations de mise en forme spécifiques à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1079">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1080">L'équivalent en minuscule de <paramref name="c" />, modifié conformément à <paramref name="culture" />, ou la valeur non modifiée de <paramref name="c" />, si <paramref name="c" /> est déjà en minuscule ou non alphabétique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1080">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1081">Utilisez <xref:System.String.ToLower%2A?displayProperty=nameWithType> pour convertir une chaîne en minuscules.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1081">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-1082">L’exemple de code suivant montre <xref:System.Char.ToLower%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1082">The following code example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-1083">
            <paramref name="culture" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1083">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static char ToLowerInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLowerInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : char -&gt; char" Usage="System.char.ToLowerInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-1084">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1084">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1085">Convertit la valeur d'un caractère Unicode en son équivalent minuscule à l'aide des règles de casse de la culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1085">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1086">L'équivalent en minuscule du paramètre <paramref name="c" />, ou la valeur inchangée de <paramref name="c" /> si <paramref name="c" /> est déjà en minuscule ou non alphabétique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1086">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1087">Si votre application n’est pas affectée par la culture actuelle et varie selon le cas d’un caractère modifiable de façon prévisible, utilisez la <xref:System.Char.ToLowerInvariant%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2de2b-1087">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="2de2b-1088">Le <xref:System.Char.ToLowerInvariant%2A> méthode est équivalente à `ToLower(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1088">The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="2de2b-1089">Utilisez <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> pour convertir une chaîne en minuscules.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1089">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-1090">Convertit la valeur de cette instance en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1090">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="char.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-1091">Convertit la valeur de cette instance en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1091">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1092">Représentation sous forme de chaîne de la valeur de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1092">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2de2b-1093">L’exemple de code suivant montre <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1093">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.char.ToString c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-1094">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1094">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1095">Convertit le caractère Unicode spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1095">Converts the specified Unicode character to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1096">Représentation sous forme de chaîne de la valeur de <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1096">The string representation of the value of <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2de2b-1097">L’exemple de code suivant montre <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1097">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="char.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2de2b-1098">(Réservé) Objet fournissant des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1098">(Reserved) An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1099">Convertit la valeur de cette instance en représentation sous forme de chaîne équivalente à l'aide des informations de format propres à la culture spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1099">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1100">Représentation sous forme de chaîne de la valeur de cette instance, comme indiqué par <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1100">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1101">Le `provider` paramètre est ignoré ; il ne participe pas cette opération.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1101">The `provider` parameter is ignored; it does not participate in this operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-1102">L’exemple de code suivant montre une surcharge de <xref:System.Char.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1102">The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2de2b-1103">Convertit la valeur d'un caractère Unicode en son équivalent en majuscule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1103">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char -&gt; char" Usage="System.char.ToUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-1104">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1104">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1105">Convertit la valeur d'un caractère Unicode en son équivalent en majuscule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1105">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1106">Équivalent en majuscules de <paramref name="c" />, ou valeur inchangée de <paramref name="c" /> si <paramref name="c" /> est déjà en majuscules, n'a pas d'équivalent en majuscules ou est non alphabétique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1106">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1107">Règles de casse sont obtenues à partir de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1107">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="2de2b-1108">Utilisez <xref:System.String.ToUpper%2A?displayProperty=nameWithType> pour convertir une chaîne en majuscules.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1108">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-1109">L’exemple suivant convertit chaque caractère dans un tableau en son équivalent en majuscule.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1109">The following example converts each character in an array to its uppercase equivalent.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]
 [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="2de2b-1110">
            <para>Comme expliqué dans [meilleures pratiques pour l’utilisation de chaînes](~/docs/standard/base-types/best-practices-strings.md), nous vous recommandons d’éviter d’appeler des méthodes de casse de caractère et de la casse de la chaîne que remplacer les valeurs par défaut. Au lieu de cela, vous devez appeler des méthodes qui requièrent des paramètres explicitement spécifiés. Pour convertir un caractère en majuscule à l’aide des conventions de casse de la culture actuelle, appelez le <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> surcharge de méthode avec une valeur de <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> pour son <paramref name="culture" /> paramètre.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1110">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToUpper (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-1111">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1111">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2de2b-1112">Objet qui fournit les règles de casse propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1112">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1113">Convertit la valeur d'un caractère Unicode spécifié en son équivalent en majuscule à l'aide des informations de mise en forme spécifiques à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1113">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1114">L'équivalent en majuscule de <paramref name="c" />, modifié conformément à <paramref name="culture" />, ou la valeur non modifiée de <paramref name="c" />, si <paramref name="c" /> est déjà en majuscule, n'a aucun équivalent majuscule ou n'est pas alphabétique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1114">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1115">Utilisez <xref:System.String.ToUpper%2A?displayProperty=nameWithType> pour convertir une chaîne en majuscules.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1115">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-1116">L’exemple suivant convertit chaque caractère dans un tableau en son équivalent en majuscule pour la culture en-US, la culture dite indifférente et la culture tr-TR.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1116">The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</span></span> <span data-ttu-id="2de2b-1117">Dans cet exemple, l’équivalent en majuscule de chaque lettre minuscule est identique pour toutes les cultures à l’exception d’un seul cas.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1117">In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</span></span> <span data-ttu-id="2de2b-1118">Le fonctoid minuscule « i » caractères (U + 0069) est convertie en « I » (U + 0049) dans l’en-US et la culture dite indifférente, mais vers l’i « » (U + 0130) dans la culture tr-TR.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1118">The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]
 [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2de2b-1119">
            <paramref name="culture" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1119">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static char ToUpperInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpperInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : char -&gt; char" Usage="System.char.ToUpperInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="2de2b-1120">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1120">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1121">Convertit la valeur d'un caractère Unicode en son équivalent en majuscule à l'aide des règles de casse de la culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1121">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1122">L'équivalent en majuscule du paramètre <paramref name="c" />, ou la valeur inchangée de <paramref name="c" /> si <paramref name="c" /> est déjà en majuscule ou non alphabétique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1122">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1123">Si votre application n’est pas affectée par la culture actuelle et varie selon le cas d’un caractère modifiable de façon prévisible, utilisez la <xref:System.Char.ToUpperInvariant%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2de2b-1123">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.</span></span>  <span data-ttu-id="2de2b-1124">Le <xref:System.Char.ToUpperInvariant%2A> méthode est équivalente à `ToUpper(Char, CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1124">The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="2de2b-1125">Utilisez <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> pour convertir une chaîne en majuscules.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1125">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out char result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] char&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.TryParse(System.String,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] char % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.char.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Char" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="2de2b-1126">Chaîne qui contient un seul caractère, ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1126">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="2de2b-1127">Quand cette méthode est retournée, contient un caractère Unicode équivalent au seul caractère de <c>s</c> si la conversion a réussi, ou une valeur indéfinie si elle a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1127">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span>
          </span>
          <span data-ttu-id="2de2b-1128">La conversion échoue si le paramètre <c>s</c> est <see langword="null" /> ou si la longueur de <c>s</c> n’est pas égale à 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1128">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span>
          </span>
          <span data-ttu-id="2de2b-1129">Ce paramètre est passé sans être initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1129">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2de2b-1130">Convertit la valeur de la chaîne spécifiée en caractère Unicode équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1130">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
          <span data-ttu-id="2de2b-1131">Un code de retour indique si la conversion a réussi ou a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1131">A return code indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2de2b-1132">
            <see langword="true" /> si la conversion du paramètre <paramref name="s" /> a réussi ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2de2b-1132">
              <see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2b-1133">Le <xref:System.Char.TryParse%2A> méthode est comparable à la <xref:System.Char.Parse%2A> (méthode), sauf le <xref:System.Char.TryParse%2A> méthode ne lève pas une exception si la conversion échoue.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1133">The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2b-1134">L’exemple de code suivant illustre des surcharges de la <xref:System.Char.TryParse%2A> méthode pour plusieurs types de base et le <xref:System.DateTime.TryParseExact%2A> méthode pour le <xref:System.DateTime> type de base.</span><span class="sxs-lookup"><span data-stu-id="2de2b-1134">The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.</span></span>  
  
 [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]
 [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]
 [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>