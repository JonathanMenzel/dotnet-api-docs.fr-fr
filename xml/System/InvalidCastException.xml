<Type Name="InvalidCastException" FullName="System.InvalidCastException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7906f31b11cbf95ef8c0899681cd7c2ecc491667" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728633" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InvalidCastException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit InvalidCastException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.InvalidCastException" />
  <TypeSignature Language="VB.NET" Value="Public Class InvalidCastException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvalidCastException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Exception levée pour un transtypage non valide ou une conversion explicite.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework prend en charge la conversion automatique de types dérivé vers leurs types de base et retour vers le type dérivé, ainsi que des types qui présentent des interfaces pour les objets de l’interface et inversement. Il inclut également une variété de mécanismes qui prennent en charge des conversions personnalisées. Pour plus d’informations, consultez [Conversion de Type dans le .NET Framework](~/docs/standard/base-types/type-conversion.md).  
  
 Un <xref:System.InvalidCastException> exception est levée lorsque la conversion d’une instance d’un type en un autre type n’est pas pris en charge. Par exemple, une tentative de conversion un <xref:System.Char> valeur un <xref:System.DateTime> valeur lève une <xref:System.InvalidCastException> exception. Il diffère d’un <xref:System.OverflowException> exception qui est levée lorsqu’une conversion d’un type à un autre est prise en charge, mais la valeur du type de source est en dehors de la plage du type cible.  Un <xref:System.InvalidCastException> exception est dû à une erreur de développement et ne doit pas être traitée dans un `try/catch` bloc, au lieu de cela, il convient d’éliminer la cause de l’exception.  
  
 Pour plus d’informations sur les conversions prises en charge par le système, consultez la <xref:System.Convert> classe. Pour les erreurs qui se produisent lorsque le type de destination peut stocker des valeurs de type de source, mais n’est pas importante suffisant pour stocker une valeur source spécifique, consultez la <xref:System.OverflowException> exception.  
  
> [!NOTE]
>  Dans de nombreux cas, votre compilateur de langage détecte qu’aucune conversion n’existe entre le type de source et le type de cible et qu’il émet une erreur du compilateur.  
  
 Certaines des conditions dans lesquelles une tentative de conversion lève une <xref:System.InvalidCastException> exception sont décrites dans les sections suivantes :  
  
 [Les types primitifs et IConvertible](#Primitive)   
 [La méthode Convert.ChangeType](#ChangeType)   
 [Les conversions restrictives et implémentations de IConvertible](#Narrowing)   
 [Cast descendant](#Downcasting)   
 [Conversion à partir d’un objet d’interface](#Interface)   
 [Conversions de chaînes](#String)   
 [Migration de Visual Basic 6.0](#Migration)  
  
 Pour réussir une conversion de référence explicite, la valeur source doit être `null`, ou le type d’objet référencé par l’argument source doit être convertible au type de destination par une conversion de référence implicite.  
  
 Les instructions de langage intermédiaire (IL) suivantes lèvent un <xref:System.InvalidCastException> exception :  
  
-   `castclass`  
  
-   `refanyval`  
  
-   `unbox`  
  
 <xref:System.InvalidCastException> utilise le HRESULT COR_E_INVALIDCAST dont la valeur est 0 x 80004002.  
  
 Pour obtenir la liste de valeurs de propriété initiales d’une instance de <xref:System.InvalidCastException>, consultez la <xref:System.InvalidCastException.%23ctor%2A> constructeurs.  
  
<a name="Primitive"></a>   
## <a name="primitive-types-and-iconvertible"></a>Les types primitifs et IConvertible  
 Vous appelez directement ou indirectement d’un type primitif <xref:System.IConvertible> implémentation qui ne prend pas en charge une conversion particulière. Par exemple, essayez de convertir un <xref:System.Boolean> de la valeur un <xref:System.Char> ou un <xref:System.DateTime> valeur une <xref:System.Int32> lève une <xref:System.InvalidCastException> exception. L’exemple suivant appelle la <xref:System.Boolean.System%23IConvertible%23ToChar%2A?displayProperty=nameWithType> et <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> des méthodes pour convertir un <xref:System.Boolean> la valeur en un <xref:System.Char>. Dans les deux cas, l’appel de méthode lève une <xref:System.InvalidCastException> exception.  
  
 [!code-csharp[System.InvalidCastException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/iconvertible1.cs#2)]
 [!code-vb[System.InvalidCastException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/iconvertible1.vb#2)]  
  
 Étant donné que la conversion n’est pas pris en charge, il n’existe aucune solution de contournement.  
  
<a name="ChangeType"></a>   
## <a name="the-convertchangetype-method"></a>La méthode Convert.ChangeType  
 Vous avez appelé la <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> pour convertir un objet à partir d’un type à un autre, mais un ou les deux types de méthode n’implémentent pas la <xref:System.IConvertible> interface.  
  
 Dans la plupart des cas, la conversion n’est pas pris en charge, il n’existe aucune solution de contournement. Dans certains cas, une solution possible consiste à attribuer manuellement des valeurs de propriété à partir du type de source à des propriétés similaires d’un type de cible.  
  
<a name="Narrowing"></a>   
## <a name="narrowing-conversions-and-iconvertible-implementations"></a>Les conversions restrictives et implémentations de IConvertible  
 Opérateurs restrictives définissent les conversions explicites pris en charge par un type.  Un opérateur de cast en c# ou le `CType` méthode de conversion en Visual Basic (si `Option Strict` est sur) est requis pour effectuer la conversion.  
  
 Toutefois, si le type de source, ni le type de cible définit explicite ou conversions restrictives lors de la conversion entre les deux types et le <xref:System.IConvertible> implémentation d’un ou les deux types ne prend pas en charge une conversion du type de source pour le type de cible, un <xref:System.InvalidCastException>exception est levée.  
  
 Dans la plupart des cas, la conversion n’est pas pris en charge, il n’existe aucune solution de contournement.  
  
<a name="Downcasting"></a>   
## <a name="downcasting"></a>Cast descendant  
 Vous êtes cast, autrement dit, une tentative de conversion d’une instance d’un type de base à un de ses types dérivés. Dans l’exemple suivant, la tentative de convertir une `Person` de l’objet à un `PersonWithID` de l’objet échoue.  
  
 [!code-csharp[System.InvalidCastException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/basetoderived1.cs#1)]
 [!code-vb[System.InvalidCastException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/basetoderived1.vb#1)]  
  
 Comme le montre l’exemple, le cast réussit uniquement si la `Person` objet a été créé par un upcast d’un `PersonWithId` de l’objet à un `Person` objet, ou si le `Person` objet est `null`.  
  
<a name="Interface"></a>   
## <a name="conversion-from-an-interface-object"></a>Conversion à partir d’un objet d’interface  
 Vous tentez de convertir un objet d’interface en un type qui implémente cette interface, mais le type cible n’est pas du même type ou une classe de base du type à partir duquel l’objet d’interface était initialement dérivée. L’exemple suivant lève une <xref:System.InvalidCastException> exception lorsqu’il tente de convertir un <xref:System.IFormatProvider> de l’objet à un <xref:System.Globalization.DateTimeFormatInfo> objet. La conversion échoue, car bien que le <xref:System.Globalization.DateTimeFormatInfo> la classe implémente le <xref:System.IFormatProvider> interface, le <xref:System.Globalization.DateTimeFormatInfo> objet n’est pas lié à la <xref:System.Globalization.CultureInfo> classe à partir de laquelle l’objet d’interface a été dérivée.  
  
 [!code-csharp[System.InvalidCastException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/Interface1.cs#3)]
 [!code-vb[System.InvalidCastException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/Interface1.vb#3)]  
  
 Comme l’exception indique message, la conversion réussit uniquement si l’objet d’interface est converti en une instance du type d’origine, dans ce cas un <xref:System.Globalization.CultureInfo>. La conversion réussit également si l’objet d’interface est convertie en une instance d’un type de base du type d’origine.  
  
<a name="String"></a>   
## <a name="string-conversions"></a>Conversions de chaînes  
 Vous tentez de convertir une valeur ou un objet en sa représentation de chaîne à l’aide d’un opérateur de cast en c#. Dans l’exemple suivant, les deux la tentative de convertir une <xref:System.Char> valeur en une chaîne et la tentative de convertir un entier pour une chaîne de lever une <xref:System.InvalidCastException> exception.  
  
 [!code-csharp[System.InvalidCastException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/ToString1.cs#4)]  
  
> [!NOTE]
>  À l’aide de Visual Basic `CStr` pour convertir une valeur d’un type primitif à une chaîne réussit. L’opération ne lève pas une <xref:System.InvalidCastException> exception.  
  
 Correctement convertir une instance de tout type en sa représentation sous forme de chaîne, vous devez appeler sa `ToString` méthode, comme l’exemple suivant effectue.  Le `ToString` (méthode) est toujours présente, depuis le <xref:System.Object.ToString%2A> (méthode) est définie par le <xref:System.Object> classe et par conséquent est héritée ou remplacée par tous les types managés.  
  
 [!code-csharp[System.InvalidCastException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/ToString2.cs#5)]  
  
<a name="Migration"></a>   
## <a name="visual-basic-60-migration"></a>Migration de Visual Basic 6.0  
 Vous mettez à niveau une application Visual Basic 6.0 avec un appel à un événement personnalisé dans un contrôle utilisateur à Visual Basic .NET et un <xref:System.InvalidCastException> exception est levée avec le message, « le cast spécifié n’est pas valide. » Pour éliminer cette exception, remplacez la ligne de code dans votre formulaire (tel que `Form1`)  
  
```  
Call UserControl11_MyCustomEvent(UserControl11, New UserControl1.MyCustomEventEventArgs(5))  
```  
  
 et remplacez-la par la ligne de code suivante :  
  
```  
Call UserControl11_MyCustomEvent(UserControl11(0), New UserControl1.MyCustomEventEventArgs(5))  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la <xref:System.Exception.Message%2A> propriété de la nouvelle instance à un message système qui décrit l’erreur, tel que « Impossible de convertir à partir du type de source pour le type de destination. » Ce message prend en compte la culture système en cours.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.InvalidCastException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Référence Null (`Nothing` en Visual Basic).|  
|<xref:System.Exception.Message%2A>|Chaîne du message d'erreur localisé.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Message décrivant l'erreur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" /> avec un message d'erreur spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la <xref:System.Exception.Message%2A?displayProperty=nameWithType> propriété de l’exception à l’aide du `message` paramètre. Le contenu de `message` doit être compréhensible par les utilisateurs. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.InvalidCastException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Référence Null (`Nothing` en Visual Basic).|  
|<xref:System.Exception.Message%2A>|Chaîne du message d'erreur.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InvalidCastException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InvalidCastException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
        <param name="context">Informations contextuelles sur la source ou la destination.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" /> avec des données sérialisées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est appelé lors de la désérialisation pour reconstituer l’objet exception transmis sur un flux. Pour plus d’informations, consultez [sérialisation XML et SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
        <param name="innerException">Exception ayant provoqué l'exception actuelle. Si le paramètre <c>innerException</c> n’est pas <see langword="null" />, l’exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l’exception interne.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une exception levée en conséquence directe d'une exception précédente doit contenir une référence à celle-ci dans la propriété <xref:System.Exception.InnerException%2A>. Le <xref:System.Exception.InnerException%2A> propriété retourne la même valeur que celle qui est passée au constructeur ou retourne `null` si le <xref:System.Exception.InnerException%2A> propriété ne fournit pas la valeur de l’exception interne au constructeur.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.InvalidCastException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|La référence à l'exception interne.|  
|<xref:System.Exception.Message%2A>|Chaîne du message d'erreur.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message, int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message, int errorCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Message indiquant la raison pour laquelle l'exception s'est produite.</param>
        <param name="errorCode">Valeur (HRESULT) du code d'erreur associé à l'exception.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" /> avec un message et un code d'erreur spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la <xref:System.Exception.Message%2A?displayProperty=nameWithType> propriété de l’exception à l’aide du `message` paramètre. Le contenu de `message` doit être compréhensible par les utilisateurs. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.  
  
 Ce constructeur fournit une valeur HRESULT qui est accessible à l’attention des héritiers de la <xref:System.InvalidCastException> (classe), via la méthode protégée <xref:System.Exception.HResult%2A> propriété de la <xref:System.Exception> classe.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.InvalidCastException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Référence Null (`Nothing` en Visual Basic).|  
|<xref:System.Exception.Message%2A>|Chaîne du message d'erreur.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>