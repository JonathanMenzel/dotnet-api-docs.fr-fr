<Type Name="InvalidCastException" FullName="System.InvalidCastException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b8fdc2a667e233012d9f9fa27a5a9dbc9e44e565" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52380908" /></Metadata><TypeSignature Language="C#" Value="public class InvalidCastException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit InvalidCastException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.InvalidCastException" />
  <TypeSignature Language="VB.NET" Value="Public Class InvalidCastException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvalidCastException : SystemException" />
  <TypeSignature Language="F#" Value="type InvalidCastException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Exception levée pour un transtypage non valide ou une conversion explicite.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework prend en charge la conversion automatique des types dérivés de leurs types de base et rétablir le type dérivé, ainsi que des types qui présentent des interfaces pour les objets de l’interface et de sauvegarde. Il inclut également une variété de mécanismes qui prennent en charge des conversions personnalisées. Pour plus d’informations, consultez [Conversion de Type dans le .NET Framework](~/docs/standard/base-types/type-conversion.md).  
  
 Un <xref:System.InvalidCastException> exception est levée lorsque la conversion d’une instance d’un type en un autre type n’est pas pris en charge. Par exemple, essayez de convertir un <xref:System.Char> valeur un <xref:System.DateTime> valeur lève une <xref:System.InvalidCastException> exception. Il diffère d’un <xref:System.OverflowException> exception qui est levée lorsqu’une conversion d’un type vers un autre est prise en charge, mais la valeur du type de source est en dehors de la plage du type cible.  Un <xref:System.InvalidCastException> exception est provoquée par erreur de développement et ne doit pas être gérée dans un `try/catch` bloquer ; au lieu de cela, il convient d’éliminer la cause de l’exception.  
  
 Pour plus d’informations sur les conversions prises en charge par le système, consultez la <xref:System.Convert> classe. Pour les erreurs qui se produisent lorsque le type de destination peut stocker des valeurs de type de source, mais n’est pas grande suffisant pour stocker une valeur source spécifique, consultez le <xref:System.OverflowException> exception.  
  
> [!NOTE]
>  Dans de nombreux cas, votre compilateur de langage détecte qu’aucune conversion n’existe entre le type de source et le type de cible et émet une erreur du compilateur.  
  
 Certaines des conditions dans lesquelles une tentative de conversion lève une <xref:System.InvalidCastException> exception sont décrits dans les sections suivantes :  
  
 [Types primitifs et IConvertible](#Primitive)   
 [La méthode Convert.ChangeType](#ChangeType)   
 [Les conversions restrictives et implémentations de IConvertible](#Narrowing)   
 [Cast](#Downcasting)   
 [Conversion à partir d’un objet d’interface](#Interface)   
 [Conversions de chaînes](#String)   
 [Migration de Visual Basic 6.0](#Migration)  
  
 Pour une conversion de référence explicite réussisse, la valeur de la source doit être `null`, ou le type d’objet référencé par l’argument source doit être convertible au type de destination par une conversion de référence implicite.  
  
 Les instructions de langage intermédiaire (IL) suivantes lèvent une <xref:System.InvalidCastException> exception :  
  
-   `castclass`  
  
-   `refanyval`  
  
-   `unbox`  
  
 <xref:System.InvalidCastException> utilise le HRESULT COR_E_INVALIDCAST, dont la valeur 0 x 80004002.  
  
 Pour obtenir la liste des valeurs initiales des propriétés d’une instance de <xref:System.InvalidCastException>, consultez le <xref:System.InvalidCastException.%23ctor%2A> constructeurs.  
  
<a name="Primitive"></a>   
## <a name="primitive-types-and-iconvertible"></a>Types primitifs et IConvertible  
 Vous appelez directement ou indirectement d’un type primitif <xref:System.IConvertible> implémentation qui ne prend pas en charge une conversion particulière. Par exemple, essayez de convertir un <xref:System.Boolean> valeur un <xref:System.Char> ou un <xref:System.DateTime> valeur un <xref:System.Int32> lève une <xref:System.InvalidCastException> exception. L’exemple suivant appelle à la fois le <xref:System.Boolean.System%23IConvertible%23ToChar%2A?displayProperty=nameWithType> et <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> méthodes pour convertir un <xref:System.Boolean> valeur à un <xref:System.Char>. Dans les deux cas, l’appel de méthode lève un <xref:System.InvalidCastException> exception.  
  
 [!code-csharp[System.InvalidCastException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/iconvertible1.cs#2)]
 [!code-vb[System.InvalidCastException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/iconvertible1.vb#2)]  
  
 Étant donné que la conversion n’est pas pris en charge, il n’existe aucune solution.  
  
<a name="ChangeType"></a>   
## <a name="the-convertchangetype-method"></a>La méthode Convert.ChangeType  
 Vous avez appelé la <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> méthode pour convertir un objet à partir d’un type vers un autre, mais un ou les deux types n’implémentent pas le <xref:System.IConvertible> interface.  
  
 Dans la plupart des cas, comme la conversion n’est pas pris en charge, il n’existe aucune solution de contournement. Dans certains cas, une solution de contournement possible consiste à attribuer manuellement des valeurs de propriété à partir du type de source à des propriétés similaires d’un type cible.  
  
<a name="Narrowing"></a>   
## <a name="narrowing-conversions-and-iconvertible-implementations"></a>Les conversions restrictives et implémentations de IConvertible  
 Opérateurs restrictives définissent les conversions explicites pris en charge par un type.  Un opérateur de cast en c# ou le `CType` méthode de conversion en Visual Basic (si `Option Strict` se trouve sur) est requis pour effectuer la conversion.  
  
 Toutefois, si le type de source, ni le type de cible définit explicite ou conversion entre les deux types, restrictive et <xref:System.IConvertible> implémentation d’un ou les deux types ne prend pas en charge une conversion à partir du type source vers le type de cible, un <xref:System.InvalidCastException>exception est levée.  
  
 Dans la plupart des cas, comme la conversion n’est pas pris en charge, il n’existe aucune solution de contournement.  
  
<a name="Downcasting"></a>   
## <a name="downcasting"></a>Cast  
 Vous êtes cast, autrement dit, essaie de convertir une instance d’un type de base à un de ses types dérivés. Dans l’exemple suivant, essaie de convertir un `Person` de l’objet à un `PersonWithID` objet échoue.  
  
 [!code-csharp[System.InvalidCastException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/basetoderived1.cs#1)]
 [!code-vb[System.InvalidCastException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/basetoderived1.vb#1)]  
  
 Comme dans l’exemple, le cast aval réussit uniquement si le `Person` objet a été créé par un upcast à partir d’un `PersonWithId` de l’objet à un `Person` objet, ou si le `Person` objet est `null`.  
  
<a name="Interface"></a>   
## <a name="conversion-from-an-interface-object"></a>Conversion à partir d’un objet d’interface  
 Vous essayez de convertir un objet d’interface à un type qui implémente cette interface, mais le type cible n’est pas le même type ou une classe de base du type à partir duquel l’objet d’interface était initialement dérivée. L’exemple suivant lève une <xref:System.InvalidCastException> exception lorsqu’il tente de convertir un <xref:System.IFormatProvider> de l’objet à un <xref:System.Globalization.DateTimeFormatInfo> objet. La conversion échoue, car bien que le <xref:System.Globalization.DateTimeFormatInfo> la classe implémente le <xref:System.IFormatProvider> interface, le <xref:System.Globalization.DateTimeFormatInfo> objet n’est pas lié à la <xref:System.Globalization.CultureInfo> classe à partir duquel l’objet d’interface a été dérivé.  
  
 [!code-csharp[System.InvalidCastException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/Interface1.cs#3)]
 [!code-vb[System.InvalidCastException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidcastexception/vb/Interface1.vb#3)]  
  
 En tant que l’exception indique message, la conversion réussit uniquement si l’objet d’interface est reconvertie en une instance du type d’origine, dans ce cas un <xref:System.Globalization.CultureInfo>. La conversion réussirait également si l’objet d’interface est convertie en une instance d’un type de base du type d’origine.  
  
<a name="String"></a>   
## <a name="string-conversions"></a>Conversions de chaînes  
 Vous essayez de convertir une valeur ou un objet en sa représentation sous forme de chaîne à l’aide d’un opérateur de cast en c#. Dans l’exemple suivant, les deux la tentative de cast un <xref:System.Char> valeur en une chaîne et la tentative d’effectuer un cast d’un entier pour une chaîne de lever un <xref:System.InvalidCastException> exception.  
  
 [!code-csharp[System.InvalidCastException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/ToString1.cs#4)]  
  
> [!NOTE]
>  À l’aide de Visual Basic `CStr` opérateur pour convertir une valeur d’un type primitif vers une chaîne réussit. L’opération ne lève pas une <xref:System.InvalidCastException> exception.  
  
 Avec succès de convertir une instance de n’importe quel type à sa représentation sous forme de chaîne, appelez sa `ToString` méthode, comme dans l’exemple suivant effectue.  Le `ToString` méthode n’est toujours présente, depuis le <xref:System.Object.ToString%2A> méthode est définie par le <xref:System.Object> classe et par conséquent est héritée ou remplacé par tous les types managés.  
  
 [!code-csharp[System.InvalidCastException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidcastexception/cs/ToString2.cs#5)]  
  
<a name="Migration"></a>   
## <a name="visual-basic-60-migration"></a>Migration de Visual Basic 6.0  
 Vous mettez à niveau une application Visual Basic 6.0 avec un appel à un événement personnalisé dans un contrôle utilisateur vers Visual Basic .NET et un <xref:System.InvalidCastException> exception est levée avec le message, « le cast spécifié n’est pas valide. » Pour éliminer cette exception, remplacez la ligne de code dans votre formulaire (tel que `Form1`)  
  
```  
Call UserControl11_MyCustomEvent(UserControl11, New UserControl1.MyCustomEventEventArgs(5))  
```  
  
 et remplacez-le par la ligne de code suivante :  
  
```  
Call UserControl11_MyCustomEvent(UserControl11(0), New UserControl1.MyCustomEventEventArgs(5))  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">Gestion et levée des exceptions</related>
    <related type="Article" href="~/docs/standard/base-types/type-conversion.md">Conversion de type dans le .NET Framework</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la <xref:System.Exception.Message%2A> propriété de la nouvelle instance à un message système décrivant l’erreur, tels que « Impossible de convertir à partir du type de source de type de destination. » Ce message prend en compte la culture système en cours.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.InvalidCastException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Référence Null (`Nothing` en Visual Basic).|  
|<xref:System.Exception.Message%2A>|Chaîne du message d'erreur localisé.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new InvalidCastException : string -&gt; InvalidCastException" Usage="new System.InvalidCastException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Message décrivant l'erreur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" /> avec un message d'erreur spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la <xref:System.Exception.Message%2A?displayProperty=nameWithType> propriété de l’exception à l’aide du `message` paramètre. Le contenu de `message` doit être compréhensible par les utilisateurs. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.InvalidCastException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Référence Null (`Nothing` en Visual Basic).|  
|<xref:System.Exception.Message%2A>|Chaîne du message d'erreur.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InvalidCastException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InvalidCastException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new InvalidCastException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; InvalidCastException" Usage="new System.InvalidCastException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
        <param name="context">Informations contextuelles sur la source ou la destination.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" /> avec des données sérialisées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est appelé lors de la désérialisation pour reconstituer l’objet exception transmis sur un flux. Pour plus d’informations, consultez [sérialisation XML et SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">Sérialisation XML et SOAP</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new InvalidCastException : string * Exception -&gt; InvalidCastException" Usage="new System.InvalidCastException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
        <param name="innerException">Exception ayant provoqué l'exception actuelle. Si le paramètre <paramref name="innerException" /> n'est pas <see langword="null" />, l'exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l'exception interne.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une exception levée en conséquence directe d'une exception précédente doit contenir une référence à celle-ci dans la propriété <xref:System.Exception.InnerException%2A>. Le <xref:System.Exception.InnerException%2A> propriété retourne la même valeur que celle qui est passée au constructeur, ou retourne `null` si le <xref:System.Exception.InnerException%2A> propriété ne fournit pas la valeur de l’exception interne au constructeur.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.InvalidCastException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|La référence à l'exception interne.|  
|<xref:System.Exception.Message%2A>|Chaîne du message d'erreur.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md">Gestion et levée des exceptions</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidCastException (string message, int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidCastException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidCastException(System::String ^ message, int errorCode);" />
      <MemberSignature Language="F#" Value="new InvalidCastException : string * int -&gt; InvalidCastException" Usage="new System.InvalidCastException (message, errorCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Message indiquant la raison pour laquelle l'exception s'est produite.</param>
        <param name="errorCode">Valeur (HRESULT) du code d'erreur associé à l'exception.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.InvalidCastException" /> avec un message et un code d'erreur spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la <xref:System.Exception.Message%2A?displayProperty=nameWithType> propriété de l’exception à l’aide du `message` paramètre. Le contenu de `message` doit être compréhensible par les utilisateurs. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.  
  
 Ce constructeur fournit une valeur HRESULT qui est accessible pour les héritiers de la <xref:System.InvalidCastException> (classe), par le biais de l’élément protégé <xref:System.Exception.HResult%2A> propriété de la <xref:System.Exception> classe.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.InvalidCastException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Référence Null (`Nothing` en Visual Basic).|  
|<xref:System.Exception.Message%2A>|Chaîne du message d'erreur.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>