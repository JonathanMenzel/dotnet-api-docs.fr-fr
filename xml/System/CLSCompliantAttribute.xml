<Type Name="CLSCompliantAttribute" FullName="System.CLSCompliantAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="227638905ed423264daf7c13436574f057779982" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37481077" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CLSCompliantAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CLSCompliantAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.CLSCompliantAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CLSCompliantAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class CLSCompliantAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type CLSCompliantAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indique si un élément de programme est conforme à la spécification CLS (Common Language Specification). Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.CLSCompliantAttribute> attribut est utilisé pour indiquer si un élément de programme particulier est conforme avec le Common Language Specification (CLS), qui définit les fonctionnalités qui n’importe quel langage qui cible le .NET Framework doit prendre en charge. La conformité CLS est principalement de préoccupation pour les développeurs de bibliothèques qui souhaitent s’assurer que leurs bibliothèques sont accessibles dans n’importe quel langage qui cible le .NET Framework. Pour plus d’informations, consultez [indépendance du langage et composants indépendants du langage](~/docs/standard/language-independence-and-language-independent-components.md).  
  
 Vous pouvez appliquer le <xref:System.CLSCompliantAttribute> d’attribut pour les éléments de programme suivants : assembly, module, classe, struct, enum, constructeur, méthode, propriété, champ, événement, interface, délégué, paramètre et valeur de retour. Toutefois, la notion de conformité CLS est uniquement explicite pour les assemblys, modules, types et membres de types, pas les parties d’une signature de membre. Par conséquent, <xref:System.CLSCompliantAttribute> est ignoré lorsque appliqué au paramètre ou de retourner des éléments de programme de valeur.  
  
 Si aucun <xref:System.CLSCompliantAttribute> est appliqué à un élément de programme, alors par défaut :  
  
-   L’assembly n’est pas conforme CLS.  
  
-   Le type est conforme CLS uniquement si son type englobant ou l’assembly est conforme CLS.  
  
-   Le membre d’un type est conforme CLS uniquement si le type est conforme CLS.  
  
 Si un assembly est marqué comme conforme CLS, tout type publiquement exposé dans l’assembly qui n’est pas conforme CLS doit être marqué avec <xref:System.CLSCompliantAttribute> à l’aide un `false` argument. De même, si une classe est marquée comme conforme CLS, vous devez marquer individuellement tous les membres qui ne sont pas conformes CLS. Tous les membres non conformes doivent fournir des alternatives conformes à CLS correspondants.  
  
 Attributs qui sont appliqués à des assemblys ou des modules doivent être postérieure à celle de C# `using` (`Imports` en Visual Basic) clauses et avant le code.  
  
 Pour plus d’informations sur l’utilisation d’attributs, consultez [attributs](~/docs/standard/attributes/index.md).  
  
> [!NOTE]
>  Le compilateur Microsoft Visual Basic actuel intentionnellement ne génère pas d’un avertissement de conformité CLS, toutefois, une version ultérieure du compilateur émet cet avertissement.  
  
   
  
## Examples  
 L’exemple suivant applique une <xref:System.CLSCompliantAttribute> à la totalité de l’assembly.  
  
```csharp  
using System;  
    [assembly: CLSCompliant(true)]  
```  
  
 La déclaration suivante génère un avertissement de conformité CLS, car le type `UInt32` n’est pas spécifié dans la spécification CLS.  
  
```csharp  
public int SetValue(UInt32 value);  
```  
  
 Si la déclaration est marquée avec un <xref:System.CLSCompliantAttribute>, aucun avertissement du compilateur ou l’erreur est générée.  
  
```csharp  
[CLSCompliant(false)]  
 public int SetValue(UInt32 value);  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CLSCompliantAttribute (bool isCompliant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isCompliant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CLSCompliantAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isCompliant As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CLSCompliantAttribute(bool isCompliant);" />
      <MemberSignature Language="F#" Value="new CLSCompliantAttribute : bool -&gt; CLSCompliantAttribute" Usage="new System.CLSCompliantAttribute isCompliant" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isCompliant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isCompliant">
          <see langword="true" /> si conforme CLS ; sinon <see langword="false" />.</param>
        <summary>Initialise une instance de la classe <see cref="T:System.CLSCompliantAttribute" /> avec une valeur Boolean indiquant si l'élément de programme indiqué est conforme CLS.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompliant">
      <MemberSignature Language="C#" Value="public bool IsCompliant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompliant" />
      <MemberSignature Language="DocId" Value="P:System.CLSCompliantAttribute.IsCompliant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompliant As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompliant { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompliant : bool" Usage="System.CLSCompliantAttribute.IsCompliant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur Boolean indiquant si l'élément de programme indiqué est conforme CLS.</summary>
        <value>
          <see langword="true" /> si l'élément de programme est conforme CLS ; sinon <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>