<Type Name="IAsyncResult" FullName="System.IAsyncResult">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d58c5d7d0755ba744adb0fc63e586f88a9bd828" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430907" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAsyncResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAsyncResult" />
  <TypeSignature Language="DocId" Value="T:System.IAsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAsyncResult" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAsyncResult" />
  <TypeSignature Language="F#" Value="type IAsyncResult = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="002b2-101">Représente l'état d'une opération asynchrone.</span>
      <span class="sxs-lookup">
        <span data-stu-id="002b2-101">Represents the status of an asynchronous operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002b2-102">Le <xref:System.IAsyncResult> interface est implémentée par des classes contenant des méthodes qui peuvent opérer de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="002b2-102">The <xref:System.IAsyncResult> interface is implemented by classes containing methods that can operate asynchronously.</span></span> <span data-ttu-id="002b2-103">Il est le type de retour des méthodes qui initie une opération asynchrone, tel que <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>, et il est passé aux méthodes qui conclut une opération asynchrone, tel que <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="002b2-103">It is the return type of methods that initiate an asynchronous operation, such as <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>, and it is passed to methods that conclude an asynchronous operation, such as <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="002b2-104"><xref:System.IAsyncResult> les objets sont également passés aux méthodes appelées par <xref:System.AsyncCallback> délègue lors d’une opération asynchrone se termine.</span><span class="sxs-lookup"><span data-stu-id="002b2-104"><xref:System.IAsyncResult> objects are also passed to methods invoked by <xref:System.AsyncCallback> delegates when an asynchronous operation completes.</span></span>  
  
 <span data-ttu-id="002b2-105">Un objet qui prend en charge la <xref:System.IAsyncResult> interface stocke les informations d’état pour une opération asynchrone et fournit un objet de synchronisation permettant aux threads d’être signalé lors de la fin de l’opération.</span><span class="sxs-lookup"><span data-stu-id="002b2-105">An object that supports the <xref:System.IAsyncResult> interface stores state information for an asynchronous operation and provides a synchronization object to allow threads to be signaled when the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="002b2-106">Le <xref:System.Runtime.Remoting.Messaging.AsyncResult> classe est l’implémentation de <xref:System.IAsyncResult> qui est retourné par la `BeginInvoke` méthode lorsque vous utilisez un délégué pour appeler une méthode de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="002b2-106">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> class is the implementation of <xref:System.IAsyncResult> that is returned by the `BeginInvoke` method when you use a delegate to call a method asynchronously.</span></span>  
  
 <span data-ttu-id="002b2-107">Pour obtenir une description détaillée de la façon dont <xref:System.IAsyncResult> interface est utilisée, consultez la [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="002b2-107">For a detailed description of how the <xref:System.IAsyncResult> interface is used, see the [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="002b2-108">L’exemple suivant montre comment utiliser le <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> propriété à obtenir un <xref:System.Threading.WaitHandle>et l’attente d’un appel asynchrone sur un délégué.</span><span class="sxs-lookup"><span data-stu-id="002b2-108">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="002b2-109">Le <xref:System.Threading.WaitHandle> est signalé quand l’appel asynchrone se termine et vous pouvez l’attendre en appelant la méthode <xref:System.Threading.WaitHandle.WaitOne%2A> .</span><span class="sxs-lookup"><span data-stu-id="002b2-109">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="002b2-110">L’exemple se compose de deux classes : la classe qui contient la méthode est appelée de façon asynchrone et la classe qui contient le `Main` méthode qui effectue l’appel.</span><span class="sxs-lookup"><span data-stu-id="002b2-110">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="002b2-111">Pour plus d’informations et d’autres exemples d’appel des méthodes de façon asynchrone à l’aide de délégués, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="002b2-111">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="002b2-112">Obtient un objet défini par l’utilisateur qui qualifie ou contient des informations sur une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-112">Gets a user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="002b2-113">Objet défini par l’utilisateur qui qualifie ou contient des informations sur une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-113">A user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002b2-114">Cette propriété retourne l’objet qui est le dernier paramètre de la méthode qui initie une opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="002b2-114">This property returns the object that is the last parameter of the method that initiates an asynchronous operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="002b2-115">L’exemple de code suivant montre comment la <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> propriété est utilisée pour passer des informations à une méthode de rappel.</span><span class="sxs-lookup"><span data-stu-id="002b2-115">The following code example demonstrates how the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> property is used to pass information to a callback method.</span></span> <span data-ttu-id="002b2-116">Le dernier paramètre de la `BeginInvoke` appel de méthode est une chaîne de format, la méthode de rappel utilise pour mettre en forme un message de sortie.</span><span class="sxs-lookup"><span data-stu-id="002b2-116">The last parameter of the `BeginInvoke` method call is a format string, which the callback method uses to format an output message.</span></span>  
  
 <span data-ttu-id="002b2-117">L’exemple se compose de deux classes : la classe qui contient la méthode est appelée de façon asynchrone et la classe qui contient le `Main` méthode qui effectue l’appel.</span><span class="sxs-lookup"><span data-stu-id="002b2-117">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="002b2-118">Pour plus d’informations sur le fonctionne de cet exemple de rappel et d’autres exemples d’appel des méthodes de façon asynchrone à l’aide de délégués, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="002b2-118">For more information about how this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="002b2-119">
            <para>Implémentez cette propriété pour permettre à l’appelant d’une opération asynchrone obtenir un objet défini par l’application spécifié au début de l’opération.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-119">
              <para>Implement this property to allow the caller of an asynchronous operation to obtain an application-defined object specified at the start of the operation.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="002b2-120">
            <para>Cet objet peut être utilisé pour passer des informations d’état de l’opération asynchrone pour une <see cref="T:System.AsyncCallback" /> que vous fournissez.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-120">
              <para>This object can be used to pass state information for the asynchronous operation to an <see cref="T:System.AsyncCallback" /> that you provide.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.AsyncCallback" />
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="002b2-121">Obtient un <see cref="T:System.Threading.WaitHandle" /> qui est utilisé pour attendre qu’une opération asynchrone se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-121">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="002b2-122">
            <see cref="T:System.Threading.WaitHandle" /> utilisé pour attendre qu’une opération asynchrone se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-122">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002b2-123">La valeur de retour permet au client d’attente pour une opération asynchrone se termine au lieu d’interrogation <xref:System.IAsyncResult.IsCompleted%2A> jusqu'à ce que l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="002b2-123">The return value allows the client to wait for an asynchronous operation to complete instead of polling <xref:System.IAsyncResult.IsCompleted%2A> until the operation concludes.</span></span> <span data-ttu-id="002b2-124">La valeur de retour peut être utilisée pour effectuer un <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, ou <xref:System.Threading.WaitHandle.WaitAll%2A> opération.</span><span class="sxs-lookup"><span data-stu-id="002b2-124">The return value can be used to perform a <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, or <xref:System.Threading.WaitHandle.WaitAll%2A> operation.</span></span>  
  
 <span data-ttu-id="002b2-125">Le common language runtime fournit un nombre d’objets, tels que <xref:System.Threading.ManualResetEvent>, <xref:System.Threading.AutoResetEvent>, et <xref:System.Threading.Mutex>, qui reflètent les primitives de synchronisation Win32.</span><span class="sxs-lookup"><span data-stu-id="002b2-125">The common language runtime supplies a number of waitable objects, such as <xref:System.Threading.ManualResetEvent>, <xref:System.Threading.AutoResetEvent>, and <xref:System.Threading.Mutex>, all of which mirror Win32 synchronization primitives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="002b2-126">L’exemple suivant montre comment utiliser le <xref:System.IAsyncResult.AsyncWaitHandle%2A> propriété à obtenir un <xref:System.Threading.WaitHandle>et l’attente d’un appel asynchrone sur un délégué.</span><span class="sxs-lookup"><span data-stu-id="002b2-126">The following example demonstrates how to use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="002b2-127">Le <xref:System.Threading.WaitHandle> est signalé quand l’appel asynchrone se termine et vous pouvez l’attendre en appelant la méthode <xref:System.Threading.WaitHandle.WaitOne%2A> .</span><span class="sxs-lookup"><span data-stu-id="002b2-127">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="002b2-128">L’exemple se compose de deux classes : la classe qui contient la méthode est appelée de façon asynchrone et la classe qui contient le `Main` méthode qui effectue l’appel.</span><span class="sxs-lookup"><span data-stu-id="002b2-128">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="002b2-129">Pour plus d’informations et d’autres exemples d’appel des méthodes de façon asynchrone à l’aide de délégués, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="002b2-129">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="002b2-130">
            <para>L’objet qui implémente <see cref="T:System.IAsyncResult" /> est inutile de créer le <see cref="T:System.Threading.WaitHandle" /> jusqu'à ce que le <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> propriété est en lecture. Il s’agit du choix de la <see cref="T:System.IAsyncResult" /> responsable de l’implémentation. Toutefois, si l’implémenteur crée <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, il incombe à l’implémenteur de signaler le <see cref="T:System.Threading.WaitHandle" /> qui mettra fin à l’attente au moment opportun. Par exemple, <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> met fin à l’attente pour l’appelant lorsqu’une méthode appelée de manière asynchrone retourne. Une fois créé, <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> doit rester actif jusqu'à ce que l’utilisateur appelle la méthode qui termine l’opération asynchrone. À ce moment, l’objet derrière <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> peuvent être ignorées.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-130">
              <para>The object that implements <see cref="T:System.IAsyncResult" /> does not need to create the <see cref="T:System.Threading.WaitHandle" /> until the <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> property is read. It is the choice of the <see cref="T:System.IAsyncResult" /> implementer. However, if the implementer creates <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, it is the responsibility of the implementer to signal the <see cref="T:System.Threading.WaitHandle" /> that will terminate the wait at the appropriate time. For example, <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> terminates the wait on behalf of the caller when an asynchronously invoked method returns. Once created, <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> should be kept alive until the user calls the method that concludes the asynchronous operation. At that time the object behind <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> can be discarded.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="002b2-131">
            <para>Les clients que vous attendez que l’opération se termine (par opposition à l’interrogation) utilisent cette propriété pour obtenir un objet de synchronisation à attendre.  <block subset="none" type="note"><para> Lorsque vous utilisez la <see langword="BeginInvoke" /> méthode d’un délégué à appeler une méthode de façon asynchrone et obtenir un handle d’attente à partir de résultant <see cref="T:System.IAsyncResult" />, nous vous recommandons de fermer le handle d’attente dès que vous avez terminé d’utiliser, en appelant le <see cref="M:System.Threading.WaitHandle.Close" /> (méthode). Si vous vous contentez de libérer toutes les références au handle d’attente, les ressources système sont libérées quand le garbage collection récupère le handle d’attente, mais le garbage collection fonctionne plus efficacement quand les objets sont explicitement fermées ou libérées. Pour plus d’informations, consultez le <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /> propriété.  </para></block></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-131">
              <para>Clients that wait for the operation to complete (as opposed to polling) use this property to obtain a synchronization object to wait on.  <block subset="none" type="note"><para> When you use the <see langword="BeginInvoke" /> method of a delegate to call a method asynchronously and obtain a wait handle from the resulting <see cref="T:System.IAsyncResult" />, we recommend that you close the wait handle as soon as you are finished using it, by calling the <see cref="M:System.Threading.WaitHandle.Close" /> method. If you simply release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle, but garbage collection works more efficiently when disposable objects are explicitly closed or disposed. For more information, see the <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /> property.  </para></block></para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="002b2-132">Obtient une valeur qui indique si l’opération asynchrone s’est terminée de manière synchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-132">Gets a value that indicates whether the asynchronous operation completed synchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="002b2-133">
            <see langword="true" /> si l’opération asynchrone s’est terminée de manière synchrone ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-133">
              <see langword="true" /> if the asynchronous operation completed synchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002b2-134">Si l’achèvement synchrone de l’appel est détectée dans le <xref:System.AsyncCallback> délégué, il est probable que le thread qui a initié l’opération asynchrone est le thread actuel.</span><span class="sxs-lookup"><span data-stu-id="002b2-134">If the synchronous completion of the call is detected in the <xref:System.AsyncCallback> delegate, it is probable that the thread that initiated the asynchronous operation is the current thread.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="002b2-135">
            <para>La plupart des implémenteurs de le <see cref="T:System.IAsyncResult" /> interface n’utilise pas cette propriété et doit retourner <see langword="false" />. À partir de la [ ! Include[net_v45](~/Includes/NET-V45-MD.MD)], une tâche qui est créée avec le <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> méthode ne se terminera pas si cette propriété n’est pas correctement implémentée. Consultez [compatibilité des applications dans 4.5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-135">
              <para>Most implementers of the <see cref="T:System.IAsyncResult" /> interface will not use this property and should return <see langword="false" />. Beginning with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], a task that is created with the <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> method will not complete if this property is not implemented correctly. See [Application Compatibility in 4.5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="002b2-136">
            <para>Utilisez cette propriété pour déterminer si l’opération asynchrone s’est terminée de façon synchrone. Par exemple, cette propriété peut retourner <see langword="true" /> pour une opération d’e/s asynchrone si la demande d’e/s était petite.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-136">
              <para>Use this property to determine if the asynchronous operation completed synchronously. For example, this property can return <see langword="true" /> for an asynchronous I/O operation if the I/O request was small.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="002b2-137">Obtient une valeur qui indique si l’opération asynchrone est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-137">Gets a value that indicates whether the asynchronous operation has completed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="002b2-138">
            <see langword="true" /> si l'opération est terminée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-138">
              <see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002b2-139">Lorsque cette propriété est `true`, vous pouvez supposer sans risque ignorer toutes les ressources que vous pouvez allouer pour une utilisation à l’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="002b2-139">When this property is `true`, you can assume it is safe to discard any resources you allocate for use by the asynchronous operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="002b2-140">L’exemple suivant montre comment utiliser le <xref:System.IAsyncResult.IsCompleted%2A> propriété de la <xref:System.IAsyncResult> pour déterminer quand un appel asynchrone se termine.</span><span class="sxs-lookup"><span data-stu-id="002b2-140">The following example shows how to use the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> to discover when an asynchronous call completes.</span></span> <span data-ttu-id="002b2-141">Dans ce cas, l’appel asynchrone est effectué à l’aide de la `BeginInvoke` méthode d’un délégué.</span><span class="sxs-lookup"><span data-stu-id="002b2-141">In this case, the asynchronous call is made by using the `BeginInvoke` method of a delegate.</span></span> <span data-ttu-id="002b2-142">Vous pouvez utiliser le <xref:System.IAsyncResult.IsCompleted%2A> propriété pour interrogation lorsque vous passez de l’appel asynchrone à partir d’un thread qui gère l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="002b2-142">You might use the <xref:System.IAsyncResult.IsCompleted%2A> property to poll for completion when making the asynchronous call from a thread that services the user interface.</span></span> <span data-ttu-id="002b2-143">L’interrogation pour connaître l’état d’avancement permet au thread appelant de continuer à s’exécuter pendant que l’appel asynchrone s’exécute sur un thread <xref:System.Threading.ThreadPool> .</span><span class="sxs-lookup"><span data-stu-id="002b2-143">Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <xref:System.Threading.ThreadPool> thread.</span></span>  
  
 <span data-ttu-id="002b2-144">L’exemple se compose de deux classes : la classe qui contient la méthode est appelée de façon asynchrone et la classe qui contient le `Main` méthode qui effectue l’appel.</span><span class="sxs-lookup"><span data-stu-id="002b2-144">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="002b2-145">Pour plus d’informations et d’autres exemples d’appel des méthodes de façon asynchrone à l’aide de délégués, consultez [appel asynchrone des méthodes synchrones](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="002b2-145">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="002b2-146">
            <para>Les implémenteurs retourneront généralement la valeur d’un champ privé ou interne en tant que la valeur de cette propriété.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-146">
              <para>Implementers will typically return the value of a private field or internal test as the value of this property.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="002b2-147">
            <para>Les clients qui interrogent l’état de l’opération (par opposition à l’attente d’un objet de synchronisation) utilisent cette propriété pour déterminer l’état de l’opération.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="002b2-147">
              <para>Clients that poll for operation status (as opposed to waiting on a synchronization object) use this property to determine the status of the operation.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>