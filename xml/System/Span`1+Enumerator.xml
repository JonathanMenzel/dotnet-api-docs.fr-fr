<Type Name="Span&lt;T&gt;+Enumerator" FullName="System.Span&lt;T&gt;+Enumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="51216179ec9275cfab02d5dad557c501cd38affc" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58729777" /></Metadata><TypeSignature Language="C#" Value="public struct Span&lt;T&gt;.Enumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit Span`1/Enumerator&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Span`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure Span(Of T).Enumerator" />
  <TypeSignature Language="C++ CLI" Value="public: value class Span&lt;T&gt;::Enumerator" />
  <TypeSignature Language="F#" Value="type Span&lt;'T&gt;.Enumerator = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6702f-101">Fournit un énumérateur pour les éléments d’un <see cref="T:System.Span`1" />.</span><span class="sxs-lookup"><span data-stu-id="6702f-101">Provides an enumerator for the elements of a <see cref="T:System.Span`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

<span data-ttu-id="6702f-102">C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) du langage c# et le [pour chaque... Suivant](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construction dans Visual Basic masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="6702f-102">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) of the C# language and the [For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construct in Visual Basic hides the complexity of enumerators.</span></span> <span data-ttu-id="6702f-103">Plutôt que de manipuler directement l’énumérateur à l’aide de `foreach` ou `For Each...Next` est recommandé.</span><span class="sxs-lookup"><span data-stu-id="6702f-103">Instead of directly manipulating the enumerator, using `foreach` or `For Each...Next` is recommended.</span></span> 

<span data-ttu-id="6702f-104">Initialement, l’énumérateur est positionné avant le premier élément dans le <xref:System.Span%601>.</span><span class="sxs-lookup"><span data-stu-id="6702f-104">Initially, the enumerator is positioned before the first element in the <xref:System.Span%601>.</span></span> <span data-ttu-id="6702f-105">À cette position, <xref:System.Span%601.Enumerator.Current> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="6702f-105">At this position, <xref:System.Span%601.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="6702f-106">Vous devez appeler <xref:System.Span%601.Enumerator.MoveNext%2A> pour avancer l’énumérateur vers le premier élément dans le <xref:System.Span%601> avant de lire la valeur de <xref:System.Span%601.Enumerator.Current>.</span><span class="sxs-lookup"><span data-stu-id="6702f-106">You must call <xref:System.Span%601.Enumerator.MoveNext%2A> to advance the enumerator to the first item in the <xref:System.Span%601> before reading the value of <xref:System.Span%601.Enumerator.Current>.</span></span>

<span data-ttu-id="6702f-107"><xref:System.Span%601.Enumerator.Current> Retourne la même valeur jusqu'à ce que <xref:System.Span%601.Enumerator.MoveNext%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="6702f-107"><xref:System.Span%601.Enumerator.Current> returns the same value until <xref:System.Span%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="6702f-108"><xref:System.Span%601.Enumerator.MoveNext%2A> définit <xref:System.Span%601.Enumerator.Current> à l’élément suivant dans le <xref:System.Span%601>.</span><span class="sxs-lookup"><span data-stu-id="6702f-108"><xref:System.Span%601.Enumerator.MoveNext%2A> sets <xref:System.Span%601.Enumerator.Current> to the next item in the <xref:System.Span%601>.</span></span>

<span data-ttu-id="6702f-109">Si <xref:System.Span%601.Enumerator.MoveNext%2A> passe la fin de la <xref:System.Span%601>, <xref:System.Span%601.Enumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="6702f-109">If <xref:System.Span%601.Enumerator.MoveNext%2A> passes the end of the <xref:System.Span%601>, <xref:System.Span%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="6702f-110">Lorsque l’énumérateur se trouve à cet état, les appels suivants à <xref:System.Span%601.Enumerator.MoveNext%2A> également retourner `false` et <xref:System.Span%601.Enumerator.Current> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="6702f-110">When the enumerator is at this state, subsequent calls to <xref:System.Span%601.Enumerator.MoveNext%2A> also return `false` and <xref:System.Span%601.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="6702f-111">Vous ne pouvez pas définir <xref:System.Span%601.Enumerator.Current> vers le premier élément dans le <xref:System.Span%601> à nouveau ; vous devez créer une nouvelle instance de l’énumérateur à la place.</span><span class="sxs-lookup"><span data-stu-id="6702f-111">You cannot set <xref:System.Span%601.Enumerator.Current> to the first item in the <xref:System.Span%601> again; you must create a new enumerator instance instead.</span></span> 

<span data-ttu-id="6702f-112">L’énumérateur ne dispose pas d’un accès exclusif à la <xref:System.Span%601>.</span><span class="sxs-lookup"><span data-stu-id="6702f-112">The enumerator does not have exclusive access to the <xref:System.Span%601>.</span></span> <span data-ttu-id="6702f-113">En outre, les données sous-jacentes sur laquelle repose l’étendue peuvent également être modifiées.</span><span class="sxs-lookup"><span data-stu-id="6702f-113">In addition, the underlying data on which the span is based can also be modified.</span></span> <span data-ttu-id="6702f-114">Par conséquent, l’énumération d’une étendue n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="6702f-114">Therefore, enumerating through a span is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="6702f-115">Pour garantir la sécurité des threads pendant l’énumération, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="6702f-115">To guarantee thread safety during enumeration, you must implement your own synchronization.</span></span> <span data-ttu-id="6702f-116">Par exemple, le code suivant a une condition de concurrence.</span><span class="sxs-lookup"><span data-stu-id="6702f-116">For example, the following code has a race condition.</span></span> <span data-ttu-id="6702f-117">Il ne garantit pas que l’étendue est énumérée avant le `ClearContents` méthode s’exécute.</span><span class="sxs-lookup"><span data-stu-id="6702f-117">It does not ensure that the span will be enumerated before the `ClearContents` method executes.</span></span> <span data-ttu-id="6702f-118">Par conséquent, le tableau sous-jacent est désactivé pendant l’énumération de l’étendue :</span><span class="sxs-lookup"><span data-stu-id="6702f-118">As a result, the underlying array is cleared during enumeration of the span:</span></span>

[!code-csharp[System.Span<T>.Enumerator-no-synchronization](~/samples/snippets/csharp/api/system/span.enumerator/nosync/program.cs)]

<span data-ttu-id="6702f-119">Si vous synchronisez l’accès au tableau avant de l’énumération de l’étendue, comme la version révisée de la `EnumerateSpan` fait méthode dans l’exemple suivant, la `ClearContents` méthode ne modifie pas sous-jacente des données étendues pendant l’énumération.</span><span class="sxs-lookup"><span data-stu-id="6702f-119">If you synchronize access to the array before enumerating the span, as the revised version of the `EnumerateSpan` method does in the following example, the `ClearContents` method doesn't modify underlying span data during enumeration.</span></span> <span data-ttu-id="6702f-120">Notez que l’exemple verrouille le tableau sous-jacent sur lequel repose l’étendue.</span><span class="sxs-lookup"><span data-stu-id="6702f-120">Note that the example locks the underlying array on which the span is based.</span></span>  

[!code-csharp[System.Span<T>.Enumerator-no-synchronization](~/samples/snippets/csharp/api/system/span.enumerator/sync/program.cs#1)]

<span data-ttu-id="6702f-121">Contrairement à certains autres structures d’énumérateur dans .NET, le <xref:System.Span%601.Enumerator>:</span><span class="sxs-lookup"><span data-stu-id="6702f-121">Unlike some other enumerator structures in .NET, the <xref:System.Span%601.Enumerator>:</span></span>

- <span data-ttu-id="6702f-122">N’implémente pas le <xref:System.Collections.IEnumerator> ou <xref:System.Collections.Generic.IEnumerator%601> interface.</span><span class="sxs-lookup"><span data-stu-id="6702f-122">Does not implement the <xref:System.Collections.IEnumerator> or <xref:System.Collections.Generic.IEnumerator%601> interface.</span></span> <span data-ttu-id="6702f-123">Il s’agit, car <xref:System.Span%601.Enumerator> est un [ref struct](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type).</span><span class="sxs-lookup"><span data-stu-id="6702f-123">This is because <xref:System.Span%601.Enumerator> is a [ref struct](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type).</span></span>

- <span data-ttu-id="6702f-124">N’inclut pas un `Reset` (méthode), qui peut l’énumérateur à sa position initiale avant le premier élément dans l’étendue.</span><span class="sxs-lookup"><span data-stu-id="6702f-124">Does not include a `Reset` method, which can set the enumerator to its initial position before the first element in the span.</span></span> <span data-ttu-id="6702f-125">(Le <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> méthode doit être implémentée en tant que partie de l’interface, mais la plupart des implémenteurs lever une exception ou ne fournir aucune implémentation.)</span><span class="sxs-lookup"><span data-stu-id="6702f-125">(The <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> method must be implemented as part of the interface, but most implementors either throw an exception or provide no implementation.)</span></span> 
 
      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Span`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T % Current { T % get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : " Usage="System.Span&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6702f-126">Obtient une référence à l’élément à la position actuelle de l’énumérateur.</span><span class="sxs-lookup"><span data-stu-id="6702f-126">Gets a reference to the item at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="6702f-127">Élément situé dans le <see cref="T:System.Span`1" /> à la position actuelle de l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="6702f-127">The element in the <see cref="T:System.Span`1" /> at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="6702f-128">`Current` n’est pas définie dans une des conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="6702f-128">`Current` is undefined under either of the following conditions:</span></span> 

- <span data-ttu-id="6702f-129">Immédiatement après la création de l’énumérateur, l’énumérateur est positionné avant le premier élément dans l’étendue.</span><span class="sxs-lookup"><span data-stu-id="6702f-129">Immediately after the enumerator is created, the enumerator is positioned before the first element in the span.</span></span> <span data-ttu-id="6702f-130"><xref:System.Span%601.Enumerator.MoveNext%2A> doit être appelée pour avancer l’énumérateur vers le premier élément de l’étendue avant de lire la valeur de `Current`.</span><span class="sxs-lookup"><span data-stu-id="6702f-130"><xref:System.Span%601.Enumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the span before reading the value of `Current`.</span></span>

- <span data-ttu-id="6702f-131">Le dernier appel à <xref:System.Span%601.Enumerator.MoveNext%2A> retourné `false`, ce qui indique la fin de l’étendue.</span><span class="sxs-lookup"><span data-stu-id="6702f-131">The last call to <xref:System.Span%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the span.</span></span> 

<span data-ttu-id="6702f-132">`Current` Retourne la même valeur jusqu'à ce que <xref:System.Span%601.Enumerator.MoveNext%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="6702f-132">`Current` returns the same value until <xref:System.Span%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="6702f-133"><xref:System.Span%601.Enumerator.MoveNext%2A> définit `Current` à l’élément suivant dans l’étendue.</span><span class="sxs-lookup"><span data-stu-id="6702f-133"><xref:System.Span%601.Enumerator.MoveNext%2A> sets `Current` to the next item in the span.</span></span> 

      ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Span`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6702f-134">Avance l’énumérateur à l’élément suivant de <see cref="System.Span`1" />.</span><span class="sxs-lookup"><span data-stu-id="6702f-134">Advances the enumerator to the next item of the <see cref="System.Span`1" />.</span></span></summary>
        <returns><span data-ttu-id="6702f-135">`true` si l’énumérateur a avancé jusqu’à l’élément suivant ; `false` si la fin de l’étendue a été dépassée.</span><span class="sxs-lookup"><span data-stu-id="6702f-135">`true` if the enumerator successfully advanced to the next item; `false` if the end of the span has been passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="6702f-136">Une fois un énumérateur est créé, il est positionné avant le premier élément dans l’étendue et le premier appel à `MoveNext` avance l’énumérateur au premier élément dans l’étendue.</span><span class="sxs-lookup"><span data-stu-id="6702f-136">After an enumerator is created, it is positioned before the first element in the span, and the first call to `MoveNext` advances the enumerator to the first item in the span.</span></span> 

<span data-ttu-id="6702f-137">Si `MoveNext` passe la fin de l’étendue, `MoveNext` retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="6702f-137">If `MoveNext` passes the end of the span, `MoveNext` returns `false`.</span></span> <span data-ttu-id="6702f-138">Lorsque l’énumérateur se trouve à cet état, les appels suivants à `MoveNext` également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="6702f-138">When the enumerator is at this state, subsequent calls to `MoveNext` also return `false`.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>