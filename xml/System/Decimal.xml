<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Decimal.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52e7b964574f5e8e20e8201e294104a10b1df3669.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e7b964574f5e8e20e8201e294104a10b1df3669</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Represents a decimal number.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type valeur représente des nombres décimaux allant 79,228,162,514,264,337,593,543,950,335 positif sur un négatif 79,228,162,514,264,337,593,543,950,335.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The default value of a <ph id="ph1">`Decimal`</ph> is 0.</source>
          <target state="translated">La valeur par défaut d’un <ph id="ph1">`Decimal`</ph> est 0.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type valeur est appropriée pour les calculs financiers nécessitant de nombreuses intégraux et fractionnaires significatifs, sans erreurs d’arrondi.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type does not eliminate the need for rounding.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type n’élimine pas la nécessité d’arrondi.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Rather, it minimizes errors due to rounding.</source>
          <target state="translated">Au lieu de cela, il réduit les erreurs en raison de l’arrondi.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.</source>
          <target state="translated">Par exemple, le code suivant produit un résultat de 0,9999999999999999999999999999 au lieu de 1.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>When the result of the division and multiplication is passed to the <ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph> method, the result suffers no loss of precision, as the following code shows.</source>
          <target state="translated">Lorsque le résultat de la division et multiplication est passé à la <ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph> (méthode), le résultat ne subit aucune perte de précision, comme le montre le code suivant.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.</source>
          <target state="translated">Un nombre décimal est une valeur à virgule flottante qui se compose d’une connexion, une valeur numérique, où chaque chiffre dans la valeur est comprise entre 0 et 9 et un facteur d’échelle qui indique la position de la virgule décimale flottante qui sépare la partie fractionnaire intégrale de la valeur numérique.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The binary representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction.</source>
          <target state="translated">La représentation binaire d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur se compose d’un signe de 1 bit, un nombre entier 96 bits et un facteur d’échelle utilisé pour diviser l’entier 96 bits et spécifier quelle partie est une fraction décimale.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</source>
          <target state="translated">Le facteur d’échelle est implicitement le nombre 10, à une puissance allant de 0 à 28.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Therefore, the binary representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value  the form, ((-2<bpt id="p1">&lt;sup&gt;</bpt>96<ept id="p1">&lt;/sup&gt;</ept> to 2<bpt id="p2">&lt;sup&gt;</bpt>96<ept id="p2">&lt;/sup&gt;</ept>) / 10<bpt id="p3">&lt;sup&gt;</bpt>(0 to 28)<ept id="p3">&lt;/sup&gt;</ept>), where -(2<bpt id="p4">&lt;sup&gt;</bpt>96<ept id="p4">&lt;/sup&gt;</ept>-1) is equal to <ph id="ph2">&lt;xref:System.Decimal.MinValue&gt;</ph>, and 2<bpt id="p5">&lt;sup&gt;</bpt>96<ept id="p5">&lt;/sup&gt;</ept>-1 is equal to <ph id="ph3">&lt;xref:System.Decimal.MaxValue&gt;</ph>.</source>
          <target state="translated">Par conséquent, la représentation binaire d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> le formulaire, la valeur ((-2<bpt id="p1">&lt;sup&gt;</bpt>96<ept id="p1">&lt;/sup&gt;</ept> 2<bpt id="p2">&lt;sup&gt;</bpt>96<ept id="p2">&lt;/sup&gt;</ept>) / 10<bpt id="p3">&lt;sup&gt;</bpt>(0 à 28)<ept id="p3">&lt;/sup&gt;</ept>), où-(2<bpt id="p4">&lt;sup&gt;</bpt>96<ept id="p4">&lt;/sup&gt;</ept>-1) est égal à <ph id="ph2">&lt;xref:System.Decimal.MinValue&gt;</ph>et 2<bpt id="p5">&lt;sup&gt;</bpt>96<ept id="p5">&lt;/sup&gt;</ept>-1 est égal à <ph id="ph3">&lt;xref:System.Decimal.MaxValue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>For more information about the binary representation of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values and an example, see the <ph id="ph2">&lt;xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29&gt;</ph> constructor and the <ph id="ph3">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> method.</source>
          <target state="translated">Pour plus d’informations sur la représentation binaire de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeurs et obtenir un exemple, consultez la <ph id="ph2">&lt;xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29&gt;</ph> constructeur et le <ph id="ph3">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The scaling factor  also preserves any trailing zeros in a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> number.</source>
          <target state="translated">La mise à l’échelle du facteur également préserve toute fin zéros à droite dans un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> nombre.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Trailing zeros do not affect the value of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> number in arithmetic or comparison operations.</source>
          <target state="translated">Les zéros à droite n’affectent pas la valeur d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numéro dans les opérations arithmétiques ou de comparaison.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>However, trailing zeros might be revealed by the <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method if an appropriate format string is applied.</source>
          <target state="translated">Toutefois, les zéros à droite risquent d’être révélées par le <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> méthode si une chaîne de format approprié est appliquée.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Conversion Considerations</source>
          <target state="translated">Considérations sur la conversion</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>This type provides methods that convert <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to and from <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.Byte&gt;</ph>, <ph id="ph7">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt32&gt;</ph>, and <ph id="ph9">&lt;xref:System.UInt64&gt;</ph> values.</source>
          <target state="translated">Ce type fournit des méthodes qui convertissent <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> vers et à partir des valeurs <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.Byte&gt;</ph>, <ph id="ph7">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt32&gt;</ph>, et <ph id="ph9">&lt;xref:System.UInt64&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Conversions from these integral types to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> are widening conversions that never lose information or throw exceptions.</source>
          <target state="translated">Conversions de ces types intégraux pour <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> sont des conversions étendues qui jamais de perdre des informations ou lever des exceptions.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Conversions from <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to any of the integral types are narrowing conversions that round the <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value to the nearest integer value toward zero.</source>
          <target state="translated">Les conversions de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un des types intégraux sont des conversions restrictives qui arrondissent le <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur à la valeur entière la plus proche de zéro.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Some languages, such as C#, also support the conversion of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to <ph id="ph2">&lt;xref:System.Char&gt;</ph> values.</source>
          <target state="translated">Certains langages, tels que c#, prennent également en charge la conversion de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Char&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>If the result of these conversions cannot be represented in the destination type, an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception is thrown.</source>
          <target state="translated">Si le résultat de ces conversions ne peut pas être représenté dans le type de destination, un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception est levée.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type also provides methods that convert <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values to and from <ph id="ph3">&lt;xref:System.Single&gt;</ph> and <ph id="ph4">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type fournit également des méthodes qui convertissent <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> vers et à partir des valeurs <ph id="ph3">&lt;xref:System.Single&gt;</ph> et <ph id="ph4">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Conversions from <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph2">&lt;xref:System.Single&gt;</ph> or <ph id="ph3">&lt;xref:System.Double&gt;</ph> are narrowing conversions that might lose precision but not information about the magnitude of the converted value.</source>
          <target state="translated">Les conversions de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à <ph id="ph2">&lt;xref:System.Single&gt;</ph> ou <ph id="ph3">&lt;xref:System.Double&gt;</ph> sont des conversions restrictives qui peuvent perdre leur précision, mais pas les informations sur la grandeur de la valeur convertie.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The conversion does not throw an exception.</source>
          <target state="translated">La conversion ne lève pas d’exception.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Conversions from <ph id="ph1">&lt;xref:System.Single&gt;</ph> or <ph id="ph2">&lt;xref:System.Double&gt;</ph> to <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> throw an <ph id="ph4">&lt;xref:System.OverflowException&gt;</ph> exception if the result of the conversion cannot be represented as a <ph id="ph5">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Les conversions de <ph id="ph1">&lt;xref:System.Single&gt;</ph> ou <ph id="ph2">&lt;xref:System.Double&gt;</ph> à <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> lever un <ph id="ph4">&lt;xref:System.OverflowException&gt;</ph> exception si le résultat de la conversion ne peut pas être représenté comme un <ph id="ph5">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Performing Operations on Decimal Values</source>
          <target state="translated">Opérations sur les valeurs décimales</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type prend en charge des opérations mathématiques comme l’addition, soustraction, la division, multiplication et unaire négation standards.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>You can also work directly with the binary representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value by calling the <ph id="ph2">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> method.</source>
          <target state="translated">Vous pouvez également travailler directement avec la représentation binaire d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur en appelant le <ph id="ph2">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>To compare two <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values, you can use the standard numeric comparison operators, or you can call the <ph id="ph2">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Decimal.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Pour comparer deux <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeurs, vous pouvez utiliser les opérateurs de comparaison numériques standard, ou vous pouvez appeler la <ph id="ph2">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Decimal.Equals%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>You can also call the members of the <ph id="ph1">&lt;xref:System.Math&gt;</ph> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values, getting the sign of a number, and rounding a number.</source>
          <target state="translated">Vous pouvez également appeler les membres de la <ph id="ph1">&lt;xref:System.Math&gt;</ph> classe pour exécuter un large éventail d’opérations numériques, y compris pour obtenir la valeur absolue d’un nombre pour déterminer la valeur minimale ou maximale de deux <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs, le signe d’un nombre de mise en route et arrondi un nombre.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">L'exemple de code suivant montre l'utilisation de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>All members of this type are thread safe.</source>
          <target state="translated">Tous les membres de ce type sont thread-safe.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>Members that appear to modify instance state actually return a new instance initialized with the new value.</source>
          <target state="translated">Les membres qui semblent modifier l’état de l’instance retournent en fait une nouvelle instance initialisée avec la nouvelle valeur.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</source>
          <target state="translated">Comme avec tout autre type, la lecture et en écriture à une variable partagée qui contient une instance de ce type doivent être protégées par un verrou pour garantir la sécurité des threads.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Double)">
          <source>The value to represent as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Double)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the value of the specified double-precision floating-point number.</source>
          
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Double)">
          <source>This constructor rounds <ph id="ph1">`value`</ph> to 15 significant digits using rounding to nearest.</source>
          <target state="translated">Ce constructeur arrondit <ph id="ph1">`value`</ph> à 15 chiffres significatifs à l’aide de la plus proche.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Double)">
          <source>This is done even if the number has more than 15 digits and the less significant digits are zero.</source>
          <target state="translated">Cela même si le nombre possède plus de 15 chiffres et les chiffres les moins significatifs sont zéro.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Double)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with a <ph id="ph3">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">L’exemple de code suivant crée plusieurs <ph id="ph1">`Decimal`</ph> numéros à l’aide de la surcharge du constructeur qui initialise un <ph id="ph2">`Decimal`</ph> structure avec un <ph id="ph3">&lt;xref:System.Double&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Double)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32)">
          <source>The value to represent as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the value of the specified 32-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with an <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated">L’exemple de code suivant crée plusieurs <ph id="ph1">`Decimal`</ph> numéros à l’aide de la surcharge du constructeur qui initialise un <ph id="ph2">`Decimal`</ph> structure avec un <ph id="ph3">&lt;xref:System.Int32&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>An array of 32-bit signed integers containing a representation of a decimal value.</source>
          
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a decimal value represented in binary and contained in a specified array.</source>
          
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>The binary representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</source>
          <target state="translated">La représentation binaire d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numéro se compose d’un signe de 1 bit, un nombre entier 96 bits et un facteur d’échelle utilisé pour diviser le nombre entier et spécifier quelle partie est une fraction décimale.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</source>
          <target state="translated">Le facteur d’échelle est implicitement le nombre 10, à une puissance allant de 0 à 28.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source><ph id="ph1">`bits`</ph> is a four-element long array of 32-bit signed integers.</source>
          <target state="translated"><ph id="ph1">`bits`</ph> est un tableau d’entiers signés 32 bits sur quatre éléments.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source><ph id="ph1">`bits`</ph> [0], <ph id="ph2">`bits`</ph> [1], and <ph id="ph3">`bits`</ph> [2] contain the low, middle, and high 32 bits of the 96-bit integer number.</source>
          <target state="translated"><ph id="ph1">`bits`</ph> [0], <ph id="ph2">`bits`</ph> [1], et <ph id="ph3">`bits`</ph> [2] contiennent les 32 bits de poids faibles, moyen et élevés du nombre entier 96 bits.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source><ph id="ph1">`bits`</ph> [3] contains the scale factor and sign, and consists of following parts:</source>
          <target state="translated"><ph id="ph1">`bits`</ph> [3] contient le facteur d’échelle et le signe et se compose des éléments suivants :</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>Bits 0 to 15, the lower word, are unused and must be zero.</source>
          <target state="translated">Les bits 0 à 15, le mot de poids faible, ne sont pas utilisés et doivent être égal à zéro.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</source>
          <target state="translated">Les bits 16 à 23 doivent contenir un exposant compris entre 0 et 28, ce qui indique la puissance de 10 pour diviser le nombre entier.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>Bits 24 to 30 are unused and must be zero.</source>
          <target state="translated">Les bits 24 à 30 ne sont pas utilisés et doivent être égal à zéro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.</source>
          <target state="translated">Le bit 31 contient le signe ; 0 signifie positif et 1 négatif.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>A numeric value might have several possible binary representations; all are equally valid and numerically equivalent.</source>
          <target state="translated">Une valeur numérique peut avoir plusieurs représentations binaires. tous sont également valides et équivalentes numériquement.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>Note that the bit representation differentiates between negative and positive zero.</source>
          <target state="translated">Notez que la représentation sous forme de bits fait la distinction entre le zéro positif et négatif.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>These values are treated as being equal in all operations.</source>
          <target state="translated">Ces valeurs sont traitées comme étant égales dans toutes les opérations.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with an array of four <ph id="ph3">&lt;xref:System.Int32&gt;</ph> values.</source>
          <target state="translated">L’exemple de code suivant crée plusieurs <ph id="ph1">`Decimal`</ph> numéros à l’aide de la surcharge du constructeur qui initialise un <ph id="ph2">`Decimal`</ph> structure avec un tableau de quatre <ph id="ph3">&lt;xref:System.Int32&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source><ph id="ph1">&lt;paramref name="bits" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>The length of the <ph id="ph1">&lt;paramref name="bits" /&gt;</ph> is not 4.</source>
          
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32[])">
          <source>The representation of the decimal value in <ph id="ph1">&lt;paramref name="bits" /&gt;</ph> is not valid.</source>
          
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int64)">
          <source>The value to represent as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int64)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the value of the specified 64-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int64)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with an <ph id="ph3">&lt;xref:System.Int64&gt;</ph> value.</source>
          <target state="translated">L’exemple de code suivant crée plusieurs <ph id="ph1">`Decimal`</ph> numéros à l’aide de la surcharge du constructeur qui initialise un <ph id="ph2">`Decimal`</ph> structure avec un <ph id="ph3">&lt;xref:System.Int64&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Single)">
          <source>The value to represent as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Single)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the value of the specified single-precision floating-point number.</source>
          
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Single)">
          <source>This constructor rounds <ph id="ph1">`value`</ph> to 7 significant digits using rounding to nearest.</source>
          <target state="translated">Ce constructeur arrondit <ph id="ph1">`value`</ph> à 7 chiffres significatifs à l’aide de la plus proche.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Single)">
          <source>This is done even if the number has more than 7 digits and the less significant digits are zero.</source>
          <target state="translated">Cela même si le nombre possède plus de 7 chiffres et les chiffres les moins significatifs sont zéro.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Single)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with a <ph id="ph3">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">L’exemple de code suivant crée plusieurs <ph id="ph1">`Decimal`</ph> numéros à l’aide de la surcharge du constructeur qui initialise un <ph id="ph2">`Decimal`</ph> structure avec un <ph id="ph3">&lt;xref:System.Single&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Single)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.UInt32)">
          <source>The value to represent as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.UInt32)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the value of the specified 32-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.UInt32)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with a <ph id="ph3">&lt;xref:System.UInt32&gt;</ph> value.</source>
          <target state="translated">L’exemple de code suivant crée plusieurs <ph id="ph1">`Decimal`</ph> numéros à l’aide de la surcharge du constructeur qui initialise un <ph id="ph2">`Decimal`</ph> structure avec un <ph id="ph3">&lt;xref:System.UInt32&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.UInt64)">
          <source>The value to represent as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.UInt64)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the value of the specified 64-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.UInt64)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with a <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> value.</source>
          <target state="translated">L’exemple de code suivant crée plusieurs <ph id="ph1">`Decimal`</ph> numéros à l’aide de la surcharge du constructeur qui initialise un <ph id="ph2">`Decimal`</ph> structure avec un <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The low 32 bits of a 96-bit integer.</source>
          
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The middle 32 bits of a 96-bit integer.</source>
          
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The high 32 bits of a 96-bit integer.</source>
          
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate a negative number; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to indicate a positive number.</source>
          
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>A power of 10 ranging from 0 to 28.</source>
          
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> from parameters specifying the instance's constituent parts.</source>
          
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The binary representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</source>
          <target state="translated">La représentation binaire d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numéro se compose d’un signe de 1 bit, un nombre entier 96 bits et un facteur d’échelle utilisé pour diviser le nombre entier et spécifier quelle partie est une fraction décimale.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.</source>
          <target state="translated">Le facteur d’échelle est implicitement le nombre 10 élevé à une puissance allant de 0 à 28.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The following code example creates several <ph id="ph1">`Decimal`</ph> numbers using the constructor overload that initializes a <ph id="ph2">`Decimal`</ph> structure with three <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value words, a <ph id="ph4">&lt;xref:System.Boolean&gt;</ph> sign, and a <ph id="ph5">&lt;xref:System.Byte&gt;</ph> scale factor.</source>
          <target state="translated">L’exemple de code suivant crée plusieurs <ph id="ph1">`Decimal`</ph> numéros à l’aide de la surcharge du constructeur qui initialise un <ph id="ph2">`Decimal`</ph> structure avec trois <ph id="ph3">&lt;xref:System.Int32&gt;</ph> valeur mots, un <ph id="ph4">&lt;xref:System.Boolean&gt;</ph> signe et un <ph id="ph5">&lt;xref:System.Byte&gt;</ph> facteur d’échelle.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> method to retrieve the component parts of an array.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> pour récupérer les éléments d’un tableau.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source>It then uses this array in the call to the <ph id="ph1">&lt;xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29&gt;</ph> constructor to instantiate a new <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">Il utilise ensuite ce tableau dans l’appel à la <ph id="ph1">&lt;xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29&gt;</ph> constructeur pour instancier un nouvel <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
          <source><ph id="ph1">&lt;paramref name="scale" /&gt;</ph> is greater than 28.</source>
          
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Decimal.Add(System.Decimal,System.Decimal)">
          <source>The first value to add.</source>
          
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Decimal.Add(System.Decimal,System.Decimal)">
          <source>The second value to add.</source>
          
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Decimal.Add(System.Decimal,System.Decimal)">
          <source>Adds two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Decimal.Add(System.Decimal,System.Decimal)">
          <source>The sum of <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Add(System.Decimal,System.Decimal)">
          <source>The following code sample illustrates the use of <ph id="ph1">`Add`</ph> :</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de <ph id="ph1">`Add`</ph> :</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Decimal.Add(System.Decimal,System.Decimal)">
          <source>The sum of <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="d2" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>A decimal number.</source>
          
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>Returns the smallest integral value that is greater than or equal to the specified decimal number.</source>
          
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>The smallest integral value that is greater than or equal to the <ph id="ph1">&lt;paramref name="d" /&gt;</ph> parameter.</source>
          
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>Note that this method returns a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> instead of an integral type.</source>
          
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
          <target state="translated">Le comportement de cette méthode suit la norme IEEE 754, section 4.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>This kind of rounding is sometimes called rounding toward positive infinity.</source>
          <target state="translated">Ce type d’arrondi est parfois appelé arrondi vers l’infini positif.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>In other words, if <ph id="ph1">`d`</ph> is positive, the presence of any fractional component causes <ph id="ph2">`d`</ph> to be rounded to the next highest integer.</source>
          <target state="translated">En d’autres termes, si <ph id="ph1">`d`</ph> est un nombre positif, la présence de toutes les causes de la partie fractionnaire <ph id="ph2">`d`</ph> doit être arrondie à l’entier le plus élevé.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>If <ph id="ph1">`d`</ph> is negative, the rounding operation causes any fractional component of <ph id="ph2">`d`</ph> to be discarded.</source>
          <target state="translated">Si <ph id="ph1">`d`</ph> est négatif, l’opération d’arrondi provoque une partie décimale de <ph id="ph2">`d`</ph> sera ignoré.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>The operation of this method differs from the <ph id="ph1">&lt;xref:System.Decimal.Floor%2A&gt;</ph> method, which supports rounding toward negative infinity.</source>
          <target state="translated">Le fonctionnement de cette méthode diffère de la <ph id="ph1">&lt;xref:System.Decimal.Floor%2A&gt;</ph> (méthode), qui prend en charge l’arrondi vers l’infini négatif.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Ceiling(System.Decimal)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> method and contrasts it with the <ph id="ph2">&lt;xref:System.Decimal.Floor%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> (méthode) et l’oppose à le <ph id="ph2">&lt;xref:System.Decimal.Floor%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>Compares two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>A signed number indicating the relative values of <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="d1" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="d2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph4">&lt;paramref name="d2" /&gt;</ph> are equal.</source>
          
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="d1" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="d2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>The following example compares several <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant compare plusieurs <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>Note that the first comparison indicates that the two values are equal despite the subtraction operation performed on the <ph id="ph1">`value2`</ph> variable.</source>
          <target state="translated">Notez que la première comparaison indique que les deux valeurs sont égales en dépit de l’opération de soustraction sur la <ph id="ph1">`value2`</ph> variable.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
          <source>This is because the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type has 29 digits of precision, whereas a difference between these two values can be detected only with 30 digits of precision.</source>
          <target state="translated">C’est parce que le <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type a 29 chiffres de précision, alors qu’une différence entre ces deux valeurs peut être détectée uniquement avec 30 chiffres de précision.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Compares this instance to a specified object or <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> and returns an indication of their relative values.</source>
          
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>The object to compare with this instance.</source>
          
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>Compares this instance to a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object and returns a comparison of their relative values.</source>
          
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>A signed number indicating the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">Cette méthode implémente la <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> de l’interface et effectue légèrement meilleures que les <ph id="ph2">&lt;xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType&gt;</ph> (méthode), car il n’a pas à convertir le <ph id="ph3">`value`</ph> paramètre à un objet.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>Depending on your programming language, it might be possible to code a <ph id="ph1">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> method where the parameter type has fewer bits (is narrower) than the instance type.</source>
          <target state="translated">Selon votre langage de programmation, il est possible au code un <ph id="ph1">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> méthode dans laquelle le type de paramètre comporte moins de bits (est plus restreint) que le type d’instance.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</source>
          <target state="translated">Cela est possible, car certains langages de programmation effectuent une conversion étendue implicite qui représente le paramètre en tant que type avec autant de bits que l’instance.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">Par exemple, supposons que le type d’instance est <ph id="ph1">&lt;xref:System.Int32&gt;</ph> et le type de paramètre est <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>The Microsoft C# compiler generates instructions to represent the parameter as an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> object, then generates a <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method to compare the values of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instance and the <ph id="ph4">&lt;xref:System.Int32&gt;</ph> parameter representation.</source>
          <target state="translated">Le compilateur Microsoft c# génère des instructions pour représenter le paramètre en tant qu’un <ph id="ph1">&lt;xref:System.Int32&gt;</ph> de l’objet, puis génère un <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> méthode pour comparer les valeurs de la <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instance et le <ph id="ph4">&lt;xref:System.Int32&gt;</ph> la représentation sous forme de paramètre.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</source>
          <target state="translated">Consultez la documentation de votre langage de programmation pour déterminer si son compilateur exécute des conversions étendues implicites sur les types numériques.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Decimal)">
          <source>The following code example demonstrates generic and nongeneric versions of the <ph id="ph1">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> method for several value and reference types.</source>
          <target state="translated">L’exemple de code suivant montre les versions génériques et non génériques de la <ph id="ph1">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> méthode pour plusieurs types valeur et référence.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>The object to compare with this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns a comparison of their relative values.</source>
          
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>A signed number indicating the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>Any instance of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>, regardless of its value, is considered greater than <ph id="ph2">`null`</ph>.</source>
          <target state="translated">N’importe quelle instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>, quelle que soit sa valeur, est considéré comme supérieur à <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>Parameter <ph id="ph1">`value`</ph> must be <ph id="ph2">`null`</ph> or an instance of <ph id="ph3">&lt;xref:System.Decimal&gt;</ph>; otherwise, an exception is thrown.</source>
          <target state="translated">Paramètre <ph id="ph1">`value`</ph> doit être <ph id="ph2">`null`</ph> ou une instance de <ph id="ph3">&lt;xref:System.Decimal&gt;</ph>; sinon, une exception est levée.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.CompareTo(System.Object)">
          <source>The following code example compares several <ph id="ph1">`Decimal`</ph> and other objects to a reference <ph id="ph2">`Decimal`</ph> value using the <ph id="ph3">`CompareTo`</ph> method.</source>
          <target state="translated">L’exemple de code suivant compare plusieurs <ph id="ph1">`Decimal`</ph> et d’autres objets à une référence <ph id="ph2">`Decimal`</ph> valeur à l’aide de la <ph id="ph3">`CompareTo`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Decimal.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source>The dividend.</source>
          
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source>The divisor.</source>
          
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source>Divides two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source>The result of dividing <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> by <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Decimal.Divide%2A&gt;</ph> method to divide a range of values by 22.1.</source>
          <target state="translated">L’exemple suivant appelle la <ph id="ph1">&lt;xref:System.Decimal.Divide%2A&gt;</ph> méthode par laquelle diviser une plage de valeurs 22.1.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d2" /&gt;</ph> is zero.</source>
          
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
          <source>The return value (that is, the quotient) is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Returns a value indicating whether two instances of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> represent the same value.</source>
          
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>An object to compare to this instance.</source>
          
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>Returns a value indicating whether this instance and a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object represent the same value.</source>
          
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is equal to this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than <ph id="ph2">&lt;xref:System.Decimal.Equals%2A&gt;</ph> because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">Cette méthode implémente la <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> de l’interface et effectue légèrement meilleures que <ph id="ph2">&lt;xref:System.Decimal.Equals%2A&gt;</ph> , car il n’a pas à convertir le <ph id="ph3">`value`</ph> paramètre d’objet.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>If <ph id="ph1">`value`</ph> has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> comporte moins de bits (est plus restreint) que le type d’instance, certains langages de programmation procèdent à une conversion étendue implicite qui transforme la valeur du paramètre en valeur possédant plus de bits.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">Par exemple, supposons que le type d’instance est <ph id="ph1">&lt;xref:System.Int32&gt;</ph> et le type de paramètre est <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> object, then generates a <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method to compare the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instance and parameter representation.</source>
          <target state="translated">Le compilateur Microsoft c# génère des instructions pour représenter la valeur du paramètre comme une <ph id="ph1">&lt;xref:System.Int32&gt;</ph> de l’objet, puis génère un <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> méthode pour comparer la <ph id="ph3">&lt;xref:System.Int32&gt;</ph> représentation sous forme de paramètres et d’instance.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</source>
          <target state="translated">Consultez la documentation de votre langage de programmation pour déterminer si son compilateur exécute des conversions étendues implicites sur les types numériques.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>Compiler overload resolution may account for an apparent difference in the behavior of the two <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> method overloads.</source>
          <target state="translated">La résolution de surcharge du compilateur peut-être représenter une différence apparente le comportement des deux <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>If an implicit conversion between the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argument and a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> is defined and the argument is not typed as an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compilers may perform an implicit conversion and call the <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> method.</source>
          <target state="translated">Si une conversion implicite entre les <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argument et un <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> est défini et l’argument n’est pas typé comme un <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compilateurs peuvent effectuer une conversion implicite et l’appel de la <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>Otherwise, they call the <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> method, which always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> if its <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> argument is not a <ph id="ph4">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Sinon, elles appellent la <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> (méthode), qui retourne toujours <ph id="ph2">&lt;see langword="false" /&gt;</ph> si son <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> argument n’est pas un <ph id="ph4">&lt;see cref="T:System.Decimal" /&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>The following example illustrates the difference in behavior between the two method overloads.</source>
          <target state="translated">L’exemple suivant illustre la différence de comportement entre les surcharges de deux méthode.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal)">
          <source>In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> because the compiler automatically performs a widening conversion and calls the <ph id="ph2">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> method, whereas the second comparison returns <ph id="ph3">&lt;see langword="false" /&gt;</ph> because the compiler calls the <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Dans le cas de tous les types primitifs intégraux, y compris les deux signés et types, la première comparaison retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> , car le compilateur effectue automatiquement une conversion étendue et appelle le <ph id="ph2">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> (méthode), tandis que la seconde comparaison retourne <ph id="ph3">&lt;see langword="false" /&gt;</ph> , car le compilateur appelle le <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Object)">
          <source>Returns a value indicating whether this instance and a specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> represent the same type and value.</source>
          
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph> and equal to this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Object)">
          <source>The following code example compares several <ph id="ph1">`Decimal`</ph> and other objects to a reference <ph id="ph2">`Decimal`</ph> value using the <ph id="ph3">`Equals`</ph> method.</source>
          <target state="translated">L’exemple de code suivant compare plusieurs <ph id="ph1">`Decimal`</ph> et d’autres objets à une référence <ph id="ph2">`Decimal`</ph> valeur à l’aide de la <ph id="ph3">`Equals`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Object)">
          <source>Compiler overload resolution may account for an apparent difference in the behavior of the two <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> method overloads.</source>
          <target state="translated">La résolution de surcharge du compilateur peut-être représenter une différence apparente le comportement des deux <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> surcharges de méthode.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Object)">
          <source>If an implicit conversion between the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argument and a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> is defined and the argument is not typed as an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compilers may perform an implicit conversion and call the <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> method.</source>
          <target state="translated">Si une conversion implicite entre les <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argument et un <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> est défini et l’argument n’est pas typé comme un <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compilateurs peuvent effectuer une conversion implicite et l’appel de la <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Object)">
          <source>Otherwise, they call the <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> method, which always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> if its <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> argument is not a <ph id="ph4">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Sinon, elles appellent la <ph id="ph1">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> (méthode), qui retourne toujours <ph id="ph2">&lt;see langword="false" /&gt;</ph> si son <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> argument n’est pas un <ph id="ph4">&lt;see cref="T:System.Decimal" /&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Object)">
          <source>The following example illustrates the difference in behavior between the two method overloads.</source>
          <target state="translated">L’exemple suivant illustre la différence de comportement entre les surcharges de deux méthode.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Object)">
          <source>In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> because the compiler automatically performs a widening conversion and calls the <ph id="ph2">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> method, whereas the second comparison returns <ph id="ph3">&lt;see langword="false" /&gt;</ph> because the compiler calls the <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Dans le cas de tous les types primitifs intégraux, y compris les deux signés et types, la première comparaison retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> , car le compilateur effectue automatiquement une conversion étendue et appelle le <ph id="ph2">&lt;see cref="M:System.Decimal.Equals(System.Decimal)" /&gt;</ph> (méthode), tandis que la seconde comparaison retourne <ph id="ph3">&lt;see langword="false" /&gt;</ph> , car le compilateur appelle le <ph id="ph4">&lt;see cref="M:System.Decimal.Equals(System.Object)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
          <source>Returns a value indicating whether two specified instances of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> represent the same value.</source>
          
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="d2" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
          <source>The following code example compares several <ph id="ph1">`Decimal`</ph> values to a reference <ph id="ph2">`Decimal`</ph> value using the static <ph id="ph3">`Equals`</ph> method.</source>
          <target state="translated">L’exemple de code suivant compare plusieurs <ph id="ph1">`Decimal`</ph> valeurs à une référence <ph id="ph2">`Decimal`</ph> valeur à l’aide de la méthode statique <ph id="ph3">`Equals`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>The value to round.</source>
          
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>Rounds a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> number to the closest integer toward negative infinity.</source>
          
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> has a fractional part, the next whole <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> number toward negative infinity that is less than <ph id="ph3">&lt;paramref name="d" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> doesn't have a fractional part, <ph id="ph2">&lt;paramref name="d" /&gt;</ph> is returned unchanged.</source>
          
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>Note that the method returns an integral value of type <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>The behavior of this method follows IEEE Standard 754, Section 4.</source>
          <target state="translated">Le comportement de cette méthode suit la norme IEEE 754, Section 4.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>This kind of rounding is sometimes called rounding toward negative infinity.</source>
          <target state="translated">Ce type d’arrondi est parfois appelé arrondi vers l’infini négatif.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>In other words, if <ph id="ph1">`d`</ph> is positive, any fractional component is truncated.</source>
          <target state="translated">En d’autres termes, si <ph id="ph1">`d`</ph> est positif, toute partie fractionnaire est tronquée.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>If <ph id="ph1">`d`</ph> is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</source>
          <target state="translated">Si <ph id="ph1">`d`</ph> est négatif, la présence de tout composant fractions de seconde entraîne un arrondi à l’entier inférieur.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>The operation of this method differs from the <ph id="ph1">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> method, which supports rounding toward positive infinity.</source>
          <target state="translated">Le fonctionnement de cette méthode diffère de la <ph id="ph1">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> (méthode), qui prend en charge l’arrondi vers l’infini positif.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Floor(System.Decimal)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Decimal.Floor%2A&gt;</ph> method and contrasts it with the <ph id="ph2">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Decimal.Floor%2A&gt;</ph> (méthode) et l’oppose à le <ph id="ph2">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Decimal.FromOACurrency(System.Int64)">
          <source>An OLE Automation Currency value.</source>
          
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Decimal.FromOACurrency(System.Int64)">
          <source>Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Decimal.FromOACurrency(System.Int64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> that contains the equivalent of <ph id="ph2">&lt;paramref name="cy" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.FromOACurrency(System.Int64)">
          <source>The following code example uses the <ph id="ph1">`FromOACurrency`</ph> method to convert <ph id="ph2">&lt;xref:System.Int64&gt;</ph> fields that contain OLE Automation Currency values to the equivalent <ph id="ph3">`Decimal`</ph> numbers.</source>
          <target state="translated">Le code suivant exemple utilise le <ph id="ph1">`FromOACurrency`</ph> méthode pour convertir <ph id="ph2">&lt;xref:System.Int64&gt;</ph> les champs qui contiennent des valeurs monétaires OLE Automation équivalente <ph id="ph3">`Decimal`</ph> numéros.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The value to convert.</source>
          
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>Converts the value of a specified instance of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to its equivalent binary representation.</source>
          
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>A 32-bit signed integer array with four elements that contain the binary representation of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The binary representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</source>
          <target state="translated">La représentation binaire d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numéro se compose d’un signe de 1 bit, un nombre entier 96 bits et un facteur d’échelle utilisé pour diviser le nombre entier et spécifier quelle partie est une fraction décimale.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</source>
          <target state="translated">Le facteur d’échelle est implicitement le nombre 10, à une puissance allant de 0 à 28.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The return value is a four-element array of 32-bit signed integers.</source>
          <target state="translated">La valeur de retour est un tableau de quatre éléments d’entiers signés 32 bits.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.</source>
          <target state="translated">La première, deuxième et troisième éléments du tableau retourné contiennent les 32 bits de poids faibles, moyen et élevés du nombre entier 96 bits.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The fourth element of the returned array contains the scale factor and sign.</source>
          <target state="translated">Le quatrième élément du tableau retourné contient le facteur d’échelle et le signe.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>It consists of the following parts:</source>
          <target state="translated">Il se compose des éléments suivants :</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>Bits 0 to 15, the lower word, are unused and must be zero.</source>
          <target state="translated">Les bits 0 à 15, le mot de poids faible, ne sont pas utilisés et doivent être égal à zéro.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</source>
          <target state="translated">Les bits 16 à 23 doivent contenir un exposant compris entre 0 et 28, ce qui indique la puissance de 10 pour diviser le nombre entier.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>Bits 24 to 30 are unused and must be zero.</source>
          <target state="translated">Les bits 24 à 30 ne sont pas utilisés et doivent être égal à zéro.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>Bit 31 contains the sign: 0 mean positive, and 1 means negative.</source>
          <target state="translated">Le bit 31 contient le signe : 0 signifie positif et 1 signifie négatif.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>Note that the bit representation differentiates between negative and positive zero.</source>
          <target state="translated">Notez que la représentation sous forme de bits fait la distinction entre le zéro positif et négatif.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>These values are treated as being equal in all operations.</source>
          <target state="translated">Ces valeurs sont traitées comme étant égales dans toutes les opérations.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The following example uses the <ph id="ph1">`GetBits`</ph> method to convert several <ph id="ph2">`Decimal`</ph> values to their equivalent binary representations.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">`GetBits`</ph> méthode pour convertir plusieurs <ph id="ph2">`Decimal`</ph> valeurs à leurs représentations binaires équivalentes.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>It then displays the decimal values and the hexadecimal value of the elements in the array returned by the <ph id="ph1">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> method.</source>
          <target state="translated">Il affiche ensuite les valeurs décimales et la valeur hexadécimale des éléments dans le tableau retourné par la <ph id="ph1">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> method to retrieve the component parts of an array.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> pour récupérer les éléments d’un tableau.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetBits(System.Decimal)">
          <source>It then uses this array in the call to the <ph id="ph1">&lt;xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29&gt;</ph> constructor to instantiate a new <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">Il utilise ensuite ce tableau dans l’appel à la <ph id="ph1">&lt;xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29&gt;</ph> constructeur pour instancier un nouvel <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetTypeCode">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> for value type <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Decimal.GetTypeCode">
          <source>The enumerated constant <ph id="ph1">&lt;see cref="F:System.TypeCode.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.GetTypeCode">
          <source>The following code example uses the <ph id="ph1">`GetTypeCode`</ph> method to return the type code for <ph id="ph2">`Decimal`</ph> value type.</source>
          <target state="translated">Le code suivant exemple utilise le <ph id="ph1">`GetTypeCode`</ph> méthode pour retourner le code du type de <ph id="ph2">`Decimal`</ph> type valeur.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="F:System.Decimal.MaxValue">
          <source>Represents the largest possible value of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="F:System.Decimal.MaxValue">
          <source>This field is constant and read-only.</source>
          
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.MaxValue">
          <source>The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.</source>
          <target state="translated">La valeur de cette constante est 79,228,162,514,264,337,593,543,950,335 positif.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.MaxValue">
          <source>The following code sample illustrates the use of <ph id="ph1">`MaxValue`</ph> :</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de <ph id="ph1">`MaxValue`</ph> :</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="F:System.Decimal.MinusOne">
          <source>Represents the number negative one (-1).</source>
          
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.MinusOne">
          <source>The following code example illustrates the use of the <ph id="ph1">`MinusOne`</ph> field.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">`MinusOne`</ph> champ.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="F:System.Decimal.MinValue">
          <source>Represents the smallest possible value of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="F:System.Decimal.MinValue">
          <source>This field is constant and read-only.</source>
          
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.MinValue">
          <source>The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.</source>
          <target state="translated">La valeur de cette constante est 79,228,162,514,264,337,593,543,950,335 négatif.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.MinValue">
          <source>The following code example illustrates the use of the <ph id="ph1">`MinValue`</ph> field.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">`MinValue`</ph> champ.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
          <source>The multiplicand.</source>
          
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
          <source>The multiplier.</source>
          
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
          <source>Multiplies two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
          <source>The result of multiplying <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
          <source>The following code example creates several pairs of <ph id="ph1">`Decimal`</ph> values and calculates their products with the <ph id="ph2">`Multiply`</ph> method.</source>
          <target state="translated">L’exemple de code suivant crée plusieurs paires de <ph id="ph1">`Decimal`</ph> les valeurs et calcule leurs produits avec le <ph id="ph2">`Multiply`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Decimal.Negate(System.Decimal)">
          <source>The value to negate.</source>
          
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Decimal.Negate(System.Decimal)">
          <source>Returns the result of multiplying the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value by negative one.</source>
          
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Decimal.Negate(System.Decimal)">
          <source>A decimal number with the value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>, but the opposite sign.</source>
          
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Decimal.Negate(System.Decimal)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Decimal.Negate(System.Decimal)">
          <source>Zero, if <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is zero.</source>
          
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Negate(System.Decimal)">
          <source>The following code example uses the <ph id="ph1">`Negate`</ph> method to change the sign of several <ph id="ph2">`Decimal`</ph> values.</source>
          <target state="translated">Le code suivant exemple utilise le <ph id="ph1">`Negate`</ph> méthode pour modifier la connexion de plusieurs <ph id="ph2">`Decimal`</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="F:System.Decimal.One">
          <source>Represents the number one (1).</source>
          
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.One">
          <source>The following code example illustrates the use of the <ph id="ph1">`One`</ph> field.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">`One`</ph> champ.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>The first value to add.</source>
          
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>The second value to add.</source>
          
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>Adds two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>The result of adding <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Addition%2A&gt;</ph> method defines the operation of the addition operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_Addition%2A&gt;</ph> méthode définit l’opération de l’opérateur d’addition pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Add%2A&gt;</ph> method instead.</source>
          <target state="translated">Si la langue que vous utilisez ne prend pas en charge les opérateurs personnalisés, appelez le <ph id="ph1">&lt;xref:System.Decimal.Add%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>The value to decrement.</source>
          
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>Decrements the <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> operand by one.</source>
          
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>The value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph> decremented by 1.</source>
          
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Decrement%2A&gt;</ph> method defines the operation of the decrement operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_Decrement%2A&gt;</ph> méthode définit l’opération de l’opérateur de décrémentation pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>Some languages (such as Visual Basic) that lack an increment operator can call the <ph id="ph1">&lt;xref:System.Decimal.op_Decrement%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Certains langages (par exemple, Visual Basic) qui n’ont pas d’opérateur d’incrémentation peuvent appeler le <ph id="ph1">&lt;xref:System.Decimal.op_Decrement%2A&gt;</ph> (méthode) directement, comme l’exemple suivant montre le.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>If your language does not support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Subtract%2A&gt;</ph> method instead, as the following example shows.</source>
          <target state="translated">Si votre langage ne prend pas en charge les opérateurs personnalisés, appelez le <ph id="ph1">&lt;xref:System.Decimal.Subtract%2A&gt;</ph> méthode à la place, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Decrement(System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>The dividend.</source>
          
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>The divisor.</source>
          
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>Divides two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>The result of dividing <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> by <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Division%2A&gt;</ph> method defines the operation of the division operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_Division%2A&gt;</ph> méthode définit l’opération de l’opérateur de division pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Divide%2A&gt;</ph> method instead.</source>
          <target state="translated">Si la langue que vous utilisez ne prend pas en charge les opérateurs personnalisés, appelez le <ph id="ph1">&lt;xref:System.Decimal.Divide%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d2" /&gt;</ph> is zero.</source>
          
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>Returns a value that indicates whether two <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values are equal.</source>
          
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="d2" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Equality%2A&gt;</ph> method defines the operation of the equality operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_Equality%2A&gt;</ph> méthode définit l’opération de l’opérateur d’égalité pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Equals%2A&gt;</ph> method instead.</source>
          <target state="translated">Si la langue que vous utilisez ne prend pas en charge les opérateurs personnalisés, appelez le <ph id="ph1">&lt;xref:System.Decimal.Equals%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Defines an explicit conversion between a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object and another type.</source>
          
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>The value to convert.</source>
          
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to an 8-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>An 8-bit unsigned integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">Cet opérateur prend en charge la conversion explicite d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La syntaxe de ces conversions explicites dépend du langage, et les compilateurs de langage individuels peuvent fournir des implémentations différentes et retourner des résultats différents.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value by using C#, C++, and Visual Basic.</source>
          <target state="translated">L’exemple illustre les différentes valeurs de retournés lorsque vous convertissez explicitement une <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur un <ph id="ph2">&lt;xref:System.Byte&gt;</ph> à l’aide de c#, C++ et Visual Basic.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour effectuer une conversion indépendante du langage, vous pouvez appeler la <ph id="ph1">&lt;xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Byte&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> nombres <ph id="ph2">&lt;xref:System.Byte&gt;</ph> valeurs à l’aide d’explicites <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> à <ph id="ph4">&lt;xref:System.Byte&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>The value to convert.</source>
          
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a Unicode character.</source>
          
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>A Unicode character that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Char&gt;</ph>.</source>
          <target state="translated">Cet opérateur prend en charge la conversion explicite d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.Char&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results, or might not support the conversion at all.</source>
          <target state="translated">La syntaxe de ces conversions explicites dépend du langage, et les compilateurs de langage individuels peuvent fournir des implémentations différentes et retourner des résultats différents, ou ne peut-être pas en charge la conversion.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>For example, the Visual Basic and C++ compilers do not support an explicit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Char&gt;</ph> conversion.</source>
          <target state="translated">Par exemple, il est possible que les compilateurs Visual Basic et C++ ne gèrent pas explicite <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.Char&gt;</ph> conversion.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Char&gt;</ph> values (Unicode characters) by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Char&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> nombres <ph id="ph2">&lt;xref:System.Char&gt;</ph> valeurs (caractères Unicode) à l’aide d’explicites <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> à <ph id="ph4">&lt;xref:System.Char&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>The value to convert.</source>
          
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a double-precision floating-point number.</source>
          
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>A double-precision floating-point number that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>This operation can result in a loss of precision, because a double-precision floating-point number has fewer significant digits than a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Cette opération peut entraîner une perte de précision, car un nombre à virgule flottante double précision a moins de chiffres significatifs qu’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">Cet opérateur prend en charge la conversion explicite d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La syntaxe de ces conversions explicites dépend du langage, et les compilateurs de langage individuels peuvent fournir des implémentations différentes et retourner des résultats différents.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value by using C#, C++, and Visual Basic.</source>
          <target state="translated">L’exemple illustre les différentes valeurs de retournés lorsque vous convertissez explicitement une <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur un <ph id="ph2">&lt;xref:System.Double&gt;</ph> à l’aide de c#, C++ et Visual Basic.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour effectuer une conversion indépendante du langage, vous pouvez appeler la <ph id="ph1">&lt;xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Double&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Double&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> nombres <ph id="ph2">&lt;xref:System.Double&gt;</ph> valeurs à l’aide d’explicites <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> à <ph id="ph4">&lt;xref:System.Double&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>The value to convert.</source>
          
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a 16-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>A 16-bit signed integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to an <ph id="ph2">&lt;xref:System.Int16&gt;</ph>.</source>
          <target state="translated">Cet opérateur prend en charge la conversion explicite d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.Int16&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La syntaxe de ces conversions explicites dépend du langage, et les compilateurs de langage individuels peuvent fournir des implémentations différentes et retourner des résultats différents.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an <ph id="ph2">&lt;xref:System.Int16&gt;</ph> value by using C#, Visual Basic, and C++.</source>
          <target state="translated">L’exemple illustre les différentes valeurs de retournés lorsque vous convertissez explicitement une <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur un <ph id="ph2">&lt;xref:System.Int16&gt;</ph> à l’aide de c#, Visual Basic et C++.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour effectuer une conversion indépendante du langage, vous pouvez appeler la <ph id="ph1">&lt;xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Int16&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Int16&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> nombres <ph id="ph2">&lt;xref:System.Int16&gt;</ph> valeurs à l’aide d’explicites <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> à <ph id="ph4">&lt;xref:System.Int16&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>The value to convert.</source>
          
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a 32-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>A 32-bit signed integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to an <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">Cet opérateur prend en charge la conversion explicite d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La syntaxe de ces conversions explicites dépend du langage, et les compilateurs de langage individuels peuvent fournir des implémentations différentes et retourner des résultats différents.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value by using C#, C++, and Visual Basic.</source>
          <target state="translated">L’exemple illustre les différentes valeurs de retournés lorsque vous convertissez explicitement une <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur un <ph id="ph2">&lt;xref:System.Int32&gt;</ph> à l’aide de c#, C++ et Visual Basic.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour effectuer une conversion indépendante du langage, vous pouvez appeler la <ph id="ph1">&lt;xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Int32&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Int32&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> nombres <ph id="ph2">&lt;xref:System.Int32&gt;</ph> valeurs à l’aide d’explicites <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> à <ph id="ph4">&lt;xref:System.Int32&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>The value to convert.</source>
          
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a 64-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>A 64-bit signed integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to an <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">Cet opérateur prend en charge la conversion explicite d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La syntaxe de ces conversions explicites dépend du langage, et les compilateurs de langage individuels peuvent fournir des implémentations différentes et retourner des résultats différents.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value by using C# and Visual Basic.</source>
          <target state="translated">L’exemple illustre les différentes valeurs de retournés lorsque vous convertissez explicitement une <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur un <ph id="ph2">&lt;xref:System.Int64&gt;</ph> à l’aide de c# et Visual Basic.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour effectuer une conversion indépendante du langage, vous pouvez appeler la <ph id="ph1">&lt;xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Int64&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> nombres <ph id="ph2">&lt;xref:System.Int64&gt;</ph> valeurs à l’aide d’explicites <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> à <ph id="ph4">&lt;xref:System.Int64&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>The value to convert.</source>
          
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to an 8-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>This API is not CLS-compliant.</source>
          
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>An 8-bit signed integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.SByte&gt;</ph>.</source>
          <target state="translated">Cet opérateur prend en charge la conversion explicite d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.SByte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La syntaxe de ces conversions explicites dépend du langage, et les compilateurs de langage individuels peuvent fournir des implémentations différentes et retourner des résultats différents.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> and an <ph id="ph3">&lt;xref:System.SByte&gt;</ph> value by using C# and Visual Basic.</source>
          <target state="translated">L’exemple illustre les différentes valeurs de retournés lorsque vous convertissez explicitement une <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur un <ph id="ph2">&lt;xref:System.Byte&gt;</ph> et une <ph id="ph3">&lt;xref:System.SByte&gt;</ph> à l’aide de c# et Visual Basic.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour effectuer une conversion indépendante du langage, vous pouvez appeler la <ph id="ph1">&lt;xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> méthode ou la <ph id="ph2">&lt;xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.SByte&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.SByte&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> nombres <ph id="ph2">&lt;xref:System.SByte&gt;</ph> valeurs à l’aide d’explicites <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> à <ph id="ph4">&lt;xref:System.SByte&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>The value to convert.</source>
          
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a single-precision floating-point number.</source>
          
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>A single-precision floating-point number that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>This operation can result in a loss of precision, because a single-precision floating-point number has fewer significant digits than a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Cette opération peut entraîner une perte de précision, car un nombre à virgule flottante simple précision a moins de chiffres significatifs qu’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</source>
          <target state="translated">Cet opérateur prend en charge la conversion explicite d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La syntaxe de ces conversions explicites dépend du langage, et les compilateurs de langage individuels peuvent fournir des implémentations différentes et retourner des résultats différents.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value by using C# and Visual Basic.</source>
          <target state="translated">L’exemple illustre les différentes valeurs de retournés lorsque vous convertissez explicitement une <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur un <ph id="ph2">&lt;xref:System.Single&gt;</ph> à l’aide de c# et Visual Basic.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour effectuer une conversion indépendante du langage, vous pouvez appeler la <ph id="ph1">&lt;xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.Single&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.Single&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> nombres <ph id="ph2">&lt;xref:System.Single&gt;</ph> valeurs à l’aide d’explicites <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> à <ph id="ph4">&lt;xref:System.Single&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>The value to convert.</source>
          
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a 16-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>This API is not CLS-compliant.</source>
          
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>A 16-bit unsigned integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.UInt16&gt;</ph>.</source>
          <target state="translated">Cet opérateur prend en charge la conversion explicite d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.UInt16&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La syntaxe de ces conversions explicites dépend du langage, et les compilateurs de langage individuels peuvent fournir des implémentations différentes et retourner des résultats différents.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> value by using C# and Visual Basic.</source>
          <target state="translated">L’exemple illustre les différentes valeurs de retournés lorsque vous convertissez explicitement une <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur un <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> à l’aide de c# et Visual Basic.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour effectuer une conversion indépendante du langage, vous pouvez appeler la <ph id="ph1">&lt;xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.UInt16&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> nombres <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> valeurs à l’aide d’explicites <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> à <ph id="ph4">&lt;xref:System.UInt16&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>The value to convert.</source>
          
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a 32-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>This API is not CLS-compliant.</source>
          
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>A 32-bit unsigned integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>.</source>
          <target state="translated">Cet opérateur prend en charge la conversion explicite d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La syntaxe de ces conversions explicites dépend du langage, et les compilateurs de langage individuels peuvent fournir des implémentations différentes et retourner des résultats différents.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> value by using C# and Visual Basic.</source>
          <target state="translated">L’exemple illustre les différentes valeurs de retournés lorsque vous convertissez explicitement une <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur un <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> à l’aide de c# et Visual Basic.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour effectuer une conversion indépendante du langage, vous pouvez appeler la <ph id="ph1">&lt;xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.UInt32&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> nombres <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> valeurs à l’aide d’explicites <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> à <ph id="ph4">&lt;xref:System.UInt32&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>The value to convert.</source>
          
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a 64-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>This API is not CLS-compliant.</source>
          
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>A 64-bit unsigned integer that represents the converted <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>This operator supports the explicit conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">Cet opérateur prend en charge la conversion explicite d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</source>
          <target state="translated">La syntaxe de ces conversions explicites dépend du langage, et les compilateurs de langage individuels peuvent fournir des implémentations différentes et retourner des résultats différents.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>The example illustrates the different return values when you explicitly convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> value by using C# and Visual Basic.</source>
          <target state="translated">L’exemple illustre les différentes valeurs de retournés lorsque vous convertissez explicitement une <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur un <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> à l’aide de c# et Visual Basic.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>To perform a conversion that is independent of language, you can call the <ph id="ph1">&lt;xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour effectuer une conversion indépendante du langage, vous pouvez appeler la <ph id="ph1">&lt;xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> numbers to <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> values by using the explicit <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph4">&lt;xref:System.UInt64&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> nombres <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> valeurs à l’aide d’explicites <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> à <ph id="ph4">&lt;xref:System.UInt64&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is negative or greater than <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source>The double-precision floating-point number to convert.</source>
          
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source>Defines an explicit conversion of a double-precision floating-point number to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source>The converted double-precision floating point number.</source>
          
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers by using the <ph id="ph3">&lt;xref:System.Double&gt;</ph> to <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> nombres à l’aide de la <ph id="ph3">&lt;xref:System.Double&gt;</ph> à <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source>This conversion requires the op_Explicit operator in Visual Basic.</source>
          <target state="translated">Cette conversion nécessite l’opérateur op_Explicit en Visual Basic.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source>The single-precision floating-point number to convert.</source>
          
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source>Defines an explicit conversion of a single-precision floating-point number to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source>The converted single-precision floating point number.</source>
          
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers by using the <ph id="ph3">&lt;xref:System.Single&gt;</ph> to <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Single&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> nombres à l’aide de la <ph id="ph3">&lt;xref:System.Single&gt;</ph> à <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source>This conversion requires the op_Explicit operator in Visual Basic.</source>
          <target state="translated">Cette conversion nécessite l’opérateur op_Explicit en Visual Basic.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>Returns a value indicating whether a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> is greater than another specified <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="d2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThan%2A&gt;</ph> méthode définit l’opération de l’opérateur supérieur à pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method instead.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent appeler la <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>They may also be able to call the <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThan%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Ils peuvent également être en mesure d’appeler le <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThan%2A&gt;</ph> (méthode) directement, comme l’exemple suivant montre le.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>Returns a value indicating whether a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> is greater than or equal to another specified <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;paramref name="d2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThanOrEqual%2A&gt;</ph> méthode définit l’opération de l’opérateur supérieur ou égal pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method instead.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent appeler la <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>They may also be able to call the <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThanOrEqual%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Ils peuvent également être en mesure d’appeler le <ph id="ph1">&lt;xref:System.Decimal.op_GreaterThanOrEqual%2A&gt;</ph> (méthode) directement, comme l’exemple suivant montre le.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Defines an implicit conversion of the value of a type to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> méthode définissent les types à partir de laquelle le compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
          <source>The 8-bit unsigned integer to convert.</source>
          
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
          <source>Defines an implicit conversion of an 8-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
          <source>The converted 8-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> méthode définissent les types à partir de laquelle le compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Byte&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numéros.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>The Unicode character to convert.</source>
          
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>Defines an implicit conversion of a Unicode character to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>The converted Unicode character.</source>
          
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> méthode définissent les types à partir de laquelle le compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Char&gt;</ph> values (Unicode characters) to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Char&gt;</ph> (caractères Unicode) pour les valeurs <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numéros.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
          <source>This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</source>
          <target state="translated">Cette conversion nécessite l’opérateur op_Implicit en Visual Basic, mais pas dans c# et C++.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>The 16-bit signed integer to convert.</source>
          
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>Defines an implicit conversion of a 16-bit signed integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>The converted 16-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> méthode définissent les types à partir de laquelle le compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Int16&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Int16&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numéros.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
          <source>This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</source>
          <target state="translated">Cette conversion nécessite l’opérateur op_Implicit en Visual Basic, mais pas dans c# et C++.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
          <source>The 32-bit signed integer to convert.</source>
          
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
          <source>Defines an implicit conversion of a 32-bit signed integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
          <source>The converted 32-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> méthode définissent les types à partir de laquelle le compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Int32&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numéros.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
          <source>The 64-bit signed integer to convert.</source>
          
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
          <source>Defines an implicit conversion of a 64-bit signed integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
          <source>The converted 64-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> méthode définissent les types à partir de laquelle le compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Int64&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.Int64&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numéros.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>The 8-bit signed integer to convert.</source>
          
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>Defines an implicit conversion of an 8-bit signed integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>This API is not CLS-compliant.</source>
          
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>The converted 8-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> méthode définissent les types à partir de laquelle le compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.SByte&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.SByte&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numéros.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>The 16-bit unsigned integer to convert.</source>
          
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>Defines an implicit conversion of a 16-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>This API is not CLS-compliant.</source>
          
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>The converted 16-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> méthode définissent les types à partir de laquelle le compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numéros.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>The 32-bit unsigned integer to convert.</source>
          
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>Defines an implicit conversion of a 32-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>This API is not CLS-compliant.</source>
          
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>The converted 32-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> méthode définissent les types à partir de laquelle le compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numéros.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>The 64-bit unsigned integer to convert.</source>
          
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>Defines an implicit conversion of a 64-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>This API is not CLS-compliant.</source>
          
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>The converted 64-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> method define the types from which the compiler can automatically convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Decimal.op_Implicit%2A&gt;</ph> méthode définissent les types à partir de laquelle le compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
          <source>The following example converts <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> numbers by using the <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> to <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> conversion operator.</source>
          <target state="translated">L’exemple suivant convertit <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> nombres à l’aide de la <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> à <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> opérateur de conversion.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>The value to increment.</source>
          
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>Increments the <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> operand by 1.</source>
          
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>The value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph> incremented by 1.</source>
          
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Increment%2A&gt;</ph> method defines the operation of the increment operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_Increment%2A&gt;</ph> méthode définit l’opération de l’opérateur d’incrément pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>Some languages (such as Visual Basic) that lack an increment operator can call the <ph id="ph1">&lt;xref:System.Decimal.op_Increment%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Certains langages (par exemple, Visual Basic) qui n’ont pas d’opérateur d’incrémentation peuvent appeler le <ph id="ph1">&lt;xref:System.Decimal.op_Increment%2A&gt;</ph> (méthode) directement, comme l’exemple suivant montre le.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>If your language does not support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Add%2A&gt;</ph> method instead, as the following example shows.</source>
          <target state="translated">Si votre langage ne prend pas en charge les opérateurs personnalisés, appelez le <ph id="ph1">&lt;xref:System.Decimal.Add%2A&gt;</ph> méthode à la place, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Increment(System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>Returns a value that indicates whether two <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> objects have different values.</source>
          
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="d2" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_Inequality%2A&gt;</ph> méthode définit l’opération de l’opérateur d’inégalité pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:</source>
          <target state="translated">Si la langue que vous utilisez ne prend pas en charge les opérateurs personnalisés, vous pouvez tester d’inégalité en utilisant l’une des techniques suivantes :</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method, which indicates the relationship between two <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Appel de la <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> (méthode), ce qui indique la relation entre deux <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Decimal.Equals%2A&gt;</ph> method and reversing its value.</source>
          <target state="translated">Appel de la <ph id="ph1">&lt;xref:System.Decimal.Equals%2A&gt;</ph> méthode et en inversant sa valeur.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>Returns a value indicating whether a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> is less than another specified <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="d2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_LessThan%2A&gt;</ph> méthode définit l’opération de l’opérateur inférieur à pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method instead.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent appeler la <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>They may also be able to call the <ph id="ph1">&lt;xref:System.Decimal.op_LessThan%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Ils peuvent également être en mesure d’appeler le <ph id="ph1">&lt;xref:System.Decimal.op_LessThan%2A&gt;</ph> (méthode) directement, comme l’exemple suivant montre le.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>The first value to compare.</source>
          
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>The second value to compare.</source>
          
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>Returns a value indicating whether a specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> is less than or equal to another specified <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d1" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="d2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_LessThanOrEqual%2A&gt;</ph> méthode définit l’opération d’inférieur à ou opérateur d’égalité pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method instead.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent appeler la <ph id="ph1">&lt;xref:System.Decimal.Compare%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>They may also be able to call the <ph id="ph1">&lt;xref:System.Decimal.op_LessThanOrEqual%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Ils peuvent également être en mesure d’appeler le <ph id="ph1">&lt;xref:System.Decimal.op_LessThanOrEqual%2A&gt;</ph> (méthode) directement, comme l’exemple suivant montre le.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The dividend.</source>
          
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The divisor.</source>
          
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>Returns the remainder resulting from dividing two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The remainder resulting from dividing <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> by <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Modulus%2A&gt;</ph> method defines the operation of the modulus operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_Modulus%2A&gt;</ph> méthode définit l’opération de l’opérateur modulo pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Remainder%2A&gt;</ph> method instead.</source>
          <target state="translated">Si la langue que vous utilisez ne prend pas en charge les opérateurs personnalisés, appelez le <ph id="ph1">&lt;xref:System.Decimal.Remainder%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The sign of the value return by the modulus operation depends on the sign of dividend.</source>
          <target state="translated">Le signe du résultat de la valeur par l’opération modulo dépend du signe du dividende.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>If dividend is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</source>
          <target state="translated">Si le dividende est positif, l’opération modulo retourne un résultat positif ; s’il est négatif, l’opération modulo retourne un résultat négatif.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d2" /&gt;</ph> is <ph id="ph2">&lt;see langword="zero" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>The first value to multiply.</source>
          
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>The second value to multiply.</source>
          
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>Multiplies two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>The result of multiplying <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> by <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_Multiply%2A&gt;</ph> méthode définit l’opération de l’opérateur de multiplication pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Multiply%2A&gt;</ph> method instead.</source>
          <target state="translated">Si la langue que vous utilisez ne prend pas en charge les opérateurs personnalisés, appelez le <ph id="ph1">&lt;xref:System.Decimal.Multiply%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>The minuend.</source>
          
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>The subtrahend.</source>
          
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>Subtracts two specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="d2" /&gt;</ph> from <ph id="ph2">&lt;paramref name="d1" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_Subtraction%2A&gt;</ph> method defines the operation of the subtraction operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_Subtraction%2A&gt;</ph> méthode définit l’opération de l’opérateur de soustraction de <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>If the language you're using doesn't support custom operators, call the <ph id="ph1">&lt;xref:System.Decimal.Subtract%2A&gt;</ph> method instead.</source>
          <target state="translated">Si la langue que vous utilisez ne prend pas en charge les opérateurs personnalisés, appelez le <ph id="ph1">&lt;xref:System.Decimal.Subtract%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>The value to negate.</source>
          
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>Negates the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> operand.</source>
          
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>The result of <ph id="ph1">&lt;paramref name="d" /&gt;</ph> multiplied by negative one (-1).</source>
          
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_UnaryPlus%2A&gt;</ph> method defines the operation of the unary negation operator (or the additive inverse operator) for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_UnaryPlus%2A&gt;</ph> méthode définit l’opération de l’opérateur de négation unaire (ou l’opérateur inverse additif) pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>The operation produces a value that results in 0 (zero) when it is added to the original number.</source>
          <target state="translated">L’opération génère une valeur qui correspond à 0 (zéro) lorsqu’il est ajouté au nombre d’origine.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Decimal.Negate%2A&gt;</ph> method instead.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent appeler la <ph id="ph1">&lt;xref:System.Decimal.Negate%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_UnaryNegation(System.Decimal)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_UnaryPlus(System.Decimal)">
          <source>The operand to return.</source>
          
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_UnaryPlus(System.Decimal)">
          <source>Returns the value of the <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> operand (the sign of the operand is unchanged).</source>
          
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Decimal.op_UnaryPlus(System.Decimal)">
          <source>The value of the operand, <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.op_UnaryPlus(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.op_UnaryPlus%2A&gt;</ph> method defines the operation of the unary positive operator for <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.op_UnaryPlus%2A&gt;</ph> méthode définit l’opération de l’opérateur positif unaire pour <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent.</source>
          
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String)">
          <source>The string representation of the number to convert.</source>
          
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent.</source>
          
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String)">
          <source>The equivalent to the number contained in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Parameter <ph id="ph1">`s`</ph> contains a number of the form:</source>
          <target state="translated">Paramètre <ph id="ph1">`s`</ph> contient un nombre sous la forme :</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>[ws][sign][digits,]digits[.fractional-digits][ws]</source>
          <target state="translated">[ws][sign][digits,]digits[.fractional-digits][ws]</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Les éléments entre crochets ([ et ]) sont facultatifs.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Description</source>
          <target state="translated">Description</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Optional white space.</source>
          <target state="translated">Espace blanc facultatif.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>An optional sign.</source>
          <target state="translated">Un signe facultatif.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Une séquence de chiffres allant de 0 à 9.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">Spécifiques à la culture des milliers symbole de séparateur.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Un symbole décimal spécifiques à la culture.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Une séquence de chiffres allant de 0 à 9.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Parameter <ph id="ph1">`s`</ph> is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">Paramètre <ph id="ph1">`s`</ph> est interprétée à l’aide de la <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> style.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>This means that white space and thousands separators are allowed but currency symbols are not.</source>
          <target state="translated">Cela signifie que les espaces blancs et des milliers séparateurs sont autorisées mais ne sont pas les symboles monétaires.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in <ph id="ph1">`s`</ph>, use either the <ph id="ph2">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph3">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour définir explicitement les éléments (tels que les symboles monétaires, des milliers séparateurs et espace blanc) qui peuvent être présents dans <ph id="ph1">`s`</ph>, soit utiliser le <ph id="ph2">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> ou le <ph id="ph3">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>Parameter <ph id="ph1">`s`</ph> is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> initialized for the current system culture.</source>
          <target state="translated">Paramètre <ph id="ph1">`s`</ph> est analysé à l’aide des informations de mise en forme dans un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> initialisé pour la culture système actuelle.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>To parse a string using the formatting information of some other culture, use the <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour analyser une chaîne en utilisant les informations de mise en forme d’une autre culture, utilisez la <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>If necessary, the value of <ph id="ph1">`s`</ph> is rounded using rounding to nearest.</source>
          <target state="translated">Si nécessaire, la valeur de <ph id="ph1">`s`</ph> est arrondi au plus proche.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> has 29 digits of precision.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 29 chiffres de précision.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>If <ph id="ph1">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> représente un nombre qui a plus de 29 chiffres, mais comporte une partie fractionnaire et se trouve dans la plage <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> et <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, le nombre est arrondi, non tronqué, à 29 chiffres d’arrondi au plus proche.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>If during a parse operation a separator is encountered in the <ph id="ph1">`s`</ph> parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">Si au cours d’une opération d’analyse, un séparateur est rencontré dans le <ph id="ph1">`s`</ph> paramètre et la devise ou nombre décimal et les séparateurs de groupes sont identiques, l’opération d’analyse suppose que le séparateur est un séparateur décimal plutôt qu’un groupe séparateur.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur les séparateurs, consultez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, et <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%29&gt;</ph> method to parse string representations of <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Le code suivant exemple utilise le <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%29&gt;</ph> méthode pour analyser les représentations sous forme de chaîne de <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The string representation of the number to convert.</source>
          
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Number" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Converts the string representation of a number in a specified style to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent.</source>
          
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> number equivalent to the number contained in <ph id="ph2">&lt;paramref name="s" /&gt;</ph> as specified by <ph id="ph3">&lt;paramref name="style" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated">Le <ph id="ph1">`style`</ph> paramètre définit les éléments de style (telles que des milliers séparateurs, les espaces blancs et les symboles monétaires) qui sont autorisés dans les <ph id="ph2">`s`</ph> paramètre pour l’opération d’analyse.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">Il doit être une combinaison de bits indicateurs de le <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:</source>
          <target state="translated">Les éléments suivants <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> membres ne sont pas pris en charge :</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">Selon la valeur de <ph id="ph1">`style`</ph>, le <ph id="ph2">`s`</ph> paramètre peut inclure les éléments suivants :</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Les éléments entre crochets ([ et ]) sont facultatifs.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Description</source>
          <target state="translated">Description</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Optional white space.</source>
          <target state="translated">Espace blanc facultatif.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Espace blanc peut apparaître au début de <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> indicateur, qui peuvent apparaître à la fin de <ph id="ph4">`s`</ph> si <ph id="ph5">`style`</ph> inclut la <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Un symbole monétaire spécifique à la culture.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">Sa position dans la chaîne est définie par le <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> propriétés de la culture actuelle.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Symbole de devise de la culture actuelle peut apparaître dans <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>An optional sign.</source>
          <target state="translated">Un signe facultatif.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The sign can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Le signe peut apparaître au début de <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> indicateur, qui peuvent apparaître à la fin de <ph id="ph4">`s`</ph> si <ph id="ph5">`style`</ph> inclut la <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Parentheses can be used in <ph id="ph1">`s`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Parenthèses peuvent être utilisées dans <ph id="ph1">`s`</ph> pour indiquer une valeur négative si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Une séquence de chiffres allant de 0 à 9.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">Spécifiques à la culture des milliers symbole de séparateur.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's thousands separator can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Des milliers de la culture actuelle séparateur peut apparaître dans <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Un symbole décimal spécifiques à la culture.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Symbole de virgule décimale de la culture actuelle peut apparaître dans <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Une séquence de chiffres allant de 0 à 9.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Chiffres fractionnaires peuvent apparaître dans <ph id="ph1">`s`</ph> uniquement si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">Le « e » ou un caractère « E », ce qui indique que la valeur est représentée en notation exponentielle.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Le <ph id="ph1">`s`</ph> paramètre peut représenter un nombre en notation exponentielle si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None&gt;</ph> style) always parses successfully.</source>
          <target state="translated">Une chaîne contenant uniquement des chiffres (qui correspond à la <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None&gt;</ph> style) toujours analysée avec succès.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in the input string.</source>
          <target state="translated">Les autres <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> membres contrôlent des éléments qui peuvent être, mais ne doivent pas être présents dans la chaîne d’entrée.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">Le tableau suivant indique comment chaque <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> membres affectent les éléments qui peuvent être présents dans <ph id="ph2">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>NumberStyles value</source>
          <target state="translated">Valeur NumberStyles</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">Éléments autorisés dans s en plus des chiffres</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>digits<ept id="p1">*</ept> element only.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>chiffres<ept id="p1">*</ept> élément uniquement.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated">L’élément de langage <bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">et <bpt id="p1">*</bpt>chiffres fractionnaires<ept id="p1">*</ept> éléments.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated">Le <ph id="ph1">`s`</ph> paramètre peut également utiliser la notation exponentielle.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>This flag supports values in the form <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>E<bpt id="p2">*</bpt>digits<ept id="p2">*</ept>; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</source>
          <target state="translated">Cet indicateur prend en charge les valeurs sous la forme <bpt id="p1">*</bpt>chiffres<ept id="p1">*</ept>E<bpt id="p2">*</bpt>chiffres<ept id="p2">*</ept>; autres indicateurs sont nécessaires pour analyser correctement les chaînes contenant des éléments tels que les signes positifs ou négatifs et des symboles de séparateur décimal.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> élément au début de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> élément à la fin de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>signe<ept id="p1">*</ept> élément au début de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>signe<ept id="p1">*</ept> élément à la fin de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>signe<ept id="p1">*</ept> élément sous la forme de parenthèses entourant la valeur numérique.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>,<ept id="p1">*</ept> element.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>,<ept id="p1">*</ept> élément.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated">Le <bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept> élément.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All.</source>
          <target state="translated">Tout le monde.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">Le <ph id="ph1">`s`</ph> paramètre ne peut pas représenter un nombre hexadécimal ou un nombre en notation exponentielle.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning or end of <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the beginning of <ph id="ph2">`s`</ph>, and the <bpt id="p3">*</bpt>.<ept id="p3">*</ept></source>
          <target state="translated">Le <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> élément au début ou à la fin de <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>signe<ept id="p2">*</ept> au début de <ph id="ph2">`s`</ph>et le <bpt id="p3">*</bpt>.<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>symbol.</source>
          <target state="translated">symbole.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated">Le <ph id="ph1">`s`</ph> paramètre peut également utiliser la notation exponentielle.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, <bpt id="p1">*</bpt>,<ept id="p1">*</ept>, and <bpt id="p2">*</bpt>.<ept id="p2">*</ept></source>
          <target state="translated">Le <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, <bpt id="p1">*</bpt>,<ept id="p1">*</ept>, et <bpt id="p2">*</bpt>.<ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>elements.</source>
          <target state="translated">éléments.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All styles, except <ph id="ph1">`s`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">Tous les styles, à l’exception <ph id="ph1">`s`</ph> ne peut pas représenter un nombre hexadécimal.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object initialized for the current system culture.</source>
          <target state="translated">Le <ph id="ph1">`s`</ph> paramètre est analysé en utilisant les informations de mise en forme dans un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet initialisé pour la culture système actuelle.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> has 29 digits of precision.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 29 chiffres de précision.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If <ph id="ph1">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> représente un nombre qui a plus de 29 chiffres, mais comporte une partie fractionnaire et se trouve dans la plage <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> et <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, le nombre est arrondi, non tronqué, à 29 chiffres d’arrondi au plus proche.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, <ph id="ph2">`styles`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">Si un séparateur est rencontré dans le <ph id="ph1">`s`</ph> paramètre pendant une opération d’analyse, <ph id="ph2">`styles`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> et <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> valeurs et de la devise ou nombre décimal et séparateurs de groupes sont identiques, l’opération d’analyse suppose que le séparateur est un séparateur décimal plutôt qu’un séparateur de groupes.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur les séparateurs, consultez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, et <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method to parse the string representations of <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values using the en-US culture.</source>
          <target state="translated">Le code suivant exemple utilise le <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> méthode pour analyser les représentations sous forme de chaîne de <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> à l’aide de la culture en-US.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph></source>
          
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The string representation of the number to convert.</source>
          
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> that supplies culture-specific parsing information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent using the specified culture-specific format information.</source>
          
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> number equivalent to the number contained in <ph id="ph2">&lt;paramref name="s" /&gt;</ph> as specified by <ph id="ph3">&lt;paramref name="provider" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is commonly used to convert text that can be formatted in a variety of ways to a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">Cette surcharge de la <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> méthode est généralement utilisée pour convertir du texte qui peut être mis en forme de différentes façons pour un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</source>
          <target state="translated">Par exemple, il peut être utilisé pour convertir le texte entré par un utilisateur dans une zone de texte HTML à une valeur numérique.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter contains a number of the form:</source>
          <target state="translated">Le <ph id="ph1">`s`</ph> paramètre contient un nombre sous la forme :</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>[ws][sign][digits,]digits[.fractional-digits][ws]</source>
          <target state="translated">[ws][sign][digits,]digits[.fractional-digits][ws]</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Les éléments entre crochets ([ et ]) sont facultatifs.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">Description</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">Espace blanc facultatif.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>An optional sign.</source>
          <target state="translated">Un signe facultatif.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Une séquence de chiffres allant de 0 à 9.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">Spécifiques à la culture des milliers symbole de séparateur.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Un symbole décimal spécifiques à la culture.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Une séquence de chiffres allant de 0 à 9.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">Le <ph id="ph1">`s`</ph> paramètre est interprété à l’aide de la <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> style.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>This means that white space and thousands separators are allowed but currency symbols are not.</source>
          <target state="translated">Cela signifie que les espaces blancs et des milliers séparateurs sont autorisées mais ne sont pas les symboles monétaires.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in <ph id="ph1">`s`</ph>, use the <ph id="ph2">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour définir explicitement les éléments (tels que les symboles monétaires, des milliers séparateurs et espace blanc) qui peuvent être présents dans <ph id="ph1">`s`</ph>, utilisez le <ph id="ph2">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre est un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> mise en oeuvre, comme un <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> ou <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in parsing.</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre fournit des informations spécifiques à la culture utilisées dans l’analyse.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> est <ph id="ph2">`null`</ph>, la culture actuelle du thread est utilisée.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> object has 29 digits of precision.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> objet a 29 chiffres de précision.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> représente un nombre qui a plus de 29 chiffres, mais comporte une partie fractionnaire et se trouve dans la plage <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> et <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, le nombre est arrondi, non tronqué, à 29 chiffres d’arrondi au plus proche.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">Si un séparateur est rencontré dans le <ph id="ph1">`s`</ph> paramètre pendant une opération d’analyse et la devise ou un nombre décimal et les séparateurs de groupes sont identiques, l’opération d’analyse suppose que le séparateur est un séparateur décimal plutôt qu’un groupe séparateur.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur les séparateurs, consultez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, et <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The following example is the button click event handler of a Web form.</source>
          <target state="translated">L’exemple suivant est le bouton sur le Gestionnaire d’événements d’un formulaire Web.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>It uses the array returned by the <ph id="ph1">&lt;xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType&gt;</ph> property to determine the user's locale.</source>
          <target state="translated">Il utilise le tableau retourné par la <ph id="ph1">&lt;xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType&gt;</ph> propriété pour déterminer les paramètres régionaux de l’utilisateur.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>It then instantiates a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to that locale.</source>
          <target state="translated">Il instancie ensuite un <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objet qui correspond à ces paramètres régionaux.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that belongs to that <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object is then passed to the <ph id="ph3">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method to convert the user's input to a <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet qui appartient à cet <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objet est ensuite transmis à la <ph id="ph3">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> d’entrée de méthode pour convertir l’utilisateur à un <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not of the correct format</source>
          
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph></source>
          
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The string representation of the number to convert.</source>
          
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Number" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object that supplies culture-specific information about the format of <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent using the specified style and culture-specific format.</source>
          
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> number equivalent to the number contained in <ph id="ph2">&lt;paramref name="s" /&gt;</ph> as specified by <ph id="ph3">&lt;paramref name="style" /&gt;</ph> and <ph id="ph4">&lt;paramref name="provider" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the allowable format of the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated">Le <ph id="ph1">`style`</ph> paramètre définit le format autorisé de le <ph id="ph2">`s`</ph> paramètre pour l’opération d’analyse.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">Il doit être une combinaison de bits indicateurs de le <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:</source>
          <target state="translated">Les éléments suivants <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> membres ne sont pas pris en charge :</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">Selon la valeur de <ph id="ph1">`style`</ph>, le <ph id="ph2">`s`</ph> paramètre peut inclure les éléments suivants :</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Les éléments entre crochets ([ et ]) sont facultatifs.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">Description</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Un symbole monétaire spécifique à la culture.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id="ph5">`provider`</ph> parameter.</source>
          <target state="translated">Sa position dans la chaîne est définie par le <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> propriétés de la <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet retourné par la <ph id="ph4">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> méthode de le <ph id="ph5">`provider`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Le symbole monétaire peut apparaître dans <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">Espace blanc facultatif.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Espace blanc peut apparaître au début de <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> indicateur, qui peuvent apparaître à la fin de <ph id="ph4">`s`</ph> si <ph id="ph5">`style`</ph> inclut la <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An optional sign.</source>
          <target state="translated">Un signe facultatif.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The sign can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Le signe peut apparaître au début de <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> indicateur, qui peuvent apparaître à la fin de <ph id="ph4">`s`</ph> si <ph id="ph5">`style`</ph> inclut la <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Parentheses can be used in <ph id="ph1">`s`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Parenthèses peuvent être utilisées dans <ph id="ph1">`s`</ph> pour indiquer une valeur négative si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Une séquence de chiffres allant de 0 à 9.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">Spécifiques à la culture des milliers symbole de séparateur.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The thousands separator of the culture defined by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Les milliers séparateur de la culture définie par <ph id="ph1">`provider`</ph> peut apparaître dans <ph id="ph2">`s`</ph> si <ph id="ph3">`style`</ph> inclut la <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Un symbole décimal spécifiques à la culture.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point symbol of the culture defined by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Le symbole de virgule décimale de la culture définie par <ph id="ph1">`provider`</ph> peut apparaître dans <ph id="ph2">`s`</ph> si <ph id="ph3">`style`</ph> inclut la <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Une séquence de chiffres allant de 0 à 9.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Chiffres fractionnaires peuvent apparaître dans <ph id="ph1">`s`</ph> uniquement si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">Le « e » ou un caractère « E », ce qui indique que la valeur est représentée en notation exponentielle.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Le <ph id="ph1">`s`</ph> paramètre peut représenter un nombre en notation exponentielle si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None&gt;</ph> style) always parses successfully.</source>
          <target state="translated">Une chaîne contenant uniquement des chiffres (qui correspond à la <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None&gt;</ph> style) toujours analysée avec succès.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in the input string.</source>
          <target state="translated">Les autres <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> membres contrôlent des éléments qui peuvent être, mais ne doivent pas être présents dans la chaîne d’entrée.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">Le tableau suivant indique comment chaque <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> membres affectent les éléments qui peuvent être présents dans <ph id="ph2">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>NumberStyles value</source>
          <target state="translated">Valeur NumberStyles</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">Éléments autorisés dans s en plus des chiffres</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>digits<ept id="p1">*</ept> element only.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>chiffres<ept id="p1">*</ept> élément uniquement.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated">L’élément de langage <bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">et <bpt id="p1">*</bpt>chiffres fractionnaires<ept id="p1">*</ept> éléments.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated">Le <ph id="ph1">`s`</ph> paramètre peut également utiliser la notation exponentielle.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>This flag supports values in the form <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>E<bpt id="p2">*</bpt>digits<ept id="p2">*</ept>; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</source>
          <target state="translated">Cet indicateur prend en charge les valeurs sous la forme <bpt id="p1">*</bpt>chiffres<ept id="p1">*</ept>E<bpt id="p2">*</bpt>chiffres<ept id="p2">*</ept>; autres indicateurs sont nécessaires pour analyser correctement les chaînes contenant des éléments tels que les signes positifs ou négatifs et des symboles de séparateur décimal.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> élément au début de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> élément à la fin de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>signe<ept id="p1">*</ept> élément au début de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>signe<ept id="p1">*</ept> élément à la fin de <ph id="ph1">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>signe<ept id="p1">*</ept> élément sous la forme de parenthèses entourant la valeur numérique.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>,<ept id="p1">*</ept> element.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>,<ept id="p1">*</ept> élément.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated">Le <bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept> élément.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All.</source>
          <target state="translated">Tout le monde.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">Le <ph id="ph1">`s`</ph> paramètre ne peut pas représenter un nombre hexadécimal ou un nombre en notation exponentielle.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning or end of <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the beginning of <ph id="ph2">`s`</ph>, and the <bpt id="p3">*</bpt>.<ept id="p3">*</ept>symbol.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> élément au début ou à la fin de <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>signe<ept id="p2">*</ept> au début de <ph id="ph2">`s`</ph>et le <bpt id="p3">*</bpt>.<ept id="p3">*</ept> symbole.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated">Le <ph id="ph1">`s`</ph> paramètre peut également utiliser la notation exponentielle.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, <bpt id="p1">*</bpt>,<ept id="p1">*</ept>, and <bpt id="p2">*</bpt>.<ept id="p2">*</ept></source>
          <target state="translated">Le <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, <bpt id="p1">*</bpt>,<ept id="p1">*</ept>, et <bpt id="p2">*</bpt>.<ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>elements.</source>
          <target state="translated">éléments.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All styles, except <ph id="ph1">`s`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">Tous les styles, à l’exception <ph id="ph1">`s`</ph> ne peut pas représenter un nombre hexadécimal.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre est un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> mise en oeuvre, comme un <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> ou <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in parsing.</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre fournit des informations spécifiques à la culture utilisées dans l’analyse.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> est <ph id="ph2">`null`</ph>, la culture actuelle du thread est utilisée.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> object has 29 digits of precision.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> objet a 29 chiffres de précision.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> représente un nombre qui a plus de 29 chiffres, mais comporte une partie fractionnaire et se trouve dans la plage <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> et <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, le nombre est arrondi, non tronqué, à 29 chiffres d’arrondi au plus proche.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">Si un séparateur est rencontré dans le <ph id="ph1">`s`</ph> paramètre pendant une opération d’analyse et la devise ou un nombre décimal et les séparateurs de groupes sont identiques, l’opération d’analyse suppose que le séparateur est un séparateur décimal plutôt qu’un groupe séparateur.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur les séparateurs, consultez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, et <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following example uses a variety of <ph id="ph1">`style`</ph> and <ph id="ph2">`provider`</ph> parameters to parse the string representations of <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant utilise une variété de <ph id="ph1">`style`</ph> et <ph id="ph2">`provider`</ph> paramètres pour analyser les représentations sous forme de chaîne de <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source>The dividend.</source>
          
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source>The divisor.</source>
          
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source>Computes the remainder after dividing two <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source>The remainder after dividing <ph id="ph1">&lt;paramref name="d1" /&gt;</ph> by <ph id="ph2">&lt;paramref name="d2" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.Remainder%2A&gt;</ph> method to calculate the remainder in a series of division operations.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Decimal.Remainder%2A&gt;</ph> méthode pour calculer le reste d’une série d’opérations de division.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d2" /&gt;</ph> is zero.</source>
          
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Rounds a value to the nearest integer or specified number of decimal places.</source>
          
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal)">
          <source>A decimal number to round.</source>
          
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal)">
          <source>Rounds a decimal value to the nearest integer.</source>
          
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal)">
          <source>The integer that is nearest to the <ph id="ph1">&lt;paramref name="d" /&gt;</ph> parameter.</source>
          
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is halfway between two integers, one of which is even and the other odd, the even number is returned.</source>
          
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal)">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
          <target state="translated">Le comportement de cette méthode suit la norme IEEE 754, section 4.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal)">
          <source>This kind of rounding is sometimes called <bpt id="p1">*</bpt>round half to even<ept id="p1">*</ept> or <bpt id="p2">*</bpt>banker's rounding<ept id="p2">*</ept>.</source>
          <target state="translated">Ce type d’arrondi est parfois appelé <bpt id="p1">*</bpt>arrondir moitié même<ept id="p1">*</ept> ou <bpt id="p2">*</bpt>l’arrondi bancaire<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal)">
          <source>It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</source>
          <target state="translated">Il réduit les erreurs d’arrondi qui résultent de l’arrondissement cohérent d’une valeur du milieu dans un seul sens.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id="ph2">`mode`</ph> argument of <ph id="ph3">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Elle équivaut à appeler le <ph id="ph1">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> méthode avec un <ph id="ph2">`mode`</ph> argument de <ph id="ph3">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal)">
          <source>The following example rounds a range of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values between 100 and 102 to the nearest integer.</source>
          <target state="translated">L’exemple suivant arrondit une plage de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeurs comprises entre 100 et 102 à l’entier le plus proche.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal)">
          <source>Because the method uses banker's rounding, note that 100.5 rounds to 100 and 101.5 rounds to 102.</source>
          <target state="translated">Étant donné que la méthode utilise l’arrondi bancaire, notez que 100.5 est arrondi à 100 et 101.5 est arrondi à 102.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal)">
          <source>The result is outside the range of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>A decimal number to round.</source>
          
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>A value from 0 to 28 that specifies the number of decimal places to round to.</source>
          
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>Rounds a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to a specified number of decimal places.</source>
          
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>The decimal number equivalent to <ph id="ph1">&lt;paramref name="d" /&gt;</ph> rounded to <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph> number of decimal places.</source>
          
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>This method is equivalent to calling the <ph id="ph1">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id="ph2">`mode`</ph> argument of <ph id="ph3">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph>.When <ph id="ph4">`d`</ph> is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position.</source>
          <target state="translated">Cette méthode équivaut à appeler le <ph id="ph1">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> méthode avec un <ph id="ph2">`mode`</ph> argument de <ph id="ph3">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph>. Lorsque <ph id="ph4">`d`</ph> est exactement à mi-chemin entre deux valeurs arrondies, le résultat est la valeur arrondie contenant un chiffre pair à la position décimale plus à droite.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</source>
          <target state="translated">Par exemple, lorsqu'elle est arrondie à deux décimales, la valeur 2,345 devient 2,34 et la valeur 2,355 devient 2,36.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>This process is known as <bpt id="p1">*</bpt>rounding toward even<ept id="p1">*</ept>, or <bpt id="p2">*</bpt>banker's rounding<ept id="p2">*</ept>.</source>
          <target state="translated">Ce processus est appelé <bpt id="p1">*</bpt>arrondi vers même<ept id="p1">*</ept>, ou <bpt id="p2">*</bpt>l’arrondi bancaire<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</source>
          <target state="translated">Il réduit les erreurs d’arrondi qui résultent de l’arrondissement cohérent d’une valeur du milieu dans un seul sens.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source>The following example rounds several <ph id="ph1">`Decimal`</ph> values to a specified number of decimal places using the <ph id="ph2">`Round`</ph> method.</source>
          <target state="translated">L’exemple suivant arrondit plusieurs <ph id="ph1">`Decimal`</ph> valeurs à un nombre spécifié de décimales à l’aide de la <ph id="ph2">`Round`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="decimals" /&gt;</ph> is not a value from 0 to 28.</source>
          
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>A decimal number to round.</source>
          
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>A value that specifies how to round <bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> if it is midway between two other numbers.</source>
          
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Rounds a decimal value to the nearest integer.</source>
          
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>A parameter specifies how to round the value if it is midway between two other numbers.</source>
          
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>The integer that is nearest to the <ph id="ph1">&lt;paramref name="d" /&gt;</ph> parameter.</source>
          
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is halfway between two numbers, one of which is even and the other odd, the <ph id="ph2">&lt;paramref name="mode" /&gt;</ph> parameter determines which of the two numbers is returned.</source>
          
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</source>
          <target state="translated">Dans une valeur du milieu, la valeur après le chiffre le moins significatif dans le résultat est exactement mi-chemin entre deux nombres.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>For example, 7.5 is a midpoint value if it is to be rounded to an integer.</source>
          <target state="translated">Par exemple, 7.5 est une valeur du milieu s’il doit être arrondi à un entier.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the <ph id="ph1">`mode`</ph> argument.</source>
          <target state="translated">Pour les valeurs du milieu, la valeur la plus proche ne peut pas être facilement identifiée sans une convention d’arrondi, qui est spécifiée par le <ph id="ph1">`mode`</ph> argument.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.Round%2A&gt;</ph> method supports two rounding conventions for handling midpoint values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.Round%2A&gt;</ph> méthode prend en charge les deux conventions arrondies pour la gestion des valeurs du milieu.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Rounding away from zero.</source>
          <target state="translated">Arrondi en s’éloignant de zéro.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Midpoint values are rounded to the next number away from zero.</source>
          <target state="translated">Valeurs du milieu sont arrondies au nombre en s’éloignant de zéro.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5.</source>
          <target state="translated">Par exemple, 3.5 arrondi à 4, 4,5 est arrondi à 5,-3.5 est arrondi à -4, et -4,5 est arrondi à -5.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>This form of rounding is represented by the <ph id="ph1">&lt;xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType&gt;</ph> enumeration member.</source>
          <target state="translated">Cet écran de l’arrondi est représenté par le <ph id="ph1">&lt;xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType&gt;</ph> membre de l’énumération.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Rounding away from zero is the most widely known form of rounding.</source>
          <target state="translated">Arrondi en s’éloignant de zéro est le formulaire plus largement connu de l’arrondi.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Rounding to even, or banker's rounding</source>
          <target state="translated">Arrondi pour la même, ou arrondi bancaire</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Midpoint values are rounded to the nearest even number.</source>
          <target state="translated">Valeurs du milieu sont arrondies au nombre pair le plus proche.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4.</source>
          <target state="translated">Par exemple, 3.5 et 4.5 arrondi à 4, et-3.5 et -4.5 à -4.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>This form of rounding is represented by the <ph id="ph1">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph> enumeration member.</source>
          <target state="translated">Cet écran de l’arrondi est représenté par le <ph id="ph1">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph> membre de l’énumération.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>Rounding to nearest is the standard form of rounding used in financial and statistical operations.</source>
          <target state="translated">Arrondi au plus proche est le format standard d’arrondi utilisé dans les opérations financières et statistiques.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>It conforms to IEEE Standard 754, section 4.</source>
          <target state="translated">Il est conforme à la norme IEEE 754, section 4.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</source>
          <target state="translated">Lorsqu’il est utilisé dans plusieurs opérations d’arrondi, elle réduit l’erreur d’arrondi provoquée par l’arrondissement de valeurs du milieu dans un seul sens.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>In some cases, this rounding error can be significant.</source>
          <target state="translated">Dans certains cas, cette erreur d’arrondi peut être significative.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>The following example displays values returned by the <ph id="ph1">&lt;xref:System.Math.Round%28System.Decimal%29&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id="ph3">`mode`</ph> argument of <ph id="ph4">&lt;xref:System.MidpointRounding.ToEven&gt;</ph>, and the <ph id="ph5">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id="ph6">`mode`</ph> argument of <ph id="ph7">&lt;xref:System.MidpointRounding.AwayFromZero&gt;</ph>.</source>
          <target state="translated">L’exemple suivant affiche les valeurs retournées par la <ph id="ph1">&lt;xref:System.Math.Round%28System.Decimal%29&gt;</ph> (méthode), la <ph id="ph2">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> méthode avec un <ph id="ph3">`mode`</ph> argument de <ph id="ph4">&lt;xref:System.MidpointRounding.ToEven&gt;</ph>et le <ph id="ph5">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> méthode avec un <ph id="ph6">`mode`</ph> argument de <ph id="ph7">&lt;xref:System.MidpointRounding.AwayFromZero&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)">
          <source>The result is outside the range of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>A decimal number to round.</source>
          
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The number of significant decimal places (precision) in the return value.</source>
          
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>A value that specifies how to round <bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> if it is midway between two other numbers.</source>
          
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Rounds a decimal value to a specified precision.</source>
          
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>A parameter specifies how to round the value if it is midway between two other numbers.</source>
          
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The number that is nearest to the <ph id="ph1">&lt;paramref name="d" /&gt;</ph> parameter with a precision equal to the <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph> parameter.</source>
          
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is halfway between two numbers, one of which is even and the other odd, the <ph id="ph2">&lt;paramref name="mode" /&gt;</ph> parameter determines which of the two numbers is returned.</source>
          
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>If the precision of <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph>, <ph id="ph3">&lt;paramref name="d" /&gt;</ph> is returned unchanged.</source>
          
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The <ph id="ph1">`decimals`</ph> parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28.</source>
          <target state="translated">Le <ph id="ph1">`decimals`</ph> paramètre spécifie le nombre de décimales significatives dans la valeur de retour et les plages de 0 à 28.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>If <ph id="ph1">`decimals`</ph> is zero, an integer is returned.</source>
          <target state="translated">Si <ph id="ph1">`decimals`</ph> est égal à zéro, un entier est retourné.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</source>
          <target state="translated">Dans une valeur du milieu, la valeur après le chiffre le moins significatif dans le résultat est exactement mi-chemin entre deux nombres.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</source>
          <target state="translated">Par exemple, 3.47500 est une valeur du milieu s’il doit être arrondie à deux décimales et 7.500 est une valeur du milieu, s’il doit être arrondi à un entier.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the <ph id="ph1">`mode`</ph> argument.</source>
          <target state="translated">Dans ces cas, la valeur la plus proche ne peut pas être facilement identifiée sans une convention d’arrondi, qui est spécifiée par le <ph id="ph1">`mode`</ph> argument.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> method supports two rounding conventions for handling midpoint values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> méthode prend en charge les deux conventions arrondies pour la gestion des valeurs du milieu.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Rounding away from zero.</source>
          <target state="translated">Arrondi en s’éloignant de zéro.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Midpoint values are rounded to the next number away from zero.</source>
          <target state="translated">Valeurs du milieu sont arrondies au nombre en s’éloignant de zéro.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</source>
          <target state="translated">Par exemple, 3,75 arrondit à 3.8, 3.85 est arrondi à 3.9,-3.75 est arrondi à-3.8, et-3.85 est arrondi à-3.9.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>This form of rounding is represented by the <ph id="ph1">&lt;xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType&gt;</ph> enumeration member.</source>
          <target state="translated">Cet écran de l’arrondi est représenté par le <ph id="ph1">&lt;xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType&gt;</ph> membre de l’énumération.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Rounding away from zero is the most widely known form of rounding.</source>
          <target state="translated">Arrondi en s’éloignant de zéro est le formulaire plus largement connu de l’arrondi.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Rounding to even, or banker's rounding</source>
          <target state="translated">Arrondi pour la même, ou arrondi bancaire</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Midpoint values are rounded to the nearest even number.</source>
          <target state="translated">Valeurs du milieu sont arrondies au nombre pair le plus proche.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</source>
          <target state="translated">Par exemple, 3,75 et 3.85 arrondi à 3.8, et-3.75 et-3.85 à-3.8.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>This form of rounding is represented by the <ph id="ph1">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph> enumeration member.</source>
          <target state="translated">Cet écran de l’arrondi est représenté par le <ph id="ph1">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph> membre de l’énumération.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Rounding to nearest is the standard form of rounding used in financial and statistical operations.</source>
          <target state="translated">Arrondi au plus proche est le format standard d’arrondi utilisé dans les opérations financières et statistiques.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>It conforms to IEEE Standard 754, section 4.</source>
          <target state="translated">Il est conforme à la norme IEEE 754, section 4.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</source>
          <target state="translated">Lorsqu’il est utilisé dans plusieurs opérations d’arrondi, elle réduit l’erreur d’arrondi provoquée par l’arrondissement de valeurs du milieu dans un seul sens.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>In some cases, this rounding error can be significant.</source>
          <target state="translated">Dans certains cas, cette erreur d’arrondi peut être significative.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> method with the <ph id="ph2">&lt;xref:System.MidpointRounding&gt;</ph> enumeration.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> méthode avec le <ph id="ph2">&lt;xref:System.MidpointRounding&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source><ph id="ph1">&lt;paramref name="decimals" /&gt;</ph> is less than 0 or greater than 28.</source>
          
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The result is outside the range of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
          <source>The minuend.</source>
          
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
          <source>The subtrahend.</source>
          
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
          <source>Subtracts one specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value from another.</source>
          
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="d2" /&gt;</ph> from <ph id="ph2">&lt;paramref name="d1" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
          <source>The following example illustrates the use of <ph id="ph1">`Subtract`</ph>.</source>
          <target state="translated">L’exemple suivant illustre l’utilisation de <ph id="ph1">`Subtract`</ph>.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
          <source>The return value is less than <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the current instance is not zero; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’alternative recommandée consiste à appeler le <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToByte%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToByte%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’alternative recommandée consiste à appeler la <ph id="ph1">&lt;xref:System.Decimal.ToByte%2A?displayProperty=nameWithType&gt;</ph> méthode ou la <ph id="ph2">&lt;xref:System.Convert.ToByte%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>None.</source>
          
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>In all cases.</source>
          
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>None.</source>
          
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>In all cases.</source>
          
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The value of the current instance, unchanged.</source>
          
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToDouble%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’alternative recommandée consiste à appeler la <ph id="ph1">&lt;xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType&gt;</ph> méthode ou la <ph id="ph2">&lt;xref:System.Convert.ToDouble%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>Because a <ph id="ph1">&lt;xref:System.Double&gt;</ph> has fewer significant digits than a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>, this operation may produce round-off errors.</source>
          <target state="translated">Car un <ph id="ph1">&lt;xref:System.Double&gt;</ph> a moins de chiffres significatifs qu’un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>, cette opération peut produire des erreurs d’arrondi.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToInt16%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’alternative recommandée consiste à appeler la <ph id="ph1">&lt;xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType&gt;</ph> méthode ou la <ph id="ph2">&lt;xref:System.Convert.ToInt16%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is rounded toward zero to the nearest integer value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur est arrondie au nombre entier le plus proche de zéro.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToInt32%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’alternative recommandée consiste à appeler la <ph id="ph1">&lt;xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType&gt;</ph> méthode ou la <ph id="ph2">&lt;xref:System.Convert.ToInt32%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is rounded toward zero to the nearest integer value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur est arrondie au nombre entier le plus proche de zéro.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToInt64%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’alternative recommandée consiste à appeler la <ph id="ph1">&lt;xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType&gt;</ph> méthode ou la <ph id="ph2">&lt;xref:System.Convert.ToInt64%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToSByte%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’alternative recommandée consiste à appeler la <ph id="ph1">&lt;xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType&gt;</ph> méthode ou la <ph id="ph2">&lt;xref:System.Convert.ToSByte%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToSingle%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’alternative recommandée consiste à appeler la <ph id="ph1">&lt;xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType&gt;</ph> méthode ou la <ph id="ph2">&lt;xref:System.Convert.ToSingle%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The type to which to convert the value of this <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> instance.</source>
          
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> implementation that supplies culture-specific information about the format of the returned value.</source>
          
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) <ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">L’alternative recommandée consiste à appeler la <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> en Visual Basic) <ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The requested type conversion is not supported.</source>
          
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’alternative recommandée consiste à appeler la <ph id="ph1">&lt;xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> méthode ou la <ph id="ph2">&lt;xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’alternative recommandée consiste à appeler la <ph id="ph1">&lt;xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> méthode ou la <ph id="ph2">&lt;xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is rounded toward zero to the nearest integer value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur est arrondie au nombre entier le plus proche de zéro.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> est effectué en une interface <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call either the <ph id="ph1">&lt;xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">L’alternative recommandée consiste à appeler la <ph id="ph1">&lt;xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> méthode ou la <ph id="ph2">&lt;xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is rounded toward zero to the nearest integer value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur est arrondie au nombre entier le plus proche de zéro.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The resulting integer value is less than <ph id="ph1">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The object that initiated the callback.</source>
          
        </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The functionality for this parameter is not currently implemented.</source>
          
        </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>Runs when the deserialization of an object has been completed.</source>
          
        </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object contains invalid or corrupted data.</source>
          
        </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>The decimal number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 8-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>An 8-bit unsigned integer equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>Parameter <ph id="ph1">`value`</ph> is rounded to the nearest integer value toward zero, and that result is returned.</source>
          <target state="translated">Paramètre <ph id="ph1">`value`</ph> est arrondi à l’entier le plus proche de zéro et que le résultat est retourné.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an 8-bit unsigned integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">Vous pouvez également convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur en entier non signé 8 bits à l’aide de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> opérateur d’assignation.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Étant donné que l’opérateur effectue une conversion restrictive, vous devez utiliser un opérateur de cast en c# ou une fonction de conversion en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToByte%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Decimal.ToByte%2A&gt;</ph> méthode pour convertir des nombres décimaux à <ph id="ph2">&lt;xref:System.Byte&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToByte(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>The decimal number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent double-precision floating-point number.</source>
          
        </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>A double-precision floating-point number equivalent to <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Cette opération peut générer des erreurs d’arrondi, car un nombre à virgule flottante double précision comporte moins de chiffres significatifs qu’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value by using the <ph id="ph3">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">Vous pouvez également convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.Double&gt;</ph> à l’aide de la <ph id="ph3">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> opérateur d’assignation.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Étant donné que la conversion peut entraîner une perte de précision, vous devez utiliser un opérateur de cast en c# ou une fonction de conversion en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToDouble(System.Decimal)">
          <source>The following code example converts <ph id="ph1">`Decimal`</ph> numbers to <ph id="ph2">&lt;xref:System.Double&gt;</ph> values using <ph id="ph3">`ToDouble`</ph> method.</source>
          <target state="translated">Le code suivant convertit d’exemple <ph id="ph1">`Decimal`</ph> nombres <ph id="ph2">&lt;xref:System.Double&gt;</ph> à l’aide des valeurs <ph id="ph3">`ToDouble`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source>The decimal number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 16-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source>A 16-bit signed integer equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a 16-bit integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">Vous pouvez également convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur en un entier 16 bits à l’aide de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> opérateur d’assignation.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Étant donné que l’opérateur effectue une conversion restrictive, vous devez utiliser un opérateur de cast en c# ou une fonction de conversion en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToInt16%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.Int16&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Decimal.ToInt16%2A&gt;</ph> méthode pour convertir des nombres décimaux à <ph id="ph2">&lt;xref:System.Int16&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt16(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>The decimal number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 32-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>A 32-bit signed integer equivalent to the value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>The return value is the integral part of the decimal value; fractional digits are truncated.</source>
          <target state="translated">La valeur de retour est la partie intégrante de la valeur décimale ; les chiffres fractionnaires sont tronqués.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a 32-bit integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">Vous pouvez également convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur en un entier 32 bits à l’aide de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> opérateur d’assignation.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Étant donné que l’opérateur effectue une conversion restrictive, vous devez utiliser un opérateur de cast en c# ou une fonction de conversion en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToInt32%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.Int32&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Decimal.ToInt32%2A&gt;</ph> méthode pour convertir des nombres décimaux à <ph id="ph2">&lt;xref:System.Int32&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt32(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>The decimal number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 64-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>A 64-bit signed integer equivalent to the value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>The return value is the integral part of the decimal value; fractional digits are truncated.</source>
          <target state="translated">La valeur de retour est la partie intégrante de la valeur décimale ; les chiffres fractionnaires sont tronqués.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a 64-bit integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">Vous pouvez également convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur à un entier 64 bits à l’aide de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> opérateur d’assignation.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Étant donné que l’opérateur effectue une conversion restrictive, vous devez utiliser un opérateur de cast en c# ou une fonction de conversion en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToInt64%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Decimal.ToInt64%2A&gt;</ph> méthode pour convertir des nombres décimaux à <ph id="ph2">&lt;xref:System.Int64&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToInt64(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToOACurrency(System.Decimal)">
          <source>The decimal number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToOACurrency(System.Decimal)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToOACurrency(System.Decimal)">
          <source>A 64-bit signed integer that contains the OLE Automation equivalent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToOACurrency(System.Decimal)">
          <source>The following code example uses the <ph id="ph1">`ToOACurrency`</ph> method to convert <ph id="ph2">`Decimal`</ph> numbers to the equivalent OLE Automation Currency values that are contained in <ph id="ph3">&lt;xref:System.Int64&gt;</ph> fields.</source>
          <target state="translated">Le code suivant utilise des exemple le <ph id="ph1">`ToOACurrency`</ph> méthode pour convertir <ph id="ph2">`Decimal`</ph> numéros de valeurs monétaires OLE Automation équivalentes qui sont contenus dans <ph id="ph3">&lt;xref:System.Int64&gt;</ph> champs.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source>The decimal number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 8-bit signed integer.</source>
          
        </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source>An 8-bit signed integer equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an 8-bit signed integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">Vous pouvez également convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur en entier signé 8 bits à l’aide de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> opérateur d’assignation.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Étant donné que l’opérateur effectue une conversion restrictive, vous devez utiliser un opérateur de cast en c# ou une fonction de conversion en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToSByte%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.SByte&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Decimal.ToSByte%2A&gt;</ph> méthode pour convertir des nombres décimaux à <ph id="ph2">&lt;xref:System.SByte&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSByte(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>The decimal number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent single-precision floating-point number.</source>
          
        </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>A single-precision floating-point number equivalent to the value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Cette opération peut générer des erreurs d’arrondi, car un nombre à virgule flottante simple précision comporte moins de chiffres significatifs qu’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value by using the <ph id="ph3">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">Vous pouvez également convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à un <ph id="ph2">&lt;xref:System.Single&gt;</ph> à l’aide de la <ph id="ph3">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> opérateur d’assignation.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Étant donné que la conversion peut entraîner une perte de précision, vous devez utiliser un opérateur de cast en c# ou une fonction de conversion en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToSingle(System.Decimal)">
          <source>The following code example converts <ph id="ph1">`Decimal`</ph> numbers to <ph id="ph2">&lt;xref:System.Single&gt;</ph> values using the <ph id="ph3">`ToSingle`</ph> method.</source>
          <target state="translated">Le code suivant convertit de l’exemple <ph id="ph1">`Decimal`</ph> nombres <ph id="ph2">&lt;xref:System.Single&gt;</ph> des valeurs en utilisant la <ph id="ph3">`ToSingle`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Converts the numeric value of this instance to its equivalent <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          
        </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString">
          <source>Converts the numeric value of this instance to its equivalent string representation.</source>
          
        </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString">
          <source>A string that represents the value of this instance.</source>
          
        </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.ToString&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value in the default ("G", or general) format of the current culture.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.ToString&gt;</ph> méthode formats un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur dans la valeur par défaut (« G » ou général) format de la culture actuelle.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>If you want to specify a different format or culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">Si vous souhaitez spécifier un autre format ou la culture, utilisez les autres surcharges de la <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> méthode, comme suit :</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>To use format</source>
          <target state="translated">Pour utiliser le format</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>For culture</source>
          <target state="translated">Pour la culture</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>Use the overload</source>
          <target state="translated">Utilisez la surcharge</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>Default ("G") format</source>
          <target state="translated">Format par défaut (« G »)</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>A specific culture</source>
          <target state="translated">Une culture spécifique</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>A specific format</source>
          <target state="translated">Un format spécifique</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>Default (current) culture</source>
          <target state="translated">Culture (actuel) par défaut</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>A specific format</source>
          <target state="translated">Un format spécifique</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>A specific culture</source>
          <target state="translated">Une culture spécifique</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>The following example displays a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value using the default <ph id="ph2">&lt;xref:System.Decimal.ToString&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant affiche un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à l’aide de la valeur par défaut la valeur <ph id="ph2">&lt;xref:System.Decimal.ToString&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>It also displays the string representations of the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value that result from using a number of standard format specifiers.</source>
          <target state="translated">Elle affiche également les représentations sous forme de chaîne de la <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur résultant de l’utilisation d’un nombre de spécificateurs de format standard.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString">
          <source>The following example displays the amount of money in an account.</source>
          <target state="translated">L’exemple suivant affiche la somme d’argent dans un compte.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          
        </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</source>
          
        </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value in the default ("G", or general) format of a specified culture.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29&gt;</ph> méthode formats un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur dans la valeur par défaut (« G » ou général) le format d’une culture spécifiée.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>If you want to specify a different format or the current culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">Si vous souhaitez spécifier un autre format ou la culture actuelle, utilisez les autres surcharges de la <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> méthode, comme suit :</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">Pour utiliser le format</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">Pour la culture</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">Utilisez la surcharge</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">Format par défaut (« G »)</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">Culture (actuel) par défaut</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">Un format spécifique</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">Culture (actuel) par défaut</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">Un format spécifique</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">Une culture spécifique</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre est un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implémentation dont <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> méthode retourne un <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>Typically, <ph id="ph1">`provider`</ph> is a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object or a <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">En règle générale, <ph id="ph1">`provider`</ph> est un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet ou un <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in formatting.</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre fournit des informations spécifiques à la culture utilisées dans la mise en forme.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> est <ph id="ph2">`null`</ph>, la culture actuelle du thread est utilisée.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>To convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to its string representation using a specified culture and a specific format string, call the <ph id="ph2">&lt;xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur en sa représentation de chaîne à l’aide d’une culture spécifiée et une chaîne de format spécifique, appel de la <ph id="ph2">&lt;xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.IFormatProvider)">
          <source>The following example displays the string representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value using <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects that represent several different cultures.</source>
          <target state="translated">L’exemple suivant affiche la représentation sous forme de chaîne d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> à l’aide de la valeur <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objets qui représentent plusieurs cultures différentes.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String)">
          <source>A standard or custom numeric format string.</source>
          
        </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String)">
          <source>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</source>
          
        </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.String%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value in a specified format by using the conventions of the current culture.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.String%29&gt;</ph> méthode formats un <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeur dans un format spécifié en utilisant les conventions de la culture actuelle.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">Si vous souhaitez utiliser la valeur par défaut (« G » ou général) format ou spécifiez une autre culture, utilisez les autres surcharges de la <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> méthode, comme suit :</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>To use format</source>
          <target state="translated">Pour utiliser le format</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>For culture</source>
          <target state="translated">Pour la culture</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>Use the overload</source>
          <target state="translated">Utilisez la surcharge</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>Default ("G") format</source>
          <target state="translated">Format par défaut (« G »)</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>Default (current) culture</source>
          <target state="translated">Culture (actuel) par défaut</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>Default ("G") format</source>
          <target state="translated">Format par défaut (« G »)</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">Une culture spécifique</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>A specific format</source>
          <target state="translated">Un format spécifique</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">Une culture spécifique</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method uses the standard or custom numeric format string specified by the <ph id="ph2">`format`</ph> parameter to convert the value of the current instance into its string representation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Decimal.ToString%2A&gt;</ph> méthode utilise la chaîne de format numérique standard ou personnalisée spécifiée par la <ph id="ph2">`format`</ph> paramètre pour convertir la valeur de l’instance actuelle en sa représentation sous forme de chaîne.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid <bpt id="p1">[</bpt>standard numeric format specifier<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> except for D, R, and X, as well as any combination of <bpt id="p2">[</bpt>custom numeric format specifiers<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre peut être valide <bpt id="p1">[</bpt>spécificateur de format numérique standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> à l’exception de D, R et X, ainsi que n’importe quelle combinaison de <bpt id="p2">[</bpt>spécificateurs de format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).</source>
          <target state="translated">Si <ph id="ph1">`format`</ph> est <ph id="ph2">`null`</ph> ou une chaîne vide, la valeur de retour de cette instance est mise en forme avec le spécificateur de format numérique général (G).</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>The return value is formatted by using the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">La valeur de retour est mise en forme à l’aide de la <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet pour la culture actuelle.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>To apply the formatting conventions of a specified culture, call the <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method.</source>
          <target state="translated">Pour appliquer les conventions de mise en forme d’une culture spécifiée, appelez le <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>The following example displays a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</source>
          <target state="translated">L’exemple suivant affiche un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur à l’aide de chacun des spécificateurs de format numérique standard pris en charge, ainsi que deux chaînes de format numériques personnalisées.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String)">
          <source>In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</source>
          <target state="translated">Convertir les valeurs numériques en chaînes, l’exemple utilise les conventions de mise en forme de la culture en-US.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          
        </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>A numeric format string.</source>
          
        </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          
        </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</source>
          
        </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph> and <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value in a specified format of a specified culture.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> méthode formats un <ph id="ph2">&lt;xref:System.Double&gt;</ph> valeur dans un format spécifié d’une culture spécifiée.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>If you want to use default format or culture settings, use the other overloads of the <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">Si vous souhaitez utiliser les paramètres de format ou la culture par défaut, utilisez les autres surcharges de la <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph> méthode, comme suit :</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">Pour utiliser le format</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">Pour la culture</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">Utilisez la surcharge</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">Format par défaut (« G »)</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">Culture (actuel) par défaut</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">Format par défaut (« G »)</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">Une culture spécifique</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">Un format spécifique</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">Culture (actuel) par défaut</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre peut être n’importe quel spécificateur de format numérique standard valide à l’exception de D, R et X, ainsi que toute combinaison de spécificateurs de format numériques personnalisées.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">Si <ph id="ph1">`format`</ph> est <ph id="ph2">`null`</ph> ou une chaîne vide, la valeur de retour de cette instance est mise en forme avec le spécificateur de format numérique général (« G »).</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques de mise en forme suivantes :</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre est un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implémentation dont <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> méthode retourne un <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>Typically, <ph id="ph1">`provider`</ph> is a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">En règle générale, <ph id="ph1">`provider`</ph> est un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> ou <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in formatting.</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre fournit des informations spécifiques à la culture utilisées dans la mise en forme.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> est <ph id="ph2">`null`</ph>, la culture actuelle du thread est utilisée.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source>The following example displays a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value using each of the supported standard numeric format specifiers for several different cultures.</source>
          <target state="translated">L’exemple suivant affiche un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur à l’aide de chacun des spécificateurs de format numérique standard pris en charge pour plusieurs cultures différentes.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          
        </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>The decimal number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 16-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>A 16-bit unsigned integer equivalent to the value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>The return value is the integral part of the decimal value; fractional digits are truncated.</source>
          <target state="translated">La valeur de retour est la partie intégrante de la valeur décimale ; les chiffres fractionnaires sont tronqués.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a 16-bit unsigned integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">Vous pouvez également convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur entier non signé 16 bits à l’aide de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> opérateur d’assignation.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Étant donné que l’opérateur effectue une conversion restrictive, vous devez utiliser un opérateur de cast en c# ou une fonction de conversion en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToUInt16%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Decimal.ToUInt16%2A&gt;</ph> méthode pour convertir des nombres décimaux à <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt16(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>The decimal number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 32-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>A 32-bit unsigned integer equivalent to the value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>The return value is the integral part of the decimal value; fractional digits are truncated.</source>
          <target state="translated">La valeur de retour est la partie intégrante de la valeur décimale ; les chiffres fractionnaires sont tronqués.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an 32-bit unsigned integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">Vous pouvez également convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur en entier non signé 32 bits à l’aide de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> opérateur d’assignation.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Étant donné que l’opérateur effectue une conversion restrictive, vous devez utiliser un opérateur de cast en c# ou une fonction de conversion en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToUInt32%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Decimal.ToUInt32%2A&gt;</ph> méthode pour convertir des nombres décimaux à <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt32(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is negative or greater than <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>The decimal number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to the equivalent 64-bit unsigned integer.</source>
          
        </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>A 64-bit unsigned integer equivalent to the value of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>The return value is the integral part of the decimal value; fractional digits are truncated.</source>
          <target state="translated">La valeur de retour est la partie intégrante de la valeur décimale ; les chiffres fractionnaires sont tronqués.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>You can also convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to an 64-bit unsigned integer by using the <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.</source>
          <target state="translated">Vous pouvez également convertir un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur en entier non signé 64 bits à l’aide de la <ph id="ph2">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> opérateur d’assignation.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</source>
          <target state="translated">Étant donné que l’opérateur effectue une conversion restrictive, vous devez utiliser un opérateur de cast en c# ou une fonction de conversion en Visual Basic.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.ToUInt64%2A&gt;</ph> method to convert decimal numbers to <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Decimal.ToUInt64%2A&gt;</ph> méthode pour convertir des nombres décimaux à <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" uid="M:System.Decimal.ToUInt64(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is negative or greater than <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" uid="M:System.Decimal.Truncate(System.Decimal)">
          <source>The decimal number to truncate.</source>
          
        </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" uid="M:System.Decimal.Truncate(System.Decimal)">
          <source>Returns the integral digits of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>; any fractional digits are discarded.</source>
          
        </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="M:System.Decimal.Truncate(System.Decimal)">
          <source>The result of <ph id="ph1">&lt;paramref name="d" /&gt;</ph> rounded toward zero, to the nearest whole number.</source>
          
        </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Truncate(System.Decimal)">
          <source>This method rounds <ph id="ph1">`d`</ph> toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.</source>
          <target state="translated">Cette méthode arrondit <ph id="ph1">`d`</ph> au nombre entier plus proche de zéro qui correspond à supprimer tous les chiffres après la virgule décimale.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.Truncate(System.Decimal)">
          <source>The following code example uses the <ph id="ph1">`Truncate`</ph> method to discard the fractional digits of several <ph id="ph2">`Decimal`</ph> values.</source>
          <target state="translated">Le code suivant exemple utilise le <ph id="ph1">`Truncate`</ph> méthode pour supprimer les chiffres fractionnaires de plusieurs <ph id="ph2">`Decimal`</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent.</source>
          
        </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="T:System.Decimal">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          
        </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>The string representation of the number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent.</source>
          
        </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          
        </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>This overload differs from the <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</source>
          <target state="translated">Cette surcharge diffère la <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> méthode en retournant une valeur booléenne qui indique si l’opération d’analyse a réussi au lieu de retourner la valeur numérique analysée.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>It eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id="ph2">`s`</ph> is invalid and cannot be successfully parsed.</source>
          <target state="translated">Elle élimine la nécessité d’utiliser la gestion des exceptions pour tester un <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> dans le cas où <ph id="ph2">`s`</ph> n’est pas valide et ne peut pas être analysée avec succès.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Parameter <ph id="ph1">`s`</ph> contains a number of the form:</source>
          <target state="translated">Paramètre <ph id="ph1">`s`</ph> contient un nombre sous la forme :</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>[ws][sign][digits,]digits[.fractional-digits][ws]</source>
          <target state="translated">[ws][sign][digits,]digits[.fractional-digits][ws]</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Les éléments entre crochets ([ et ]) sont facultatifs.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Description</source>
          <target state="translated">Description</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Optional white space.</source>
          <target state="translated">Espace blanc facultatif.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>An optional sign.</source>
          <target state="translated">Un signe facultatif.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Une séquence de chiffres allant de 0 à 9.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">Spécifiques à la culture des milliers symbole de séparateur.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Un symbole décimal spécifiques à la culture.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Une séquence de chiffres allant de 0 à 9.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Parameter <ph id="ph1">`s`</ph> is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">Paramètre <ph id="ph1">`s`</ph> est interprétée à l’aide de la <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> style.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>This means that white space and thousands separators are allowed but currency symbols are not.</source>
          <target state="translated">Cela signifie que les espaces blancs et des milliers séparateurs sont autorisées mais ne sont pas les symboles monétaires.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in <ph id="ph1">`s`</ph>, use the <ph id="ph2">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType&gt;</ph> method overload.</source>
          <target state="translated">Pour définir explicitement les éléments (tels que les symboles monétaires, des milliers séparateurs et espace blanc) qui peuvent être présents dans <ph id="ph1">`s`</ph>, utilisez le <ph id="ph2">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType&gt;</ph> surcharge de méthode.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>Parameter <ph id="ph1">`s`</ph> is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object initialized for the current system culture.</source>
          <target state="translated">Paramètre <ph id="ph1">`s`</ph> est analysé à l’aide des informations de mise en forme dans un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet initialisé pour la culture système actuelle.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>To parse a string using the formatting information of some other specified culture, use the <ph id="ph1">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType&gt;</ph> method overload.</source>
          <target state="translated">Pour analyser une chaîne en utilisant les informations de mise en forme d’une autre culture spécifiée, utilisez la <ph id="ph1">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType&gt;</ph> surcharge de méthode.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>If necessary, the value of <ph id="ph1">`s`</ph> is rounded using rounding to nearest.</source>
          <target state="translated">Si nécessaire, la valeur de <ph id="ph1">`s`</ph> est arrondi au plus proche.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> object has 29 digits of precision.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> objet a 29 chiffres de précision.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>If <ph id="ph1">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> représente un nombre qui a plus de 29 chiffres, mais comporte une partie fractionnaire et se trouve dans la plage <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> et <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, le nombre est arrondi, non tronqué, à 29 chiffres d’arrondi au plus proche.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>If during a parse operation a separator is encountered in the <ph id="ph1">`s`</ph> parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">Si au cours d’une opération d’analyse, un séparateur est rencontré dans le <ph id="ph1">`s`</ph> paramètre et la devise ou nombre décimal et les séparateurs de groupes sont identiques, l’opération d’analyse suppose que le séparateur est un séparateur décimal plutôt qu’un groupe séparateur.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur les séparateurs, consultez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, et <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType&gt;</ph> method to convert the string representations of numeric values to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType&gt;</ph> méthode pour convertir les représentations sous forme de chaîne de valeurs numériques à <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Decimal@)">
          <source>It assumes that en-US is the current culture.</source>
          <target state="translated">Il suppose qu’en-US est la culture actuelle.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The string representation of the number to convert.</source>
          
        </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A bitwise combination of enumeration values that indicates the permitted format of <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Number" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>An object that supplies culture-specific parsing information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent using the specified style and culture-specific format.</source>
          
        </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          
        </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>This overload differs from the <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</source>
          <target state="translated">Cette surcharge diffère la <ph id="ph1">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> méthode en retournant une valeur booléenne qui indique si l’opération d’analyse a réussi au lieu de retourner la valeur numérique analysée.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>It eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id="ph2">`s`</ph> is invalid and cannot be successfully parsed.</source>
          <target state="translated">Elle élimine la nécessité d’utiliser la gestion des exceptions pour tester un <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> dans le cas où <ph id="ph2">`s`</ph> n’est pas valide et ne peut pas être analysée avec succès.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the allowable format of the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated">Le <ph id="ph1">`style`</ph> paramètre définit le format autorisé de le <ph id="ph2">`s`</ph> paramètre pour l’opération d’analyse.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">Il doit être une combinaison de bits indicateurs de le <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The following <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:</source>
          <target state="translated">Les éléments suivants <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> membres ne sont pas pris en charge :</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Depending on the value of style, the <ph id="ph1">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">Selon la valeur du style, le <ph id="ph1">`s`</ph> paramètre peut inclure les éléments suivants :</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Les éléments entre crochets ([ et ]) sont facultatifs.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The following table describes each element.</source>
          <target state="translated">Le tableau suivant décrit chaque élément.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Description</source>
          <target state="translated">Description</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Optional white space.</source>
          <target state="translated">Espace blanc facultatif.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Espace blanc peut apparaître au début de <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>It can appear at the end of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Il peut apparaître à la fin de <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Un symbole monétaire spécifique à la culture.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> method of the <ph id="ph5">`provider`</ph> parameter.</source>
          <target state="translated">Sa position dans la chaîne est définie par le <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> propriétés de la <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet retourné par la <ph id="ph4">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> méthode de le <ph id="ph5">`provider`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Le symbole monétaire peut apparaître dans <ph id="ph1">`s`</ph> si <ph id="ph2">`style`</ph> inclut la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> indicateur.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>An optional sign.</source>
          <target state="translated">Un signe facultatif.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Une séquence de chiffres allant de 0 à 9.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Un symbole décimal spécifiques à la culture.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Une séquence de chiffres allant de 0 à 9.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The <ph id="ph1">`style`</ph> parameter specifies the permitted format of the <ph id="ph2">`s`</ph> parameter, and can be one or more <ph id="ph3">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumerated constants combined using a bitwise OR operation.</source>
          <target state="translated">Le <ph id="ph1">`style`</ph> paramètre spécifie le format autorisé de le <ph id="ph2">`s`</ph> paramètre et peut prendre l’une ou plusieurs <ph id="ph3">&lt;xref:System.Globalization.NumberStyles&gt;</ph> combinées à l’aide d’une opération OR au niveau du bit de constantes énumérées.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>If <ph id="ph1">`style`</ph> is null, <ph id="ph2">`s`</ph> is interpreted using the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">Si <ph id="ph1">`style`</ph> a la valeur null, <ph id="ph2">`s`</ph> est interprétée à l’aide de la <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType&gt;</ph> style.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre est un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> mise en œuvre comme une <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> ou <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in parsing.</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre fournit des informations spécifiques à la culture utilisées dans l’analyse.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> est <ph id="ph2">`null`</ph>, la culture actuelle du thread est utilisée.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> object has 29 digits of precision.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> objet a 29 chiffres de précision.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>If <ph id="ph1">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> représente un nombre qui a plus de 29 chiffres, mais comporte une partie fractionnaire et se trouve dans la plage <ph id="ph2">&lt;xref:System.Decimal.MaxValue&gt;</ph> et <ph id="ph3">&lt;xref:System.Decimal.MinValue&gt;</ph>, le nombre est arrondi, non tronqué, à 29 chiffres d’arrondi au plus proche.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">Si un séparateur est rencontré dans le <ph id="ph1">`s`</ph> paramètre pendant une opération d’analyse et la devise ou un nombre décimal et les séparateurs de groupes sont identiques, l’opération d’analyse suppose que le séparateur est un séparateur décimal plutôt qu’un groupe séparateur.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur les séparateurs, consultez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, et <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29&gt;</ph> method to parse the string representation of a number that has a particular style and is formatted using the conventions of a particular culture.</source>
          <target state="translated">L’exemple suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29&gt;</ph> méthode pour analyser la représentation sous forme de chaîne d’un nombre qui a un style particulier et est mise en forme les conventions d’une culture particulière.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" uid="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="F:System.Decimal.Zero">
          <source>Represents the number zero (0).</source>
          
        </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Decimal.Zero">
          <source>The following code example illustrates the use of the <ph id="ph1">`Zero`</ph> field.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">`Zero`</ph> champ.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>