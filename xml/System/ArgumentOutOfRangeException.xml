<Type Name="ArgumentOutOfRangeException" FullName="System.ArgumentOutOfRangeException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae4dc936aee4ea8e32ea32ca4b1af528d509c201" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30729373" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArgumentOutOfRangeException : ArgumentException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArgumentOutOfRangeException extends System.ArgumentException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ArgumentOutOfRangeException" />
  <TypeSignature Language="VB.NET" Value="Public Class ArgumentOutOfRangeException&#xA;Inherits ArgumentException" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArgumentOutOfRangeException : ArgumentException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ArgumentException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Exception levée quand la valeur d'un argument n'appartient pas à la plage de valeurs autorisées, comme défini par la méthode appelée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.ArgumentOutOfRangeException> exception est levée lorsqu’une méthode est appelée et qu’au moins un des arguments passés à la méthode n’est pas `null` et contient une valeur non valide qui n’est pas un membre de l’ensemble des valeurs attendues pour l’argument. Le <xref:System.ArgumentException.ParamName%2A> propriété identifie l’argument non valide et le <xref:System.ArgumentOutOfRangeException.ActualValue%2A> propriété, si une valeur est présente, identifie la valeur non valide.  
  
 En règle générale, un <xref:System.ArgumentOutOfRangeException> résulte d’une erreur de développement. Au lieu de la gestion de l’exception dans un `try` / `catch` bloc, vous devez éliminer la cause de l’exception ou, si l’argument est retourné par un appel de méthode ou d’une entrée par l’utilisateur avant d’être passé à la méthode qui lève l’exception , vous devez valider les arguments avant de les passer à la méthode.  
  
 <xref:System.ArgumentOutOfRangeException> est fréquemment utilisé par :  
  
-   Classes de la <xref:System.Collections> et <xref:System.IO> espaces de noms.  
  
-   La classe <xref:System.Array>.  
  
-   Dans les méthodes de manipulation de chaîne la <xref:System.String> classe.  
  
 Les conditions dans lesquelles un <xref:System.ArgumentOutOfRangeException> d’exception sont les suivantes :  
  
 Vous récupérez le membre d’une collection par son numéro d’index, et le numéro d’index n’est pas valide.  
 Il s’agit de la cause la plus courante un <xref:System.ArgumentOutOfRangeException> exception.   En règle générale, le numéro d’index n’est pas valide pour l’une des trois raisons :  
  
-   La collection ne possède aucun membre, et votre code suppose qu’il exécute. L’exemple suivant tente de récupérer le premier élément d’une collection qui ne comporte aucun élément :  
  
     [!code-csharp[System.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#4)]
     [!code-vb[System.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#4)]  
  
     Pour éviter l’exception, vérifiez si la collection `Count` est supérieure à zéro avant d’essayer de récupérer tous les membres, comme le fait le fragment de code suivant.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#5)]
     [!code-vb[System.ArgumentOutOfRangeException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#5)]  
  
     Dans certains cas, cela peut se produire parce que vous tentez d’ajouter un membre à une collection à l’aide d’un index qui n’existe pas, plutôt qu’en appelant la méthode, telles que `Add`, qui existe à cet effet.  L’exemple suivant tente d’ajouter un élément à une collection en utilisant un index inexistant, au lieu d’appeler le <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> (méthode).  
  
     [!code-csharp[System.ArgumentOutOfRangeException#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#13)]
     [!code-vb[System.ArgumentOutOfRangeException#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#13)]  
  
     Le fragment de code suivant corrige cette erreur :  
  
     [!code-csharp[System.ArgumentOutOfRangeException#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#14)]
     [!code-vb[System.ArgumentOutOfRangeException#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#14)]  
  
-   Vous tentez de récupérer un élément dont l’index est un nombre négatif. Cela se produit généralement parce que vous avez recherché une collection pour l’index d’un élément particulier et avez supposé par erreur que la recherche aboutit. Dans l’exemple suivant, l’appel à la <xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29?displayProperty=nameWithType> méthode ne parvient pas à trouver une chaîne égale à « Z » et donc retourne -1. Toutefois, il s’agit d’une valeur d’index non valide.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#6)]
     [!code-vb[System.ArgumentOutOfRangeException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#6)]  
  
     Pour empêcher cette exception, vérifiez que la recherche a réussi en vous assurant qu’index retourné est supérieur ou égal à zéro avant de tenter de récupérer l’élément de la collection, comme le code suivant fragment le fait.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#7)]
     [!code-vb[System.ArgumentOutOfRangeException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#7)]  
  
-   Vous tentez de récupérer un élément dont l’index est égale à la valeur de la collection `Count` propriété, comme l’exemple suivant illustre.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#8)]
     [!code-vb[System.ArgumentOutOfRangeException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#8)]  
  
     Étant donné que les collections dans le .NET Framework utilisent une indexation de base zéro, le premier élément de la collection est à l’index 0 et le dernier élément est à l’index `Count` - 1. Vous pouvez éliminer l’erreur en vous assurant que vous y accéder le dernier élément à l’index `Count` - 1, comme le code suivant.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#9)]
     [!code-vb[System.ArgumentOutOfRangeException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#9)]  
  
 Vous essayez d’effectuer une opération de chaîne en appelant une méthode de manipulation de chaîne et l’index de départ n’existe pas dans la chaîne.  
 Les surcharges de méthodes telles que comme <xref:System.String.Compare%2A?displayProperty=nameWithType>, <xref:System.String.CompareOrdinal%2A?displayProperty=nameWithType>, <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, <xref:System.String.IndexOfAny%2A>, <xref:System.String.Insert%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType>, <xref:System.String.Remove%2A>, ou <xref:System.String.Substring%2A?displayProperty=nameWithType> vous permettent de spécifier l’index de départ de la opération nécessitent une position valide dans la chaîne de l’index. Index valides comprise entre 0 et <xref:System.String.Length%2A?displayProperty=nameWithType> - 1.  
  
 Il existe quatre causes courantes de ce <xref:System.ArgumentOutOfRangeException> exception :  
  
-   Vous travaillez avec une chaîne vide., ou <xref:System.String.Empty?displayProperty=nameWithType>. Étant donné que son <xref:System.String.Length%2A?displayProperty=nameWithType> propriété retourne 0, toute tentative de les manipuler à index lève une <xref:System.ArgumentOutOfRangeException> exception. L’exemple suivant, définit un `GetFirstCharacter` méthode qui retourne le premier caractère d’une chaîne. Si la chaîne est vide, comme la dernière chaîne passée à la méthode, la méthode lève un <xref:System.ArgumentOutOfRangeException> exception.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#15)]
     [!code-vb[System.ArgumentOutOfRangeException#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#15)]  
  
     Vous pouvez éliminer l’exception en vérifiant si la chaîne <xref:System.String.Length%2A?displayProperty=nameWithType> est supérieure à zéro ou en appelant le <xref:System.String.IsNullOrEmpty%2A> pour s’assurer que la chaîne n’est pas `null` ou vide. Le fragment de code suivant effectue ce dernier. Dans ce cas, si la chaîne est `null` ou vide, le `GetFirstCharacter` méthode retourne U + 0000.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#16)]
     [!code-vb[System.ArgumentOutOfRangeException#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#16)]  
  
-   Vous manipulez une chaîne en fonction de la position d’une sous-chaîne dans cette chaîne, et que vous avez Impossible de déterminer si la sous-chaîne a été trouvée.  
  
     L’exemple suivant extrait le deuxième mot d’une expression de deux mots. Elle lève une <xref:System.ArgumentOutOfRangeException> exception si l’expression se compose d’un mot et par conséquent, ne contient pas un caractère espace incorporé.  Cela se produit car l’appel à la <xref:System.String.IndexOf%28System.String%29?displayProperty=nameWithType> méthode retourne -1 pour indiquer que la recherche a échoué, et cette valeur non valide est ensuite transmise à la <xref:System.String.Substring%28System.Int32%29?displayProperty=nameWithType> (méthode).  
  
     [!code-csharp[System.ArgumentOutOfRangeException#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind1.cs#17)]
     [!code-vb[System.ArgumentOutOfRangeException#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind1.vb#17)]  
  
     Pour éliminer l’exception, valider la valeur retournée par la méthode de recherche de chaîne avant d’appeler la méthode de manipulation de chaînes.  
  
     [!code-csharp[System.ArgumentOutOfRangeException#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind2.cs#18)]
     [!code-vb[System.ArgumentOutOfRangeException#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind2.vb#18)]  
  
-  
  
 Vous avez tenté d’extraire une sous-chaîne qui se trouve en dehors de la plage de la chaîne actuelle.  
 Les méthodes qui extraient les sous-chaînes que tous nécessitent que vous spécifiez la position de départ de la sous-chaîne et, pour les sous-chaînes qui ne continuent pas à la fin de la chaîne, le nombre de caractères dans la sous-chaîne. Notez que cela n’est pas le *index* du dernier caractère de la sous-chaîne.  
  
 Un <xref:System.ArgumentOutOfRangeException> exception est généralement levée dans ce cas, car vous avez calculé correctement le nombre de caractères dans la sous-chaîne.  Si vous utilisez une méthode de recherche comme <xref:System.String.IndexOf%2A?displayProperty=nameWithType> pour identifier le début et fin des positions d’une sous-chaîne :  
  
-   Si le caractère de la position de fin est retourné par <xref:System.String.IndexOf%2A?displayProperty=nameWithType> à inclure dans la sous-chaîne, la position de fin de la sous-chaîne est donnée par la formule  
  
    ```  
    endIndex - startIndex + 1  
    ```  
  
-   Si le caractère de la position de fin est retourné par <xref:System.String.IndexOf%2A?displayProperty=nameWithType> est à exclure de la sous-chaîne, la position de fin de la sous-chaîne est donnée par la formule  
  
    ```  
    endIndex - startIndex   
    ```  
  
 L’exemple suivant définit un `FindWords` méthode qui utilise le <xref:System.String.IndexOfAny%28System.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> méthode pour identifier les espaces et la ponctuation marque dans une chaîne et retourne un tableau qui contient les mots trouvés dans la chaîne.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/FindWords1.cs#19)]
 [!code-vb[System.ArgumentOutOfRangeException#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/FindWords1.vb#19)]  
  
 Vous avez passé un nombre négatif à une méthode avec un argument qui nécessite uniquement des nombres positifs et zéro, ou si vous avez passé un nombre négatif ou zéro à une méthode avec un argument qui nécessite uniquement des nombres positifs.  
 Par exemple, le <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> méthode requiert que vous spécifiez le nombre d’éléments dans chaque dimension d’un tableau à deux dimensions ; les valeurs valides pour chaque dimension peuvent aller de 0 à <xref:System.Int32.MaxValue?displayProperty=nameWithType>. Mais étant donné que l’argument de dimension dans l’exemple suivant a une valeur négative, la méthode lève un <xref:System.ArgumentOutOfRangeException> exception.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#1)]
 [!code-vb[System.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#1)]  
  
 Pour corriger cette erreur, assurez-vous que la valeur de l’argument non valide est négatif. Pour cela, vous pouvez en fournissant une valeur valide, comme le fait le fragment de code suivant.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#2)]
 [!code-vb[System.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#2)]  
  
 Vous pouvez également valider l’entrée et, si elle n’est pas valide, prendre des mesures. Le fragment de code suivant affiche un message d’erreur au lieu d’appeler la méthode.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#3)]
 [!code-vb[System.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#3)]  
  
 Il existe une condition de concurrence dans une application multithread ou a des tâches qui s’exécutent en mode asynchrone et qui met à jour un tableau ou une collection.  
 L’exemple suivant utilise un <xref:System.Collections.Generic.List%601> objet pour remplir une collection de `Continent` objets. Elle lève une <xref:System.ArgumentOutOfRangeException> exception si l’exemple tente d’afficher les sept éléments dans la collection avant de la collection est pleine.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race1.cs#11)]
 [!code-vb[System.ArgumentOutOfRangeException#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race1.vb#11)]  
  
 Dans ce cas, les deux ressources sont accessibles à partir de plusieurs threads :  
  
-   Collection `continents`. Son <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> méthode est appelée à partir de plusieurs threads. En outre, le thread principal ou principal suppose que la collection est entièrement remplie avec sept éléments lorsqu’il itère au sein de ses membres.  
  
-   Le `msg` chaîne, qui est concaténée à partir de plusieurs threads.  
  
 Pour corriger cette erreur, assurez-vous qu’un état partagé est accessible de façon thread-safe, comme suit.  
  
-   Si votre application utilise un objet collection ou du tableau, envisagez d’utiliser une classe de collection thread-safe, telles que les types dans les <xref:System.Collections.Concurrent> espace de noms ou le <xref:System.Collections.Immutable> version hors-bande.  
  
-   Assurez-vous que l’état partagé (autrement dit, les ressources qui sont accessibles par plusieurs threads) est accessible de façon thread-safe, afin qu’un seul thread à la fois ait un accès exclusif aux ressources. Un grand nombre de classes, telles que <xref:System.Threading.CountdownEvent>, <xref:System.Threading.Interlocked>, <xref:System.Threading.Monitor>, et <xref:System.Threading.Mutex>, sont disponibles pour synchroniser l’accès aux ressources. Pour plus d’informations, consultez [Threading](http://msdn.microsoft.com/library/7b46a7d9-c6f1-46d1-a947-ae97471bba87). En outre, la prise en charge linguistique est disponible via le [verrou](~/docs/csharp/language-reference/keywords/lock-statement.md) instruction en c# et la [SyncLock](~/docs/visual-basic/language-reference/statements/synclock-statement.md) construire en Visual Basic.  
  
 Les exemples d’adresses suivantes du <xref:System.ArgumentOutOfRangeException> exception et les autres problèmes de l’exemple précédent. Il remplace le <xref:System.Collections.Generic.List%601> de l’objet avec un <xref:System.Collections.Concurrent.ConcurrentBag%601> objet pour garantir que l’accès à la collection est thread-safe, utilise un <xref:System.Threading.CountdownEvent> objet pour vous assurer que le thread d’application continue uniquement après les autres threads ont été exécutées et utilise un verrou pour garantir que qu’un seul thread peut accéder à la `msg` variable à la fois.  
  
 [!code-csharp[System.ArgumentOutOfRangeException#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race2.cs#12)]
 [!code-vb[System.ArgumentOutOfRangeException#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race2.vb#12)]  
  
 <xref:System.ArgumentOutOfRangeException> utilise le HRESULT COR_E_ARGUMENTOUTOFRANGE dont la valeur est 0 x 80131502.  
  
 Pour obtenir la liste de valeurs de propriété initiales d’une instance de <xref:System.ArgumentOutOfRangeException>, consultez la <xref:System.ArgumentOutOfRangeException> constructeurs.  
  
   
  
## Examples  
 L’exemple suivant définit une classe pour contenir des informations sur un invité invité. Si l’invité a moins de 21 ans un <xref:System.ArgumentOutOfRangeException> exception est levée.  
  
 [!code-csharp[ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR/ArgumentOutOfRangeException/CS/program.cs#1)]
 [!code-vb[ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ArgumentOutOfRangeException/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentOutOfRangeException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentOutOfRangeException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la <xref:System.ArgumentException.Message%2A> propriété de la nouvelle instance à un message système qui décrit l’erreur, tel que « Nombre non négatif requis. » Ce message prend en compte la culture système en cours.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.ArgumentOutOfRangeException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Référence Null (`Nothing` en Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Chaîne du message d'erreur localisé.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nom du paramètre ayant provoqué cette exception.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentOutOfRangeException" /> avec le nom du paramètre ayant provoqué l'exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la <xref:System.ArgumentException.Message%2A> propriété de la nouvelle instance à un message système qui décrit l’erreur, tel que « Nombre non négatif requis. » Ce message prend en compte la culture système en cours.  
  
 Ce constructeur initialise la propriété <xref:System.ArgumentException.ParamName%2A> de la nouvelle instance à l'aide du paramètre `paramName`. Le contenu de `paramName` doit être compréhensible par les utilisateurs.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.ArgumentOutOfRangeException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Référence Null (`Nothing` en Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|La chaîne vide (« »).|  
|<xref:System.ArgumentException.ParamName%2A>|La chaîne de nom de paramètre.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArgumentOutOfRangeException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArgumentOutOfRangeException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
        <param name="context">Objet qui décrit la source ou la destination des données sérialisées.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentOutOfRangeException" /> avec des données sérialisées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est appelé lors de la désérialisation pour reconstituer l’objet exception transmis sur un flux. Pour plus d’informations, consultez [sérialisation XML et SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Message d'erreur expliquant la raison de cette exception.</param>
        <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentOutOfRangeException" /> avec un message d'erreur spécifié et l'exception qui est à l'origine de cette exception.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName, System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nom du paramètre ayant provoqué l’exception.</param>
        <param name="message">Message décrivant l'erreur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentOutOfRangeException" /> avec le nom du paramètre ayant provoqué l'exception et un message d'erreur spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la <xref:System.ArgumentOutOfRangeException.Message%2A> propriété de la nouvelle instance à l’aide de la valeur de le `message` paramètre. Le contenu du paramètre `message` doit être compréhensible par les utilisateurs. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.  
  
 Ce constructeur initialise la propriété <xref:System.ArgumentException.ParamName%2A> de la nouvelle instance à l'aide du paramètre `paramName`. Le contenu de `paramName` doit être compréhensible par les utilisateurs.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.ArgumentOutOfRangeException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Chaîne du message d'erreur.|  
|<xref:System.ArgumentException.ParamName%2A>|La chaîne de nom de paramètre.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, object actualValue, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, object actualValue, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String, actualValue As Object, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName, System::Object ^ actualValue, System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="actualValue" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nom du paramètre ayant provoqué l’exception.</param>
        <param name="actualValue">Valeur de l'argument qui provoque cette exception.</param>
        <param name="message">Message décrivant l'erreur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ArgumentOutOfRangeException" /> avec le nom du paramètre, la valeur de l'argument et un message d'erreur spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la <xref:System.ArgumentException.ParamName%2A> propriété de l’instance à l’aide la `paramName` paramètre, le <xref:System.ArgumentOutOfRangeException.ActualValue%2A> à l’aide de la propriété le `actualValue` paramètre et le <xref:System.ArgumentException.Message%2A> à l’aide de la propriété le `message` paramètre. Le contenu de la `paramName` et `message` paramètres est destinée à être compréhensible par les utilisateurs. L’appelant de ce constructeur est nécessaire pour s’assurer que ces chaînes ont été localisées pour la culture système actuelle.  
  
 Le `actualValue` paramètre n’est pas utilisé dans la bibliothèque de classes .NET Framework. Toutefois, le <xref:System.ArgumentOutOfRangeException.ActualValue%2A> propriété est fournie afin que les applications peuvent utiliser la valeur de l’argument disponible.  
  
 Le `actualValue` paramètre contient une valeur non valide passée à la méthode et entraîne la levée de cette exception. Cette valeur est stockée dans le <xref:System.ArgumentOutOfRangeException.ActualValue%2A> propriété et sa représentation sous forme de chaîne est ajoutée à la chaîne de message contenue dans le <xref:System.ArgumentOutOfRangeException.Message%2A> propriété.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.ArgumentOutOfRangeException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.ArgumentOutOfRangeException.ActualValue%2A>|Valeur de l'argument.|  
|<xref:System.Exception.InnerException%2A>|La référence null (`Nothing` en Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Chaîne du message d'erreur.|  
|<xref:System.ArgumentException.ParamName%2A>|La chaîne de nom de paramètre.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualValue">
      <MemberSignature Language="C#" Value="public virtual object ActualValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActualValue" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.ActualValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActualValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ ActualValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur de l'argument qui provoque cette exception.</summary>
        <value>
          <see langword="Object" /> qui contient la valeur du paramètre ayant provoqué le <see cref="T:System.Exception" /> actuel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour récupérer l’argument non valide.  
  
 Le `ActualValue` propriété retourne la même valeur que celle qui a été passée au constructeur, ou `null` si aucune valeur n’a été fournie.  
  
 Le <xref:System.ArgumentOutOfRangeException.ActualValue%2A> est affectée au moment de la construction d’objet. Si le <xref:System.ArgumentOutOfRangeException.ActualValue%2A> valeur de propriété n’est pas `null`, une représentation de chaîne de la valeur est ajoutée à la chaîne de message contenue par le <xref:System.ArgumentOutOfRangeException.Message%2A> propriété.  
  
 Le <xref:System.ArgumentOutOfRangeException.ActualValue%2A> propriété n’est pas utilisée dans la bibliothèque de classes .NET Framework. Il a une valeur null dans tous le <xref:System.ArgumentOutOfRangeException> objets levés par la bibliothèque de classes .NET Framework. Le <xref:System.ArgumentOutOfRangeException.ActualValue%2A> propriété est fournie afin que les applications peuvent utiliser la valeur de l’argument disponible.  
  
 Cette propriété est en lecture seule et doit être uniquement substituée pour personnaliser le contenu ou le format de la valeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
        <param name="context">Objet qui décrit la source ou la destination des données sérialisées.</param>
        <summary>Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à l'aide de la valeur de l'argument non valide et d'autres informations se rapportant à l'exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ArgumentOutOfRangeException.GetObjectData%2A> définit un <xref:System.Runtime.Serialization.SerializationInfo> objet avec toutes les données de l’objet exception ciblées pour la sérialisation. Pendant la désérialisation, l’objet exception est reconstituée à partir du <xref:System.Runtime.Serialization.SerializationInfo> transmis via le flux.  
  
 Pour plus d'informations, consultez <xref:System.Runtime.Serialization.SerializationInfo>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'objet <paramref name="info" /> est <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour fournir des services de sérialisation. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le message d'erreur et la chaîne représentant la valeur de l'argument non valide, ou uniquement le message d'erreur si la valeur de l'argument est Null.</summary>
        <value>Le message texte pour cette exception. La valeur de cette propriété peut se présenter sous deux formes :  
  
 <list type="table"><listheader><term> condition  
  
 </term><description> Valeur  
  
 </description></listheader><item><term> Le <paramref name="actualValue" /> est <see langword="null" />.  
  
 </term><description> Le <paramref name="message" /> chaîne passée au constructeur.  
  
 </description></item><item><term> Le <paramref name="actualValue" /> n’est pas <see langword="null" />.  
  
 </term><description> Le <paramref name="message" /> chaîne ajoutée avec la représentation sous forme de chaîne de la valeur d’argument non valide.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété substitue <xref:System.ArgumentException.Message%2A>.  
  
 Le message d’erreur doit décrire les valeurs attendues du paramètre ayant provoqué cette exception. Le message d’erreur doit être localisé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>