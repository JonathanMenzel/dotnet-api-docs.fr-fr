<Type Name="MTAThreadAttribute" FullName="System.MTAThreadAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ed7dc79fd4cd78197f2df558df042ed67f3932e" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50179353" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MTAThreadAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MTAThreadAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.MTAThreadAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MTAThreadAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MTAThreadAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type MTAThreadAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indique que le modèle de thread COM d'une application est un modèle MTA (MultiThreaded Apartment).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appliquez cet attribut à la méthode de point d’entrée (le `Main()` méthode en c# et Visual Basic). Il n’a aucun effet sur les autres méthodes. Pour définir l’état de cloisonnement des threads que vous démarrez dans votre code, utilisez le <xref:System.Threading.Thread.SetApartmentState%2A?displayProperty=nameWithType> ou <xref:System.Threading.Thread.TrySetApartmentState%2A?displayProperty=nameWithType> méthode avant de démarrer le thread.  
  
> [!NOTE]
>  Pour une vue d’ensemble de modèles de thread COM, consultez [compréhension et Using COM Threading Models](http://msdn.microsoft.com/library/ms809971.aspx).  
  
 Les modèles de thread COM s’appliquent uniquement aux applications qui utilisent COM interop. Le modèle de thread COM peut être défini à cloisonnement monothread ou multithread cloisonné. Le thread d’application est initialisé pour COM interop uniquement si le thread effectue un appel à un composant COM. Si COM interop n’est pas utilisé, le thread n’est pas initialisé et le <xref:System.MTAThreadAttribute> attribut, si elle est présente, n’a aucun effet.  
  
 À compter de .NET Framework version 2.0, la valeur par défaut de modèle pour COM interop de thread dépend de la langue dans laquelle vous développez votre application, comme le tableau suivant.  
  
|Langue|Modèle de cloisonnement COM|  
|--------------|-------------------------|  
|C#|Cloisonnement multithread|  
|C++|Cloisonnement multithread|  
|Visual Basic|Thread unique cloisonné|  
  
 Pour modifier ces valeurs par défaut, vous utilisez le <xref:System.MTAThreadAttribute> attribut à définir le modèle de thread pour l’application ou un appel de la <xref:System.Threading.Thread.SetApartmentState%2A?displayProperty=nameWithType> ou <xref:System.Threading.Thread.TrySetApartmentState%2A?displayProperty=nameWithType> méthode avant de démarrer le thread pour définir le modèle de thread pour un thread particulier. En C++, vous pouvez également utiliser le [/CLRTHREADATTRIBUTE (définir l’attribut de Thread CLR)](http://msdn.microsoft.com/library/4907e9ef-5031-446c-aecf-0a0b32fae1e8) option de l’éditeur de liens pour spécifier le modèle de cloisonnement.  
  
 Certains cas dans lequel vous souhaitez utiliser le <xref:System.MTAThreadAttribute> attribut à définir explicitement le modèle de thread à cloisonnement multithread sont les suivantes :  
  
-   Vous développez une application Visual Basic qui appelle dans une bibliothèque c# qui à son tour s’appuie sur COM interop. Étant donné que le modèle de cloisonnement multithread est la valeur par défaut pour c#, vous devez modifier des modèle de thread de votre application à multithread à l’aide de la <xref:System.MTAThreadAttribute> attribut.  
  
-   Votre application effectue des appels aux composants COM qui utilisent le modèle de cloisonnement multithread.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.STAThreadAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MTAThreadAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MTAThreadAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MTAThreadAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.MTAThreadAttribute" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.STAThreadAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>