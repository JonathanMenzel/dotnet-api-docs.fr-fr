<Type Name="Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;" FullName="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="635741f93d923565ec53c4407111660e343ec610" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36431623" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate TResult Func&lt;in T1,in T2,in T3,in T4,in T5,in T6,in T7,in T8,in T9,in T10,in T11,in T12,in T13,in T14,out TResult&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Func`15&lt;- T1, - T2, - T3, - T4, - T5, - T6, - T7, - T8, - T9, - T10, - T11, - T12, - T13, - T14, + TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Func`15" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Func(Of In T1, In T2, In T3, In T4, In T5, In T6, In T7, In T8, In T9, In T10, In T11, In T12, In T13, In T14, Out TResult)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9, arg10 As T10, arg11 As T11, arg12 As T12, arg13 As T13, arg14 As T14) As TResult " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename TResult&gt;&#xA;public delegate TResult Func(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14);" />
  <TypeSignature Language="F#" Value="type Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'Result&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 -&gt; 'Result" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T6">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T7">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T8">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T9">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T10">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T11">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T12">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T13">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T14">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TResult">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
    <Parameter Name="arg6" Type="T6" />
    <Parameter Name="arg7" Type="T7" />
    <Parameter Name="arg8" Type="T8" />
    <Parameter Name="arg9" Type="T9" />
    <Parameter Name="arg10" Type="T10" />
    <Parameter Name="arg11" Type="T11" />
    <Parameter Name="arg12" Type="T12" />
    <Parameter Name="arg13" Type="T13" />
    <Parameter Name="arg14" Type="T14" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T7">Type du septième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T8">Type du huitième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T9">Type du neuvième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T10">Type du dixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T11">Type du onzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T12">Type du douzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T13">Type du treizième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T14">Type du quatorzième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="TResult">Type de la valeur de retour de la méthode encapsulée par ce délégué.</typeparam>
    <param name="arg1">Premier paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg2">Deuxième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg3">Troisième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg4">Quatrième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg5">Cinquième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg6">Sixième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg7">Septième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg8">Huitième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg9">Neuvième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg10">Dixième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg11">Onzième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg12">Douzième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg13">Treizième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg14">Quatorzième paramètre de la méthode encapsulée par ce délégué.</param>
    <summary>Encapsule une méthode ayant 14 paramètres et retournant une valeur du type spécifié par le paramètre <typeparamref name="TResult" />.</summary>
    <returns>Valeur de retour de la méthode encapsulée par ce délégué.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser ce délégué pour représenter une méthode qui peut être passée en tant que paramètre sans déclarer explicitement un délégué personnalisé. La méthode encapsulée doit correspondre à la signature de méthode définie par ce délégué. Cela signifie que la méthode encapsulée doit avoir 14 paramètres, chacun d’eux est passé par valeur, et qu’elle doit retourner une valeur.  
  
> [!NOTE]
>  Référence à une méthode ayant 14 paramètres et retournant `void` (ou en Visual Basic, qui est déclaré comme un `Sub` plutôt que comme un `Function`), utiliser le modèle générique <xref:System.Action%6014> déléguer à la place.  
  
 Vous pouvez également utiliser le <xref:System.Func%6015> délégué avec les méthodes anonymes et expressions lambda.  
  
 Le type sous-jacent d’une expression lambda est un des génériques `Func` délégués. Cela rend possible de passer d’une expression lambda en tant que paramètre sans lui assigner explicitement à un délégué.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Action`14" />
  </Docs>
</Type>