<Type Name="IComparable&lt;T&gt;" FullName="System.IComparable&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IComparable&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IComparable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="96742-101">Le type d’objet à comparer.</span><span class="sxs-lookup"><span data-stu-id="96742-101">The type of object to compare.</span></span></typeparam>
    <summary><span data-ttu-id="96742-102">Définit une méthode de comparaison généralisée qu'un type valeur ou une classe implémente pour créer une méthode de comparaison spécifique au type et permettant d'ordonnancer ou de trier ses instances.</span><span class="sxs-lookup"><span data-stu-id="96742-102">Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96742-103">Cette interface est implémentée par les types dont les valeurs peuvent être ordonnées ou triées et fournit une méthode de comparaison fortement typée pour classer les membres d’un objet de collection générique.</span><span class="sxs-lookup"><span data-stu-id="96742-103">This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="96742-104">Par exemple, un nombre peut être supérieur à un deuxième nombre, et une chaîne peut apparaître dans l’ordre alphabétique avant un autre.</span><span class="sxs-lookup"><span data-stu-id="96742-104">For example, one number can be larger than a second number, and one string can appear in alphabetical order before another.</span></span> <span data-ttu-id="96742-105">Types de l’implémentation définissent une méthode unique, <xref:System.IComparable%601.CompareTo%28%600%29>, qui indique si la position de l’instance actuelle dans l’ordre de tri : avant, après ou le même qu’un deuxième objet du même type.</span><span class="sxs-lookup"><span data-stu-id="96742-105">It requires that implementing types define a single method, <xref:System.IComparable%601.CompareTo%28%600%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="96742-106">En règle générale, la méthode n’est pas appelée directement à partir de code du développeur.</span><span class="sxs-lookup"><span data-stu-id="96742-106">Typically, the method is not called directly from developer code.</span></span> <span data-ttu-id="96742-107">Au lieu de cela, elle est appelée automatiquement par les méthodes telles que <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> et <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="96742-107">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="96742-108">En règle générale, les types qui fournissent un <xref:System.IComparable%601> implémentation également implémenter la <xref:System.IEquatable%601> interface.</span><span class="sxs-lookup"><span data-stu-id="96742-108">Typically, types that provide an <xref:System.IComparable%601> implementation also implement the <xref:System.IEquatable%601> interface.</span></span> <span data-ttu-id="96742-109">Le <xref:System.IEquatable%601> interface définit les <xref:System.IEquatable%601.Equals%2A> (méthode), qui détermine l’égalité des instances de l’implémentation du type.</span><span class="sxs-lookup"><span data-stu-id="96742-109">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="96742-110">L’implémentation de la <xref:System.IComparable%601.CompareTo%28%600%29> méthode doit retourner un <xref:System.Int32> qui a l’une des trois valeurs, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="96742-110">The implementation of the <xref:System.IComparable%601.CompareTo%28%600%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="96742-111">Value</span><span class="sxs-lookup"><span data-stu-id="96742-111">Value</span></span>|<span data-ttu-id="96742-112">Signification</span><span class="sxs-lookup"><span data-stu-id="96742-112">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="96742-113">Inférieure à zéro</span><span class="sxs-lookup"><span data-stu-id="96742-113">Less than zero</span></span>|<span data-ttu-id="96742-114">Cet objet précède l’objet spécifié par le <xref:System.IComparable%601.CompareTo%2A> méthode dans l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="96742-114">This object precedes the object specified by the <xref:System.IComparable%601.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="96742-115">Zéro</span><span class="sxs-lookup"><span data-stu-id="96742-115">Zero</span></span>|<span data-ttu-id="96742-116">L’instance actuelle se produit dans la même position dans l’ordre de tri que l’objet spécifié par le <xref:System.IComparable%601.CompareTo%2A> argument de la méthode.</span><span class="sxs-lookup"><span data-stu-id="96742-116">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument.</span></span>|  
|<span data-ttu-id="96742-117">Supérieure à zéro</span><span class="sxs-lookup"><span data-stu-id="96742-117">Greater than zero</span></span>|<span data-ttu-id="96742-118">Cette instance suit l’objet spécifié par le <xref:System.IComparable%601.CompareTo%2A> argument de la méthode dans l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="96742-118">This current instance follows the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument in the sort order.</span></span>|  
  
 <span data-ttu-id="96742-119">Tous les types numériques (telles que <xref:System.Int32> et <xref:System.Double>) implémenter <xref:System.IComparable%601>, comme <xref:System.String>, <xref:System.Char>, et <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="96742-119">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable%601>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="96742-120">Types personnalisés doivent également fournir leur propre implémentation de <xref:System.IComparable%601> pour permettre aux instances d’objet d’être ordonnées ou triées.</span><span class="sxs-lookup"><span data-stu-id="96742-120">Custom types should also provide their own implementation of <xref:System.IComparable%601> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96742-121">L’exemple de code suivant illustre l’implémentation de <xref:System.IComparable%601> pour une simple `Temperature` objet.</span><span class="sxs-lookup"><span data-stu-id="96742-121">The following code example illustrates the implementation of  <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="96742-122">L’exemple crée un <xref:System.Collections.Generic.SortedList%602> collection de chaînes avec `Temperature` clés de l’objet, et ajoute plusieurs paires de températures et de chaînes à la liste hors séquence.</span><span class="sxs-lookup"><span data-stu-id="96742-122">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="96742-123">Dans l’appel à la <xref:System.Collections.Generic.SortedList%602.Add%2A> (méthode), la <xref:System.Collections.Generic.SortedList%602> collection utilise le <xref:System.IComparable%601> implémentation pour trier les entrées de liste, qui sont ensuite affichées dans l’ordre d’augmentation de la température.</span><span class="sxs-lookup"><span data-stu-id="96742-123">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="96742-124">Remplacez le paramètre de type de la <see cref="T:System.IComparable`1" /> interface avec le type qui implémente cette interface.</span><span class="sxs-lookup"><span data-stu-id="96742-124">Replace the type parameter of the <see cref="T:System.IComparable`1" /> interface with the type that is implementing this interface.</span></span>  
  
 <span data-ttu-id="96742-125">Si vous implémentez <see cref="T:System.IComparable`1" />, vous devez surcharger le <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" />, et <see langword="op_LessThanOrEqual" /> pour retourner des valeurs qui sont cohérents avec les opérateurs <see cref="M:System.IComparable`1.CompareTo(`0)" />.</span><span class="sxs-lookup"><span data-stu-id="96742-125">If you implement <see cref="T:System.IComparable`1" />, you should overload the <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" />, and <see langword="op_LessThanOrEqual" /> operators to return values that are consistent with <see cref="M:System.IComparable`1.CompareTo(`0)" />.</span></span> <span data-ttu-id="96742-126">En outre, vous devez également implémenter <see cref="T:System.IEquatable`1" />.</span><span class="sxs-lookup"><span data-stu-id="96742-126">In addition, you should also implement <see cref="T:System.IEquatable`1" />.</span></span> <span data-ttu-id="96742-127">Consultez le <see cref="T:System.IEquatable`1" /> article pour obtenir des informations complètes.</span><span class="sxs-lookup"><span data-stu-id="96742-127">See the <see cref="T:System.IEquatable`1" /> article for complete information.</span></span></para>
    </block>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable`1.CompareTo(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As T) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="96742-128">Objet à comparer à cette instance.</span><span class="sxs-lookup"><span data-stu-id="96742-128">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="96742-129">Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="96742-129">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="96742-130">Valeur qui indique l'ordre relatif des objets comparés.</span><span class="sxs-lookup"><span data-stu-id="96742-130">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="96742-131">La valeur de retour a les significations suivantes :</span><span class="sxs-lookup"><span data-stu-id="96742-131">The return value has these meanings:</span></span>  
  
 <span data-ttu-id="96742-132"><list type="table"><listheader><term> Valeur</span><span class="sxs-lookup"><span data-stu-id="96742-132"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="96742-133"></term><description> Signification</span><span class="sxs-lookup"><span data-stu-id="96742-133"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="96742-134"></description></listheader><item><term> Inférieur à zéro</span><span class="sxs-lookup"><span data-stu-id="96742-134"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="96742-135"></term><description> Cette instance précède <paramref name="other" /> dans l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="96742-135"></term><description> This instance precedes <paramref name="other" /> in the sort order.</span></span>  
  
 <span data-ttu-id="96742-136"></description></item><item><term> Zéro</span><span class="sxs-lookup"><span data-stu-id="96742-136"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="96742-137"></term><description> Cette instance se produit à la même position dans l’ordre de tri que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="96742-137"></term><description> This instance occurs in the same position in the sort order as <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="96742-138"></description></item><item><term> Supérieur à zéro</span><span class="sxs-lookup"><span data-stu-id="96742-138"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="96742-139"></term><description> Cette instance suit <paramref name="other" /> dans l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="96742-139"></term><description> This instance follows <paramref name="other" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96742-140"><xref:System.IComparable%601.CompareTo%2A> Fournit une méthode de comparaison fortement typée pour classer les membres d’un objet de collection générique.</span><span class="sxs-lookup"><span data-stu-id="96742-140"><xref:System.IComparable%601.CompareTo%2A> provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="96742-141">Pour cette raison, il est généralement pas appelée directement à partir de code du développeur.</span><span class="sxs-lookup"><span data-stu-id="96742-141">Because of this, it is usually not called directly from developer code.</span></span> <span data-ttu-id="96742-142">Au lieu de cela, elle est appelée automatiquement par les méthodes telles que <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> et <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="96742-142">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="96742-143">Cette méthode est uniquement une définition et doit être implémentée par un type de classe ou une valeur spécifique pour que l’effet.</span><span class="sxs-lookup"><span data-stu-id="96742-143">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="96742-144">La signification des comparaisons spécifiées dans les valeurs de retour de section (« précède », « se produit dans la même position que » et « suit) dépend de l’implémentation particulière.</span><span class="sxs-lookup"><span data-stu-id="96742-144">The meaning of the comparisons specified in the Return Values section ("precedes", "occurs in the same position as", and "follows) depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="96742-145">Par définition, tout objet compare supérieur à `null`, et deux références null sont égales.</span><span class="sxs-lookup"><span data-stu-id="96742-145">By definition, any object compares greater than `null`, and two null references compare equal to each other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96742-146">L’exemple de code suivant illustre l’implémentation de <xref:System.IComparable%601> pour une simple `Temperature` objet.</span><span class="sxs-lookup"><span data-stu-id="96742-146">The following code example illustrates the implementation of <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="96742-147">L’exemple crée un <xref:System.Collections.Generic.SortedList%602> collection de chaînes avec `Temperature` clés de l’objet, et ajoute plusieurs paires de températures et de chaînes à la liste hors séquence.</span><span class="sxs-lookup"><span data-stu-id="96742-147">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="96742-148">Dans l’appel à la <xref:System.Collections.Generic.SortedList%602.Add%2A> (méthode), la <xref:System.Collections.Generic.SortedList%602> collection utilise le <xref:System.IComparable%601> implémentation pour trier les entrées de liste, qui sont ensuite affichées dans l’ordre d’augmentation de la température.</span><span class="sxs-lookup"><span data-stu-id="96742-148">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="96742-149">Pour les objets A, B et C, les éléments suivants doivent être remplis :</span><span class="sxs-lookup"><span data-stu-id="96742-149">For objects A, B, and C, the following must be true:</span></span>  
  
 <span data-ttu-id="96742-150"><c>A.CompareTo (a)</c> est nécessaire pour retourner zéro.</span><span class="sxs-lookup"><span data-stu-id="96742-150"><c>A.CompareTo(A)</c> is required to return zero.</span></span>  
  
 <span data-ttu-id="96742-151">Si <c>a.CompareTo (b)</c> retourne zéro, <c>b.CompareTo (a)</c> est nécessaire pour retourner zéro.</span><span class="sxs-lookup"><span data-stu-id="96742-151">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> is required to return zero.</span></span>  
  
 <span data-ttu-id="96742-152">Si <c>a.CompareTo (b)</c> retourne zéro et <c>B.CompareTo(C)</c> retourne zéro, <c>a.CompareTo (c)</c> est nécessaire pour retourner zéro.</span><span class="sxs-lookup"><span data-stu-id="96742-152">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> is required to return zero.</span></span>  
  
 <span data-ttu-id="96742-153">Si <c>a.CompareTo (b)</c> retourne une valeur différente de zéro, puis <c>b.CompareTo (a)</c> est nécessaire pour retourner une valeur du signe opposé.</span><span class="sxs-lookup"><span data-stu-id="96742-153">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> is required to return a value of the opposite sign.</span></span>  
  
 <span data-ttu-id="96742-154">Si <c>a.CompareTo (b)</c> retourne une valeur <paramref name="x" /> qui n’est pas égal à zéro, et <c>B.CompareTo(C)</c> retourne une valeur <paramref name="y" /> de la même signature que <paramref name="x" />, puis <c>A. CompareTo(C)</c> est nécessaire pour retourner une valeur de la même signature que <paramref name="x" /> et <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="96742-154">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> that is not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> is required to return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="96742-155">Utilisez la <see cref="M:System.IComparable`1.CompareTo(`0)" /> méthode pour déterminer l’ordre des instances d’une classe.</span><span class="sxs-lookup"><span data-stu-id="96742-155">Use the <see cref="M:System.IComparable`1.CompareTo(`0)" /> method to determine the ordering of instances of a class.</span></span></para>
        </block>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
  </Members>
</Type>
