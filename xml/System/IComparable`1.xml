<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IComparable`1.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f05af9c9d7d36fd459412e2e929b56746ab080d5a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05af9c9d7d36fd459412e2e929b56746ab080d5a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The type of object to compare.</source>
          <target state="translated">Le type d’objet à comparer.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IComparable`1">
          <source>Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</source>
          <target state="translated">Définit une méthode de comparaison généralisée qu'un type valeur ou une classe implémente pour créer une méthode de comparaison spécifique au type et permettant d'ordonnancer ou de trier ses instances.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object.</source>
          <target state="translated">Cette interface est implémentée par les types dont les valeurs peuvent être ordonnées ou triées et fournit une méthode de comparaison fortement typée pour classer les membres d’un objet de collection générique.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>For example, one number can be larger than a second number, and one string can appear in alphabetical order before another.</source>
          <target state="translated">Par exemple, un nombre peut être supérieur à un deuxième nombre, et une chaîne peut apparaître dans l’ordre alphabétique avant un autre.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>It requires that implementing types define a single method, <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</source>
          <target state="translated">Types de l’implémentation définissent une méthode unique, <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph>, qui indique si la position de l’instance actuelle dans l’ordre de tri : avant, après ou le même qu’un deuxième objet du même type.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Typically, the method is not called directly from developer code.</source>
          <target state="translated">En règle générale, la méthode n’est pas appelée directement à partir de code du développeur.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Instead, it is called automatically by methods such as <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>.</source>
          <target state="translated">Au lieu de cela, elle est appelée automatiquement par les méthodes telles que <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Typically, types that provide an <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> implementation also implement the <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> interface.</source>
          <target state="translated">En règle générale, les types qui fournissent un <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> implémentation également implémenter la <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface defines the <ph id="ph2">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph> method, which determines the equality of instances of the implementing type.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface définit les <ph id="ph2">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph> (méthode), qui détermine l’égalité des instances de l’implémentation du type.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph> method must return an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> that has one of three values, as shown in the following table.</source>
          <target state="translated">L’implémentation de la <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph> méthode doit retourner un <ph id="ph2">&lt;xref:System.Int32&gt;</ph> qui a l’une des trois valeurs, comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Meaning</source>
          <target state="translated">Signification</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Less than zero</source>
          <target state="translated">Inférieure à zéro</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>This object precedes the object specified by the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> method in the sort order.</source>
          <target state="translated">Cet objet précède l’objet spécifié par le <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> méthode dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Zero</source>
          <target state="translated">Zéro</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>This current instance occurs in the same position in the sort order as the object specified by the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> method argument.</source>
          <target state="translated">L’instance actuelle se produit dans la même position dans l’ordre de tri que l’objet spécifié par le <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> argument de la méthode.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Greater than zero</source>
          <target state="translated">Supérieure à zéro</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>This current instance follows the object specified by the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> method argument in the sort order.</source>
          <target state="translated">Cette instance suit l’objet spécifié par le <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> argument de la méthode dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>All numeric types (such as <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and <ph id="ph2">&lt;xref:System.Double&gt;</ph>) implement <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph>, as do <ph id="ph4">&lt;xref:System.String&gt;</ph>, <ph id="ph5">&lt;xref:System.Char&gt;</ph>, and <ph id="ph6">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Tous les types numériques (telles que <ph id="ph1">&lt;xref:System.Int32&gt;</ph> et <ph id="ph2">&lt;xref:System.Double&gt;</ph>) implémenter <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph>, comme <ph id="ph4">&lt;xref:System.String&gt;</ph>, <ph id="ph5">&lt;xref:System.Char&gt;</ph>, et <ph id="ph6">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Custom types should also provide their own implementation of <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> to enable object instances to be ordered or sorted.</source>
          <target state="translated">Types personnalisés doivent également fournir leur propre implémentation de <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> pour permettre aux instances d’objet d’être ordonnées ou triées.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The following code example illustrates the implementation of  <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> for a simple <ph id="ph2">`Temperature`</ph> object.</source>
          <target state="translated">L’exemple de code suivant illustre l’implémentation de <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> pour une simple <ph id="ph2">`Temperature`</ph> objet.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection of strings with <ph id="ph2">`Temperature`</ph> object keys, and adds several pairs of temperatures and strings to the list out of sequence.</source>
          <target state="translated">L’exemple crée un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection de chaînes avec <ph id="ph2">`Temperature`</ph> clés de l’objet, et ajoute plusieurs paires de températures et de chaînes à la liste hors séquence.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>In the call to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection uses the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> implementation to sort the list entries, which are then displayed in order of increasing temperature.</source>
          <target state="translated">Dans l’appel à la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> (méthode), la <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection utilise le <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> implémentation pour trier les entrées de liste, qui sont ensuite affichées dans l’ordre d’augmentation de la température.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Replace the type parameter of the <ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph> interface with the type that is implementing this interface.</source>
          <target state="translated">Remplacez le paramètre de type de la <ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph> interface avec le type qui implémente cette interface.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>If you implement <ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph>, you should overload the <ph id="ph2">&lt;see langword="op_GreaterThan" /&gt;</ph>, <ph id="ph3">&lt;see langword="op_GreaterThanOrEqual" /&gt;</ph>, <ph id="ph4">&lt;see langword="op_LessThan" /&gt;</ph>, and <ph id="ph5">&lt;see langword="op_LessThanOrEqual" /&gt;</ph> operators to return values that are consistent with <ph id="ph6">&lt;see cref="M:System.IComparable`1.CompareTo(`0)" /&gt;</ph>.</source>
          <target state="translated">Si vous implémentez <ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph>, vous devez surcharger le <ph id="ph2">&lt;see langword="op_GreaterThan" /&gt;</ph>, <ph id="ph3">&lt;see langword="op_GreaterThanOrEqual" /&gt;</ph>, <ph id="ph4">&lt;see langword="op_LessThan" /&gt;</ph>, et <ph id="ph5">&lt;see langword="op_LessThanOrEqual" /&gt;</ph> pour retourner des valeurs qui sont cohérents avec les opérateurs <ph id="ph6">&lt;see cref="M:System.IComparable`1.CompareTo(`0)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>In addition, you should also implement <ph id="ph1">&lt;see cref="T:System.IEquatable`1" /&gt;</ph>.</source>
          <target state="translated">En outre, vous devez également implémenter <ph id="ph1">&lt;see cref="T:System.IEquatable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>See the <ph id="ph1">&lt;see cref="T:System.IEquatable`1" /&gt;</ph> article for complete information.</source>
          <target state="translated">Consultez le <ph id="ph1">&lt;see cref="T:System.IEquatable`1" /&gt;</ph> article pour obtenir des informations complètes.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>An object to compare with this instance.</source>
          <target state="translated">Objet à comparer à cette instance.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</source>
          <target state="translated">Compare l'instance actuelle avec un autre objet du même type et retourne un entier qui indique si l'instance actuelle précède ou suit un autre objet ou se trouve à la même position dans l'ordre de tri.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>A value that indicates the relative order of the objects being compared.</source>
          <target state="translated">Valeur qui indique l'ordre relatif des objets comparés.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>The return value has these meanings:</source>
          <target state="translated">La valeur de retour a les significations suivantes :</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valeur</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Signification</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Inférieur à zéro</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance précède <ph id="ph3">&lt;paramref name="other" /&gt;</ph> dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zéro</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance occurs in the same position in the sort order as <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance se produit à la même position dans l’ordre de tri que <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Supérieur à zéro</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance suit <ph id="ph3">&lt;paramref name="other" /&gt;</ph> dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> provides a strongly typed comparison method for ordering members of a generic collection object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> Fournit une méthode de comparaison fortement typée pour classer les membres d’un objet de collection générique.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>Because of this, it is usually not called directly from developer code.</source>
          <target state="translated">Pour cette raison, il est généralement pas appelée directement à partir de code du développeur.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>Instead, it is called automatically by methods such as <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>.</source>
          <target state="translated">Au lieu de cela, elle est appelée automatiquement par les méthodes telles que <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>This method is only a definition and must be implemented by a specific class or value type to have effect.</source>
          <target state="translated">Cette méthode est uniquement une définition et doit être implémentée par un type de classe ou une valeur spécifique pour que l’effet.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>The meaning of the comparisons specified in the Return Values section ("precedes", "occurs in the same position as", and "follows) depends on the particular implementation.</source>
          <target state="translated">La signification des comparaisons spécifiées dans les valeurs de retour de section (« précède », « se produit dans la même position que » et « suit) dépend de l’implémentation particulière.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>By definition, any object compares greater than <ph id="ph1">`null`</ph>, and two null references compare equal to each other.</source>
          <target state="translated">Par définition, tout objet compare supérieur à <ph id="ph1">`null`</ph>, et deux références null sont égales.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>The following code example illustrates the implementation of <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> for a simple <ph id="ph2">`Temperature`</ph> object.</source>
          <target state="translated">L’exemple de code suivant illustre l’implémentation de <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> pour une simple <ph id="ph2">`Temperature`</ph> objet.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection of strings with <ph id="ph2">`Temperature`</ph> object keys, and adds several pairs of temperatures and strings to the list out of sequence.</source>
          <target state="translated">L’exemple crée un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection de chaînes avec <ph id="ph2">`Temperature`</ph> clés de l’objet, et ajoute plusieurs paires de températures et de chaînes à la liste hors séquence.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>In the call to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection uses the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> implementation to sort the list entries, which are then displayed in order of increasing temperature.</source>
          <target state="translated">Dans l’appel à la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> (méthode), la <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection utilise le <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> implémentation pour trier les entrées de liste, qui sont ensuite affichées dans l’ordre d’augmentation de la température.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>For objects A, B, and C, the following must be true:</source>
          <target state="translated">Pour les objets A, B et C, les éléments suivants doivent être remplis :</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(A)<ept id="p1">&lt;/c&gt;</ept> is required to return zero.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>A.CompareTo (a)<ept id="p1">&lt;/c&gt;</ept> est nécessaire pour retourner zéro.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns zero, then <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> is required to return zero.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>a.CompareTo (b)<ept id="p1">&lt;/c&gt;</ept> retourne zéro, <bpt id="p2">&lt;c&gt;</bpt>b.CompareTo (a)<ept id="p2">&lt;/c&gt;</ept> est nécessaire pour retourner zéro.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns zero and <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> returns zero, then <bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> is required to return zero.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>a.CompareTo (b)<ept id="p1">&lt;/c&gt;</ept> retourne zéro et <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> retourne zéro, <bpt id="p3">&lt;c&gt;</bpt>a.CompareTo (c)<ept id="p3">&lt;/c&gt;</ept> est nécessaire pour retourner zéro.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns a value other than zero, then <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> is required to return a value of the opposite sign.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>a.CompareTo (b)<ept id="p1">&lt;/c&gt;</ept> retourne une valeur différente de zéro, puis <bpt id="p2">&lt;c&gt;</bpt>b.CompareTo (a)<ept id="p2">&lt;/c&gt;</ept> est nécessaire pour retourner une valeur du signe opposé.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns a value <ph id="ph1">&lt;paramref name="x" /&gt;</ph> that is not equal to zero, and <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> returns a value <ph id="ph2">&lt;paramref name="y" /&gt;</ph> of the same sign as <ph id="ph3">&lt;paramref name="x" /&gt;</ph>, then <bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> is required to return a value of the same sign as <ph id="ph4">&lt;paramref name="x" /&gt;</ph> and <ph id="ph5">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>a.CompareTo (b)<ept id="p1">&lt;/c&gt;</ept> retourne une valeur <ph id="ph1">&lt;paramref name="x" /&gt;</ph> qui n’est pas égal à zéro, et <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> retourne une valeur <ph id="ph2">&lt;paramref name="y" /&gt;</ph> de la même signature que <ph id="ph3">&lt;paramref name="x" /&gt;</ph>, puis <bpt id="p3">&lt;c&gt;</bpt>A. CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> est nécessaire pour retourner une valeur de la même signature que <ph id="ph4">&lt;paramref name="x" /&gt;</ph> et <ph id="ph5">&lt;paramref name="y" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.IComparable`1.CompareTo(`0)" /&gt;</ph> method to determine the ordering of instances of a class.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;see cref="M:System.IComparable`1.CompareTo(`0)" /&gt;</ph> méthode pour déterminer l’ordre des instances d’une classe.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>