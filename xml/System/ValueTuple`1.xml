<Type Name="ValueTuple&lt;T1&gt;" FullName="System.ValueTuple&lt;T1&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aacaee86e2d624686031a5d93d4a6d8f25ae8dad" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52201675" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ValueTuple&lt;T1&gt; : IComparable, IComparable&lt;ValueTuple&lt;T1&gt;&gt;, IEquatable&lt;ValueTuple&lt;T1&gt;&gt;, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueTuple`1&lt;T1&gt; extends System.ValueType implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.IComparable`1&lt;valuetype System.ValueTuple`1&lt;!T1&gt;&gt;, class System.IEquatable`1&lt;valuetype System.ValueTuple`1&lt;!T1&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ValueTuple`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueTuple(Of T1)&#xA;Implements IComparable, IComparable(Of ValueTuple(Of T1)), IEquatable(Of ValueTuple(Of T1)), IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1&gt;&#xA;public value class ValueTuple : IComparable, IComparable&lt;ValueTuple&lt;T1&gt;&gt;, IEquatable&lt;ValueTuple&lt;T1&gt;&gt;, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type ValueTuple&lt;'T1&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.ValueTuple</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.ValueTuple&lt;T1&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.ValueTuple&lt;T1&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1">
      <span data-ttu-id="93ac2-101">Le type du seul élément du tuple de valeur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93ac2-101">The type of the value tuple's only element.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="93ac2-102">Représente un tuple de valeur avec un seul composant.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93ac2-102">Represents a value tuple with a single component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ac2-103">Un tuple de valeur est une structure de données qui a un nombre spécifique et une séquence de valeurs.</span><span class="sxs-lookup"><span data-stu-id="93ac2-103">A value tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="93ac2-104">Le <xref:System.ValueTuple%601> structure représente un tuple de valeur qui comporte un seul élément.</span><span class="sxs-lookup"><span data-stu-id="93ac2-104">The <xref:System.ValueTuple%601> structure represents a value tuple that has one element.</span></span>  
  
 <span data-ttu-id="93ac2-105">Les types de tuple de valeur diffèrent des types de tuple (tel que <xref:System.Tuple%601> comme suit :</span><span class="sxs-lookup"><span data-stu-id="93ac2-105">The value tuple types differ from the tuple types (such as <xref:System.Tuple%601> as follows:</span></span>  
  
-   <span data-ttu-id="93ac2-106">Ils sont des structures (types valeur) au lieu de classes (types référence).</span><span class="sxs-lookup"><span data-stu-id="93ac2-106">They are structures (value types) rather than classes (reference types).</span></span>  
  
-   <span data-ttu-id="93ac2-107">Son <xref:System.ValueTuple%601.Item1> membre est un champ au lieu d’une propriété.</span><span class="sxs-lookup"><span data-stu-id="93ac2-107">Its  <xref:System.ValueTuple%601.Item1> member is a field rather than a property.</span></span>  
  
-   <span data-ttu-id="93ac2-108">Son champ est mutable et non en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="93ac2-108">Its field is mutable rather than read-only.</span></span>  
  
 <span data-ttu-id="93ac2-109">Les types de tuple de valeur fournissent l’implémentation du runtime qui prend en charge [tuples dans C# ](~/docs/csharp/tuples.md) et les tuples de struct dans F#.</span><span class="sxs-lookup"><span data-stu-id="93ac2-109">The value tuple types provide the runtime implementation that supports [tuples in C#](~/docs/csharp/tuples.md) and struct tuples in F#.</span></span>  <span data-ttu-id="93ac2-110">Outre la création d’un <xref:System.ValueTuple%601> instance en utilisant la syntaxe du langage, vous pouvez appeler la <xref:System.ValueTuple.Create%60%601%28%60%600%29?displayProperty=nameWithType> méthode de fabrique.</span><span class="sxs-lookup"><span data-stu-id="93ac2-110">In addition to creating a <xref:System.ValueTuple%601> instance by using language syntax, you can call the <xref:System.ValueTuple.Create%60%601%28%60%600%29?displayProperty=nameWithType> factory method.</span></span>  
  
### <a name="serialization-and-value-tuples"></a><span data-ttu-id="93ac2-111">Tuples de sérialisation et la valeur</span><span class="sxs-lookup"><span data-stu-id="93ac2-111">Serialization and value tuples</span></span>

<span data-ttu-id="93ac2-112">Le <xref:System.ValueTuple%601> type n’est pas sérialisable dans .NET Core 1.x ou dans le .NET Framework 4.7 et versions antérieures.</span><span class="sxs-lookup"><span data-stu-id="93ac2-112">The <xref:System.ValueTuple%601> type is not serializable in .NET Core 1.x or in the .NET Framework 4.7 and earlier versions.</span></span> <span data-ttu-id="93ac2-113">En outre, .NET Standard, y compris .NET Standard 2.0, n’impose pas de sérialisation <xref:System.ValueTuple%601> instances ; ou non un <xref:System.ValueTuple%601> instance est sérialisable dépend de l’implémentation de .NET Standard individuelle.</span><span class="sxs-lookup"><span data-stu-id="93ac2-113">In addition, .NET Standard, including .NET Standard 2.0, does not mandate serialization of <xref:System.ValueTuple%601> instances; whether or not a <xref:System.ValueTuple%601> instance is serializable depends on the individual .NET Standard implementation.</span></span> <span data-ttu-id="93ac2-114">Pour déterminer si un <xref:System.ValueTuple%601> type est sérialisable sur une implémentation particulière de .NET, obtenez un <xref:System.Type> objet qui représente le <xref:System.ValueTuple%601> tapez et récupérer la valeur de son <xref:System.Type.IsSerializable%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="93ac2-114">To determine whether a <xref:System.ValueTuple%601> type is serializable on a particular .NET implementation, get a <xref:System.Type> object that represents the <xref:System.ValueTuple%601> type and retrieve the value of its <xref:System.Type.IsSerializable%2A> property.</span></span> <span data-ttu-id="93ac2-115">Pour obtenir la liste des types sérialisables dans .NET Core et .NET Framework, consultez [sérialisation binaire](~/docs/standard/serialization/binary-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="93ac2-115">For a list of serializable types in .NET Core and the .NET Framework, see [Binary Serialization](~/docs/standard/serialization/binary-serialization.md).</span></span>
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTuple (T1 item1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTuple(T1 item1);" />
      <MemberSignature Language="F#" Value="new ValueTuple&lt;'T1&gt; : 'T1 -&gt; ValueTuple&lt;'T1&gt;" Usage="new System.ValueTuple&lt;'T1&gt; item1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
      </Parameters>
      <Docs>
        <param name="item1">
          <span data-ttu-id="93ac2-116">Premier élément du tuple de valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-116">The value tuple's first element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93ac2-117">Initialise une nouvelle instance de <see cref="T:System.ValueTuple`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-117">Initializes a new <see cref="T:System.ValueTuple`1" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ValueTuple&lt;T1&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.ValueTuple`1&lt;!T1&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`1.CompareTo(System.ValueTuple{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As ValueTuple(Of T1)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(ValueTuple&lt;T1&gt; other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : ValueTuple&lt;'T1&gt; -&gt; int&#xA;override this.CompareTo : ValueTuple&lt;'T1&gt; -&gt; int" Usage="valueTuple.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.ValueTuple&lt;T1&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="93ac2-118">Le tuple à comparer à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-118">The tuple to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93ac2-119">Compare l'instance <see cref="T:System.ValueTuple`1" /> actuelle avec une instance <see cref="T:System.ValueTuple`1" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-119">Compares the current <see cref="T:System.ValueTuple`1" /> instance to a specified <see cref="T:System.ValueTuple`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93ac2-120">Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-120">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="93ac2-121">Value</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-121">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="93ac2-122">Description </span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-122">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="93ac2-123">Entier négatif</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-123">A negative integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="93ac2-124">Cette instance précède <paramref name="other" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-124">This instance precedes <paramref name="other" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="93ac2-125">Zéro</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-125">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="93ac2-126">Cette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-126">This instance and <paramref name="other" /> have the same position in the sort order.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="93ac2-127">Entier positif</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-127">A positive integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="93ac2-128">Cette instance suit <paramref name="other" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-128">This instance follows <paramref name="other" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93ac2-129">Retourne une valeur qui indique si l’instance <see cref="T:System.ValueTuple`1" /> actuelle est égale à un objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-129">Returns a value that indicates whether the current <see cref="T:System.ValueTuple`1" /> instance is equal to a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueTuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="93ac2-130">Objet à comparer avec cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-130">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93ac2-131">Retourne une valeur qui indique si l’instance <see cref="T:System.ValueTuple`1" /> actuelle est égale à un objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-131">Returns a value that indicates whether the current <see cref="T:System.ValueTuple`1" /> instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93ac2-132">
            <see langword="true" /> si l'instance actuelle est égale à l'objet spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-132">
              <see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ac2-133">Le `obj` argument est considéré comme égal à l’instance actuelle dans les conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="93ac2-133">The `obj` argument is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="93ac2-134">Il s’agit une <xref:System.ValueTuple%601> type de valeur.</span><span class="sxs-lookup"><span data-stu-id="93ac2-134">It is a         <xref:System.ValueTuple%601> value type.</span></span>  
  
-   <span data-ttu-id="93ac2-135">Composant doivent impérativement des mêmes types que celle de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="93ac2-135">It component is of the same types as that of the current instance.</span></span>  
  
-   <span data-ttu-id="93ac2-136">Son composant est égale à celle de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="93ac2-136">Its component is equal to that of the current instance.</span></span> <span data-ttu-id="93ac2-137">L’égalité est déterminée par le comparateur d’égalité par défaut pour le composant.</span><span class="sxs-lookup"><span data-stu-id="93ac2-137">Equality is determined by the default equality comparer for the component.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ValueTuple&lt;T1&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.ValueTuple`1&lt;!T1&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`1.Equals(System.ValueTuple{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ValueTuple(Of T1)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(ValueTuple&lt;T1&gt; other);" />
      <MemberSignature Language="F#" Value="override this.Equals : ValueTuple&lt;'T1&gt; -&gt; bool" Usage="valueTuple.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.ValueTuple&lt;T1&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="93ac2-138">Le tuple de valeur à comparer à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-138">The value tuple to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93ac2-139">Retourne une valeur qui indique si l’instance <see cref="T:System.ValueTuple`1" /> actuelle est égale à une instance <see cref="T:System.ValueTuple`1" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-139">Returns a value that indicates whether the current <see cref="T:System.ValueTuple`1" /> instance is equal to a specified <see cref="T:System.ValueTuple`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93ac2-140">
            <see langword="true" /> si l'instance actuelle est égale au tuple spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-140">
              <see langword="true" /> if the current instance is equal to the specified tuple; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ac2-141">Le `other` argument est considéré comme égal à l’instance actuelle dans les conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="93ac2-141">The `other` argument is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="93ac2-142">Ses composants sont des mêmes types que ceux de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="93ac2-142">Its components are of the same types as those of the current instance.</span></span>  
  
-   <span data-ttu-id="93ac2-143">Ses composants sont égales à celles de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="93ac2-143">Its components are equal to those of the current instance.</span></span> <span data-ttu-id="93ac2-144">L’égalité est déterminée par le comparateur d’égalité par défaut pour chaque composant.</span><span class="sxs-lookup"><span data-stu-id="93ac2-144">Equality is determined by the default equality comparer for each component.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueTuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93ac2-145">Calcule le code de hachage de l'instance <see cref="T:System.ValueTuple`1" /> actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-145">Calculates the hash code for the current <see cref="T:System.ValueTuple`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93ac2-146">Code de hachage de l'instance <see cref="T:System.ValueTuple`1" /> actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-146">The hash code for the current <see cref="T:System.ValueTuple`1" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1;" />
      <MemberSignature Language="ILAsm" Value=".field public !T1 Item1" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`1.Item1" />
      <MemberSignature Language="VB.NET" Value="Public Item1 As T1 " />
      <MemberSignature Language="C++ CLI" Value="public: T1 Item1;" />
      <MemberSignature Language="F#" Value="val mutable Item1 : 'T1" Usage="System.ValueTuple&lt;'T1&gt;.Item1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93ac2-147">Obtient la valeur du premier élément de l’instance <see cref="T:System.ValueTuple`1" /> actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-147">Gets the value of the current <see cref="T:System.ValueTuple`1" /> instance's first element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="93ac2-148">Objet à comparer à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-148">The object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="93ac2-149">Un objet qui fournit des règles personnalisées pour la comparaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-149">An object that provides custom rules for comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93ac2-150">Compare l’instance <see cref="T:System.ValueTuple`1" /> actuelle à un objet spécifié en utilisant un comparateur spécifié et renvoie un entier qui indique si l’objet actuel est avant, après ou à la même position que l’objet spécifié dans l’ordre de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-150">Compares the current <see cref="T:System.ValueTuple`1" /> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93ac2-151">Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-151">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="93ac2-152">Valeur</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-152">Vaue</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="93ac2-153">Description </span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-153">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="93ac2-154">Entier négatif</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-154">A negative integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="93ac2-155">Cette instance précède <paramref name="other" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-155">This instance precedes <paramref name="other" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="93ac2-156">Zéro</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-156">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="93ac2-157">Cette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-157">This instance and <paramref name="other" /> have the same position in the sort order.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="93ac2-158">Entier positif</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-158">A positive integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="93ac2-159">Cette instance suit <paramref name="other" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-159">This instance follows <paramref name="other" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="93ac2-160">Objet à comparer avec cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-160">The object to compare with this instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="93ac2-161">Un objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-161">An object that defines the method to use to evaluate whether the two objects are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93ac2-162">Retourne une valeur qui indique si l’instance <see cref="T:System.ValueTuple`1" /> actuelle équivaut à un objet spécifié sur la base d’une méthode de comparaison spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-162">Returns a value that indicates whether the current <see cref="T:System.ValueTuple`1" /> instance is equal to a specified object based on a specified comparison method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93ac2-163">
            <see langword="true" /> si l'instance actuelle est égale à l'objet spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-163">
              <see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="93ac2-164">Un objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l’instance <see cref="T:System.ValueTuple`1" /> actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-164">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.ValueTuple`1" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93ac2-165">Calcule le code de hachage pour l’instance <see cref="T:System.ValueTuple`1" /> actuelle à l’aide d’une méthode de calcul spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-165">Calculates the hash code for the current <see cref="T:System.ValueTuple`1" /> instance by using a specified computation method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93ac2-166">Code de hachage d'un entier signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-166">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`1.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ other) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="93ac2-167">Objet à comparer à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-167">The object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93ac2-168">Compare l’instance <see cref="T:System.ValueTuple`1" /> actuelle à un objet spécifié en utilisant un comparateur spécifié et renvoie un entier qui indique si l’objet actuel est avant, après ou à la même position que l’objet spécifié dans l’ordre de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-168">Compares the current <see cref="T:System.ValueTuple`1" /> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93ac2-169">Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-169">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="93ac2-170">Value</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-170">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="93ac2-171">Description </span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-171">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="93ac2-172">Entier négatif</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-172">A negative integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="93ac2-173">Cette instance précède <paramref name="other" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-173">This instance precedes <paramref name="other" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="93ac2-174">Zéro</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-174">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="93ac2-175">Cette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-175">This instance and <paramref name="other" /> have the same position in the sort order.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="93ac2-176">Entier positif</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-176">A positive integer</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="93ac2-177">Cette instance suit <paramref name="other" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="93ac2-177">This instance follows <paramref name="other" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="93ac2-178">Index de l’élément <see langword="ValueTuple" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-178">The index of the <see langword="ValueTuple" /> element.</span>
          </span>
          <span data-ttu-id="93ac2-179">
            <paramref name="index" /> doit être 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-179">
              <paramref name="index" /> must be 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93ac2-180">Obtient la valeur de l’élément <see langword="ValueTuple" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-180">Gets the value of the <see langword="ValueTuple" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93ac2-181">Valeur de l’élément <see langword="ValueTuple" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-181">The value of the <see langword="ValueTuple" /> element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ac2-182">Le <xref:System.ValueTuple%601.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propriété est une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="93ac2-182">The <xref:System.ValueTuple%601.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="93ac2-183">Pour l’appeler, vous devez effectuer un cast ou convertir le <xref:System.ValueTuple%601> de l’objet à un <xref:System.Runtime.CompilerServices.ITuple> objet d’interface.</span><span class="sxs-lookup"><span data-stu-id="93ac2-183">To call it, you must cast or convert the <xref:System.ValueTuple%601> object to a <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="93ac2-184">
            <paramref name="index" /> est inférieur à 0 ou supérieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-184">
              <paramref name="index" /> is less than 0 or greater than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93ac2-185">Obtient le nombre d’éléments dans <see langword="ValueTuple" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-185">Gets the number of elements in the <see langword="ValueTuple" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93ac2-186">1, le nombre d’éléments dans un objet <see cref="T:System.ValueTuple`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-186">1, the number of elements in a <see cref="T:System.ValueTuple`1" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ac2-187">Le <xref:System.ValueTuple%601.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType> propriété est une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="93ac2-187">The <xref:System.ValueTuple%601.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="93ac2-188">Pour l’appeler, vous devez effectuer un cast ou convertir le <xref:System.ValueTuple%601> de l’objet à un <xref:System.Runtime.CompilerServices.ITuple> objet d’interface.</span><span class="sxs-lookup"><span data-stu-id="93ac2-188">To call it, you must cast or convert the <xref:System.ValueTuple%601> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="valueTuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93ac2-189">Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.ValueTuple`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-189">Returns a string that represents the value of this <see cref="T:System.ValueTuple`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93ac2-190">Représentation sous forme de chaîne de cette instance <see cref="T:System.ValueTuple`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93ac2-190">The string representation of this <see cref="T:System.ValueTuple`1" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ac2-191">La chaîne retournée par cette méthode prend la forme (*Item1*, où *Item1* représente la valeur de la <xref:System.ValueTuple%604.Item1> champ.</span><span class="sxs-lookup"><span data-stu-id="93ac2-191">The string returned by this method takes the form (*Item1*, where *Item1* represents the value of the <xref:System.ValueTuple%604.Item1> field.</span></span> <span data-ttu-id="93ac2-192">Si la valeur du champ est `null`, il est représenté en tant que <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="93ac2-192">If the field value is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>