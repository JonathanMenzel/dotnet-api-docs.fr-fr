<Type Name="LocalDataStoreSlot" FullName="System.LocalDataStoreSlot">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="215ef12b40b23db1c35c50dde5b9ca0e34834020" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30726893" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LocalDataStoreSlot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalDataStoreSlot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.LocalDataStoreSlot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalDataStoreSlot" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalDataStoreSlot sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Encapsule un emplacement mémoire pour stocker des données locales. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework fournit deux mécanismes pour utiliser le stockage local des threads (TLS) : les champs statiques relatifs à un thread et emplacements de données.  
  
-   Les champs statiques relatifs à un thread sont `static` champs (`Shared` champs en Visual Basic) qui sont marquées avec le <xref:System.ThreadStaticAttribute> attribut. Ils offrent de meilleures performances que les emplacements de données et activent la vérification de type au moment de la compilation.  
  
-   Les emplacements de données sont plus lents et plus difficiles à utiliser que les champs statiques relatifs à un thread. En outre, les données sont stockées en tant que type <xref:System.Object>, de sorte que vous devez effectuer un cast en type correct avant de l’utiliser. Toutefois, vous pouvez utiliser les emplacements de données lorsque vous disposez des informations insuffisantes au moment de la compilation pour allouer des champs statiques.  
  
 Pour plus d’informations sur l’utilisation de TLS, consultez [stockage Local des threads : champs statiques relatifs à un Thread et emplacements de données](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).  
  
 De même, le .NET Framework fournit deux mécanismes pour utiliser le stockage local de contexte : emplacements de champs et les données statiques relatifs au contexte. Les champs statiques relatifs au contexte sont des champs statiques qui sont marqués avec le <xref:System.ContextStaticAttribute> attribut. Les compromis entre ces deux mécanismes sont semblables aux compromis entre en utilisant des emplacements de données et les champs statiques relatifs à un thread.  
  
 Le <xref:System.LocalDataStoreSlot> structure sert local stocker le mécanisme de mémoire que les threads et les contextes peuvent utiliser pour stocker les données spécifiques aux threads et spécifiques au contexte, respectivement. Le common language runtime alloue un tableau de magasin de données à chaque processus lors de sa création. Les appels du thread ou contexte diverses fonctions pour allouer un emplacement de données dans le magasin de données, de stocker et récupérer une valeur de données dans l’emplacement et libérer un emplacement de données pour réutiliser après expiration de l’objet thread ou contexte.  
  
 Les emplacements de données sont uniques par thread ou contexte ; leurs valeurs ne sont pas partagées entre les objets thread ou contexte. Les emplacements de données peuvent être alloués par un nom ou par numéro d’index.  
  
 Pour plus d’informations sur le stockage des données locales, consultez <xref:System.Threading.Thread> ou <xref:System.Runtime.Remoting.Contexts.Context>. Le <xref:System.LocalDataStoreSlot> classe est utilisée avec des méthodes telles que <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>, et <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>; il n’a pas les méthodes de sa propre que vous devez utiliser.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LocalDataStoreSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.LocalDataStoreSlot.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LocalDataStoreSlot ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Vérifie que les ressources sont libérées et que toute autre opération de nettoyage est effectuée quand le garbage collector récupère l'objet <see cref="T:System.LocalDataStoreSlot" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le garbage collector appelle <xref:System.LocalDataStoreSlot.Finalize%2A> lorsque l’objet actuel est prêt à être finalisé.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>