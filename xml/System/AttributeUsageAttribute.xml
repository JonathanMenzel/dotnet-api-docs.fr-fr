<Type Name="AttributeUsageAttribute" FullName="System.AttributeUsageAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2603dc45cfbaffb1e6e5cbcfcb87d1551c1a603" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37728483" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AttributeUsageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AttributeUsageAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.AttributeUsageAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeUsageAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeUsageAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AttributeUsageAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5032c-101">Spécifie l'utilisation d'une autre classe d'attributs.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5032c-101">Specifies the usage of another attribute class.</span>
      </span>
      <span data-ttu-id="5032c-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5032c-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5032c-103">Lorsque vous définissez votre propre classe d’attributs, vous pouvez contrôler la manière dans lequel elle est utilisée en plaçant un <xref:System.AttributeUsageAttribute> sur votre classe d’attributs.</span><span class="sxs-lookup"><span data-stu-id="5032c-103">When you are defining your own attribute class, you can control the manner in which it is used by placing an <xref:System.AttributeUsageAttribute> on your attribute class.</span></span> <span data-ttu-id="5032c-104">La classe d’attributs indiquée doit dériver de <xref:System.Attribute>, directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="5032c-104">The indicated attribute class must derive from <xref:System.Attribute>, either directly or indirectly.</span></span>  
  
 <span data-ttu-id="5032c-105">Classes d’attributs ont des paramètres nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="5032c-105">Attribute classes have positional and named parameters.</span></span> <span data-ttu-id="5032c-106">Chaque constructeur public par une classe d’attributs définit une séquence valide de paramètres positionnels pour cette classe.</span><span class="sxs-lookup"><span data-stu-id="5032c-106">Each public constructor for an attribute class defines a valid sequence of positional parameters for that class.</span></span> <span data-ttu-id="5032c-107">Paramètres nommés sont définis par les champs non statique, publiques et en lecture-écriture ou propriétés de la classe d’attributs.</span><span class="sxs-lookup"><span data-stu-id="5032c-107">Named parameters are defined by the non-static, public, and read-write fields or properties of the attribute class.</span></span>  
  
 <span data-ttu-id="5032c-108">Les trois propriétés de <xref:System.AttributeUsageAttribute> sont définies en définissant les paramètres suivants :</span><span class="sxs-lookup"><span data-stu-id="5032c-108">The three properties of <xref:System.AttributeUsageAttribute> are set by defining the following parameters:</span></span>  
  
-   <xref:System.AttributeUsageAttribute.ValidOn%2A>  
  
 <span data-ttu-id="5032c-109">Ce paramètre positionnel spécifie les éléments de programme qui l’attribut indiqué peut être placé sur.</span><span class="sxs-lookup"><span data-stu-id="5032c-109">This positional parameter specifies the program elements that the indicated attribute can be placed on.</span></span> <span data-ttu-id="5032c-110">L’ensemble de tous les éléments possibles que vous pouvez placer un attribut sur est répertorié dans le <xref:System.AttributeTargets> énumération.</span><span class="sxs-lookup"><span data-stu-id="5032c-110">The set of all possible elements that you can place an attribute on is listed in the <xref:System.AttributeTargets> enumeration.</span></span> <span data-ttu-id="5032c-111">Vous pouvez combiner plusieurs <xref:System.AttributeTargets> des valeurs en utilisant une opération OR au niveau du bit pour obtenir la combinaison souhaitée d’éléments de programme valides.</span><span class="sxs-lookup"><span data-stu-id="5032c-111">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.AllowMultiple%2A>  
  
 <span data-ttu-id="5032c-112">Ce paramètre nommé Spécifie si l’attribut indiqué peut être spécifié plusieurs fois pour un élément de programme donné.</span><span class="sxs-lookup"><span data-stu-id="5032c-112">This named parameter specifies whether the indicated attribute can be specified more than once for a given program element.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.Inherited%2A>  
  
 <span data-ttu-id="5032c-113">Ce paramètre nommé Spécifie si l’attribut indiqué peut être hérité par les classes dérivées et les membres de substitution.</span><span class="sxs-lookup"><span data-stu-id="5032c-113">This named parameter specifies whether the indicated attribute can be inherited by derived classes and overriding members.</span></span>  
  
 <span data-ttu-id="5032c-114">Pour plus d’informations sur l’utilisation d’attributs, consultez <xref:System.Attribute> et [attributs](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="5032c-114">For more information about using attributes, see <xref:System.Attribute> and [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.AttributeTargets" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeUsageAttribute (AttributeTargets validOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AttributeTargets validOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validOn As AttributeTargets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeUsageAttribute(AttributeTargets validOn);" />
      <MemberSignature Language="F#" Value="new AttributeUsageAttribute : AttributeTargets -&gt; AttributeUsageAttribute" Usage="new System.AttributeUsageAttribute validOn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validOn" Type="System.AttributeTargets" />
      </Parameters>
      <Docs>
        <param name="validOn">
          <span data-ttu-id="5032c-115">Ensemble de valeurs combinées à l'aide d'une opération de bits OR pour indiquer les éléments de programme valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5032c-115">The set of values combined using a bitwise OR operation to indicate which program elements are valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5032c-116">Initialise une nouvelle instance de la classe <see cref="T:System.AttributeUsageAttribute" /> avec la liste spécifiée de <see cref="T:System.AttributeTargets" />, la valeur <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> et la valeur <see cref="P:System.AttributeUsageAttribute.Inherited" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5032c-116">Initializes a new instance of the <see cref="T:System.AttributeUsageAttribute" /> class with the specified list of <see cref="T:System.AttributeTargets" />, the <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> value, and the <see cref="P:System.AttributeUsageAttribute.Inherited" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5032c-117">Vous pouvez combiner plusieurs <xref:System.AttributeTargets> des valeurs en utilisant une opération OR au niveau du bit pour obtenir la combinaison souhaitée d’éléments de programme valides.</span><span class="sxs-lookup"><span data-stu-id="5032c-117">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
 <span data-ttu-id="5032c-118">Pour les valeurs de propriété par défaut, consultez le <xref:System.AttributeUsageAttribute.ValidOn%2A>, <xref:System.AttributeUsageAttribute.AllowMultiple%2A>, et <xref:System.AttributeUsageAttribute.Inherited%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="5032c-118">For default property values, see the <xref:System.AttributeUsageAttribute.ValidOn%2A>, <xref:System.AttributeUsageAttribute.AllowMultiple%2A>, and <xref:System.AttributeUsageAttribute.Inherited%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5032c-119">La définition de l’attribut DispId illustre l’utilisation d’une opération OR au niveau du bit pour combiner plusieurs <xref:System.AttributeTargets> valeurs.</span><span class="sxs-lookup"><span data-stu-id="5032c-119">The definition of the DispId attribute illustrates the use of a bitwise OR operation to combine several <xref:System.AttributeTargets> values.</span></span>  
  
 [!code-cpp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.AttributeUsageAttribute.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5032c-120">Obtient ou définit une valeur Boolean indiquant si plusieurs instances de l'attribut indiqué peuvent être spécifiées pour un seul élément de programme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5032c-120">Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5032c-121">
            <see langword="true" /> si la spécification de plusieurs instances est autorisée ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5032c-121">
              <see langword="true" /> if more than one instance is allowed to be specified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5032c-122">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5032c-122">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5032c-123">Un attribut qui peut être spécifié plusieurs fois pour un élément de programme est appelé un attribut à usages multiples.</span><span class="sxs-lookup"><span data-stu-id="5032c-123">An attribute that can be specified more than once for a program element is called a multi-use attribute.</span></span> <span data-ttu-id="5032c-124">Un attribut qui peut être spécifié qu’une seule fois est appelé un attribut à usage unique.</span><span class="sxs-lookup"><span data-stu-id="5032c-124">An attribute that can be specified only once is called a single-use attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="public bool Inherited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.Inherited" />
      <MemberSignature Language="VB.NET" Value="Public Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Inherited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Inherited : bool with get, set" Usage="System.AttributeUsageAttribute.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5032c-125">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui détermine si l’attribut indiqué est hérité par les classes dérivées et les membres de substitution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5032c-125">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether the indicated attribute is inherited by derived classes and overriding members.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5032c-126">
            <see langword="true" /> si l’attribut peut être hérité par les classes dérivées et les membres de substitution ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5032c-126">
              <see langword="true" /> if the attribute can be inherited by derived classes and overriding members; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5032c-127">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5032c-127">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5032c-128">Le <xref:System.AttributeUsageAttribute.Inherited%2A> propriété détermine :</span><span class="sxs-lookup"><span data-stu-id="5032c-128">The <xref:System.AttributeUsageAttribute.Inherited%2A> property determines:</span></span>  
  
-   <span data-ttu-id="5032c-129">Si les classes dérivées à partir d’une classe de base marqués avec l’attribut auquel la <xref:System.AttributeUsageAttribute> attribut est appliqué héritent de cet attribut.</span><span class="sxs-lookup"><span data-stu-id="5032c-129">Whether classes derived from a base class tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  
  
-   <span data-ttu-id="5032c-130">Indique si les méthodes de classes dérivées qui substituent une méthode de classe de base marqués avec l’attribut auquel la <xref:System.AttributeUsageAttribute> attribut est appliqué héritent de cet attribut.</span><span class="sxs-lookup"><span data-stu-id="5032c-130">Whether methods of derived classes that override a base class method tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  <span data-ttu-id="5032c-131">(Si une classe hérite d’un membre de classe de base, il hérite également des attributs appliqués à ce membre.)</span><span class="sxs-lookup"><span data-stu-id="5032c-131">(If a class inherits a base class member, it also inherits any attributes applied to that member.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5032c-132">L’exemple suivant illustre la différence entre un attribut auquel une <xref:System.AttributeUsageAttribute> attribut avec une <xref:System.AttributeUsageAttribute.Inherited%2A> valeur de propriété de `true` est appliquée et l’autre pour lequel <xref:System.AttributeUsageAttribute> attribut avec un <xref:System.AttributeUsageAttribute.Inherited%2A> valeur de propriété de `false` est appliqué.</span><span class="sxs-lookup"><span data-stu-id="5032c-132">The following example illustrates the difference between an attribute to which an <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `true` is applied and one to which  <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `false` is applied .</span></span> <span data-ttu-id="5032c-133">L’exemple définit deux attributs, `InheritedAttribute` et `NotInheritedAttribute`.</span><span class="sxs-lookup"><span data-stu-id="5032c-133">The example defines two attributes, `InheritedAttribute` and `NotInheritedAttribute`.</span></span> <span data-ttu-id="5032c-134">Les deux attributs peuvent appliquer aux classes et méthodes.</span><span class="sxs-lookup"><span data-stu-id="5032c-134">Both attributes can apply to classes and methods.</span></span> <span data-ttu-id="5032c-135">Étant donné que le <xref:System.AttributeUsageAttribute.Inherited%2A> propriété de la <xref:System.AttributeUsageAttribute> attribut appliqué à `InheritedAttribute` est `true`, elle est héritée par les classes dérivées et les membres de classes dérivées qui substituent la méthode de classe de base.</span><span class="sxs-lookup"><span data-stu-id="5032c-135">Because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `InheritedAttribute` is `true`, it is inherited by derived classes and the members of derived classes that override the base class method.</span></span>  <span data-ttu-id="5032c-136">En revanche, étant donné que le <xref:System.AttributeUsageAttribute.Inherited%2A> propriété de la <xref:System.AttributeUsageAttribute> attribut appliqué à `NotInheritedAttribute` est `false`, il n’est pas hérité par les classes dérivées et les membres de classes dérivées qui substituent la méthode de classe de base.</span><span class="sxs-lookup"><span data-stu-id="5032c-136">On the other hand, because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `NotInheritedAttribute` is `false`, it is not inherited by derived classes and the members of derived classes that override the base class method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#1)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#1)]  
  
 <span data-ttu-id="5032c-137">L’exemple définit ensuite les deux classes de base.</span><span class="sxs-lookup"><span data-stu-id="5032c-137">The example then defines two  base classes.</span></span> <span data-ttu-id="5032c-138">La première, `BaseA`, a une méthode unique, `MethodA`.</span><span class="sxs-lookup"><span data-stu-id="5032c-138">The first, `BaseA`, has a single method, `MethodA`.</span></span>  <span data-ttu-id="5032c-139">La seconde, `BaseB`, a une méthode unique, `MethodB`.</span><span class="sxs-lookup"><span data-stu-id="5032c-139">The second, `BaseB`, has a single method, `MethodB`.</span></span> <span data-ttu-id="5032c-140">`BaseA` et `MethodA` sont marqués avec le `InheritedAttribute` attribut, et `BaseB` et `MethodB` sont marqués avec le `NotInheritedAttribute` attribut.</span><span class="sxs-lookup"><span data-stu-id="5032c-140">`BaseA` and `MethodA` are tagged with the `InheritedAttribute` attribute, and `BaseB` and `MethodB` are tagged with the `NotInheritedAttribute` attribute.</span></span> <span data-ttu-id="5032c-141">`DerivedA` hérite de `BaseA` et remplace son `MethodA` (méthode).</span><span class="sxs-lookup"><span data-stu-id="5032c-141">`DerivedA` inherits from `BaseA` and overrides its `MethodA` method.</span></span> <span data-ttu-id="5032c-142">`DerivedB` hérite de `BaseB` et remplace son `MethodB` (méthode).</span><span class="sxs-lookup"><span data-stu-id="5032c-142">`DerivedB` inherits from `BaseB` and overrides its `MethodB` method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#2)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#2)]  
  
 <span data-ttu-id="5032c-143">Comme la sortie de l’exemple, `DerivedA` et `DerivedA.MethodA` héritent le `InheritedAttribute` attribut, mais `DerivedB` et `DerivedB.MethodB` n’héritent pas les `NotInheritedAttribute` attribut.</span><span class="sxs-lookup"><span data-stu-id="5032c-143">As the output from the example shows, `DerivedA` and `DerivedA.MethodA` inherit the `InheritedAttribute` attribute, but `DerivedB` and `DerivedB.MethodB` do not inherit the `NotInheritedAttribute` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="ValidOn">
      <MemberSignature Language="C#" Value="public AttributeTargets ValidOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AttributeTargets ValidOn" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.ValidOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidOn As AttributeTargets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AttributeTargets ValidOn { AttributeTargets get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidOn : AttributeTargets" Usage="System.AttributeUsageAttribute.ValidOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AttributeTargets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5032c-144">Obtient un ensemble de valeurs identifiant les éléments de programme auxquels l'attribut indiqué peut être appliqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5032c-144">Gets a set of values identifying which program elements that the indicated attribute can be applied to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5032c-145">Une ou plusieurs valeurs <see cref="T:System.AttributeTargets" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5032c-145">One or several <see cref="T:System.AttributeTargets" /> values.</span>
          </span>
          <span data-ttu-id="5032c-146">La valeur par défaut est <see langword="All" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5032c-146">The default is <see langword="All" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
  </Members>
</Type>