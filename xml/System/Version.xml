<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Version.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae05845525e9f038465f7d92114966377901a5d9ae8014bef.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e9f038465f7d92114966377901a5d9ae8014bef</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Represents the version number of an assembly, operating system, or the common language runtime.</source>
          <target state="translated">Représente le numéro de version d'un assembly, d'un système d'exploitation ou du Common Language Runtime.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Version numbers consist of two to four components: major, minor, build, and revision.</source>
          <target state="translated">Numéros de version comportent de deux à quatre composants : principal, secondaire, build et révision.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined.</source>
          <target state="translated">Les composants principaux et secondaires sont requis ; les composants de la build et de révision sont facultatifs, mais le composant build est requis si le composant de révision est défini.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>All defined components must be integers greater than or equal to 0.</source>
          <target state="translated">Tous les composants définis doivent être des entiers supérieurs ou égales à 0.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The format of the version number is as follows (optional components are shown in square brackets ([ and ]):</source>
          <target state="translated">Le format du numéro de version est la suivante (composants facultatifs sont affichés entre crochets ([et]) :</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>major<ept id="p1">*</ept>.<bpt id="p2">*</bpt>minor<ept id="p2">*</ept>[.<bpt id="p3">*</bpt>build<ept id="p3">*</ept>[.<bpt id="p4">*</bpt>revision<ept id="p4">*</ept>]]</source>
          <target state="translated"><bpt id="p1">*</bpt>principaux<ept id="p1">*</ept>.<bpt id="p2">*</bpt> mineure<ept id="p2">*</ept>[.<bpt id="p3">*</bpt> build<ept id="p3">*</ept>[.<bpt id="p4">*</bpt> révision<ept id="p4">*</ept>]]</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The components are used by convention as follows:</source>
          <target state="translated">Les composants sont utilisés par convention, comme suit :</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Major<ept id="p1">*</ept>: Assemblies with the same name but different major versions are not interchangeable.</source>
          <target state="translated"><bpt id="p1">*</bpt>Principaux<ept id="p1">*</ept>: les assemblys avec le même nom mais des versions principales différentes ne sont pas interchangeables.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.</source>
          <target state="translated">Un numéro de version plus élevé peut indiquer une réécriture importante d’un produit dont la compatibilité descendante ne peut pas être assurée.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Minor<ept id="p1">*</ept>: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility.</source>
          <target state="translated"><bpt id="p1">*</bpt>Secondaire<ept id="p1">*</ept>: si le nom et le numéro de version principale de deux assemblys sont identiques, mais le numéro de version secondaire est différent, cela indique une amélioration significative de déplacer la compatibilité descendante.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.</source>
          <target state="translated">Ce numéro de version mineure supérieur peut indiquer une version ponctuelle d’un produit ou une nouvelle version de compatibilité descendante est totale d’un produit.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Build<ept id="p1">*</ept>: A difference in build number represents a recompilation of the same source.</source>
          <target state="translated"><bpt id="p1">*</bpt>Build<ept id="p1">*</ept>: une différence dans le numéro de build représente une recompilation de la même source.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Different build numbers might be used when the processor, platform, or compiler changes.</source>
          <target state="translated">Numéros de build différent peuvent être utilisés lorsque le processeur, la plateforme ou le compilateur change.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Revision<ept id="p1">*</ept>: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable.</source>
          <target state="translated"><bpt id="p1">*</bpt>Révision<ept id="p1">*</ept>: les assemblys avec les mêmes numéros de version, nom, principales et secondaires, mais différentes révisions sont destinés à être totalement interchangeables.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>A higher revision number might be used in a build that fixes a security hole in a previously released assembly.</source>
          <target state="translated">Un numéro de révision supérieur peut être utilisé dans une build qui résout une faille de sécurité dans un assembly précédemment publiée.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.</source>
          <target state="translated">Les versions suivantes d’un assembly qui diffèrent uniquement par les numéros de build ou de révision sont considérés comme des mises à jour de correctif logiciel de la version antérieure.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The value of <ph id="ph1">&lt;xref:System.Version&gt;</ph> properties that have not been explicitly assigned a value is undefined (-1).</source>
          <target state="translated">La valeur de <ph id="ph1">&lt;xref:System.Version&gt;</ph> propriétés n'ont pas été explicitement une valeur affectées est non définie (-1).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Starting with .NET Framework 2.0, the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.</source>
          <target state="translated">En commençant par le .NET Framework 2.0, le <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propriétés vous permettent d’identifier une version temporaire de votre application qui, par exemple, résout un problème jusqu'à ce que vous pouvez diffuser une solution permanente.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Furthermore, the Windows NT operating system uses the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to encode the service pack number.</source>
          <target state="translated">En outre, le système d’exploitation Windows NT utilise le <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> propriété pour encoder le numéro de service pack.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Assigning Version Information to Assemblies</source>
          <target state="translated">Affectation d’informations de Version aux assemblys</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Ordinarily, the <ph id="ph1">&lt;xref:System.Version&gt;</ph> class is not used to assign a version number to an assembly.</source>
          <target state="translated">En règle générale, la <ph id="ph1">&lt;xref:System.Version&gt;</ph> classe n’est pas utilisée pour affecter un numéro de version à un assembly.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> class is used to define an assembly's version, as illustrated by the example in this topic.</source>
          <target state="translated">Au lieu de cela, la <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> classe est utilisée pour définir la version d’un assembly, comme illustré dans l’exemple dans cette rubrique.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving Version Information</source>
          <target state="translated">La récupération des informations de Version</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><ph id="ph1">&lt;xref:System.Version&gt;</ph> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Version&gt;</ph> objets sont fréquemment utilisés pour stocker les informations de version sur un composant système ou d’application (par exemple, le système d’exploitation), le common language runtime, fichier exécutable de l’application active ou un assembly particulier.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following examples illustrate some of the most common scenarios:</source>
          <target state="translated">Les exemples suivants illustrent des scénarios plus courants :</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the operating system version.</source>
          <target state="translated">La récupération de la version du système d’exploitation.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType&gt;</ph> property to retrieve the version number of the operating system.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType&gt;</ph> propriété à récupérer le numéro de version du système d’exploitation.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the version of the common language runtime.</source>
          <target state="translated">La récupération de la version du common language runtime.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=nameWithType&gt;</ph> property to retrieve version information about the common language runtime.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=nameWithType&gt;</ph> propriété à récupérer les informations de version sur le common language runtime.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the current application's assembly version.</source>
          <target state="translated">La récupération de version de l’assembly de l’application active.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType&gt;</ph> method to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that represents the application executable and then retrieves its assembly version number.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType&gt;</ph> méthode pour obtenir une référence à un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> objet qui représente le fichier exécutable d’application, puis récupère son numéro de version d’assembly.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the current assembly's assembly version.</source>
          <target state="translated">La récupération de version de l’assembly de l’assembly actuel.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> property to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that represents the assembly that contains the application entry point, and then retrieves its version information.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> propriété pour obtenir une référence à un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> objet qui représente l’assembly qui contient le point d’entrée de l’application, puis récupère ses informations de version.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the version of a specific assembly.</source>
          <target state="translated">La récupération de la version d’un assembly spécifique.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType&gt;</ph> method to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that has a particular file name, and then retrieves its version information.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType&gt;</ph> méthode pour obtenir une référence à un <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> objet qui a un nom de fichier particulier, puis récupère ses informations de version.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Note that several other methods also exist to instantiate an <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> object by file name or by strong name.</source>
          <target state="translated">Notez que plusieurs autres méthodes existent pour instancier un <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> objet par nom de fichier ou par nom fort.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the Publish Version of a ClickOnce application.</source>
          <target state="translated">La récupération de la Version de publication d’une application ClickOnce.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType&gt;</ph> property to display an application's Publish Version.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType&gt;</ph> propriété pour afficher la Version de publication d’une application.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Note that its successful execution requires the example's application identity to be set.</source>
          <target state="translated">Notez que son exécution réussie requiert l’identité de l’application de l’exemple à définir.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>This is handled automatically by the Visual Studio Publish Wizard.</source>
          <target state="translated">Ceci est géré automatiquement par l’Assistant de publication de Visual Studio.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.</source>
          <target state="translated">La Version de publication d’une application pour le déploiement ClickOnce est complètement indépendante de la version de l’assembly.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Comparing Version Objects</source>
          <target state="translated">Comparaison des objets de la Version</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>You can use the <ph id="ph1">&lt;xref:System.Version.CompareTo%2A&gt;</ph> method to determine whether one <ph id="ph2">&lt;xref:System.Version&gt;</ph> object is earlier than, the same as, or later than a second <ph id="ph3">&lt;xref:System.Version&gt;</ph> object.</source>
          <target state="translated">Vous pouvez utiliser la <ph id="ph1">&lt;xref:System.Version.CompareTo%2A&gt;</ph> pour déterminer si une méthode <ph id="ph2">&lt;xref:System.Version&gt;</ph> objet est antérieure, identique ou ultérieure à une seconde <ph id="ph3">&lt;xref:System.Version&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example indicates that Version 2.1 is later than Version 2.0.</source>
          <target state="translated">L’exemple suivant indique que la Version 2.1 est postérieure à la Version 2.0.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>For two versions to be equal, the major, minor, build, and revision numbers of the first <ph id="ph1">&lt;xref:System.Version&gt;</ph> object must be identical to those of the second <ph id="ph2">&lt;xref:System.Version&gt;</ph> object.</source>
          <target state="translated">Pour deux versions soient égaux, major, minor, build et les numéros de révision de la première <ph id="ph1">&lt;xref:System.Version&gt;</ph> objet doit être identique à celles de la seconde <ph id="ph2">&lt;xref:System.Version&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>If the build or revision number of a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object is undefined, that <ph id="ph2">&lt;xref:System.Version&gt;</ph> object is considered to be earlier than a <ph id="ph3">&lt;xref:System.Version&gt;</ph> object whose build or revision number is equal to zero.</source>
          <target state="translated">Si le numéro de build ou de révision un <ph id="ph1">&lt;xref:System.Version&gt;</ph> objet n’est pas défini, qui <ph id="ph2">&lt;xref:System.Version&gt;</ph> objet est considéré comme étant antérieur à un <ph id="ph3">&lt;xref:System.Version&gt;</ph> dont la génération de l’objet ou le numéro de révision est égal à zéro.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example illustrates this by comparing three <ph id="ph1">&lt;xref:System.Version&gt;</ph> objects that have undefined version components.</source>
          <target state="translated">L’exemple suivant illustre ce comportement en comparant trois <ph id="ph1">&lt;xref:System.Version&gt;</ph> les objets qui ont des composants de la version non définies.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attribute to assign a version number to an assembly.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attribut pour affecter un numéro de version à un assembly.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>At compile time, this version information is stored with the assembly's metadata.</source>
          <target state="translated">Au moment de la compilation, ces informations de version sont stockées avec les métadonnées de l’assembly.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>At run time, the example retrieves the value of the <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> property on a type found in the assembly to get a reference to the executing assembly, and it retrieves the assembly's version information from the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Au moment de l’exécution, l’exemple récupère la valeur de la <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> propriété sur un type trouvé dans l’assembly pour obtenir une référence à l’assembly en cours d’exécution, et il récupère les informations de version de l’assembly à partir de la <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph> propriété de la <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> objet retourné par la <ph id="ph4">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class with the specified major, minor, build, and revision numbers.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> avec les numéros major, minor, build et revision spécifiés.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">Ce constructeur crée un <ph id="ph1">&lt;xref:System.Version&gt;</ph> objet avec les valeurs de propriété suivantes.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>undefined (-1)</source>
          <target state="translated">non défini (-1)</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>undefined (-1)</source>
          <target state="translated">non défini (-1)</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').</source>
          <target state="translated">Chaîne contenant les numéros major, minor, build et revision, où chaque numéro est séparé par un point (".").</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class using the specified string.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> à l'aide de la chaîne spécifiée.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The <ph id="ph1">`version`</ph> parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods.</source>
          <target state="translated">Le <ph id="ph1">`version`</ph> paramètre peut contenir uniquement des composants principal, secondaire, build et révision, dans cet ordre et séparés par des points.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>There must be at least two components, and at most four.</source>
          <target state="translated">Il doit y avoir au moins deux composants et au maximum quatre.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The first two components are assumed to be major and minor.</source>
          <target state="translated">Les deux premiers composants sont supposés pour être des principaux et secondaires.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The value of unspecified components is undefined.</source>
          <target state="translated">La valeur des composants non spécifiées n’est pas définie.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The format of the version number is as follows.</source>
          <target state="translated">Le format du numéro de version est comme suit.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>Optional components are shown in square brackets ('[' and ']'):</source>
          <target state="translated">Composants facultatifs sont affichés entre crochets ('[' et ']') :</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>major.minor[.build[.revision]]</source>
          <target state="translated">major.minor[.build[.revision]]</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>All defined components must be integers greater than or equal to 0.</source>
          <target state="translated">Tous les composants définis doivent être des entiers supérieurs ou égales à 0.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then <ph id="ph1">`version`</ph> should be "6.2.1.3".</source>
          <target state="translated">Par exemple, si le numéro principal est 6, le numéro secondaire est 2, le numéro de build est 1, et le numéro de révision est 3, puis <ph id="ph1">`version`</ph> doit être « 6.2.1.3 ».</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> has fewer than two components or more than four components.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> est constitué de moins de deux composants ou de plus de quatre composants.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>A major, minor, build, or revision component is less than zero.</source>
          <target state="translated">Un composant principal, secondaire, build ou révision est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>At least one component of <ph id="ph1">&lt;paramref name="version" /&gt;</ph> does not parse to an integer.</source>
          <target state="translated">L'analyse d'au moins un composant de <ph id="ph1">&lt;paramref name="version" /&gt;</ph> ne donne pas un entier.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>At least one component of <ph id="ph1">&lt;paramref name="version" /&gt;</ph> represents a number greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Au moins un composant de <ph id="ph1">&lt;paramref name="version" /&gt;</ph> représente un nombre supérieur à <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>The major version number.</source>
          <target state="translated">Numéro de version principale.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>The minor version number.</source>
          <target state="translated">Numéro de version secondaire.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class using the specified major and minor values.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> à l'aide des valeurs de numéros major et minor spécifiées.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">Ce constructeur crée un <ph id="ph1">&lt;xref:System.Version&gt;</ph> objet avec les valeurs de propriété suivantes.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>undefined (-1)</source>
          <target state="translated">non défini (-1)</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>undefined (-1)</source>
          <target state="translated">non défini (-1)</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="major" /&gt;</ph> or <ph id="ph2">&lt;paramref name="minor" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="major" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="minor" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>The major version number.</source>
          <target state="translated">Numéro de version principale.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>The minor version number.</source>
          <target state="translated">Numéro de version secondaire.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>The build number.</source>
          <target state="translated">Numéro de build.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class using the specified major, minor, and build values.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> à l'aide des valeurs de numéros major et minor spécifiées.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">Ce constructeur crée un <ph id="ph1">&lt;xref:System.Version&gt;</ph> objet avec les valeurs de propriété suivantes.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>undefined (-1)</source>
          <target state="translated">non défini (-1)</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="build" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph> ou <ph id="ph3">&lt;paramref name="build" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The major version number.</source>
          <target state="translated">Numéro de version principale.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The minor version number.</source>
          <target state="translated">Numéro de version secondaire.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The build number.</source>
          <target state="translated">Numéro de build.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The revision number.</source>
          <target state="translated">Numéro de révision.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class with the specified major, minor, build, and revision numbers.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> avec les numéros major, minor, build et revision spécifiés.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">Ce constructeur crée un <ph id="ph1">&lt;xref:System.Version&gt;</ph> objet avec les valeurs de propriété suivantes.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple de code suivant montre la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructeur, et <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, et <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph>, <ph id="ph3">&lt;paramref name="build" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="revision" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph>, <ph id="ph3">&lt;paramref name="build" /&gt;</ph> ou <ph id="ph4">&lt;paramref name="revision" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Version.Build">
          <source>Gets the value of the build component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Obtient la valeur du composant build du numéro de version de l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>The build number, or -1 if the build number is undefined.</source>
          <target state="translated">Numéro de build, ou -1 si le numéro de build n'est pas défini.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>For example, if the version number is 6.2.1.3, the build number is 1.</source>
          <target state="translated">Par exemple, si le numéro de version est 6.2.1.3, le numéro de build est 1.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>If the version number is 6.2, the build number is undefined.</source>
          <target state="translated">Si le numéro de version est 6.2, le numéro de build est non défini.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple de code suivant montre la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructeur, et <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, et <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Version.Clone">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object whose value is the same as the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Retourne un nouvel objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> dont la valeur est identique à celle de l'objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Version.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose values are a copy of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Nouveau <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> dont les valeurs sont une copie de l'objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Clone">
          <source>If the type of the return value is important, cast the <ph id="ph1">&lt;xref:System.Object&gt;</ph> instance that is returned by this method to a <ph id="ph2">&lt;xref:System.Version&gt;</ph> object.</source>
          <target state="translated">Si le type de la valeur de retour est important, castez le <ph id="ph1">&lt;xref:System.Object&gt;</ph> instance qui est retournée par cette méthode pour un <ph id="ph2">&lt;xref:System.Version&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to a specified object or <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">Compare l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours à un objet spécifié ou <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> et retourne une indication de leurs valeurs relatives.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>An object to compare, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objet à comparer ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to a specified object and returns an indication of their relative values.</source>
          <target state="translated">Compare l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours à un objet spécifié et retourne une indication de leurs valeurs relatives.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>A signed integer that indicates the relative values of the two objects, as shown in the following table.</source>
          <target state="translated">Entier signé qui indique les valeurs relatives des deux objets, comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valeur de retour</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Signification</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Inférieur à zéro</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version before <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L’objet <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> actuel est d’une version antérieure à <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zéro</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is the same version as <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L’objet <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> actuel est de la même version que <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Supérieur à zéro</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version subsequent to <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L’objet <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> actuel est d’une version ultérieure à <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>The components of <ph id="ph1">`Version`</ph> in decreasing order of importance are: major, minor, build, and revision.</source>
          <target state="translated">Les composants de <ph id="ph1">`Version`</ph> dans l’ordre d’importance décroissant sont : principal, secondaire, build et révision.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>An unknown component is assumed to be older than any known component.</source>
          <target state="translated">Un composant inconnu est supposé pour être plus ancienne que tout autre composant connu.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>For example:</source>
          <target state="translated">Exemple :</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1 is older than version 1.1.0</source>
          <target state="translated">Version 1.1 est antérieure à la version 1.1.0.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1 is older than version 1.1.1</source>
          <target state="translated">Version 1.1 est plus ancienne que la version 1.1.1</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1 is older than version 1.1.2.3</source>
          <target state="translated">Version 1.1 est plus ancienne que la version 1.1.2.3</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1.2 is older than version 1.1.2.4</source>
          <target state="translated">1.1.2 est plus ancienne que la version 1.1.2.4.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.2.5 is newer than version 1.2.3.4</source>
          <target state="translated">Version 1.2.5 est plus récente que la version 1.2.3.4</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> is not of type <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> n'est pas de type <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to compare to the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> à comparer à l'objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> en cours, ou <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to a specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object and returns an indication of their relative values.</source>
          <target state="translated">Compare l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours à un objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> spécifié et retourne une indication de leurs valeurs relatives.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>A signed integer that indicates the relative values of the two objects, as shown in the following table.</source>
          <target state="translated">Entier signé qui indique les valeurs relatives des deux objets, comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valeur de retour</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Signification</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Inférieur à zéro</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version before <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L’objet <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> actuel est d’une version antérieure à <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zéro</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is the same version as <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L’objet <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> actuel est de la même version que <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Supérieur à zéro</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version subsequent to <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> L’objet <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> actuel est d’une version ultérieure à <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than the <ph id="ph2">&lt;xref:System.Version.CompareTo%2A&gt;</ph> method because it does not have to unbox the <ph id="ph3">`value`</ph> parameter.</source>
          <target state="translated">Cette méthode implémente la <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> d’interface et effectue légèrement meilleures que les <ph id="ph2">&lt;xref:System.Version.CompareTo%2A&gt;</ph> (méthode), car il n’a pas à effectuer une conversion unboxing le <ph id="ph3">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>The components of <ph id="ph1">`Version`</ph> in decreasing order of importance are: major, minor, build, and revision.</source>
          <target state="translated">Les composants de <ph id="ph1">`Version`</ph> dans l’ordre d’importance décroissant sont : principal, secondaire, build et révision.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>An unknown component is assumed to be older than any known component.</source>
          <target state="translated">Un composant inconnu est supposé pour être plus ancienne que tout autre composant connu.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>For example:</source>
          <target state="translated">Exemple :</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1 is older than version 1.1.0.</source>
          <target state="translated">Version 1.1 est antérieure à la version 1.1.0.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1 is older than version 1.1.1.</source>
          <target state="translated">La version 1.1 est plus ancienne que la version 1.1.1.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1 is older than version 1.1.2.3.</source>
          <target state="translated">La version 1.1 est plus ancienne que la version 1.1.2.3.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1.2 is older than version 1.1.2.4.</source>
          <target state="translated">La version 1.1.2 est plus ancienne que la version 1.1.2.4.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.2.5 is newer than version 1.2.3.4.</source>
          <target state="translated">Version 1.2.5 est plus récente que la version 1.2.3.4.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>The following code example demonstrates generic and nongeneric versions of the <ph id="ph1">`CompareTo`</ph> method for several value and reference types.</source>
          <target state="translated">L’exemple de code suivant montre les versions génériques et non génériques de la <ph id="ph1">`CompareTo`</ph> méthode pour plusieurs types valeur et référence.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Returns a value indicating whether two <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object represent the same value.</source>
          <target state="translated">Retourne une valeur indiquant si deux objets <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> représentent la même valeur.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Object)">
          <source>An object to compare with the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objet à comparer à l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours ou <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Object)">
          <source>Returns a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Retourne une valeur indiquant si l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours est identique à un objet spécifié.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> are both <ph id="ph4">&lt;see cref="T:System.Version" /&gt;</ph> objects, and every component of the current <ph id="ph5">&lt;see cref="T:System.Version" /&gt;</ph> object matches the corresponding component of <ph id="ph6">&lt;paramref name="obj" /&gt;</ph>; otherwise, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> en cours et <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> sont tous deux des objets <ph id="ph4">&lt;see cref="T:System.Version" /&gt;</ph> et que chaque composant de l'objet <ph id="ph5">&lt;see cref="T:System.Version" /&gt;</ph> en cours coïncide avec le composant de <ph id="ph6">&lt;paramref name="obj" /&gt;</ph> correspondant ; sinon, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Version)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to compare to the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> à comparer à l'objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> en cours, ou <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Version)">
          <source>Returns a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object and a specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object represent the same value.</source>
          <target state="translated">Retourne une valeur indiquant si l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours et un objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> spécifié représentent la même valeur.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if every component of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object matches the corresponding component of the <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> parameter; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si chaque composant de l'objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> en cours coïncide avec le composant correspondant du paramètre <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Equals(System.Version)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface, and performs slightly better than the <ph id="ph2">&lt;xref:System.Version.Equals%2A&gt;</ph> method because it does not have to unbox the <ph id="ph3">`obj`</ph> parameter.</source>
          <target state="translated">Cette méthode implémente la <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> d’interface et effectue légèrement meilleures que les <ph id="ph2">&lt;xref:System.Version.Equals%2A&gt;</ph> (méthode), car il n’a pas à effectuer une conversion unboxing le <ph id="ph3">`obj`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Version.GetHashCode">
          <source>Returns a hash code for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Retourne un code de hachage pour l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Version.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Code de hachage d'un entier signé 32 bits.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.GetHashCode">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple de code suivant montre la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructeur, et <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, et <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Version.Major">
          <source>Gets the value of the major component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Obtient la valeur du composant principal du numéro de version de l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Major">
          <source>The major version number.</source>
          <target state="translated">Numéro de version principale.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Major">
          <source>For example, if the version number is 6.2, the major version is 6.</source>
          <target state="translated">Par exemple, si le numéro de version est 6.2, la version principale est 6.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Version.MajorRevision">
          <source>Gets the high 16 bits of the revision number.</source>
          <target state="translated">Obtient les 16 bits de poids fort du numéro de révision.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>A 16-bit signed integer.</source>
          <target state="translated">Entier signé 16 bits.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</source>
          <target state="translated">Supposons que vous publiez une version intermédiaire de votre application pour résoudre temporairement un problème jusqu'à ce que vous pouvez diffuser une solution permanente.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</source>
          <target state="translated">La version temporaire ne garantit pas un nouveau numéro de révision, mais il ne doit pas nécessairement être identifiée comme une version différente.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</source>
          <target state="translated">Dans ce cas, encoder les informations d’identification dans les parties haute et basse 16 bits de numéro de révision de 32 bits.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>Use the <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> property to obtain the entire revision number, use the <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to obtain the high 16 bits, and use the <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> property to obtain the low 16 bits.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> propriété pour obtenir de l’utilisation de numéro de révision entier la <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> propriété pour obtenir les 16 bits de poids fort et utiliser le <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propriété pour obtenir les 16 bits de poids faibles.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to encode the service pack number.</source>
          <target state="translated">À compter de .NET Framework version 2.0, Windows NT d’exploitation du système utilise le <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> propriété pour encoder le numéro de service pack.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and the <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple de code suivant montre la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructeur et le <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, et <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Version.Minor">
          <source>Gets the value of the minor component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Obtient la valeur du composant secondaire du numéro de version de l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Minor">
          <source>The minor version number.</source>
          <target state="translated">Numéro de version secondaire.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Minor">
          <source>For example, if the version number is 6.2, the minor version is 2.</source>
          <target state="translated">Par exemple, si le numéro de version est 6.2, la version mineure est 2.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Minor">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple de code suivant montre la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructeur, et <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, et <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="P:System.Version.MinorRevision">
          <source>Gets the low 16 bits of the revision number.</source>
          <target state="translated">Obtient les 16 bits de poids faible du numéro de révision.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>A 16-bit signed integer.</source>
          <target state="translated">Entier signé 16 bits.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</source>
          <target state="translated">Supposons que vous publiez une version intermédiaire de votre application pour résoudre temporairement un problème jusqu'à ce que vous pouvez diffuser une solution permanente.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</source>
          <target state="translated">La version temporaire ne garantit pas un nouveau numéro de révision, mais il ne doit pas nécessairement être identifiée comme une version différente.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</source>
          <target state="translated">Dans ce cas, encoder les informations d’identification dans les parties haute et basse 16 bits de numéro de révision de 32 bits.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>Use the <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> property to obtain the entire revision number, use the <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to obtain the high 16 bits, and use the <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> property to obtain the low 16 bits.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> propriété pour obtenir de l’utilisation de numéro de révision entier la <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> propriété pour obtenir les 16 bits de poids fort et utiliser le <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propriété pour obtenir les 16 bits de poids faibles.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and the <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple de code suivant montre la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructeur et le <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, et <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Premier objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Second objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> objects are equal.</source>
          <target state="translated">Détermine si deux objets <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> spécifiés sont identiques.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> equals <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> est égal à <ph id="ph3">&lt;paramref name="v2" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Premier objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Second objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is greater than the second specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Détermine si le premier objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> spécifié est supérieur au second objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> est supérieur à <ph id="ph3">&lt;paramref name="v2" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Premier objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Second objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is greater than or equal to the second specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Détermine si le premier objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> spécifié est supérieur ou égal au second objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> est supérieur ou égal à <ph id="ph3">&lt;paramref name="v2" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Premier objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Second objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> objects are not equal.</source>
          <target state="translated">Détermine si deux objets <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> spécifiés ne sont pas identiques.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> does not equal <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> n'est pas égal à <ph id="ph3">&lt;paramref name="v2" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Premier objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Second objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is less than the second specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Détermine si le premier objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> spécifié est inférieur au second objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> est inférieur à <ph id="ph3">&lt;paramref name="v2" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Premier objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Second objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is less than or equal to the second <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Détermine si le premier objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> spécifié est inférieur ou égal au second objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> est inférieur ou égal à <ph id="ph3">&lt;paramref name="v2" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>A string that contains a version number to convert.</source>
          <target state="translated">Chaîne contenant un numéro de version à convertir.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>Converts the string representation of a version number to an equivalent <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Convertit la représentation sous forme de chaîne d'un numéro de version en un objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> équivalent.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>An object that is equivalent to the version number specified in the <ph id="ph1">&lt;paramref name="input" /&gt;</ph> parameter.</source>
          <target state="translated">Objet équivalent au numéro de version spécifié dans le paramètre <ph id="ph1">&lt;paramref name="input" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The <ph id="ph1">`input`</ph> parameter must have the following format:</source>
          <target state="translated">Le <ph id="ph1">`input`</ph> paramètre doit avoir le format suivant :</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>where <bpt id="p1">*</bpt>major<ept id="p1">*</ept>, <bpt id="p2">*</bpt>minor<ept id="p2">*</ept>, <bpt id="p3">*</bpt>build<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>revision<ept id="p4">*</ept> are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</source>
          <target state="translated">où <bpt id="p1">*</bpt>majeure<ept id="p1">*</ept>, <bpt id="p2">*</bpt>secondaire<ept id="p2">*</ept>, <bpt id="p3">*</bpt>générer<ept id="p3">*</ept>, et <bpt id="p4">*</bpt>révision<ept id="p4">*</ept> sont les représentations sous forme de chaîne de la version de composants de quatre du nombre : principales numéro de version, numéro de version secondaire, numéro de build et numéro de révision.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>Optional components are shown in square brackets ([ and ]).</source>
          <target state="translated">Composants facultatifs sont affichés entre crochets ([et]).</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The components must appear in the specified order, and must be separated by periods.</source>
          <target state="translated">Les composants doivent apparaître dans l’ordre spécifié et doivent être séparés par des points.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method to parse user input.</source>
          <target state="translated">La représentation sous forme de chaîne d’un numéro de version doit être conforme à un modèle reconnu, les applications doivent toujours utiliser la gestion des exceptions lors de l’appel du <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> méthode pour analyser l’entrée utilisateur.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>Alternatively, you can call the <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.</source>
          <target state="translated">Vous pouvez également appeler le <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> méthode pour analyser la représentation sous forme de chaîne d’un numéro de version et de retourner une valeur qui indique si l’opération d’analyse a réussi.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method is a convenience method; it is equivalent to calling the <ph id="ph2">&lt;xref:System.Version.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> méthode est une méthode pratique ; elle équivaut à appeler le <ph id="ph2">&lt;xref:System.Version.%23ctor%28System.String%29&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method to parse a number of strings that contain version information.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> méthode d’analyse d’un nombre de chaînes qui contiennent des informations de version.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> has fewer than two or more than four version components.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> est constitué de moins de deux ou de plus de quatre composants de version.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>At least one component in <ph id="ph1">&lt;paramref name="input" /&gt;</ph> is less than zero.</source>
          <target state="translated">Au moins un composant dans <ph id="ph1">&lt;paramref name="input" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>At least one component in <ph id="ph1">&lt;paramref name="input" /&gt;</ph> is not an integer.</source>
          <target state="translated">Au moins un composant dans <ph id="ph1">&lt;paramref name="input" /&gt;</ph> n'est pas un entier.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>At least one component in <ph id="ph1">&lt;paramref name="input" /&gt;</ph> represents a number that is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Au moins un composant dans <ph id="ph1">&lt;paramref name="input" /&gt;</ph> représente un nombre qui est supérieur à <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="P:System.Version.Revision">
          <source>Gets the value of the revision component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">Obtient la valeur du composant révision du numéro de version de l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>The revision number, or -1 if the revision number is undefined.</source>
          <target state="translated">Numéro de révision, ou -1 si le numéro de révision n'est pas défini.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>For example, if the version number is 6.2.1.3, the revision number is 3.</source>
          <target state="translated">Par exemple, si le numéro de version est 6.2.1.3, le numéro de révision est 3.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>If the version number is 6.2, the revision number is undefined.</source>
          <target state="translated">Si le numéro de version est 6.2, le numéro de révision est non défini.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple de code suivant montre la <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructeur, et <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, et <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to its equivalent <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">Convertit la valeur de l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours en sa représentation <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> équivalente.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to its equivalent <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">Convertit la valeur de l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours en sa représentation <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> équivalente.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation of the values of the major, minor, build, and revision components of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, as depicted in the following format.</source>
          <target state="translated">Représentation <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> des valeurs des composants major, minor, build et revision de l'objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> en cours, comme décrit dans le format suivant.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>Each component is separated by a period character ('.').</source>
          <target state="translated">Chaque composant est séparé par un point (« . »).</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:</source>
          <target state="translated">Si un composant est entre crochets (« [ » et « ] »), cela signifie qu'il n'apparaîtra pas dans la valeur de retour s'il n'est pas défini :</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>major.minor[.build[.revision]]</source>
          <target state="translated">major.minor[.build[.revision]]</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>For example, if you create a <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object using the constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,1)<ept id="p1">&lt;/c&gt;</ept>, the returned string is "1.1".</source>
          <target state="translated">Par exemple, si vous créez un objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> à l’aide du constructeur <bpt id="p1">&lt;c&gt;</bpt>Version(1,1)<ept id="p1">&lt;/c&gt;</ept>, la chaîne retournée est « 1.1 ».</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>If you create a <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object using the constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,4,2)<ept id="p1">&lt;/c&gt;</ept>, the returned string is "1.3.4.2".</source>
          <target state="translated">Si vous créez un objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> à l’aide du constructeur <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,4,2)<ept id="p1">&lt;/c&gt;</ept>, la chaîne retournée est « 1.3.4.2 ».</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The number of components to return.</source>
          <target state="translated">Nombre de composants à retourner.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>fieldCount<ept id="p1">&lt;/c&gt;</ept> ranges from 0 to 4.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>fieldCount<ept id="p1">&lt;/c&gt;</ept> est compris entre 0 et 4.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to its equivalent <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">Convertit la valeur de l'objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> en cours en sa représentation <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> équivalente.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>A specified count indicates the number of components to return.</source>
          <target state="translated">Un nombre spécifié indique le nombre de composants à retourner.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation of the values of the major, minor, build, and revision components of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, each separated by a period character ('.').</source>
          <target state="translated">Représentation <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> des valeurs des composants major, minor, build et revision de l'objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> en cours, chacun étant séparé par un point (".").</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> parameter determines how many components are returned.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> détermine le nombre de composants retournés.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> fieldCount</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> fieldCount</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Valeur de retour</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> An empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Chaîne vide ("").</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> majeure</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 2</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 2</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> majeure, mineure</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 3</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 3</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor.build</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> majeure, mineure, build</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 4</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 4</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor.build.revision</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> majeure, mineure, build, révision</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>For example, if you create <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object using the constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,5)<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>ToString(2)<ept id="p2">&lt;/c&gt;</ept> returns "1.3" and <bpt id="p3">&lt;c&gt;</bpt>ToString(4)<ept id="p3">&lt;/c&gt;</ept> throws an exception.</source>
          <target state="translated">Par exemple, si vous créez un objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> à l’aide du constructeur <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,5)<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>ToString(2)<ept id="p2">&lt;/c&gt;</ept> retourne « 1.3 » et <bpt id="p3">&lt;c&gt;</bpt>ToString(4)<ept id="p3">&lt;/c&gt;</ept> lève une exception.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> is less than 0, or more than 4.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> est inférieur à 0 ou supérieur à 4.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> is more than the number of components defined in the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> est supérieur au nombre de composants définis dans l'objet <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>A string that contains a version number to convert.</source>
          <target state="translated">Chaîne contenant un numéro de version à convertir.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> equivalent of the number that is contained in <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept>, if the conversion succeeded.</source>
          <target state="translated">Quand cette méthode est retournée, contient la valeur <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> équivalente au nombre contenu dans <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept>, si la conversion a réussi.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, or if the conversion fails, <bpt id="p2">&lt;c&gt;</bpt>result<ept id="p2">&lt;/c&gt;</ept> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> when the method returns.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept> est <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, ou en cas d’échec de la conversion, <bpt id="p2">&lt;c&gt;</bpt>result<ept id="p2">&lt;/c&gt;</ept> est <ph id="ph3">&lt;see langword="null" /&gt;</ph> quand la méthode est retournée.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>Tries to convert the string representation of a version number to an equivalent <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">Essaie de convertir la représentation sous forme de chaîne d'un numéro de version en un objet <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> équivalent et retourne une valeur indiquant si la conversion a réussi.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="input" /&gt;</ph> parameter was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la conversion du paramètre <ph id="ph2">&lt;paramref name="input" /&gt;</ph> a réussi ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>The <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method is similar to the <ph id="ph2">&lt;xref:System.Version.Parse%2A&gt;</ph> method, except that it does not throw an exception if the conversion fails.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> méthode est similaire à la <ph id="ph2">&lt;xref:System.Version.Parse%2A&gt;</ph> (méthode), à ceci près qu’elle ne lève pas d’exception si la conversion échoue.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>Instead, it returns <ph id="ph1">`false`</ph> if <ph id="ph2">`input`</ph> is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Au lieu de cela, elle retourne <ph id="ph1">`false`</ph> si <ph id="ph2">`input`</ph> a la valeur null, a moins de deux ou plus de quatre composants, a au moins un composant qui n’est pas un entier, qui a au moins un composant qui est inférieur à zéro ou a au moins un composant qui est supérieur à <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>For the parse operation to succeed, the <ph id="ph1">`input`</ph> parameter must be in the following format:</source>
          <target state="translated">Pour l’opération d’analyse aboutisse, la <ph id="ph1">`input`</ph> paramètre doit être au format suivant :</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>where <bpt id="p1">*</bpt>major<ept id="p1">*</ept>, <bpt id="p2">*</bpt>minor<ept id="p2">*</ept>, <bpt id="p3">*</bpt>build<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>revision<ept id="p4">*</ept> are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</source>
          <target state="translated">où <bpt id="p1">*</bpt>majeure<ept id="p1">*</ept>, <bpt id="p2">*</bpt>secondaire<ept id="p2">*</ept>, <bpt id="p3">*</bpt>générer<ept id="p3">*</ept>, et <bpt id="p4">*</bpt>révision<ept id="p4">*</ept> sont les représentations sous forme de chaîne de la version de composants de quatre du nombre : principales numéro de version, numéro de version secondaire, numéro de build et numéro de révision.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>Optional components are shown in square brackets ([ and ]).</source>
          <target state="translated">Composants facultatifs sont affichés entre crochets ([et]).</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>The components must appear in order, and must be separated by periods.</source>
          <target state="translated">Les composants doivent apparaître dans l’ordre et doivent être séparés par des points.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method to parse a number of strings that contain version information.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> méthode d’analyse d’un nombre de chaînes qui contiennent des informations de version.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>