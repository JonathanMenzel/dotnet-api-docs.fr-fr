<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Tuple`3.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a892a759931a6c8c1129221f72863b69f099d998.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a892a759931a6c8c1129221f72863b69f099d998</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The type of the tuple's first component.</source>
          <target state="translated">Type du premier composant du tuple.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The type of the tuple's second component.</source>
          <target state="translated">Type du second composant du tuple.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The type of the tuple's third component.</source>
          <target state="translated">Type du troisième composant du tuple.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Tuple`3">
          <source>Represents a 3-tuple, or triple.</source>
          <target state="translated">Représente un objet de 3 tuples, ou triple.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>A tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">Un tuple est une structure de données qui a un nombre spécifique et une séquence de valeurs.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> class represents a 3-tuple, or triple, which is a tuple that has three components.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> classe représente un objet de 3 tuples, ou triple, qui est un tuple qui a trois composants.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object by calling either the <ph id="ph2">&lt;xref:System.Tuple%603.%23ctor%2A&gt;</ph> constructor or the static <ph id="ph3">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Vous pouvez instancier un <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objet en appelant le <ph id="ph2">&lt;xref:System.Tuple%603.%23ctor%2A&gt;</ph> constructeur ou la méthode statique <ph id="ph3">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>You can retrieve the values of the tuple's components by using the read-only <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> instance properties.</source>
          <target state="translated">Vous pouvez récupérer les valeurs des composants du tuple à l’aide de la lecture seule <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> propriétés d’une instance.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>Tuples are commonly used in four different ways:</source>
          <target state="translated">Tuples sont utilisés communément de quatre manières différentes :</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>To represent a single set of data.</source>
          <target state="translated">Pour représenter un seul jeu de données.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>For example, a tuple can represent a database record, and its components can represent individual fields of the record.</source>
          <target state="translated">Par exemple, un tuple peut représenter un enregistrement de base de données et ses composants peuvent représenter des champs individuels de l’enregistrement.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>To provide easy access to, and manipulation of, a data set.</source>
          <target state="translated">Pour fournir un accès facile aux et la manipulation d’un jeu de données.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that contain the names of students, their average test scores, and the number of tests taken.</source>
          <target state="translated">L’exemple suivant définit un tableau de <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objets qui contiennent les noms des étudiants, leurs scores moyenne du test et le nombre de tests effectuée.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates the mean and standard deviation of the test scores.</source>
          <target state="translated">Le tableau est passé à la <ph id="ph1">`ComputeStatistics`</ph> méthode, qui calcule la moyenne et l’écart type des résultats du test.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>To return multiple values from a method without the use of <ph id="ph1">`out`</ph> parameters (in C#) or <ph id="ph2">`ByRef`</ph> parameters (in Visual Basic).</source>
          <target state="translated">Pour retourner plusieurs valeurs à partir d’une méthode sans utiliser de <ph id="ph1">`out`</ph> (en c#) ou <ph id="ph2">`ByRef`</ph> paramètres (Visual Basic).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>For example, the previous example returns its summary test score statistics in a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object.</source>
          <target state="translated">Par exemple, l’exemple précédent retourne ses statistiques de score de résumé de test dans un <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>To pass multiple values to a method through a single parameter.</source>
          <target state="translated">Pour passer plusieurs valeurs à une méthode via un paramètre unique.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>For example, the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</source>
          <target state="translated">Par exemple, le <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> méthode possède un paramètre unique qui vous permet de fournir une valeur à la méthode que le thread exécute au démarrage.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`3">
          <source>If you supply a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object as the method argument, you can supply the thread’s startup routine with three items of data.</source>
          <target state="translated">Si vous fournissez un <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> de l’objet comme argument de méthode, vous pouvez fournir la routine de démarrage du thread avec trois éléments de données.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>The value of the tuple's first component.</source>
          <target state="translated">Valeur du premier composant du tuple.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>The value of the tuple's second component.</source>
          <target state="translated">Valeur du second composant du tuple.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>The value of the tuple's third component.</source>
          <target state="translated">Valeur du troisième composant du tuple.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>You can also use the static <ph id="ph1">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 3-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated">Vous pouvez également utiliser la méthode statique <ph id="ph1">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> méthode pour instancier un objet de 3 tuples sans devoir spécifier explicitement les types de ses composants.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 3-tuple whose components are of type <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">&lt;xref:System.Double&gt;</ph>, and <ph id="ph4">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType&gt;</ph> méthode pour instancier un objet de 3 tuples dont les composants sont de type <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">&lt;xref:System.Double&gt;</ph>, et <ph id="ph4">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.#ctor(`0,`1,`2)">
          <source>This is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%603.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">Cela est équivalent à l’appel suivant à la <ph id="ph1">&lt;xref:System.Tuple%603.%23ctor%2A&gt;</ph> constructeur de classe.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Objet à comparer avec cette instance.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">Retourne une valeur qui indique si l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actuel est égal à un objet spécifié.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instance actuelle est égale à l'objet spécifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated">Le <ph id="ph1">`obj`</ph> paramètre est considéré comme étant égal à l’instance actuelle dans les conditions suivantes :</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>It is a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object.</source>
          <target state="translated">Il s’agit d’un <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>Its three components are of the same types as the current instance.</source>
          <target state="translated">Ses trois composants sont des mêmes types que l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>Its three components are equal to those of the current instance.</source>
          <target state="translated">Ses trois composants sont égales à celles de l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>Equality is determined by the default object equality comparer for each component.</source>
          <target state="translated">L'égalité est déterminée par le comparateur d'égalité d'objet par défaut pour chaque composant.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method to determine whether any of the objects in an array of <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> objects are equal to one another.</source>
          <target state="translated">L’exemple suivant appelle la <ph id="ph1">&lt;xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> méthode pour déterminer si les objets dans un tableau de <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> objets sont égaux entre eux.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.Equals(System.Object)">
          <source>The output reflects the fact that the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%28System.Object%29&gt;</ph> method returns <ph id="ph2">`true`</ph> when comparing <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects whose components have equal values.</source>
          <target state="translated">La sortie reflète le fait que la <ph id="ph1">&lt;xref:System.Tuple%603.Equals%28System.Object%29&gt;</ph> méthode retourne <ph id="ph2">`true`</ph> lors de la comparaison <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objets dont les composants ont des valeurs égales.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated">Retourne le code de hachage pour l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Code de hachage d'un entier signé 32 bits.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's first component.</source>
          <target state="translated">Obtient la valeur du premier composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's first component.</source>
          <target state="translated">Valeur du premier composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Vous pouvez déterminer dynamiquement le type de la <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> composant de deux manières :</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> property.</source>
          <target state="translated">En appelant le <ph id="ph1">`GetType`</ph> méthode sur la valeur retournée par la <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> object, and retrieving the first element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">En récupérant le <ph id="ph1">&lt;xref:System.Type&gt;</ph> objet qui représente le <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> de l’objet et en extrayant le premier élément du tableau retourné par son <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that contain the names of students, their average test scores, and the number of tests taken.</source>
          <target state="translated">L’exemple suivant définit un tableau de <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objets qui contiennent les noms des étudiants, leurs scores moyenne du test et le nombre de tests effectuée.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</source>
          <target state="translated">Le tableau est passé à la <ph id="ph1">`ComputeStatistics`</ph> (méthode), qui calcule le score moyen, écart type et le nombre de cas à partir desquels les statistiques sont calculées.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>These values are stored in the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object that is returned by the <ph id="ph2">`ComputeStatistics`</ph> method.</source>
          <target state="translated">Ces valeurs sont stockées dans le <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objet qui est retourné par la <ph id="ph2">`ComputeStatistics`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item1">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> property contains the number of cases.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> propriété contient le nombre de cas.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's second component.</source>
          <target state="translated">Obtient la valeur du deuxième composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's second component.</source>
          <target state="translated">Valeur du deuxième composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Vous pouvez déterminer dynamiquement le type de la <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> composant de deux manières :</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> property.</source>
          <target state="translated">En appelant le <ph id="ph1">`GetType`</ph> méthode sur la valeur retournée par la <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">En récupérant le <ph id="ph1">&lt;xref:System.Type&gt;</ph> objet qui représente le <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> de l’objet et en extrayant le deuxième élément du tableau retourné par son <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that contain the names of students, their average test scores, and the number of tests taken.</source>
          <target state="translated">L’exemple suivant définit un tableau de <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objets qui contiennent les noms des étudiants, leurs scores moyenne du test et le nombre de tests effectuée.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</source>
          <target state="translated">Le tableau est passé à la <ph id="ph1">`ComputeStatistics`</ph> (méthode), qui calcule le score moyen, écart type et le nombre de cas à partir desquels les statistiques sont calculées.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>These values are stored in the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object that is returned by the <ph id="ph2">`ComputeStatistics`</ph> method.</source>
          <target state="translated">Ces valeurs sont stockées dans le <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objet qui est retourné par la <ph id="ph2">`ComputeStatistics`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item2">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> property contains the mean test score.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> propriété contient le score de test moyenne.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.Item3">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's third component.</source>
          <target state="translated">Obtient la valeur du troisième composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object's third component.</source>
          <target state="translated">Valeur du troisième composant de l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">Vous pouvez déterminer dynamiquement le type de la <ph id="ph1">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> composant de deux manières :</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value returned by the <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> property.</source>
          <target state="translated">En appelant le <ph id="ph1">`GetType`</ph> méthode sur la valeur retournée par la <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> object, and retrieving the third element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">En récupérant le <ph id="ph1">&lt;xref:System.Type&gt;</ph> objet qui représente le <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> de l’objet et en extrayant le troisième élément du tableau retourné par son <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that contain the names of students, their average test scores, and the number of tests taken.</source>
          <target state="translated">L’exemple suivant définit un tableau de <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objets qui contiennent les noms des étudiants, leurs scores moyenne du test et le nombre de tests effectuée.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</source>
          <target state="translated">Le tableau est passé à la <ph id="ph1">`ComputeStatistics`</ph> (méthode), qui calcule le score moyen, écart type et le nombre de cas à partir desquels les statistiques sont calculées.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>These values are stored in the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object that is returned by the <ph id="ph2">`ComputeStatistics`</ph> method.</source>
          <target state="translated">Ces valeurs sont stockées dans le <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objet qui est retourné par la <ph id="ph2">`ComputeStatistics`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.Item3">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> property contains the standard deviation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> propriété contient l’écart type.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Objet à comparer à l'instance actuelle.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">Un objet qui fournit des règles personnalisées pour la comparaison.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Compare l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou est dans la même position que l'objet spécifié dans l'ordre de tri.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Entier signé qui indique la position relative de cette instance et de <ph id="ph1">&lt;paramref name="other" /&gt;</ph> dans l’ordre de tri, comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valeur</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier négatif</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance précède <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zéro</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance et <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ont la même position dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier positif</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance suit <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Although this method can be called directly, it is most commonly called by collection sorting methods that include <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.</source>
          <target state="translated">Bien que cette méthode peut être appelée directement, elle est généralement appelée par collection de méthodes qui incluent de tri <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> pour classer les membres d’une collection de paramètres.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>For example, it is called by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">Par exemple, elle est appelée par le <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> méthode d’un <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> objet est instancié à l’aide de la <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> méthode est conçue pour une utilisation dans les opérations de tri.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">Il ne doit pas être utilisé lorsque l’objectif principal d’une comparaison est de déterminer si deux objets sont égaux.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour déterminer si deux objets sont égales, appelez le <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that consist of a student's name, mean test score, and number of tests.</source>
          <target state="translated">L’exemple suivant crée un tableau de <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> les objets qui se composent du nom d’un étudiant, note d’examen moyenne et nombre de tests.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> to display the value of each tuple in sorted order.</source>
          <target state="translated">Il affiche le composant de chaque tuple dans le tableau en ordre non trié, trie le tableau, puis appelle <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> pour afficher la valeur de chaque tuple en ordre trié.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To sort the array, the example defines a generic <ph id="ph1">`ScoreComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interface and sorts the <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects in ascending order by the value of their second component rather than their first component.</source>
          <target state="translated">Pour trier le tableau, l’exemple définit un type générique <ph id="ph1">`ScoreComparer`</ph> classe qui implémente le <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interface et trie les <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objets dans l’ordre croissant par la valeur de leur deuxième composant plutôt que leur premier composant.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Notez que l’exemple n’appelle pas directement la <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method for each element in the array.</source>
          <target state="translated">Cette méthode est appelée implicitement par la <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> méthode pour chaque élément du tableau.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> n’est pas un objet <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Objet à comparer avec cette instance.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">Un objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">Retourne une valeur qui indique si l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actif est égal à un objet spécifié selon une méthode de comparaison spécifiée.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instance actuelle est égale à l'objet spécifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation is called only if <ph id="ph2">`other`</ph> is not <ph id="ph3">`null`</ph>, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <ph id="ph4">&lt;xref:System.Tuple%603&gt;</ph> object whose components are of the same types as the current instance.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implémentation est appelée uniquement si <ph id="ph2">`other`</ph> n’est pas <ph id="ph3">`null`</ph>, et si elle peut être casté (en c#) ou convertie (en Visual Basic) en un <ph id="ph4">&lt;xref:System.Tuple%603&gt;</ph> objet dont les composants sont des mêmes types que l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> method first passes the <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> values of the <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects to be compared to the <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> passe en premier (méthode) le <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> les valeurs de la <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objets à comparer à la <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, the method is called again and passed the <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects.</source>
          <target state="translated">Si cet appel de méthode retourne <ph id="ph1">`true`</ph>, la méthode est appelée à nouveau et reçoit le <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> les valeurs des deux <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph> again, the method is called a third time and passed the <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects.</source>
          <target state="translated">Si cet appel de méthode retourne <ph id="ph1">`true`</ph> là encore, la méthode est appelée à une troisième fois et passe le <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> les valeurs des deux <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines an <ph id="ph1">`Item2Comparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interface and changes the way in which <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects are evaluated for equality.</source>
          <target state="translated">L’exemple suivant définit un <ph id="ph1">`Item2Comparer`</ph> classe qui implémente le <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interface et modifie la façon dont <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objets sont évalués pour l’égalité.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The method always returns <ph id="ph1">`true`</ph> when it is passed the <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> property values of two <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objects, and it calls the <ph id="ph4">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> method to evaluate their <ph id="ph5">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> property values.</source>
          <target state="translated">La méthode retourne toujours <ph id="ph1">`true`</ph> lorsqu’il est passé le <ph id="ph2">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph> les valeurs de propriété de deux <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph> objets et il appelle la <ph id="ph4">&lt;xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType&gt;</ph> méthode pour évaluer leur <ph id="ph5">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> valeurs de propriété.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, their <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> property values are passed to the method, which always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Si cet appel de méthode retourne <ph id="ph1">`true`</ph>, leurs <ph id="ph2">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> les valeurs de propriété sont passées à la méthode qui retourne toujours <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>As a result, the method tests for equality based only on the value of the <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> property.</source>
          <target state="translated">Par conséquent, la méthode teste l’égalité basée uniquement sur la valeur de la <ph id="ph1">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The output illustrates the result for a data set of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that record the names, mean test score, and number of tests of students in a class.</source>
          <target state="translated">La sortie illustre le résultat pour un jeu de données de <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objets qui enregistrent les noms, la note d’examen moyenne et le nombre d’étudiants dans une classe.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated">Objet dont la méthode <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> calcule le code de hachage de l'objet <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object by using a specified computation method.</source>
          <target state="translated">Calcule le code de hachage pour l'objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actif à l'aide d'une méthode de calcul spécifiée.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Code de hachage d'un entier signé 32 bits.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The method simply wraps a call to the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">La méthode encapsule un appel à la <ph id="ph1">`comparer`</ph> l’objet <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The algorithm used to compute the hash code should return the same hash code for two <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects that are considered to be equal.</source>
          <target state="translated">L’algorithme utilisé pour calculer le code de hachage doit retourner le même code de hachage pour deux <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> les objets qui sont considérées comme égales.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">Objet à comparer à l'instance actuelle.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">Compare l’objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> actuel à un objet spécifié et renvoie un entier qui indique si l’objet actuel est avant, après ou à la même position que l’objet spécifié dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">Entier signé qui indique la position relative de cette instance et de <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> dans l’ordre de tri, comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valeur</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier négatif</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance précède <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zéro</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance et <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> ont la même position dans l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Entier positif</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Cette instance suit <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.IComparable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>This method provides the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation for the <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> class.</source>
          <target state="translated">Cette méthode fournit le <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implémentation pour la <ph id="ph2">&lt;xref:System.Tuple%603&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, to order the members of a collection.</source>
          <target state="translated">Bien que la méthode peut être appelée directement, elle est généralement appelée par les surcharges par défaut de la collection tels que les méthodes, de tri <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, pour classer les membres d’une collection.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> méthode est conçue pour une utilisation dans les opérations de tri.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">Il ne doit pas être utilisé lorsque l’objectif principal d’une comparaison est de déterminer si deux objets sont égaux.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Pour déterminer si deux objets sont égales, appelez le <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method uses the default object comparer to compare each component.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> méthode utilise le comparateur d’objet par défaut pour comparer chaque composant.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objects whose components consist of a student's name, mean test score, and number of tests.</source>
          <target state="translated">L’exemple suivant crée un tableau de <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> objets dont est composé du nom d’un étudiant, note d’examen moyenne et nombre de tests.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>It displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> to display each tuple in sorted order.</source>
          <target state="translated">Il affiche les composants de chaque tuple dans le tableau en ordre non trié, trie le tableau, puis appelle <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> pour afficher chaque tuple en ordre trié.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The output shows that the array has been sorted by its first component.</source>
          <target state="translated">La sortie montre que le tableau a été trié par son premier composant.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Notez que l’exemple n’appelle pas directement la <ph id="ph1">&lt;xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> method for each element in the array.</source>
          <target state="translated">Cette méthode est appelée implicitement par la <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> méthode pour chaque élément du tableau.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> n’est pas un objet <ph id="ph2">&lt;see cref="T:System.Tuple`3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">Index de l’élément <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 to 2.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> peut être compris entre 0 et 2.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">Obtient la valeur de l’élément <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">Valeur de l’élément <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> à la position spécifiée.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> propriété est une implémentation d’interface explicite.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Pour l’appeler, vous devez effectuer un cast ou convertir les <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> de l’objet à un <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> objet d’interface.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 2.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieur à 0 ou supérieur à 2.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</source>
          <target state="translated">Obtient le nombre d’éléments dans <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>3, the number of elements in a <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated">3, le nombre d’éléments dans un objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> propriété est une implémentation d’interface explicite.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">Pour l’appeler, vous devez effectuer un cast ou convertir les <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> de l’objet à un <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> objet d’interface.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> instance.</source>
          <target state="translated">Retourne une chaîne qui représente la valeur de cette instance <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Tuple`3.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph> object.</source>
          <target state="translated">Représentation sous forme de chaîne de cet objet <ph id="ph1">&lt;see cref="T:System.Tuple`3" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>), where <bpt id="p4">*</bpt>Item1<ept id="p4">*</ept>, <bpt id="p5">*</bpt>Item2<ept id="p5">*</ept>, and <bpt id="p6">*</bpt>Item3<ept id="p6">*</ept> represent the values of the <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> properties, respectively.</source>
          <target state="translated">La chaîne retournée par cette méthode prend la forme (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>), où <bpt id="p4">*</bpt>Item1<ept id="p4">*</ept>, <bpt id="p5">*</bpt>Item2<ept id="p5">*</ept>, et <bpt id="p6">*</bpt>Item3<ept id="p6">*</ept> représentent les valeurs de la <ph id="ph1">&lt;xref:System.Tuple%603.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%603.Item2%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Tuple%603.Item3%2A&gt;</ph> propriétés, respectivement.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.ToString">
          <source>If any of the property values is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si une des valeurs de propriété est <ph id="ph1">`null`</ph>, il est représenté en tant que <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`3.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Tuple%603.ToString%2A&gt;</ph> (méthode).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>