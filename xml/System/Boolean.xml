<Type Name="Boolean" FullName="System.Boolean">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aeb5061f6e9ed3afa6742b7e97c4c2f65d3f7612" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37729200" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit bool extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;bool&gt;, class System.IConvertible, class System.IEquatable`1&lt;bool&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Boolean" />
  <TypeSignature Language="VB.NET" Value="Public Structure Boolean&#xA;Implements IComparable, IComparable(Of Boolean), IConvertible, IEquatable(Of Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public value class Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" />
  <TypeSignature Language="F#" Value="type bool = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d3e23-101">Represents a Boolean (<see langword="true" /> or <see langword="false" />) value.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d3e23-101">Represents a Boolean (<see langword="true" /> or <see langword="false" />) value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-102">Un <xref:System.Boolean> instance peut avoir une des deux valeurs : `true`, ou `false`.</span><span class="sxs-lookup"><span data-stu-id="d3e23-102">A <xref:System.Boolean> instance can have either of two values: `true`, or `false`.</span></span>  
  
 <span data-ttu-id="d3e23-103">Le <xref:System.Boolean> structure fournit des méthodes qui prennent en charge les tâches suivantes :</span><span class="sxs-lookup"><span data-stu-id="d3e23-103">The <xref:System.Boolean> structure provides methods that support the following tasks:</span></span>  
  
-   <span data-ttu-id="d3e23-104">Conversion de valeurs booléennes en chaînes : <xref:System.Boolean.ToString%2A></span><span class="sxs-lookup"><span data-stu-id="d3e23-104">Converting Boolean values to strings: <xref:System.Boolean.ToString%2A></span></span>  
  
-   <span data-ttu-id="d3e23-105">Analyse de chaînes pour les convertir en valeurs booléennes : <xref:System.Boolean.Parse%2A> et <xref:System.Boolean.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="d3e23-105">Parsing strings to convert them to Boolean values: <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A></span></span>  
  
-   <span data-ttu-id="d3e23-106">Comparaison de valeurs : <xref:System.Boolean.CompareTo%2A> et <xref:System.Boolean.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="d3e23-106">Comparing values: <xref:System.Boolean.CompareTo%2A> and <xref:System.Boolean.Equals%2A></span></span>  
  
 <span data-ttu-id="d3e23-107">Les sections suivantes expliquent ces tâches et autres détails d’utilisation :</span><span class="sxs-lookup"><span data-stu-id="d3e23-107">The following sections explain these tasks and other usage details:</span></span>  
  
 <span data-ttu-id="d3e23-108">[Mise en forme des valeurs booléennes](#Formatting) </span><span class="sxs-lookup"><span data-stu-id="d3e23-108">[Formatting Boolean values](#Formatting) </span></span>  
 <span data-ttu-id="d3e23-109">[Conversion de valeurs booléennes](#Converting) </span><span class="sxs-lookup"><span data-stu-id="d3e23-109">[Converting to and from Boolean values](#Converting) </span></span>  
 <span data-ttu-id="d3e23-110">[L’analyse des valeurs booléennes](#Parsing) </span><span class="sxs-lookup"><span data-stu-id="d3e23-110">[Parsing Boolean values](#Parsing) </span></span>  
 <span data-ttu-id="d3e23-111">[Comparaison des valeurs booléennes](#Comparing) </span><span class="sxs-lookup"><span data-stu-id="d3e23-111">[Comparing Boolean values](#Comparing) </span></span>  
 <span data-ttu-id="d3e23-112">[Utilisation des valeurs booléennes en tant que valeurs binaires](#Binary) </span><span class="sxs-lookup"><span data-stu-id="d3e23-112">[Working with Booleans as binary values](#Binary) </span></span>  
 <span data-ttu-id="d3e23-113">[Exécution d’opérations avec des valeurs booléennes](#Operations) </span><span class="sxs-lookup"><span data-stu-id="d3e23-113">[Performing operations with Boolean values](#Operations) </span></span>  
 [<span data-ttu-id="d3e23-114">Valeurs booléennes et l’interopérabilité</span><span class="sxs-lookup"><span data-stu-id="d3e23-114">Booleans and Interop</span></span>](#Interop)  
  
<a name="Formatting"></a>   
## <a name="formatting-boolean-values"></a><span data-ttu-id="d3e23-115">Mise en forme des valeurs booléennes</span><span class="sxs-lookup"><span data-stu-id="d3e23-115">Formatting Boolean values</span></span>  
 <span data-ttu-id="d3e23-116">La représentation sous forme de chaîne d’un <xref:System.Boolean> est soit « True » pour un `true` valeur ou « False » pour un `false` valeur.</span><span class="sxs-lookup"><span data-stu-id="d3e23-116">The string representation of a <xref:System.Boolean> is either "True" for a `true` value or "False" for a `false` value.</span></span> <span data-ttu-id="d3e23-117">La représentation sous forme de chaîne d’un <xref:System.Boolean> valeur est définie en lecture seule <xref:System.Boolean.TrueString> et <xref:System.Boolean.FalseString> champs.</span><span class="sxs-lookup"><span data-stu-id="d3e23-117">The string representation of a <xref:System.Boolean> value is defined by the read-only <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields.</span></span>  
  
 <span data-ttu-id="d3e23-118">Vous utilisez la <xref:System.Boolean.ToString%2A> méthode pour convertir des valeurs booléennes en chaînes.</span><span class="sxs-lookup"><span data-stu-id="d3e23-118">You use the <xref:System.Boolean.ToString%2A> method to convert Boolean values to strings.</span></span> <span data-ttu-id="d3e23-119">La structure booléenne inclut deux <xref:System.Boolean.ToString%2A> surcharges : sans paramètre <xref:System.Boolean.ToString> (méthode) et le <xref:System.Boolean.ToString%28System.IFormatProvider%29> (méthode), qui inclut un paramètre qui contrôle la mise en forme.</span><span class="sxs-lookup"><span data-stu-id="d3e23-119">The Boolean structure includes two <xref:System.Boolean.ToString%2A> overloads: the parameterless <xref:System.Boolean.ToString> method and the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method, which includes a parameter that controls formatting.</span></span> <span data-ttu-id="d3e23-120">Toutefois, étant donné que ce paramètre est ignoré, les deux surcharges produisent des chaînes identiques.</span><span class="sxs-lookup"><span data-stu-id="d3e23-120">However, because this parameter is ignored, the two overloads produce identical strings.</span></span> <span data-ttu-id="d3e23-121">Le <xref:System.Boolean.ToString%28System.IFormatProvider%29> méthode ne prend pas en charge la mise en forme dépendante de la culture.</span><span class="sxs-lookup"><span data-stu-id="d3e23-121">The <xref:System.Boolean.ToString%28System.IFormatProvider%29> method does not support culture-sensitive formatting.</span></span>  
  
 <span data-ttu-id="d3e23-122">L’exemple suivant illustre la mise en forme avec la <xref:System.Boolean.ToString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-122">The following example illustrates formatting with the <xref:System.Boolean.ToString%2A> method.</span></span> <span data-ttu-id="d3e23-123">Notez que l’exemple utilise le [mise en forme composite](~/docs/standard/base-types/composite-formatting.md) fonctionnalité, donc la <xref:System.Boolean.ToString%2A> méthode est appelée implicitement.</span><span class="sxs-lookup"><span data-stu-id="d3e23-123">Note that the example uses the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature, so the <xref:System.Boolean.ToString%2A> method is called implicitly.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring1.cs#3)]
 [!code-vb[System.Boolean.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring1.vb#3)]  
  
 <span data-ttu-id="d3e23-124">Étant donné que le <xref:System.Boolean> structure peut avoir uniquement deux valeurs, il est facile d’ajouter la mise en forme personnalisée.</span><span class="sxs-lookup"><span data-stu-id="d3e23-124">Because the <xref:System.Boolean> structure can have only two values, it is easy to add custom formatting.</span></span> <span data-ttu-id="d3e23-125">Pour la simple mise en forme personnalisée dans l’autres chaîne littéraux sont substitués pour « True » et « False », vous pouvez utiliser des fonctionnalités de l’évaluation conditionnelle pris en charge par votre langage, tels que le [opérateur conditionnel](~/docs/csharp/language-reference/operators/conditional-operator.md) en c# ou la [Si opérateur](~/docs/visual-basic/language-reference/operators/if-operator.md) en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d3e23-125">For simple custom formatting in which other string literals are substituted for "True" and "False", you can use any conditional evaluation feature supported by your language, such as the [conditional operator](~/docs/csharp/language-reference/operators/conditional-operator.md) in C# or the [If operator](~/docs/visual-basic/language-reference/operators/if-operator.md) in Visual Basic.</span></span> <span data-ttu-id="d3e23-126">L’exemple suivant utilise cette technique pour mettre en forme <xref:System.Boolean> valeurs en tant que « Oui » et « No » plutôt que « True » et « False ».</span><span class="sxs-lookup"><span data-stu-id="d3e23-126">The following example uses this technique to format <xref:System.Boolean> values as "Yes" and "No" rather than "True" and "False".</span></span>  
  
 [!code-csharp[System.Boolean.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring2.cs#4)]
 [!code-vb[System.Boolean.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring2.vb#4)]  
  
 <span data-ttu-id="d3e23-127">Pour les opérations de mise en forme personnalisées plus complexes, y compris le formatage de la culture, vous pouvez appeler la <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> méthode et fournir un <xref:System.ICustomFormatter> implémentation.</span><span class="sxs-lookup"><span data-stu-id="d3e23-127">For more complex custom formatting operations, including culture-sensitive formatting, you can call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method and provide an <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="d3e23-128">L’exemple suivant implémente la <xref:System.ICustomFormatter> et <xref:System.IFormatProvider> interfaces pour fournir des chaînes booléennes dépendante de la culture pour l’anglais (États-Unis), Français (France) et les cultures russe (Russie).</span><span class="sxs-lookup"><span data-stu-id="d3e23-128">The following example implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/format3.cs#5)]
 [!code-vb[System.Boolean.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/format3.vb#5)]  
  
 <span data-ttu-id="d3e23-129">Si vous le souhaitez, vous pouvez utiliser [fichiers de ressources](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) pour définir les chaînes booléennes spécifiques à la culture.</span><span class="sxs-lookup"><span data-stu-id="d3e23-129">Optionally, you can use [resource files](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) to define culture-specific Boolean strings.</span></span>  
  
<a name="Converting"></a>   
## <a name="converting-to-and-from-boolean-values"></a><span data-ttu-id="d3e23-130">Conversion de valeurs booléennes</span><span class="sxs-lookup"><span data-stu-id="d3e23-130">Converting to and from Boolean values</span></span>  
 <span data-ttu-id="d3e23-131">Le <xref:System.Boolean> structure implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="d3e23-131">The <xref:System.Boolean> structure implements the <xref:System.IConvertible> interface.</span></span>  <span data-ttu-id="d3e23-132">Par conséquent, vous pouvez utiliser la <xref:System.Convert> classe pour effectuer des conversions entre un <xref:System.Boolean> valeur et tout autre type primitif dans le .NET Framework, ou vous peuvent appeler la <xref:System.Boolean> des implémentations explicites de la structure.</span><span class="sxs-lookup"><span data-stu-id="d3e23-132">As a result, you can use the <xref:System.Convert> class to perform conversions between a <xref:System.Boolean> value and any other primitive type in the .NET Framework, or you can call the <xref:System.Boolean> structure's explicit implementations.</span></span> <span data-ttu-id="d3e23-133">Toutefois, les conversions entre un <xref:System.Boolean> et ce qui suit types ne étant pas prises en charge, les méthodes de conversion correspondante lèvent une <xref:System.InvalidCastException> exception :</span><span class="sxs-lookup"><span data-stu-id="d3e23-133">However, conversions between a <xref:System.Boolean> and the following types are not supported, so the corresponding conversion methods throw an <xref:System.InvalidCastException> exception:</span></span>  
  
-   <span data-ttu-id="d3e23-134">Conversion entre <xref:System.Boolean> et <xref:System.Char> (le <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType> et <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> méthodes)</span><span class="sxs-lookup"><span data-stu-id="d3e23-134">Conversion between <xref:System.Boolean> and <xref:System.Char> (the <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType> and <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>  
  
-   <span data-ttu-id="d3e23-135">Conversion entre <xref:System.Boolean> et <xref:System.DateTime> (le <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> et <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType> méthodes)</span><span class="sxs-lookup"><span data-stu-id="d3e23-135">Conversion between <xref:System.Boolean> and <xref:System.DateTime> (the <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> and <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>  
  
 <span data-ttu-id="d3e23-136">Toutes les conversions à partir des nombres intégraux ou à virgule flottante en valeurs booléennes convertissent les valeurs zéro `true` et des valeurs zéro pour `false`.</span><span class="sxs-lookup"><span data-stu-id="d3e23-136">All conversions from integral or floating-point numbers to Boolean values convert non-zero values to `true` and zero values to `false`.</span></span>  <span data-ttu-id="d3e23-137">L’exemple suivant illustre cela en appelant les surcharges sélectionnés de la <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="d3e23-137">The following example illustrates this by calling selected overloads of the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion1.cs#6)]
 [!code-vb[System.Boolean.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion1.vb#6)]  
  
 <span data-ttu-id="d3e23-138">Lors de la conversion à partir de valeurs à virgule flottante en valeurs booléennes, les méthodes de conversion effectuent une comparaison exacte à zéro.</span><span class="sxs-lookup"><span data-stu-id="d3e23-138">When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero.</span></span> <span data-ttu-id="d3e23-139">Si la valeur à virgule flottante a perdu la précision, le résultat peut être inattendu.</span><span class="sxs-lookup"><span data-stu-id="d3e23-139">If the floating-point value has lost precision, the result can be unexpected.</span></span> <span data-ttu-id="d3e23-140">Ceci est illustré dans l’exemple suivant, dans lequel un <xref:System.Double> variable dont la valeur doit être égal à zéro est convertie en valeur booléenne.</span><span class="sxs-lookup"><span data-stu-id="d3e23-140">This is illustrated in the following example, in which a <xref:System.Double> variable whose value should be zero is converted to a Boolean value.</span></span> <span data-ttu-id="d3e23-141">Comme le montre l’exemple, le résultat est `true` étant donné que les ajouts de 0,2 ont entraîné une perte de précision.</span><span class="sxs-lookup"><span data-stu-id="d3e23-141">As the example shows, the result is `true` because repeated additions of 0.2 have resulted in a loss of precision.</span></span>  
  
 <span data-ttu-id="d3e23-142">Lors de la conversion à partir de la valeur booléenne en valeurs numériques, les méthodes de conversion de la <xref:System.Convert> classe convert `true` 1 et `false` à 0.</span><span class="sxs-lookup"><span data-stu-id="d3e23-142">When converting from Boolean to numeric values, the conversion methods of the <xref:System.Convert> class convert `true` to 1 and `false` to 0.</span></span> <span data-ttu-id="d3e23-143">Toutefois, les fonctions de conversion de Visual Basic convertissent `true` et soit 255 (pour les conversions <xref:System.Byte> valeurs) ou -1 (pour toutes les autres conversions numériques).</span><span class="sxs-lookup"><span data-stu-id="d3e23-143">However, Visual Basic conversion functions convert `true` to either 255 (for conversions to <xref:System.Byte> values) or -1 (for all other numeric conversions).</span></span> <span data-ttu-id="d3e23-144">L’exemple suivant convertit `true` en valeurs numériques à l’aide un <xref:System.Convert> (méthode) et, dans le cas de l’exemple Visual Basic, à l’aide de l’opérateur de conversion de Visual Basic de langage propre.</span><span class="sxs-lookup"><span data-stu-id="d3e23-144">The following example converts `true` to numeric values by using a <xref:System.Convert> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion3.cs#8)]
 [!code-vb[System.Boolean.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion3.vb#8)]  
  
 <span data-ttu-id="d3e23-145">Pour les conversions entre <xref:System.Boolean> pour les valeurs de chaîne, consultez la [mise en forme des valeurs booléennes](#Formatting) section.</span><span class="sxs-lookup"><span data-stu-id="d3e23-145">For conversions from <xref:System.Boolean> to string values, see the [Formatting Boolean Values](#Formatting) section.</span></span> <span data-ttu-id="d3e23-146">Pour les conversions de chaînes à <xref:System.Boolean> valeurs, consultez le [l’analyse des valeurs booléennes](#Parsing) section.</span><span class="sxs-lookup"><span data-stu-id="d3e23-146">For conversions from strings to <xref:System.Boolean> values, see the [Parsing Boolean Values](#Parsing) section.</span></span>  
  
<a name="Parsing"></a>   
## <a name="parsing-boolean-values"></a><span data-ttu-id="d3e23-147">L’analyse des valeurs booléennes</span><span class="sxs-lookup"><span data-stu-id="d3e23-147">Parsing Boolean values</span></span>  
 <span data-ttu-id="d3e23-148">Le <xref:System.Boolean> structure inclut deux méthodes d’analyse statiques, <xref:System.Boolean.Parse%2A> et <xref:System.Boolean.TryParse%2A>, qui convertir une chaîne en valeur booléenne.</span><span class="sxs-lookup"><span data-stu-id="d3e23-148">The <xref:System.Boolean> structure includes two static parsing methods, <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>, that convert a string to a Boolean value.</span></span> <span data-ttu-id="d3e23-149">La représentation sous forme de chaîne d’une valeur booléenne est définie par les équivalents de non-respect de la casse des valeurs de la <xref:System.Boolean.TrueString> et <xref:System.Boolean.FalseString> champs, qui sont « True » et « False », respectivement.</span><span class="sxs-lookup"><span data-stu-id="d3e23-149">The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields, which are "True" and "False", respectively.</span></span> <span data-ttu-id="d3e23-150">En d’autres termes, les chaînes uniquement analyser avec succès sont « True », « False », « true », « false » ou certains équivalent à casse mixte.</span><span class="sxs-lookup"><span data-stu-id="d3e23-150">In other words, the only strings that parse successfully are "True", "False", "true", "false", or some mixed-case equivalent.</span></span> <span data-ttu-id="d3e23-151">Vous ne pouvez pas analyser correctement les chaînes numériques telles que « 0 » ou « 1 ».</span><span class="sxs-lookup"><span data-stu-id="d3e23-151">You cannot successfully parse numeric strings such as "0" or "1".</span></span> <span data-ttu-id="d3e23-152">Les espaces blancs ou de fin ne sont pas considérés lors de l’exécution de la comparaison de chaînes.</span><span class="sxs-lookup"><span data-stu-id="d3e23-152">Leading or trailing white-space characters are not considered when performing the string comparison.</span></span>  
  
 <span data-ttu-id="d3e23-153">L’exemple suivant utilise le <xref:System.Boolean.Parse%2A> et <xref:System.Boolean.TryParse%2A> méthodes permettant d’analyser un nombre de chaînes.</span><span class="sxs-lookup"><span data-stu-id="d3e23-153">The following example uses the <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A> methods to parse a number of strings.</span></span> <span data-ttu-id="d3e23-154">Notez que seuls les équivalents de non-respect de la casse de « True » et « False » peuvent être analysées avec succès.</span><span class="sxs-lookup"><span data-stu-id="d3e23-154">Note that only the case-insensitive equivalents of "True" and "False" can be successfully parsed.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse2.cs#2)]
 [!code-vb[System.Boolean.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse2.vb#2)]  
  
 <span data-ttu-id="d3e23-155">Si vous programmez en Visual Basic, vous pouvez utiliser le `CBool` fonction pour convertir la représentation sous forme de chaîne d’un nombre en une valeur booléenne.</span><span class="sxs-lookup"><span data-stu-id="d3e23-155">If you are programming in Visual Basic, you can use the `CBool` function to convert the string representation of a number to a Boolean value.</span></span> <span data-ttu-id="d3e23-156">« 0 » est convertie en `false`, et la représentation sous forme de chaîne de n’importe quelle valeur différente de zéro est convertie en `true`.</span><span class="sxs-lookup"><span data-stu-id="d3e23-156">"0" is converted to `false`, and the string representation of any non-zero value is converted to `true`.</span></span> <span data-ttu-id="d3e23-157">Si vous programmez pas dans Visual Basic, vous devez convertir votre chaîne numérique à un nombre avant de le convertir en une valeur booléenne.</span><span class="sxs-lookup"><span data-stu-id="d3e23-157">If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean.</span></span> <span data-ttu-id="d3e23-158">L’exemple suivant illustre cela en convertissant un tableau d’entiers en valeurs booléennes.</span><span class="sxs-lookup"><span data-stu-id="d3e23-158">The following example illustrates this by converting an array of integers to Boolean values.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse3.cs#9)]
 [!code-vb[System.Boolean.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse3.vb#9)]  
  
<a name="Comparing"></a>   
## <a name="comparing-boolean-values"></a><span data-ttu-id="d3e23-159">Comparaison des valeurs booléennes</span><span class="sxs-lookup"><span data-stu-id="d3e23-159">Comparing Boolean values</span></span>  
 <span data-ttu-id="d3e23-160">Étant donné que les valeurs booléennes sont soit `true` ou `false`, il est recommandé d’appeler explicitement la <xref:System.Boolean.CompareTo%2A> (méthode), qui indique si une instance est supérieure à, inférieur à, ou égal à une valeur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="d3e23-160">Because Boolean values are either `true` or `false`, there is little reason to explicitly call the <xref:System.Boolean.CompareTo%2A> method, which indicates whether an instance is greater than, less than, or equal to a specified value.</span></span> <span data-ttu-id="d3e23-161">En règle générale, pour comparer deux variables booléennes, vous appelez le <xref:System.Boolean.Equals%2A> méthode ou utiliser l’opérateur d’égalité de votre langage.</span><span class="sxs-lookup"><span data-stu-id="d3e23-161">Typically, to compare two Boolean variables, you call the <xref:System.Boolean.Equals%2A> method or use your language's equality operator.</span></span>  
  
 <span data-ttu-id="d3e23-162">Toutefois, lorsque vous souhaitez comparer une variable booléenne avec la valeur booléenne littérale `true` ou `false`, il n’est pas nécessaire d’effectuer une comparaison explicite, car le résultat de l’évaluation d’une valeur booléenne est cette valeur booléenne.</span><span class="sxs-lookup"><span data-stu-id="d3e23-162">However, when you want to compare a Boolean variable with the literal Boolean value `true` or `false`, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value.</span></span> <span data-ttu-id="d3e23-163">Par exemple, les expressions</span><span class="sxs-lookup"><span data-stu-id="d3e23-163">For example, the expressions</span></span>  
  
 [!code-csharp[System.Boolean.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#12)]
 [!code-vb[System.Boolean.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#12)]  
  
 <span data-ttu-id="d3e23-164">et</span><span class="sxs-lookup"><span data-stu-id="d3e23-164">and</span></span>  
  
 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  
  
 <span data-ttu-id="d3e23-165">sont équivalents, mais la seconde est plus compact.</span><span class="sxs-lookup"><span data-stu-id="d3e23-165">are equivalent, but the second is more compact.</span></span> <span data-ttu-id="d3e23-166">Toutefois, ces deux techniques offrent des performances comparables.</span><span class="sxs-lookup"><span data-stu-id="d3e23-166">However, both techniques offer comparable performance.</span></span>  
  
<a name="Binary"></a>   
## <a name="working-with-booleans-as-binary-values"></a><span data-ttu-id="d3e23-167">Utilisation des valeurs booléennes en tant que valeurs binaires</span><span class="sxs-lookup"><span data-stu-id="d3e23-167">Working with Booleans as binary values</span></span>  
 <span data-ttu-id="d3e23-168">Valeur booléenne occupe un seul octet de mémoire, comme le montre l’exemple c# suivant.</span><span class="sxs-lookup"><span data-stu-id="d3e23-168">A Boolean value occupies one byte of memory, as the following C# example shows.</span></span> <span data-ttu-id="d3e23-169">L’exemple doit être compilé avec le `/unsafe` basculer.</span><span class="sxs-lookup"><span data-stu-id="d3e23-169">The example must be compiled with the `/unsafe` switch.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/size1.cs#14)]  
  
 <span data-ttu-id="d3e23-170">Bit de poids faible de l’octet est utilisé pour représenter sa valeur.</span><span class="sxs-lookup"><span data-stu-id="d3e23-170">The byte's low-order bit is used to represent its value.</span></span> <span data-ttu-id="d3e23-171">Représente une valeur de 1 `true`; la valeur 0 représente `false`.</span><span class="sxs-lookup"><span data-stu-id="d3e23-171">A value of 1 represents `true`; a value of 0 represents `false`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="d3e23-172">Vous pouvez utiliser le <xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> structure pour travailler sur des jeux de valeurs booléennes.</span><span class="sxs-lookup"><span data-stu-id="d3e23-172">You can use the <xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> structure to work with sets of Boolean values.</span></span>  
  
 <span data-ttu-id="d3e23-173">Vous pouvez convertir une valeur booléenne à sa représentation sous forme binaire en appelant le <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-173">You can convert a Boolean value to its binary representation by calling the <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d3e23-174">La méthode retourne un tableau d’octets avec un seul élément.</span><span class="sxs-lookup"><span data-stu-id="d3e23-174">The method returns a byte array with a single element.</span></span> <span data-ttu-id="d3e23-175">Pour restaurer une valeur booléenne à partir de sa représentation sous forme binaire, vous pouvez appeler la <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-175">To restore a Boolean value from its binary representation, you can call the <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d3e23-176">L’exemple suivant appelle la <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> méthode pour convertir une valeur booléenne à sa représentation binaire et les affiche les bits individuels de la valeur et appelle ensuite la <xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType> méthode pour restaurer la valeur à partir de sa représentation sous forme binaire.</span><span class="sxs-lookup"><span data-stu-id="d3e23-176">The following example calls the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType> method to restore the value from its binary representation.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/binary1.cs#1)]
 [!code-vb[System.Boolean.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/binary1.vb#1)]  
  
<a name="Operations"></a>   
## <a name="performing-operations-with-boolean-values"></a><span data-ttu-id="d3e23-177">Exécution d’opérations avec des valeurs booléennes</span><span class="sxs-lookup"><span data-stu-id="d3e23-177">Performing operations with Boolean values</span></span>  
 <span data-ttu-id="d3e23-178">Cette section illustre les valeurs booléennes comment sont utilisées dans les applications.</span><span class="sxs-lookup"><span data-stu-id="d3e23-178">This section illustrates how Boolean values are used in apps.</span></span> <span data-ttu-id="d3e23-179">La première section décrit son utilisation comme un indicateur.</span><span class="sxs-lookup"><span data-stu-id="d3e23-179">The first section discusses its use as a flag.</span></span> <span data-ttu-id="d3e23-180">Le second illustre son utilisation pour les opérations arithmétiques.</span><span class="sxs-lookup"><span data-stu-id="d3e23-180">The second illustrates its use for arithmetic operations.</span></span>  
  
### <a name="boolean-values-as-flags"></a><span data-ttu-id="d3e23-181">Valeurs booléennes en tant qu’indicateurs</span><span class="sxs-lookup"><span data-stu-id="d3e23-181">Boolean values as flags</span></span>  
 <span data-ttu-id="d3e23-182">Variables booléennes sont généralement utilisés comme indicateurs, pour signaler la présence ou l’absence d’une condition.</span><span class="sxs-lookup"><span data-stu-id="d3e23-182">Boolean variables are most commonly used as flags, to signal the presence or absence of some condition.</span></span> <span data-ttu-id="d3e23-183">Par exemple, dans le <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> (méthode), le dernier paramètre, `ignoreCase`, est un indicateur qui indique si la comparaison de deux chaînes respecte la casse (`ignoreCase` est `true`) ou le respect de la casse (`ignoreCase` est `false`).</span><span class="sxs-lookup"><span data-stu-id="d3e23-183">For example, in the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> method, the final parameter, `ignoreCase`, is a flag that indicates whether the comparison of two strings is case-insensitive (`ignoreCase` is `true`) or case-sensitive (`ignoreCase` is `false`).</span></span> <span data-ttu-id="d3e23-184">La valeur de l’indicateur peut être évaluée dans une instruction conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="d3e23-184">The value of the flag can then be evaluated in a conditional statement.</span></span>  
  
 <span data-ttu-id="d3e23-185">L’exemple suivant utilise une application de console simple pour illustrer l’utilisation de variables booléennes sous forme d’indicateurs.</span><span class="sxs-lookup"><span data-stu-id="d3e23-185">The following example uses a simple console app to illustrate the use of Boolean variables as flags.</span></span> <span data-ttu-id="d3e23-186">L’application accepte des paramètres de ligne de commande qui permettent la sortie d’être redirigé vers un fichier spécifié (la `/f` basculer), et qui permettent la sortie à envoyer à un fichier spécifié et à la console (le `/b` basculer).</span><span class="sxs-lookup"><span data-stu-id="d3e23-186">The app accepts command-line parameters that enable output to be redirected to a specified file (the `/f` switch), and that enable output to be sent both to a specified file and to the console (the `/b` switch).</span></span> <span data-ttu-id="d3e23-187">L’application définit un indicateur nommé `isRedirected` pour indiquer si la sortie doit être envoyés vers un fichier, et un indicateur nommé `isBoth` pour indiquer que la sortie doit être envoyée à la console.</span><span class="sxs-lookup"><span data-stu-id="d3e23-187">The app defines a flag named `isRedirected` to indicate whether output is to be sent to a file, and a flag named `isBoth` to indicate that output should be sent to the console.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#10)]
 [!code-vb[System.Boolean.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#10)]  
  
### <a name="booleans-and-arithmetic-operations"></a><span data-ttu-id="d3e23-188">Valeurs booléennes et des opérations arithmétiques</span><span class="sxs-lookup"><span data-stu-id="d3e23-188">Booleans and arithmetic operations</span></span>  
 <span data-ttu-id="d3e23-189">Une valeur booléenne est parfois utilisée pour indiquer la présence d’une condition qui déclenche un calcul mathématique.</span><span class="sxs-lookup"><span data-stu-id="d3e23-189">A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation.</span></span> <span data-ttu-id="d3e23-190">Par exemple, un `hasShippingCharge` variable peut servir d’un indicateur pour indiquer s’il faut ajouter les frais d’expédition à un montant de facture.</span><span class="sxs-lookup"><span data-stu-id="d3e23-190">For example, a `hasShippingCharge` variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.</span></span>  
  
 <span data-ttu-id="d3e23-191">Car une opération avec un `false` valeur n’a aucun effet sur le résultat d’une opération, il n’est pas nécessaire de convertir la valeur booléenne en valeur intégrale à utiliser dans l’opération mathématique.</span><span class="sxs-lookup"><span data-stu-id="d3e23-191">Because an operation with a `false` value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation.</span></span> <span data-ttu-id="d3e23-192">Au lieu de cela, vous pouvez utiliser une logique conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="d3e23-192">Instead, you can use conditional logic.</span></span>  
  
 <span data-ttu-id="d3e23-193">L’exemple suivant calcule un montant qui se compose d’un sous-total, les frais d’expédition et une facturation de service facultative.</span><span class="sxs-lookup"><span data-stu-id="d3e23-193">The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge.</span></span> <span data-ttu-id="d3e23-194">Le `hasServiceCharge` variable détermine si les frais de service est appliquée.</span><span class="sxs-lookup"><span data-stu-id="d3e23-194">The `hasServiceCharge` variable determines whether the service charge is applied.</span></span> <span data-ttu-id="d3e23-195">Au lieu de la conversion `hasServiceCharge` à une valeur numérique et en le multipliant par le montant des frais de service, l’exemple utilise une logique conditionnelle pour ajouter le montant des frais de service s’il n’est applicable.</span><span class="sxs-lookup"><span data-stu-id="d3e23-195">Instead of converting `hasServiceCharge` to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  
  
<a name="Interop"></a>   
### <a name="booleans-and-interop"></a><span data-ttu-id="d3e23-196">Valeurs booléennes et l’interopérabilité</span><span class="sxs-lookup"><span data-stu-id="d3e23-196">Booleans and interop</span></span>  
 <span data-ttu-id="d3e23-197">Pendant le marshaling des types de données de base vers COM est généralement simple, le <xref:System.Boolean> type de données est une exception.</span><span class="sxs-lookup"><span data-stu-id="d3e23-197">While marshaling base data types to COM is generally straightforward, the <xref:System.Boolean> data type is an exception.</span></span> <span data-ttu-id="d3e23-198">Vous pouvez appliquer le <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribut pour marshaler la <xref:System.Boolean> type à la représentation suivante :</span><span class="sxs-lookup"><span data-stu-id="d3e23-198">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to marshal the <xref:System.Boolean> type to any of the following representations:</span></span>  
  
|<span data-ttu-id="d3e23-199">Type d'énumération</span><span class="sxs-lookup"><span data-stu-id="d3e23-199">Enumeration type</span></span>|<span data-ttu-id="d3e23-200">Format non managé</span><span class="sxs-lookup"><span data-stu-id="d3e23-200">Unmanaged format</span></span>|  
|----------------------|----------------------|  
|<xref:System.Runtime.InteropServices.UnmanagedType.Bool?displayProperty=nameWithType>|<span data-ttu-id="d3e23-201">Une valeur d’entier de 4 octets, où toute valeur différente de zéro représente `true` et 0 représente `false`.</span><span class="sxs-lookup"><span data-stu-id="d3e23-201">A 4-byte integer value, where any nonzero value represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="d3e23-202">Il s’agit du format par défaut d’un <xref:System.Boolean> champ dans une structure et d’un <xref:System.Boolean> paramètre dans la plateforme appeler les appels.</span><span class="sxs-lookup"><span data-stu-id="d3e23-202">This is the default format of a <xref:System.Boolean> field in a structure and of a <xref:System.Boolean> parameter in platform invoke calls.</span></span>|  
|<xref:System.Runtime.InteropServices.UnmanagedType.U1?displayProperty=nameWithType>|<span data-ttu-id="d3e23-203">Une valeur d’entier de 1 octet, où 1 représente `true` et 0 représente `false`.</span><span class="sxs-lookup"><span data-stu-id="d3e23-203">A 1-byte integer value, where the 1 represents `true` and 0 represents `false`.</span></span>|  
|<xref:System.Runtime.InteropServices.UnmanagedType.VariantBool?displayProperty=nameWithType>|<span data-ttu-id="d3e23-204">Une valeur d’entier de 2 octets, où -1 représente `true` et 0 représente `false`.</span><span class="sxs-lookup"><span data-stu-id="d3e23-204">A 2-byte integer value, where -1 represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="d3e23-205">Il s’agit du format par défaut d’un <xref:System.Boolean> paramètre dans les appels COM interop.</span><span class="sxs-lookup"><span data-stu-id="d3e23-205">This is the default format of a <xref:System.Boolean> parameter in COM interop calls.</span></span>|  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="d3e23-206">Tous les membres de ce type sont thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d3e23-206">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="d3e23-207">Les membres qui semblent modifier l’état de l’instance retournent en fait une nouvelle instance initialisée avec la nouvelle valeur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d3e23-207">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="d3e23-208">Comme avec tout autre type, la lecture et écriture à une variable partagée qui contient une instance de ce type doivent être protégées par un verrou pour garantir la sécurité des threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d3e23-208">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3e23-209">Compares this instance to a specified object or <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-209">Compares this instance to a specified object or <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(bool value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : bool -&gt; int&#xA;override this.CompareTo : bool -&gt; int" Usage="bool.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d3e23-210">A <see cref="T:System.Boolean" /> object to compare to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-210">A <see cref="T:System.Boolean" /> object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-211">Compares this instance to a specified <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-211">Compares this instance to a specified <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-212">A signed integer that indicates the relative values of this instance and <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-212">A signed integer that indicates the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="d3e23-213">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> This instance is <see langword="false" /> and <paramref name="value" /> is <see langword="true" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This instance and <paramref name="value" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This instance is <see langword="true" /> and <paramref name="value" /> is <see langword="false" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-213">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is <see langword="false" /> and <paramref name="value" /> is <see langword="true" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance and <paramref name="value" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is <see langword="true" /> and <paramref name="value" /> is <see langword="false" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-214">Cette méthode implémente la <xref:System.IComparable%601?displayProperty=nameWithType> interface et effectue légèrement meilleures que le <xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType> (méthode), car il n’a pas à convertir le `value` paramètre à un objet.</span><span class="sxs-lookup"><span data-stu-id="d3e23-214">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="d3e23-215">Si `value` comporte moins de bits (est plus restreint) que le type d’instance, certains langages de programmation procèdent à une conversion étendue implicite qui transforme la valeur du paramètre en valeur possédant plus de bits.</span><span class="sxs-lookup"><span data-stu-id="d3e23-215">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="d3e23-216">Par exemple, supposons que le type d’instance est <xref:System.Int32> et le type de paramètre est <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-216">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="d3e23-217">Le compilateur Microsoft c# génère des instructions pour représenter la valeur du paramètre comme un <xref:System.Int32> de l’objet, puis génère un <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> méthode à comparer le <xref:System.Int32> représentation sous forme de l’instance et le paramètre.</span><span class="sxs-lookup"><span data-stu-id="d3e23-217">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="d3e23-218">Consultez la documentation de votre langage de programmation pour déterminer si son compilateur effectue des conversions étendues implicites sur les types numériques.</span><span class="sxs-lookup"><span data-stu-id="d3e23-218">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3e23-219">L’exemple de code suivant montre des versions génériques et de la <xref:System.Boolean.CompareTo%2A> méthode pour plusieurs types valeur et référence.</span><span class="sxs-lookup"><span data-stu-id="d3e23-219">The following code example demonstrates generic and nongeneric versions of the <xref:System.Boolean.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.CompareTo(System.Object)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="bool.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="d3e23-220">An object to compare to this instance, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-220">An object to compare to this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-221">Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-221">Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-222">A signed integer that indicates the relative order of this instance and <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-222">A signed integer that indicates the relative order of this instance and <paramref name="obj" />.</span>
          </span>
          <span data-ttu-id="d3e23-223">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> This instance is <see langword="false" /> and <paramref name="obj" /> is <see langword="true" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This instance and <paramref name="obj" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This instance is <see langword="true" /> and <paramref name="obj" /> is <see langword="false" />.  -or-  <paramref name="obj" /> is <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-223">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is <see langword="false" /> and <paramref name="obj" /> is <see langword="true" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance and <paramref name="obj" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is <see langword="true" /> and <paramref name="obj" /> is <see langword="false" />.  -or-  <paramref name="obj" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-224">`obj` doit être `null` ou une instance de `Boolean`; sinon, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="d3e23-224">`obj` must be `null` or an instance of `Boolean`; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="d3e23-225">Cette méthode implémente la <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="d3e23-225">This method implements the <xref:System.IComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d3e23-226">
            <paramref name="obj" /> is not a <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-226">
              <paramref name="obj" /> is not a <see cref="T:System.Boolean" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Boolean.CompareTo(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3e23-227">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-227">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (bool obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(bool obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(bool obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : bool -&gt; bool" Usage="bool.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="d3e23-228">A <see cref="T:System.Boolean" /> value to compare to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-228">A <see cref="T:System.Boolean" /> value to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-229">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Boolean" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-229">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Boolean" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-230">
            <see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-230">
              <see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-231">Cette méthode implémente la <xref:System.IEquatable%601?displayProperty=nameWithType> interface et effectue légèrement meilleures que <xref:System.Boolean.Equals%2A> , car il n’a pas à convertir le `obj` paramètre à un objet.</span><span class="sxs-lookup"><span data-stu-id="d3e23-231">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Boolean.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Object)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bool.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="d3e23-232">An object to compare to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-232">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-233">Returns a value indicating whether this instance is equal to a specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-233">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-234">
            <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Boolean" /> and has the same value as this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-234">
              <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Boolean" /> and has the same value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-235">Cette méthode remplace <xref:System.Object.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-235">This method overrides <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="FalseString">
      <MemberSignature Language="C#" Value="public static readonly string FalseString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string FalseString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.FalseString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FalseString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ FalseString;" />
      <MemberSignature Language="F#" Value=" staticval mutable FalseString : string" Usage="System.bool.FalseString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d3e23-236">Represents the Boolean value <see langword="false" /> as a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-236">Represents the Boolean value <see langword="false" /> as a string.</span>
          </span>
          <span data-ttu-id="d3e23-237">This field is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-237">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-238">Ce champ est égal à la chaîne « False ».</span><span class="sxs-lookup"><span data-stu-id="d3e23-238">This field is equal to the string "False".</span></span>  
  
 <span data-ttu-id="d3e23-239">Le <xref:System.Boolean.FalseString> propriété définit la représentation sous forme de chaîne d’un `False` <xref:System.Boolean> valeur dans la mise en forme et d’opérations d’analyse.</span><span class="sxs-lookup"><span data-stu-id="d3e23-239">The <xref:System.Boolean.FalseString> property defines the string representation of a `False` <xref:System.Boolean> value in formatting and parsing operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.TrueString" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bool.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3e23-240">Returns the hash code for this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-240">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-241">A hash code for the current <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-241">A hash code for the current <see cref="T:System.Boolean" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-242">Le <xref:System.Boolean> la classe implémente `true` comme entier, une seule, et `false` comme entier, zéro.</span><span class="sxs-lookup"><span data-stu-id="d3e23-242">The <xref:System.Boolean> class implements `true` as the integer, one, and `false` as the integer, zero.</span></span> <span data-ttu-id="d3e23-243">Toutefois, un langage de programmation particulier peut représenter `true` et `false` avec d’autres valeurs.</span><span class="sxs-lookup"><span data-stu-id="d3e23-243">However, a particular programming language might represent `true` and `false` with other values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="bool.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3e23-244">Returns the type code for the <see cref="T:System.Boolean" /> value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-244">Returns the type code for the <see cref="T:System.Boolean" /> value type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-245">The enumerated constant <see cref="F:System.TypeCode.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-245">The enumerated constant <see cref="F:System.TypeCode.Boolean" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.bool.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; bool" Usage="System.bool.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d3e23-246">A string containing the value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-246">A string containing the value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-247">Converts the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-247">Converts the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-248">
            <see langword="true" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-248">
              <see langword="true" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-249">Le `value` paramètre, éventuellement précédé ou suivi par un espace blanc, doit contenir une <xref:System.Boolean.TrueString> ou <xref:System.Boolean.FalseString>; sinon, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="d3e23-249">The `value` parameter, optionally preceded or trailed by white space, must contain either <xref:System.Boolean.TrueString> or <xref:System.Boolean.FalseString>; otherwise, an exception is thrown.</span></span> <span data-ttu-id="d3e23-250">La comparaison respecte la casse.</span><span class="sxs-lookup"><span data-stu-id="d3e23-250">The comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3e23-251">L’exemple de code suivant illustre l’utilisation de <xref:System.Boolean.Parse%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-251">The following code example illustrates the use of <xref:System.Boolean.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Boolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#2)]
 [!code-csharp[System.Boolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#2)]
 [!code-vb[System.Boolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3e23-252">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-252">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d3e23-253">
            <paramref name="value" /> is not equivalent to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-253">
              <paramref name="value" /> is not equivalent to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-254">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-254">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-255">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-255">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-256">
            <see langword="true" /> or <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-256">
              <see langword="true" /> or <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-257">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-257">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-258">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-258">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-259">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-259">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-260">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-260">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-261">1 if the value of this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-261">1 if the value of this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-262">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-262">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-263">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-263">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3e23-264">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-264">The recommended alternative is to call the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Convert.ToByte(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-265">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-265">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-266">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-266">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="d3e23-267">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-267">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-268">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-268">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="d3e23-269">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-269">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="d3e23-270">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.Char" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-270">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.Char" /> value.</span>
          </span>
          <span data-ttu-id="d3e23-271">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-271">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-272">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-272">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-273">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-273">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="d3e23-274">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-274">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-275">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-275">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="d3e23-276">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-276">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="d3e23-277">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.DateTime" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-277">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.DateTime" /> value.</span>
          </span>
          <span data-ttu-id="d3e23-278">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-278">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-279">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-279">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-280">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />..</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-280">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-281">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-281">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-282">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-282">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-283">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-283">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3e23-284">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-284">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-285">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-285">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-286">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />..</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-286">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-287">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-287">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-288">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-288">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-289">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-289">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3e23-290">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-290">The recommended alternative is to call the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-291">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-291">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-292">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-292">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-293">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-293">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-294">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-294">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-295">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-295">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3e23-296">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-296">The recommended alternative is to call the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-297">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-297">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-298">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-298">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-299">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-299">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-300">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-300">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-301">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-301">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3e23-302">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-302">The recommended alternative is to call the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-303">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-303">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-304">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-304">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-305">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-305">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-306">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-306">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-307">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-307">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3e23-308">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-308">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-309">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-309">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-310">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-310">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-311">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-311">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-312">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-312">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-313">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-313">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3e23-314">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-314">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-315">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-315">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-316">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />..</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-316">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-317">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-317">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-318">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-318">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-319">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-319">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3e23-320">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-320">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d3e23-321">The desired type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-321">The desired type.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="d3e23-322">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-322">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-323">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-323">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-324">An object of the specified type, with a value that is equivalent to the value of this <see langword="Boolean" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-324">An object of the specified type, with a value that is equivalent to the value of this <see langword="Boolean" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-325">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-325">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-326">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-326">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3e23-327">L’alternative recommandée consiste à appeler le <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-327">The recommended alternative is to call the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3e23-328">
            <paramref name="type" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-328">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="d3e23-329">The requested type conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-329">The requested type conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-330">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-330">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-331">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-331">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-332">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-332">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-333">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-333">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-334">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-334">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3e23-335">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-335">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
        <altmember cref="M:System.Convert.ToUInt16(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-336">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-336">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-337">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-337">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-338">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-338">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-339">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-339">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-340">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-340">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3e23-341">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-341">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Convert.ToUInt32(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-342">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-342">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-343">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-343">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-344">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-344">1 if this instance is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-345">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="d3e23-345">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3e23-346">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Boolean> est effectué en une interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="d3e23-346">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3e23-347">L’alternative recommandée consiste à appeler le <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-347">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Convert.ToUInt64(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3e23-348">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-348">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bool.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3e23-349">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-349">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-350">"True" (the value of the <see cref="F:System.Boolean.TrueString" /> property) if the value of this instance is <see langword="true" />, or "False" (the value of the <see cref="F:System.Boolean.FalseString" /> property) if the value of this instance is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-350">"True" (the value of the <see cref="F:System.Boolean.TrueString" /> property) if the value of this instance is <see langword="true" />, or "False" (the value of the <see cref="F:System.Boolean.FalseString" /> property) if the value of this instance is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-351">Cette méthode retourne l’une des constantes « True » ou « False ».</span><span class="sxs-lookup"><span data-stu-id="d3e23-351">This method returns the constants "True" or "False".</span></span>  
  
 <span data-ttu-id="d3e23-352">Notez que XML respecte la casse, et que la spécification XML reconnaît « true » et « false » en tant que l’ensemble valide de valeurs booléennes.</span><span class="sxs-lookup"><span data-stu-id="d3e23-352">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="d3e23-353">Si la chaîne retournée par la <xref:System.Boolean.ToString> méthode consiste à écrire dans un fichier XML, son <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> méthode doit être appelée en premier afin des pour convertir en minuscules.</span><span class="sxs-lookup"><span data-stu-id="d3e23-353">If the string returned by the <xref:System.Boolean.ToString> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3e23-354">L’exemple suivant illustre la <xref:System.Boolean.ToString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d3e23-354">The following example illustrates the <xref:System.Boolean.ToString%2A> method.</span></span>  
  
 [!code-cpp[System.Boolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#1)]
 [!code-csharp[System.Boolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#1)]
 [!code-vb[System.Boolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="bool.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d3e23-355">(Reserved) An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-355">(Reserved) An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-356">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-356">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-357">
            <see cref="F:System.Boolean.TrueString" /> if the value of this instance is <see langword="true" />, or <see cref="F:System.Boolean.FalseString" /> if the value of this instance is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-357">
              <see cref="F:System.Boolean.TrueString" /> if the value of this instance is <see langword="true" />, or <see cref="F:System.Boolean.FalseString" /> if the value of this instance is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-358">Le `provider` paramètre est réservé.</span><span class="sxs-lookup"><span data-stu-id="d3e23-358">The `provider` parameter is reserved.</span></span> <span data-ttu-id="d3e23-359">Il ne participe pas à l’exécution de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d3e23-359">It does not participate in the execution of this method.</span></span> <span data-ttu-id="d3e23-360">Cela signifie que le <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> méthode, contrairement à la plupart des méthodes avec un `provider` paramètre, ne reflète pas les paramètres spécifiques à la culture.</span><span class="sxs-lookup"><span data-stu-id="d3e23-360">This means that the <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method, unlike most methods with a `provider` parameter, does not reflect culture-specific settings.</span></span>  
  
 <span data-ttu-id="d3e23-361">Cette méthode retourne l’une des constantes « True » ou « False ».</span><span class="sxs-lookup"><span data-stu-id="d3e23-361">This method returns the constants "True" or "False".</span></span> <span data-ttu-id="d3e23-362">Notez que XML respecte la casse, et que la spécification XML reconnaît « true » et « false » en tant que l’ensemble valide de valeurs booléennes.</span><span class="sxs-lookup"><span data-stu-id="d3e23-362">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="d3e23-363">Si le <xref:System.String> objet retourné par la <xref:System.Boolean.ToString%28System.IFormatProvider%29> méthode consiste à écrire dans un fichier XML, son <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> méthode doit être appelée en premier afin des pour convertir en minuscules.</span><span class="sxs-lookup"><span data-stu-id="d3e23-363">If the <xref:System.String> object returned by the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueString">
      <MemberSignature Language="C#" Value="public static readonly string TrueString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string TrueString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.TrueString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TrueString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ TrueString;" />
      <MemberSignature Language="F#" Value=" staticval mutable TrueString : string" Usage="System.bool.TrueString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d3e23-364">Represents the Boolean value <see langword="true" /> as a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-364">Represents the Boolean value <see langword="true" /> as a string.</span>
          </span>
          <span data-ttu-id="d3e23-365">This field is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-365">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-366">Ce champ est égal à la chaîne « True ».</span><span class="sxs-lookup"><span data-stu-id="d3e23-366">This field is equal to the string "True".</span></span>  
  
 <span data-ttu-id="d3e23-367">Le <xref:System.Boolean.TrueString> propriété définit la représentation sous forme de chaîne d’un `True` <xref:System.Boolean> valeur dans la mise en forme et d’opérations d’analyse.</span><span class="sxs-lookup"><span data-stu-id="d3e23-367">The <xref:System.Boolean.TrueString> property defines the string representation of a `True` <xref:System.Boolean> value in formatting and parsing operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryFormat(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  -&gt; bool" Usage="bool.TryFormat (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.ReadOnlySpan{System.Char},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.bool.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.bool.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d3e23-368">A string containing the value to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-368">A string containing the value to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="d3e23-369">When this method returns, if the conversion succeeded, contains <see langword="true" /> if <c>value</c> is equal to <see cref="F:System.Boolean.TrueString" /> or <see langword="false" /> if <c>value</c> is equal to <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-369">When this method returns, if the conversion succeeded, contains <see langword="true" /> if <c>value</c> is equal to <see cref="F:System.Boolean.TrueString" /> or <see langword="false" /> if <c>value</c> is equal to <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
          <span data-ttu-id="d3e23-370">If the conversion failed, contains <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-370">If the conversion failed, contains <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d3e23-371">The conversion fails if <c>value</c> is <see langword="null" /> or is not equal to the value of either the <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" /> field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-371">The conversion fails if <c>value</c> is <see langword="null" /> or is not equal to the value of either the <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" /> field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3e23-372">Tries to convert the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-372">Tries to convert the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span>
          </span>
          <span data-ttu-id="d3e23-373">A return value indicates whether the conversion succeeded or failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-373">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3e23-374">
            <see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3e23-374">
              <see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3e23-375">Le <xref:System.Boolean.TryParse%2A> méthode est comparable à la <xref:System.Boolean.Parse%2A> (méthode), sauf le <xref:System.Boolean.TryParse%2A> méthode ne lève pas une exception si la conversion échoue.</span><span class="sxs-lookup"><span data-stu-id="d3e23-375">The <xref:System.Boolean.TryParse%2A> method is like the <xref:System.Boolean.Parse%2A> method, except the <xref:System.Boolean.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="d3e23-376">Le `value` paramètre permettre être précédé ou suivi par un espace blanc.</span><span class="sxs-lookup"><span data-stu-id="d3e23-376">The `value` parameter can be preceded or followed by white space.</span></span> <span data-ttu-id="d3e23-377">La comparaison est ordinale et non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="d3e23-377">The comparison is ordinal and case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3e23-378">L’exemple suivant appelle la <xref:System.Boolean.TryParse%2A> méthode pour analyser un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="d3e23-378">The following example calls the <xref:System.Boolean.TryParse%2A> method to parse an array of strings.</span></span> <span data-ttu-id="d3e23-379">Notez que l’opération d’analyse réussit uniquement si la chaîne à analyser est « True » (la valeur de la <xref:System.Boolean.TrueString> champ) ou « False » (la valeur de la <xref:System.Boolean.FalseString> champ) dans une comparaison respectant la casse.</span><span class="sxs-lookup"><span data-stu-id="d3e23-379">Note that the parse operation succeeds only if the string to be parsed is "True" (the value of the <xref:System.Boolean.TrueString> field) or "False" (the value of the <xref:System.Boolean.FalseString> field) in a case-insensitive comparison.</span></span>  
  
 [!code-csharp[System.Boolean.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.tryparse/cs/tryparseex.cs#1)]
 [!code-vb[System.Boolean.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.tryparse/vb/tryparseex.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Parse(System.String)" />
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
  </Members>
</Type>