<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Action`2.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5208d4848fc63d005d79572096234eff53e32a305.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">208d4848fc63d005d79572096234eff53e32a305</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>The type of the first parameter of the method that this delegate encapsulates.</source>
          <target state="translated">Type du premier paramètre de la méthode encapsulée par ce délégué.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>The type of the second parameter of the method that this delegate encapsulates.</source>
          <target state="translated">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Action`2">
          <source>The first parameter of the method that this delegate encapsulates.</source>
          <target state="translated">Premier paramètre de la méthode encapsulée par ce délégué.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Action`2">
          <source>The second parameter of the method that this delegate encapsulates.</source>
          <target state="translated">Deuxième paramètre de la méthode encapsulée par ce délégué.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Action`2">
          <source>Encapsulates a method that has two parameters and does not return a value.</source>
          <target state="translated">Encapsule une méthode ayant deux paramètres et ne retournant aucune valeur.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>You can use the <ph id="ph1">&lt;xref:System.Action%602&gt;</ph> delegate to pass a method as a parameter without explicitly declaring a custom delegate.</source>
          <target state="translated">Vous pouvez utiliser la <ph id="ph1">&lt;xref:System.Action%602&gt;</ph> délégué à passer à une méthode en tant que paramètre sans déclarer explicitement un délégué personnalisé.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>The encapsulated method must correspond to the method signature that is defined by this delegate.</source>
          <target state="translated">La méthode encapsulée doit correspondre à la signature de méthode définie par ce délégué.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>This means that the encapsulated method must have two parameters that are both passed to it by value, and it must not return a value.</source>
          <target state="translated">Cela signifie que la méthode encapsulée doit avoir deux paramètres qui sont tous deux passés par valeur, et il ne doit pas retourner une valeur.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>(In C#, the method must return <ph id="ph1">`void`</ph>.</source>
          <target state="translated">(En c#, la méthode doit retourner <ph id="ph1">`void`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>In Visual Basic, it must be defined by the <ph id="ph1">`Sub`</ph>…<ph id="ph2">`End Sub`</ph></source>
          <target state="translated">En Visual Basic, elle doit être définie par le <ph id="ph1">`Sub`</ph>...<ph id="ph2">`End Sub`</ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>construct.</source>
          <target state="translated">construction.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</source>
          <target state="translated">Il peut également être une méthode qui retourne une valeur qui est ignorée.) En règle générale, une telle méthode est utilisée pour effectuer une opération.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>To reference a method that has two parameters and returns a value, use the generic <ph id="ph1">&lt;xref:System.Func%603&gt;</ph> delegate instead.</source>
          <target state="translated">Pour référencer une méthode ayant deux paramètres et retourne une valeur, utilisez le type générique <ph id="ph1">&lt;xref:System.Func%603&gt;</ph> déléguer à la place.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>When you use the <ph id="ph1">&lt;xref:System.Action%602&gt;</ph> delegate, you do not have to explicitly define a delegate that encapsulates a method with two parameters.</source>
          <target state="translated">Lorsque vous utilisez la <ph id="ph1">&lt;xref:System.Action%602&gt;</ph> délégué, vous n’avez pas à définir explicitement un délégué qui encapsule une méthode avec deux paramètres.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>For example, the following code explicitly declares a delegate named <ph id="ph1">`ConcatStrings`</ph>.</source>
          <target state="translated">Par exemple, le code suivant déclare explicitement un délégué nommé <ph id="ph1">`ConcatStrings`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>It then assigns a reference to either of two methods to its delegate instance.</source>
          <target state="translated">Il assigne ensuite une référence à une des deux méthodes à son instance de délégué.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>One method writes two strings to the console; the second writes two strings to a file.</source>
          <target state="translated">Une méthode écrit deux chaînes dans la console ; la deuxième écrit deux chaînes dans un fichier.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>The following example simplifies this code by instantiating the <ph id="ph1">&lt;xref:System.Action%602&gt;</ph> delegate instead of explicitly defining a new delegate and assigning a named method to it.</source>
          <target state="translated">L’exemple suivant simplifie ce code en instanciant le <ph id="ph1">&lt;xref:System.Action%602&gt;</ph> délégué au lieu de définir un nouveau délégué et lui assigner une méthode nommée explicitement.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Action%602&gt;</ph> delegate with anonymous methods in C#, as the following example illustrates.</source>
          <target state="translated">Vous pouvez également utiliser le <ph id="ph1">&lt;xref:System.Action%602&gt;</ph> délégué avec les méthodes anonymes en c#, comme l’illustre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>(For an introduction to anonymous methods, see <bpt id="p1">[</bpt>Anonymous Methods<ept id="p1">](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md)</ept>.)</source>
          <target state="translated">(Pour une introduction aux méthodes anonymes, consultez <bpt id="p1">[</bpt>méthodes anonymes<ept id="p1">](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>You can also assign a lambda expression to an <ph id="ph1">&lt;xref:System.Action%602&gt;</ph> delegate instance, as the following example illustrates.</source>
          <target state="translated">Vous pouvez également affecter une expression lambda à une <ph id="ph1">&lt;xref:System.Action%602&gt;</ph> déléguer l’instance, comme l’illustre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action`2">
          <source>(For an introduction to lambda expressions, see <bpt id="p1">[</bpt>Lambda Expressions<ept id="p1">](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md)</ept>.)</source>
          <target state="translated">(Pour une introduction aux expressions lambda, consultez <bpt id="p1">[</bpt>Expressions Lambda<ept id="p1">](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md)</ept>.)</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>