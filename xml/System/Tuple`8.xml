<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c5da4af93ad7b061e8a044bcad37e9192c6c78b1" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52610665" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`8&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`8" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename TRest&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
    <TypeParameter Name="T7" />
    <TypeParameter Name="TRest" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="5937e-101">Type du premier composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="5937e-102">Type du second composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="5937e-103">Type du troisième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="5937e-104">Type du quatrième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="5937e-105">Type du cinquième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="5937e-106">Type du sixième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-106">The type of the tuple's sixth component.</span></span></typeparam>
    <typeparam name="T7"><span data-ttu-id="5937e-107">Type du septième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-107">The type of the tuple's seventh component.</span></span></typeparam>
    <typeparam name="TRest"><span data-ttu-id="5937e-108">Tout objet <see langword="Tuple" /> générique qui définit les types des composants restants du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-108">Any generic <see langword="Tuple" /> object that defines the types of the tuple's remaining components.</span></span></typeparam>
    <summary><span data-ttu-id="5937e-109">Représente un *n*-tuple, où *n* est supérieur ou égal à 8.</span><span class="sxs-lookup"><span data-stu-id="5937e-109">Represents an *n*-tuple, where *n* is 8 or greater.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-110">Un tuple est une structure de données qui a un nombre spécifique et une séquence de valeurs.</span><span class="sxs-lookup"><span data-stu-id="5937e-110">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="5937e-111">Le <xref:System.Tuple%608> classe représente un *n*- tuple qui a huit composants ou plus.</span><span class="sxs-lookup"><span data-stu-id="5937e-111">The <xref:System.Tuple%608> class represents an *n*-tuple that has eight or more components.</span></span>  
  
 <span data-ttu-id="5937e-112">Vous pouvez instancier un <xref:System.Tuple%608> objet avec exactement huit composants en appelant la méthode statique <xref:System.Tuple.Create%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5937e-112">You can instantiate a <xref:System.Tuple%608> object with exactly eight components by calling the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5937e-113">L’exemple suivant crée un 8-tuple (octuple) qui contient les nombres premiers inférieurs à 20.</span><span class="sxs-lookup"><span data-stu-id="5937e-113">The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20.</span></span> <span data-ttu-id="5937e-114">Notez qu’il utilise l’inférence de type pour déterminer le type de chaque composant.</span><span class="sxs-lookup"><span data-stu-id="5937e-114">Note that it uses type inference to determine the type of each component.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="5937e-115">Vous pouvez également instancier un objet n-tuple avec huit ou plus de composants en appelant le <xref:System.Tuple%608.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="5937e-115">You can also instantiate an n-tuple object with eight or more components by calling the <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="5937e-116">L’exemple suivant utilise le <xref:System.Tuple%608.%23ctor%2A> constructeur pour créer un tuple de 8 est équivalent au tuple créés dans l’exemple précédent.</span><span class="sxs-lookup"><span data-stu-id="5937e-116">The following example uses the <xref:System.Tuple%608.%23ctor%2A> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="5937e-117">Pour créer un tuple de n avec neuf composants ou plus, vous devez appeler la <xref:System.Tuple%608.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="5937e-117">To create an n-tuple with nine or more components, you must call the  <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="5937e-118">Les méthodes de fabrique statiques de la <xref:System.Tuple> classe ne prennent pas en charge la création de `Tuple` objets avec plus de huit composants.</span><span class="sxs-lookup"><span data-stu-id="5937e-118">The static factory methods of the <xref:System.Tuple> class do not support the creation of `Tuple` objects with more than eight components.</span></span>  
  
 <span data-ttu-id="5937e-119">Pour instancier un tuple de n qui a huit composants ou plus avec le <xref:System.Tuple%608.%23ctor%2A> constructeur, vous fournissez un générique `Tuple` de l’objet en tant que le `rest` paramètre pour définir le huitième via *n*composants du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-119">To instantiate an n-tuple that has eight or more components with the <xref:System.Tuple%608.%23ctor%2A> constructor, you supply a generic `Tuple` object as the `rest` parameter to define the eighth through *n*th components of the tuple.</span></span> <span data-ttu-id="5937e-120">Par l’imbrication générique `Tuple` objets de cette façon, vous pouvez créer un tuple qui n’a aucune limitation pratique sur le nombre de ses composants.</span><span class="sxs-lookup"><span data-stu-id="5937e-120">By nesting generic `Tuple` objects in this way, you can create a tuple that has no practical limitation on the number of its components.</span></span>  
  
 <span data-ttu-id="5937e-121">L’exemple suivant crée un tuple de 17 qui contient les données de population pour la ville de Détroit, Michigan, pour chaque recensement national de 1860 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-121">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each national census from 1860 to 2000.</span></span> <span data-ttu-id="5937e-122">Le premier composant du tuple est le nom de ville.</span><span class="sxs-lookup"><span data-stu-id="5937e-122">The first component of the tuple is the city name.</span></span> <span data-ttu-id="5937e-123">Le deuxième composant est la date de début de la série de données, et le troisième composant est la population à la date de début.</span><span class="sxs-lookup"><span data-stu-id="5937e-123">The second component is the start date of the data series, and the third component is the population at the start date.</span></span> <span data-ttu-id="5937e-124">Chaque composant suivant fournit la population à des intervalles de dix ans.</span><span class="sxs-lookup"><span data-stu-id="5937e-124">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="5937e-125">Le 17-tuple est créé par l’imbrication un <xref:System.Tuple%603> de l’objet à l’intérieur d’un <xref:System.Tuple%608> objet.</span><span class="sxs-lookup"><span data-stu-id="5937e-125">The 17-tuple is created by nesting a <xref:System.Tuple%603> object inside a <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="5937e-126">(Qui est, le <xref:System.Tuple%603> objet est fourni comme valeur de la `rest` paramètre dans le <xref:System.Tuple%608> constructeur de classe.) Cela <xref:System.Tuple%608> objet, à son tour, est imbriqué dans externe <xref:System.Tuple%608> objet.</span><span class="sxs-lookup"><span data-stu-id="5937e-126">(That is, the <xref:System.Tuple%603> object is supplied as the value of the `rest` parameter in the <xref:System.Tuple%608> class constructor.) This <xref:System.Tuple%608> object is, in turn, nested in an outer <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="5937e-127">(Qui est, le <xref:System.Tuple%608> objet est fourni comme valeur de la `rest` paramètre dans la liste externe <xref:System.Tuple%608> constructeur de classe de l’objet.)</span><span class="sxs-lookup"><span data-stu-id="5937e-127">(That is, the <xref:System.Tuple%608> object is supplied as the value of the `rest` parameter in the outer <xref:System.Tuple%608> object's class constructor.)</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 <span data-ttu-id="5937e-128">Vous pouvez récupérer la valeur de sept premiers composants du tuple à l’aide en lecture seule <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, et <xref:System.Tuple%607.Item7%2A> propriétés de l’instance.</span><span class="sxs-lookup"><span data-stu-id="5937e-128">You can retrieve the value of the tuple's first seven components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.</span></span> <span data-ttu-id="5937e-129">Tous les autres composants sont imbriqués et peuvent être récupérées à partir de la <xref:System.Tuple%608.Rest%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="5937e-129">Any additional components are nested and can be retrieved from the <xref:System.Tuple%608.Rest%2A> property.</span></span> <span data-ttu-id="5937e-130">Dans l’exemple précédent, le <xref:System.Tuple%608.Item1%2A> via <xref:System.Tuple%608.Item7%2A> propriétés extraient le premier composants 1 à 7 du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-130">In the previous example, the <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties retrieve the first through seventh components of the tuple.</span></span> <span data-ttu-id="5937e-131">Le composants 8 à 14 sont contenus dans le tuple qui est imbriqué au deuxième niveau et sont représentées par le `Rest.Item1` via `Rest.Item7` propriétés.</span><span class="sxs-lookup"><span data-stu-id="5937e-131">The eighth through fourteenth components are contained in the tuple that is nested at the second level, and are represented by the `Rest.Item1` through `Rest.Item7` properties.</span></span> <span data-ttu-id="5937e-132">Les composants 15 à 17 sont contenus dans le tuple qui est imbriqué au troisième niveau et sont représentés par le `Rest.Rest.Item1` si `Rest.Rest.Item3` propriétés.</span><span class="sxs-lookup"><span data-stu-id="5937e-132">The fifteenth through seventeenth components are contained in the tuple that is nested at the third level, and are represented by the `Rest.Rest.Item1` though `Rest.Rest.Item3` properties.</span></span>  
  
 <span data-ttu-id="5937e-133">Tuples sont fréquemment utilisées dans quatre façons différentes :</span><span class="sxs-lookup"><span data-stu-id="5937e-133">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="5937e-134">Pour représenter un jeu unique de données.</span><span class="sxs-lookup"><span data-stu-id="5937e-134">To represent a single set of data.</span></span> <span data-ttu-id="5937e-135">Par exemple, un tuple peut représenter un enregistrement de base de données, et ses composants peuvent représenter des champs individuels de l’enregistrement.</span><span class="sxs-lookup"><span data-stu-id="5937e-135">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="5937e-136">Pour fournir un accès facile aux et manipulation d’un jeu de données.</span><span class="sxs-lookup"><span data-stu-id="5937e-136">To provide easy access to, and manipulation of, a data set.</span></span>  
  
-   <span data-ttu-id="5937e-137">Pour retourner plusieurs valeurs à partir d’une méthode sans utiliser de `out` paramètres (en c#) ou `ByRef` paramètres (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="5937e-137">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="5937e-138">Par exemple, l’exemple précédent retourne ses statistiques calculées, avec le nom de ville, dans un <xref:System.Tuple%607> objet.</span><span class="sxs-lookup"><span data-stu-id="5937e-138">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="5937e-139">Pour passer les valeurs multiples dans une méthode via un paramètre unique.</span><span class="sxs-lookup"><span data-stu-id="5937e-139">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="5937e-140">Par exemple, le <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> méthode possède un paramètre unique qui vous permet de fournir une valeur à la méthode que le thread exécute au démarrage.</span><span class="sxs-lookup"><span data-stu-id="5937e-140">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="5937e-141">Si vous fournissez un <xref:System.Tuple%607> de l’objet en tant qu’argument de méthode, vous pouvez fournir la routine de démarrage du thread avec sept éléments de données.</span><span class="sxs-lookup"><span data-stu-id="5937e-141">If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the thread's startup routine with seven items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6, !T7 item7, !TRest rest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, rest As TRest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt; : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'Rest -&gt; Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt; (item1, item2, item3, item4, item5, item6, item7, rest)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
        <Parameter Name="rest" Type="TRest" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="5937e-142">Valeur du premier composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-142">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="5937e-143">Valeur du second composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-143">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="5937e-144">Valeur du troisième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-144">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="5937e-145">Valeur du quatrième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-145">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="5937e-146">Valeur du cinquième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-146">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="5937e-147">Valeur du sixième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-147">The value of the tuple's sixth component.</span></span></param>
        <param name="item7"><span data-ttu-id="5937e-148">Valeur du septième composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-148">The value of the tuple's seventh component.</span></span></param>
        <param name="rest"><span data-ttu-id="5937e-149">Tout objet <see langword="Tuple" /> générique qui contient les valeurs des composants restants du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-149">Any generic <see langword="Tuple" /> object that contains the values of the tuple's remaining components.</span></span></param>
        <summary><span data-ttu-id="5937e-150">Initialise une nouvelle instance de la classe <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-150">Initializes a new instance of the <see cref="T:System.Tuple`8" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-151">Vous pouvez également utiliser la méthode statique <xref:System.Tuple.Create%2A?displayProperty=nameWithType> méthode pour instancier un objet de 8-tuple (octuple) sans devoir spécifier explicitement les types de ses composants.</span><span class="sxs-lookup"><span data-stu-id="5937e-151">You can also use the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="5937e-152">L’exemple suivant utilise la <xref:System.Tuple.Create%2A?displayProperty=nameWithType> méthode pour instancier un objet de 8-tuple qui contient les nombres premiers inférieurs à 20.</span><span class="sxs-lookup"><span data-stu-id="5937e-152">The following example uses the <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple object that contains prime numbers that are less than 20.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="5937e-153">Cela équivaut à l’appel suivant à la <xref:System.Tuple%607.%23ctor%2A> constructeur de classe.</span><span class="sxs-lookup"><span data-stu-id="5937e-153">This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
 <span data-ttu-id="5937e-154">Toutefois, la méthode statique <xref:System.Tuple.Create%2A?displayProperty=nameWithType> méthode ne peut pas être utilisée pour créer un objet de tuple avec plus de huit composants.</span><span class="sxs-lookup"><span data-stu-id="5937e-154">However, the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method cannot be used to create a tuple object with more than eight components.</span></span>  
  
 <span data-ttu-id="5937e-155">Lorsque vous utilisez le <xref:System.Tuple%608.%23ctor%2A> constructeur pour créer un tuple de n avec huit composants ou plus, vous utilisez le `rest` paramètre pour créer un tuple de n imbriqué qui a un à sept composants.</span><span class="sxs-lookup"><span data-stu-id="5937e-155">When using the <xref:System.Tuple%608.%23ctor%2A> constructor to create an n-tuple with eight or more components, you use the `rest` parameter to create a nested n-tuple that has from one to seven components.</span></span> <span data-ttu-id="5937e-156">À l’aide de niveaux d’imbrication successives, vous pouvez créer un tuple de n qui a un nombre presque illimité de composants.</span><span class="sxs-lookup"><span data-stu-id="5937e-156">By using successive levels of nesting, you can create an n-tuple that has a virtually unlimited number of components.</span></span> <span data-ttu-id="5937e-157">Par exemple, pour créer un tuple de 25, vous instanciez un <xref:System.Tuple%608> objet avec trois niveaux d’imbrication, comme suit :</span><span class="sxs-lookup"><span data-stu-id="5937e-157">For example, to create a 25-tuple, you instantiate a <xref:System.Tuple%608> object with three levels of nesting, as follows:</span></span>  
  
-   <span data-ttu-id="5937e-158">Le plus externe <xref:System.Tuple%608> objet contient les composants 1 à 7.</span><span class="sxs-lookup"><span data-stu-id="5937e-158">The outermost <xref:System.Tuple%608> object contains the first through seventh components.</span></span> <span data-ttu-id="5937e-159">Son <xref:System.Tuple%608.Rest%2A> propriété fournit l’accès à un <xref:System.Tuple%608> objet au premier niveau d’imbrication.</span><span class="sxs-lookup"><span data-stu-id="5937e-159">Its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the first level of nesting.</span></span>  
  
-   <span data-ttu-id="5937e-160">Le plus externe <xref:System.Tuple%608> objet contient le composants 8 à 14 et sa <xref:System.Tuple%608.Rest%2A> propriété fournit l’accès à un <xref:System.Tuple%608> objet au deuxième niveau d’imbrication.</span><span class="sxs-lookup"><span data-stu-id="5937e-160">The outermost nested <xref:System.Tuple%608> object contains the eighth through fourteenth components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the second level of nesting.</span></span>  
  
-   <span data-ttu-id="5937e-161">Le <xref:System.Tuple%608> objet au deuxième niveau d’imbrication contient le composants 15 à vingt et unième et son <xref:System.Tuple%608.Rest%2A> propriété fournit l’accès à un <xref:System.Tuple%604> objet au troisième niveau d’imbrication.</span><span class="sxs-lookup"><span data-stu-id="5937e-161">The <xref:System.Tuple%608> object at the second level of nesting contains the fifteenth through twenty-first  components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%604> object at the third level of nesting.</span></span>  
  
-   <span data-ttu-id="5937e-162">Le tuple le plus profond est un <xref:System.Tuple%604> objet qui contient les composants de vingt-cinq à vingt secondes.</span><span class="sxs-lookup"><span data-stu-id="5937e-162">The innermost tuple is a <xref:System.Tuple%604> object that contains the twenty-second through twenty-fifth components.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5937e-163">L’exemple suivant crée un tuple de 17 qui contient les données de population pour la ville de Détroit, Michigan, pour chaque recensement de 1860 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-163">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each census from 1860 to 2000.</span></span> <span data-ttu-id="5937e-164">Le premier composant du tuple est le nom de ville.</span><span class="sxs-lookup"><span data-stu-id="5937e-164">The first component of the tuple is the city name.</span></span> <span data-ttu-id="5937e-165">Le deuxième composant est la date de début de la série de données, et le troisième composant est la population à la date de début.</span><span class="sxs-lookup"><span data-stu-id="5937e-165">The second component is the start date of the series of data, and the third component is the population at the start date.</span></span> <span data-ttu-id="5937e-166">Chaque composant suivant fournit la population à des intervalles de dix ans.</span><span class="sxs-lookup"><span data-stu-id="5937e-166">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="5937e-167">L’exemple utilise deux couches d’imbrication pour créer le tuple de 17 : il définit un 7-tuple dont les composants contiennent les données de la population pour 1860 à 1900, un tuple de 7 imbriquée qui contient les données démographiques pour 1910 via 1970 et interne imbriquée à 3 tuples qui contient des données démographiques pour 1980 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-167">The example uses two layers of nesting to create the 17-tuple: It defines a 7-tuple whose third through seventh components contain population data for 1860 through 1900, a nested 7-tuple that contains population data for 1910 through 1970, and an inner nested 3-tuple that contains population data for 1980 through 2000.</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5937e-168"><paramref name="rest" /> n'est pas un objet <see langword="Tuple" /> générique.</span><span class="sxs-lookup"><span data-stu-id="5937e-168"><paramref name="rest" /> is not a generic <see langword="Tuple" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5937e-169">Objet à comparer avec cette instance.</span><span class="sxs-lookup"><span data-stu-id="5937e-169">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="5937e-170">Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`8" /> actuel est égal à un objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5937e-170">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="5937e-171"><see langword="true" /> si l'instance actuelle est égale à l'objet spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-171"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-172">Le `obj` paramètre est considéré comme égal à l’instance actuelle s’il répond à toutes les conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="5937e-172">The `obj` parameter is considered to be equal to the current instance if it meets all the following conditions:</span></span>  
  
-   <span data-ttu-id="5937e-173">Il s’agit une <xref:System.Tuple%608> objet.</span><span class="sxs-lookup"><span data-stu-id="5937e-173">It is a <xref:System.Tuple%608> object.</span></span>  
  
-   <span data-ttu-id="5937e-174">Il a le même nombre total de composants sont des mêmes types que l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="5937e-174">It has the same total number of components that are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="5937e-175">Ses composants (y compris ses composants imbriqués) sont égales à celles de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="5937e-175">Its components (including its nested components) are equal to those of the current instance.</span></span> <span data-ttu-id="5937e-176">L’égalité est déterminée par le comparateur d’égalité par défaut pour chaque composant.</span><span class="sxs-lookup"><span data-stu-id="5937e-176">Equality is determined by the default equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5937e-177">L’exemple suivant définit cinq <xref:System.Tuple%608> objets qui contiennent des nombres premiers.</span><span class="sxs-lookup"><span data-stu-id="5937e-177">The following example defines five <xref:System.Tuple%608> objects that contain prime numbers.</span></span> <span data-ttu-id="5937e-178">Il compare ensuite le premier objet comportant chacun des objets restants.</span><span class="sxs-lookup"><span data-stu-id="5937e-178">It then compares the first object with each of the remaining objects.</span></span> <span data-ttu-id="5937e-179">Comme le montre la sortie, seule la première et la dernière <xref:System.Tuple%608> objets sont égaux, parce qu’ils ont un nombre identique de composants avec des valeurs identiques.</span><span class="sxs-lookup"><span data-stu-id="5937e-179">As the output shows, only the first and the last <xref:System.Tuple%608> objects are equal, because they have an identical number of components with identical values.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`8.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5937e-180">Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`8" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="5937e-180">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object.</span></span></summary>
        <returns><span data-ttu-id="5937e-181">Code de hachage d'un entier signé 32 bits.</span><span class="sxs-lookup"><span data-stu-id="5937e-181">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5937e-182">Obtient la valeur du premier composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-182">Gets the value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="5937e-183">Valeur du premier composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-183">The value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-184">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%608.Item1%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="5937e-184">You can dynamically determine the type of the <xref:System.Tuple%608.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="5937e-185">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%608.Item1%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="5937e-185">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="5937e-186">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%608> de l’objet et en extrayant le premier élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5937e-186">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5937e-187">L’exemple suivant crée un objet de 17-tuple qui contient les données de population pour la ville de Détroit, Michigan, de 1860 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-187">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="5937e-188">Le premier composant du tuple-17 est le nom de ville.</span><span class="sxs-lookup"><span data-stu-id="5937e-188">The first component of the 17-tuple is the city name.</span></span> <span data-ttu-id="5937e-189">L’exemple utilise le <xref:System.Tuple%608.Item1%2A> propriété à afficher le nom de ville dans l’en-tête du tableau avant d’afficher les données de population.</span><span class="sxs-lookup"><span data-stu-id="5937e-189">The example uses the <xref:System.Tuple%608.Item1%2A> property to display the city name in the table header before displaying the population data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5937e-190">Obtient la valeur du deuxième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-190">Gets the value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="5937e-191">Valeur du deuxième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-191">The value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-192">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%608.Item2%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="5937e-192">You can dynamically determine the type of the <xref:System.Tuple%608.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="5937e-193">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%608.Item2%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="5937e-193">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="5937e-194">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%608> de l’objet et en extrayant le deuxième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5937e-194">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5937e-195">L’exemple suivant crée un objet de 17-tuple qui contient les données de population pour la ville de Détroit, Michigan, de 1860 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-195">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="5937e-196">Le deuxième composant du tuple-17 est la première année de la série de données.</span><span class="sxs-lookup"><span data-stu-id="5937e-196">The second component of the 17-tuple is the first year of the data series.</span></span> <span data-ttu-id="5937e-197">L’exemple affecte la valeur de la <xref:System.Tuple%608.Item2%2A> propriété à une variable, puis utilise cette variable pour représenter l’année dont les données sont affichées.</span><span class="sxs-lookup"><span data-stu-id="5937e-197">The example assigns the value of the <xref:System.Tuple%608.Item2%2A> property to a variable, and then uses that variable to represent the year whose data is displayed.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5937e-198">Obtient la valeur du troisième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-198">Gets the value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="5937e-199">Valeur du troisième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-199">The value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-200">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%608.Item3%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="5937e-200">You can dynamically determine the type of the <xref:System.Tuple%608.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="5937e-201">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%608.Item3%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="5937e-201">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="5937e-202">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%608> de l’objet et en extrayant le troisième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5937e-202">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5937e-203">L’exemple suivant crée un objet de 17-tuple qui contient les données de population pour la ville de Détroit, Michigan, de 1860 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-203">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="5937e-204">Le troisième composant du tuple-17 est la population en 1860.</span><span class="sxs-lookup"><span data-stu-id="5937e-204">The third component of the 17-tuple is the population in 1860.</span></span> <span data-ttu-id="5937e-205">L’exemple utilise le <xref:System.Tuple%608.Item3%2A> propriété pour afficher la valeur de population et calculer le taux de changement de population entre 1860 et 1870 annuel.</span><span class="sxs-lookup"><span data-stu-id="5937e-205">The example uses the <xref:System.Tuple%608.Item3%2A> property to display the population value and to calculate the annual rate of population change between 1860 and 1870.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item4 : 'T4" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5937e-206">Obtient la valeur du quatrième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-206">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="5937e-207">Valeur du quatrième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-207">The value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-208">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%608.Item4%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="5937e-208">You can dynamically determine the type of the <xref:System.Tuple%608.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="5937e-209">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%608.Item4%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="5937e-209">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="5937e-210">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%608> de l’objet et en extrayant le quatrième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5937e-210">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5937e-211">L’exemple suivant crée un objet de 17-tuple qui contient les données de population pour la ville de Détroit, Michigan, de 1860 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-211">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="5937e-212">Le quatrième composant du tuple-17 est la population en 1870.</span><span class="sxs-lookup"><span data-stu-id="5937e-212">The fourth component of the 17-tuple is the population in 1870.</span></span> <span data-ttu-id="5937e-213">L’exemple utilise le <xref:System.Tuple%608.Item4%2A> propriété pour afficher la valeur de population et calculer le taux de changement de population entre 1870 et 1880 annuel.</span><span class="sxs-lookup"><span data-stu-id="5937e-213">The example uses the <xref:System.Tuple%608.Item4%2A> property to display the population value and to calculate the annual rate of population change between 1870 and 1880.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item5 : 'T5" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5937e-214">Obtient la valeur du cinquième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-214">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="5937e-215">Valeur du cinquième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-215">The value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-216">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%608.Item5%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="5937e-216">You can dynamically determine the type of the <xref:System.Tuple%608.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="5937e-217">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%608.Item5%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="5937e-217">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="5937e-218">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%608> de l’objet et en extrayant le cinquième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5937e-218">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5937e-219">L’exemple suivant crée un objet de 17-tuple qui contient les données de population pour la ville de Détroit, Michigan, de 1860 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-219">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="5937e-220">Le cinquième composant du tuple-17 est la population en 1880.</span><span class="sxs-lookup"><span data-stu-id="5937e-220">The fifth component of the 17-tuple is the population in 1880.</span></span> <span data-ttu-id="5937e-221">L’exemple utilise le <xref:System.Tuple%608.Item5%2A> propriété pour afficher la valeur de population et calculer le taux de changement de population entre 1880 et 1890 annuel.</span><span class="sxs-lookup"><span data-stu-id="5937e-221">The example uses the <xref:System.Tuple%608.Item5%2A> property to display the population value and to calculate the annual rate of population change between 1880 and 1890.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item6 : 'T6" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5937e-222">Obtient la valeur du sixième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-222">Gets the value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="5937e-223">Valeur du sixième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-223">The value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-224">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%608.Item6%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="5937e-224">You can dynamically determine the type of the <xref:System.Tuple%608.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="5937e-225">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%608.Item6%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="5937e-225">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="5937e-226">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%608> de l’objet et en extrayant le sixième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5937e-226">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5937e-227">L’exemple suivant crée un objet de 17-tuple qui contient les données de population pour la ville de Détroit, Michigan, de 1860 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-227">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="5937e-228">Le sixième composant du tuple-17 est la population en 1890.</span><span class="sxs-lookup"><span data-stu-id="5937e-228">The sixth component of the 17-tuple is the population in 1890.</span></span> <span data-ttu-id="5937e-229">L’exemple utilise le <xref:System.Tuple%608.Item6%2A> propriété pour afficher la valeur de population et calculer le taux de changement de population entre 1890 et 1900 annuel.</span><span class="sxs-lookup"><span data-stu-id="5937e-229">The example uses the <xref:System.Tuple%608.Item6%2A> property to display the population value and to calculate the annual rate of population change between 1890 and 1900.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item7">
      <MemberSignature Language="C#" Value="public T7 Item7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T7 Item7" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item7" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item7 As T7" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T7 Item7 { T7 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item7 : 'T7" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5937e-230">Obtient la valeur du septième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-230">Gets the value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></summary>
        <value><span data-ttu-id="5937e-231">Valeur du septième composant de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-231">The value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-232">Vous pouvez déterminer dynamiquement le type de la <xref:System.Tuple%608.Item7%2A> composant de deux manières :</span><span class="sxs-lookup"><span data-stu-id="5937e-232">You can dynamically determine the type of the <xref:System.Tuple%608.Item7%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="5937e-233">En appelant le `GetType` méthode sur la valeur retournée par la <xref:System.Tuple%608.Item7%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="5937e-233">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item7%2A> property.</span></span>  
  
-   <span data-ttu-id="5937e-234">En récupérant le <xref:System.Type> objet qui représente le <xref:System.Tuple%608> de l’objet et en extrayant le septième élément du tableau retourné par son <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5937e-234">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5937e-235">L’exemple suivant crée un objet de 17-tuple qui contient les données de population pour la ville de Détroit, Michigan, de 1860 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-235">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="5937e-236">Le septième composant du tuple-17 est la population en 1900.</span><span class="sxs-lookup"><span data-stu-id="5937e-236">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="5937e-237">L’exemple utilise le <xref:System.Tuple%608.Item7%2A> propriété pour afficher la valeur de population et calculer le taux de changement de population entre 1900 et 1910 annuel.</span><span class="sxs-lookup"><span data-stu-id="5937e-237">The example uses the <xref:System.Tuple%608.Item7%2A> property to display the population value and to calculate the annual rate of population change between 1900 and 1910.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rest">
      <MemberSignature Language="C#" Value="public TRest Rest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TRest Rest" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Rest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rest As TRest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TRest Rest { TRest get(); };" />
      <MemberSignature Language="F#" Value="member this.Rest : 'Rest" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Rest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5937e-238">Obtient les composants restants de l'objet <see cref="T:System.Tuple`8" /> actif.</span><span class="sxs-lookup"><span data-stu-id="5937e-238">Gets the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></summary>
        <value><span data-ttu-id="5937e-239">Valeur des composants restants de l'objet <see cref="T:System.Tuple`8" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="5937e-239">The value of the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-240">Le <xref:System.Tuple%608.Rest%2A> propriété retourne une liste imbriquée `Tuple` objet qui autorise l’accès aux huitième cependant *n*composants du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-240">The <xref:System.Tuple%608.Rest%2A> property returns a nested `Tuple` object that allows access to the eighth though *n*th components of the tuple.</span></span> <span data-ttu-id="5937e-241">En fonction du nombre total de composants dans le tuple, les valeurs du huitième au quatorzième composants peuvent être récupérées à partir de la commande imbriquée `Tuple` l’objet <xref:System.Tuple%608.Item1%2A> via <xref:System.Tuple%608.Item7%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="5937e-241">Depending on the total number of components in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested `Tuple` object's <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="5937e-242">Vous pouvez ensuite utiliser le <xref:System.Tuple%608.Rest%2A> propriété imbriquée <xref:System.Tuple%608> objet à récupérer le `Tuple` objet au niveau d’imbrication suivant.</span><span class="sxs-lookup"><span data-stu-id="5937e-242">You can then use the <xref:System.Tuple%608.Rest%2A> property of a nested <xref:System.Tuple%608> object to retrieve the `Tuple` object at the next level of nesting.</span></span>  
  
 <span data-ttu-id="5937e-243">Vous pouvez déterminer dynamiquement le nombre de composants dans une liste imbriquée `Tuple` objet qui est retourné par la <xref:System.Tuple%608.Rest%2A> propriété en extrayant le chiffre de son nom de type.</span><span class="sxs-lookup"><span data-stu-id="5937e-243">You can dynamically determine the number of components in a nested `Tuple` object that is returned by the <xref:System.Tuple%608.Rest%2A> property by extracting the digit from its type name.</span></span> <span data-ttu-id="5937e-244">L'exemple suivant illustre cette situation.</span><span class="sxs-lookup"><span data-stu-id="5937e-244">The following example provides an illustration.</span></span>  
  
 [!code-vb[System.Tuple\`8.Item1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/rest.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="5937e-245">L’exemple suivant crée un objet de 17-tuple qui contient les données de population pour la ville de Détroit, Michigan, de 1860 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-245">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="5937e-246">Le septième composant du tuple-17 est la population en 1900.</span><span class="sxs-lookup"><span data-stu-id="5937e-246">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="5937e-247">L’exemple utilise le <xref:System.Tuple%608.Rest%2A> propriété pour récupérer les valeurs du huitième au quatorzième composants et il utilise le <xref:System.Tuple%608.Rest%2A> propriété d’imbriqué <xref:System.Tuple%608> objet pour récupérer les valeurs des composants restants.</span><span class="sxs-lookup"><span data-stu-id="5937e-247">The example uses the <xref:System.Tuple%608.Rest%2A> property to retrieve the values of the eighth through fourteenth components, and it uses the <xref:System.Tuple%608.Rest%2A> property of the nested <xref:System.Tuple%608> object to retrieve the values of the remaining components.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5937e-248">Objet à comparer à l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="5937e-248">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="5937e-249">Un objet qui fournit des règles personnalisées pour la comparaison.</span><span class="sxs-lookup"><span data-stu-id="5937e-249">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="5937e-250">Compare l'objet <see cref="T:System.Tuple`8" /> actif à un objet spécifié à l'aide d'un comparateur spécifié et retourne un entier qui indique si l'objet actif précède, suit ou se trouve à la même position que l'objet spécifié dans l'ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="5937e-250">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="5937e-251">Entier signé qui indique la position relative de cette instance et de <paramref name="other" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="5937e-251">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="5937e-252">Value</span><span class="sxs-lookup"><span data-stu-id="5937e-252">Value</span></span> 
 </term><description> <span data-ttu-id="5937e-253">Description </span><span class="sxs-lookup"><span data-stu-id="5937e-253">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="5937e-254">Entier négatif</span><span class="sxs-lookup"><span data-stu-id="5937e-254">A negative integer</span></span> 
 </term><description> <span data-ttu-id="5937e-255">Cette instance précède <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-255">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="5937e-256">Zéro</span><span class="sxs-lookup"><span data-stu-id="5937e-256">Zero</span></span> 
 </term><description> <span data-ttu-id="5937e-257">Cette instance et <paramref name="other" /> ont la même position dans l'ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="5937e-257">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="5937e-258">Entier positif</span><span class="sxs-lookup"><span data-stu-id="5937e-258">A positive integer</span></span> 
 </term><description> <span data-ttu-id="5937e-259">Cette instance suit <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-259">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-260">Ce membre est une implémentation d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="5937e-260">This member is an explicit interface implementation.</span></span> <span data-ttu-id="5937e-261">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%608> est castée en interface <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="5937e-261">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="5937e-262">Cette méthode vous permet de définir des comparaisons personnalisées de <xref:System.Tuple%608> objets.</span><span class="sxs-lookup"><span data-stu-id="5937e-262">This method lets you define customized comparisons of <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="5937e-263">Par exemple, vous pouvez utiliser cette méthode à la commande <xref:System.Tuple%608> objets basés sur la valeur d’un composant spécifique.</span><span class="sxs-lookup"><span data-stu-id="5937e-263">For example, you can use this method to order <xref:System.Tuple%608> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="5937e-264">Bien que cette méthode peut être appelée directement, elle est généralement appelée par tri à la collection de méthodes qui incluent <xref:System.Collections.IComparer> paramètres pour classer les membres d’une collection.</span><span class="sxs-lookup"><span data-stu-id="5937e-264">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="5937e-265">Par exemple, elle est appelée par le <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> (méthode) et le <xref:System.Collections.SortedList.Add%2A> méthode d’un <xref:System.Collections.SortedList> objet est instancié à l’aide de la <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructeur.</span><span class="sxs-lookup"><span data-stu-id="5937e-265">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="5937e-266">Le <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> méthode est conçue pour une utilisation dans les opérations de tri.</span><span class="sxs-lookup"><span data-stu-id="5937e-266">The <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="5937e-267">Elle ne doit pas être utilisée lors de l’objectif principal d’une comparaison consiste à déterminer si deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="5937e-267">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="5937e-268">Pour déterminer si deux objets sont égales, appelez le <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5937e-268">To determine whether two objects are equal, call the <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5937e-269">L’exemple suivant crée un tableau de <xref:System.Tuple%608> objets qui contient les données démographiques pour quatre des villes américaines de 1940 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-269">The following example creates an array of <xref:System.Tuple%608> objects that contains population data for four U.S. cities from 1940 to 2000.</span></span> <span data-ttu-id="5937e-270">Premier composant de l’octuple est le nom de ville.</span><span class="sxs-lookup"><span data-stu-id="5937e-270">The octuple's first component is the city name.</span></span> <span data-ttu-id="5937e-271">Les six composants restants représentent la population à des intervalles de 10 ans de 1940 à 2000.</span><span class="sxs-lookup"><span data-stu-id="5937e-271">The remaining six components represent the population at 10-year intervals from 1940 to 2000.</span></span>  
  
 <span data-ttu-id="5937e-272">Le `PopulationComparer` classe fournit un <xref:System.Collections.IComparer> implémentation qui autorise le tableau d’octuples à être trié par l’un de ses composants.</span><span class="sxs-lookup"><span data-stu-id="5937e-272">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of octuples to be sorted by any one of its components.</span></span> <span data-ttu-id="5937e-273">Deux valeurs sont fournies à la `PopulationComparer` classe dans son constructeur : la position du composant qui définit l’ordre de tri, et un <xref:System.Boolean> valeur qui indique si les objets de tuple doivent être triés dans l’ordre croissant ou décroissant.</span><span class="sxs-lookup"><span data-stu-id="5937e-273">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="5937e-274">L’exemple puis affiche les éléments dans le tableau dans un ordre aléatoire, les trie par le troisième composant (population en 1950) et les affiche, puis les trie par le huitième composant (population en 2000) et les affiche.</span><span class="sxs-lookup"><span data-stu-id="5937e-274">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1950) and displays them, and then sorts them by the eighth component (the population in 2000) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`8.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5937e-275"><paramref name="other" /> n’est pas un objet <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-275"><paramref name="other" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5937e-276">Objet à comparer avec cette instance.</span><span class="sxs-lookup"><span data-stu-id="5937e-276">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="5937e-277">Un objet qui définit la méthode à utiliser pour évaluer si les deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="5937e-277">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="5937e-278">Retourne une valeur qui indique si l'objet <see cref="T:System.Tuple`8" /> actif est égal à un objet spécifié selon une méthode de comparaison spécifiée.</span><span class="sxs-lookup"><span data-stu-id="5937e-278">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="5937e-279"><see langword="true" /> si l'instance actuelle est égale à l'objet spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-279"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-280">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="5937e-280">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5937e-281">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%608> est castée en interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="5937e-281">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="5937e-282">Le <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implémentation est appelée uniquement si `other` n’est pas `null`, et si elle peut être casté (en c#) ou converti (en Visual Basic) en un <xref:System.Tuple%608> objet qui a le même nombre total de composants (y compris ceux imbriqués `Tuple` objets) des mêmes types que l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="5937e-282">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%608> object that has the same total number of components (including those in nested `Tuple` objects) of the same types as the current instance.</span></span> <span data-ttu-id="5937e-283">Le <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> passe en premier (méthode) le <xref:System.Tuple%608.Item1%2A> les valeurs de la <xref:System.Tuple%608> objets à comparer à la <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="5937e-283">The <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%608.Item1%2A> values of the <xref:System.Tuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="5937e-284">Si cet appel de méthode retourne `true`, la méthode est appelée à nouveau et passée le <xref:System.Tuple%608.Item2%2A> les valeurs des deux <xref:System.Tuple%608> objets.</span><span class="sxs-lookup"><span data-stu-id="5937e-284">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%608.Item2%2A> values of the two <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="5937e-285">Ce processus se poursuit jusqu'à ce que l’appel de méthode retourne `false` lorsqu’il compare une paire spécifique de valeurs, ou les deux <xref:System.Tuple%608.Rest%2A> valeurs sont passées à la méthode.</span><span class="sxs-lookup"><span data-stu-id="5937e-285">This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.Tuple%608.Rest%2A> values are passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="5937e-286">Objet dont la méthode <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcule le code de hachage de l'objet <see cref="T:System.Tuple`8" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="5937e-286">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`8" /> object.</span></span></param>
        <summary><span data-ttu-id="5937e-287">Calcule le code de hachage pour l'objet <see cref="T:System.Tuple`8" /> actif à l'aide d'une méthode de calcul spécifiée.</span><span class="sxs-lookup"><span data-stu-id="5937e-287">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="5937e-288">Code de hachage d'un entier signé 32 bits.</span><span class="sxs-lookup"><span data-stu-id="5937e-288">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-289">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="5937e-289">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5937e-290">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%608> est castée en interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="5937e-290">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="5937e-291">La méthode encapsule simplement un appel à la `comparer` l’objet <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="5937e-291">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="5937e-292">L’algorithme utilisé pour calculer le code de hachage doit retourner le même code de hachage pour deux <xref:System.Tuple%608> les objets qui sont considérées comme égales.</span><span class="sxs-lookup"><span data-stu-id="5937e-292">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%608> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5937e-293">Objet à comparer à l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="5937e-293">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="5937e-294">Compare l’objet <see cref="T:System.Tuple`8" /> actuel à un objet spécifié et renvoie un entier qui indique si l’objet actuel est avant, après ou à la même position que l’objet spécifié dans l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="5937e-294">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="5937e-295">Entier signé qui indique la position relative de cette instance et de <paramref name="obj" /> dans l’ordre de tri, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="5937e-295">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="5937e-296">Value</span><span class="sxs-lookup"><span data-stu-id="5937e-296">Value</span></span> 
 </term><description> <span data-ttu-id="5937e-297">Description </span><span class="sxs-lookup"><span data-stu-id="5937e-297">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="5937e-298">Entier négatif</span><span class="sxs-lookup"><span data-stu-id="5937e-298">A negative integer</span></span> 
 </term><description> <span data-ttu-id="5937e-299">Cette instance précède <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-299">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="5937e-300">Zéro</span><span class="sxs-lookup"><span data-stu-id="5937e-300">Zero</span></span> 
 </term><description> <span data-ttu-id="5937e-301">Cette instance et <paramref name="obj" /> ont la même position dans l'ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="5937e-301">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="5937e-302">Entier positif</span><span class="sxs-lookup"><span data-stu-id="5937e-302">A positive integer</span></span> 
 </term><description> <span data-ttu-id="5937e-303">Cette instance suit <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-303">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-304">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="5937e-304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5937e-305">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Tuple%608> est castée en interface <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="5937e-305">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="5937e-306">Cette méthode fournit le <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implémentation pour la <xref:System.Tuple%608> classe.</span><span class="sxs-lookup"><span data-stu-id="5937e-306">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%608> class.</span></span> <span data-ttu-id="5937e-307">Bien que la méthode peut être appelée directement, elle est généralement appelée par les surcharges par défaut de tri à la collection de méthodes, telles que <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> et <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, pour classer les membres d’une collection.</span><span class="sxs-lookup"><span data-stu-id="5937e-307">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="5937e-308">Le <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> méthode est conçue pour une utilisation dans les opérations de tri.</span><span class="sxs-lookup"><span data-stu-id="5937e-308">The <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="5937e-309">Elle ne doit pas être utilisée lors de l’objectif principal d’une comparaison consiste à déterminer si deux objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="5937e-309">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="5937e-310">Pour déterminer si deux objets sont égales, appelez le <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5937e-310">To determine whether two objects are equal, call the <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5937e-311">Cette méthode utilise le comparateur d’objet par défaut pour comparer chaque composant.</span><span class="sxs-lookup"><span data-stu-id="5937e-311">This method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5937e-312">L’exemple suivant crée un tableau d’octuples dont les composants sont des entiers qui contiennent une plage de nombres premiers.</span><span class="sxs-lookup"><span data-stu-id="5937e-312">The following example creates an array of octuples whose components are integers that contain a range of prime numbers.</span></span> <span data-ttu-id="5937e-313">L’exemple affiche les éléments du tableau en ordre non trié, trie le tableau, puis affiche le tableau dans un ordre trié.</span><span class="sxs-lookup"><span data-stu-id="5937e-313">The example displays the elements of the array in unsorted order, sorts the array, and then displays the array in sorted order.</span></span> <span data-ttu-id="5937e-314">La sortie montre que le tableau a été trié par <xref:System.Tuple%608.Item1%2A>, ou le premier composant du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-314">The output shows that the array has been sorted by <xref:System.Tuple%608.Item1%2A>, or the tuple's first component.</span></span> <span data-ttu-id="5937e-315">Notez que l’exemple n’appelle pas directement la <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5937e-315">Note that the example does not directly call the <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="5937e-316">Cette méthode est appelée implicitement par la <xref:System.Array.Sort%28System.Array%29> méthode pour chaque élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="5937e-316">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`8.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5937e-317"><paramref name="obj" /> n’est pas un objet <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-317"><paramref name="obj" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5937e-318">Index de l’élément <see langword="Tuple" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="5937e-318">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="5937e-319"><paramref name="index" /> peut être compris entre 0 pour <see langword="Item1" /> et un de moins que le nombre d’éléments dans <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-319"><paramref name="index" /> can range from 0 for <see langword="Item1" /> to one less than the number of elements in the <see langword="Tuple" />.</span></span></param>
        <summary><span data-ttu-id="5937e-320">Obtient la valeur de l’élément <see langword="Tuple" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="5937e-320">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="5937e-321">Valeur de l’élément <see langword="Tuple" /> à la position spécifiée.</span><span class="sxs-lookup"><span data-stu-id="5937e-321">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-322">Le <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propriété est une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="5937e-322">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="5937e-323">Pour l’appeler, vous devez effectuer un cast ou convertir le <xref:System.Tuple%608> de l’objet à un <xref:System.Runtime.CompilerServices.ITuple> objet d’interface.</span><span class="sxs-lookup"><span data-stu-id="5937e-323">To call it, you must cast or convert the <xref:System.Tuple%608> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="5937e-324"><paramref name="index" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="5937e-324"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="5937e-325">- ou -</span><span class="sxs-lookup"><span data-stu-id="5937e-325">-or-</span></span> 
 <span data-ttu-id="5937e-326"><paramref name="index" /> est supérieur ou égal à <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-326"><paramref name="index" /> is greater than or equal to <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5937e-327">Obtient le nombre d’éléments dans <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-327">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="5937e-328">Nombre d'éléments dans <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-328">The number of elements in the <see langword="Tuple" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-329">Le <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> propriété est une implémentation d’interface explicite.</span><span class="sxs-lookup"><span data-stu-id="5937e-329">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="5937e-330">Pour l’appeler, vous devez effectuer un cast ou convertir le <xref:System.Tuple%608> type à un <xref:System.Runtime.CompilerServices.ITuple> objet d’interface.</span><span class="sxs-lookup"><span data-stu-id="5937e-330">To call it, you must cast or convert the <xref:System.Tuple%608> type to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5937e-331">Retourne une chaîne qui représente la valeur de cette instance <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-331">Returns a string that represents the value of this <see cref="T:System.Tuple`8" /> instance.</span></span></summary>
        <returns><span data-ttu-id="5937e-332">Représentation sous forme de chaîne de cet objet <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="5937e-332">The string representation of this <see cref="T:System.Tuple`8" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5937e-333">La chaîne retournée par cette méthode prend la forme (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`,  *Item8*...), où *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, et *Item7* représentent les valeurs de la <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, et <xref:System.Tuple%608.Item7%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="5937e-333">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, and <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="5937e-334">*Item8* représente la valeur de la <xref:System.Tuple%608> l’objet `Next.Item1` propriété.</span><span class="sxs-lookup"><span data-stu-id="5937e-334">*Item8* represents the value of the <xref:System.Tuple%608> object's `Next.Item1` property.</span></span> <span data-ttu-id="5937e-335">Suivez la valeur de tous les autres composants imbriqués *Item8*.</span><span class="sxs-lookup"><span data-stu-id="5937e-335">The value of any additional nested components follow *Item8*.</span></span> <span data-ttu-id="5937e-336">Si une des valeurs de propriété est `null`, il est représenté en tant que <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5937e-336">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5937e-337">L’exemple suivant crée un tuple de 17 qui contient les données de population pour la ville de Détroit, Michigan, de 1860 à 1900.</span><span class="sxs-lookup"><span data-stu-id="5937e-337">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, from 1860 to 1900.</span></span> <span data-ttu-id="5937e-338">Il utilise ensuite la <xref:System.Tuple%608.ToString%2A> méthode pour afficher les données du tuple.</span><span class="sxs-lookup"><span data-stu-id="5937e-338">It then uses the <xref:System.Tuple%608.ToString%2A> method to display the tuple's data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`8.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>