<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeAccessException.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e71d4438b64e2e0faafd3911fdbaed3778fde521.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e71d4438b64e2e0faafd3911fdbaed3778fde521</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.TypeAccessException">
          <source>The exception that is thrown when a method attempts to use a type that it does not have access to.</source>
          <target state="translated">Exception levée lorsqu'une méthode essaie d'utiliser un type auquel elle n'a pas accès.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeAccessException">
          <source><ph id="ph1">&lt;xref:System.TypeAccessException&gt;</ph> is thrown when a method attempts to cast an object to a type that is not accessible from the method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.TypeAccessException&gt;</ph> est levée lorsqu’une méthode essaie d’effectuer un cast d’un objet en un type qui n’est pas accessible à partir de la méthode.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeAccessException">
          <source>For example, an anonymously hosted dynamic method cannot access a security-critical type because the method is <bpt id="p1">[</bpt>transparent<ept id="p1">](~/docs/framework/misc/security-transparent-code.md)</ept>.</source>
          <target state="translated">Par exemple, une méthode dynamique hébergée de manière anonyme ne peut pas accéder à un type critique de sécurité, car la méthode est <bpt id="p1">[</bpt>transparent<ept id="p1">](~/docs/framework/misc/security-transparent-code.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeAccessException">
          <source>If the method contains a <ph id="ph1">&lt;xref:System.Reflection.Emit.OpCodes.Castclass?displayProperty=nameWithType&gt;</ph> instruction that casts an object to a security-critical type, or to a generic type that has a security-critical type as one of its type parameters, <ph id="ph2">&lt;xref:System.TypeAccessException&gt;</ph> is thrown by the JIT compiler.</source>
          <target state="translated">Si la méthode contient un <ph id="ph1">&lt;xref:System.Reflection.Emit.OpCodes.Castclass?displayProperty=nameWithType&gt;</ph> instruction qui effectue un cast d’un objet à un type critique de sécurité, ou à un type générique qui a un type critique de sécurité comme l’un de ses paramètres de type <ph id="ph2">&lt;xref:System.TypeAccessException&gt;</ph> est levée par le compilateur JIT.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeAccessException">
          <source>Similarly, <ph id="ph1">&lt;xref:System.TypeAccessException&gt;</ph> is thrown for a dynamic method that uses an internal type from another assembly.</source>
          <target state="translated">De même, <ph id="ph1">&lt;xref:System.TypeAccessException&gt;</ph> est levée pour une méthode dynamique qui utilise un type interne d’un autre assembly.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeAccessException">
          <source>A method might not have access to its containing type, its return type, or one of its parameter types.</source>
          <target state="translated">Une méthode n’est peut-être pas accès à son type conteneur, son type de retour ou un de ses types de paramètre.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeAccessException">
          <source>Apps compiled by using the <ph id="ph1">[!INCLUDE[net_native](~/includes/net-native-md.md)]</ph> tool chain may throw a  exception at runtime.</source>
          <target state="translated">Applications compilées à l’aide de la <ph id="ph1">[!INCLUDE[net_native](~/includes/net-native-md.md)]</ph> chaîne d’outils peut lever une exception lors de l’exécution.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeAccessException">
          <source>is an internal-only exception type derived from <ph id="ph1">&lt;xref:System.TypeAccessException&gt;</ph>.</source>
          <target state="translated">est un type d’exception interne uniquement dérivé <ph id="ph1">&lt;xref:System.TypeAccessException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeAccessException">
          <source>The exception indicates that metadata needed for the successful execution of an app is not present at runtime.</source>
          <target state="translated">L’exception indique que les métadonnées nécessaires pour l’exécution réussie d’une application ne soient pas présente lors de l’exécution.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeAccessException">
          <source>You should not use a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block to handle the exception.</source>
          <target state="translated">Vous ne devez pas utiliser un <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> bloc pour gérer l’exception.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypeAccessException">
          <source>Instead, you should determine what metadata is missing and modify your app's  to ensure that it is present at runtime.</source>
          <target state="translated">Au lieu de cela, vous devez déterminer les métadonnées sont manquantes et modifier votre application pour vous assurer qu’il est présent lors de l’exécution.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.TypeAccessException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.TypeAccessException" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.TypeAccessException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.TypeAccessException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.TypeAccessException" /&gt;</ph> class with a system-supplied message that describes the error.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.TypeAccessException" /&gt;</ph> avec un message système qui décrit l'erreur.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Attempt to access the type failed."</source>
          <target state="translated">Ce constructeur initialise la <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> propriété de la nouvelle instance à un message système qui décrit l’erreur, tel que « Tentative d’accès du type a échoué. »</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor">
          <source>This message takes the current system culture into account.</source>
          <target state="translated">Ce message tient compte de la culture système en cours.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.TypeAccessException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.TypeAccessException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Référence Null (<ph id="ph1">`Nothing`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">Chaîne du message d'erreur localisé.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.TypeAccessException.#ctor(System.String)">
          <source>The message that describes the exception.</source>
          <target state="translated">Message décrivant l'exception.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.TypeAccessException.#ctor(System.String)">
          <source>The caller of this constructor must ensure that this string has been localized for the current system culture.</source>
          <target state="translated">L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système actuelle.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.TypeAccessException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.TypeAccessException" /&gt;</ph> class with a specified message that describes the error.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.TypeAccessException" /&gt;</ph> avec un message spécifié décrivant l'erreur.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.TypeAccessException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.TypeAccessException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Référence Null (<ph id="ph1">`Nothing`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.String)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated">Chaîne de message d'erreur spécifiée dans <ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.TypeAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized data.</source>
          <target state="translated">Objet qui contient les données sérialisées.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.TypeAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">Informations contextuelles sur la source ou la destination.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.TypeAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.TypeAccessException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.TypeAccessException" /&gt;</ph> avec des données sérialisées.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object that was transmitted over a stream.</source>
          <target state="translated">Ce constructeur est appelé pendant la désérialisation pour reconstituer l’objet exception transmis sur un flux de données.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>sérialisation XML et SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
          <source>The message that describes the exception.</source>
          <target state="translated">Message décrivant l'exception.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor must ensure that this string has been localized for the current system culture.</source>
          <target state="translated">L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système actuelle.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Exception ayant provoqué l'exception actuelle.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Si le paramètre <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> n’est pas <ph id="ph1">&lt;see langword="null" /&gt;</ph> l’exception actuelle est levée dans un bloc <ph id="ph2">&lt;see langword="catch" /&gt;</ph> qui gère l’exception interne.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.TypeAccessException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.TypeAccessException" /&gt;</ph> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Une exception levée en conséquence directe d'une exception précédente doit contenir une référence à celle-ci dans la propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> retourne la même valeur que celle qui a été passée dans le constructeur ou retourne <ph id="ph2">`null`</ph> si la propriété <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> ne fournit pas la valeur d'exception interne au constructeur.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.TypeAccessException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.TypeAccessException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Référence Null (<ph id="ph1">`Nothing`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated">Chaîne de message d'erreur spécifiée dans <ph id="ph1">`message`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>