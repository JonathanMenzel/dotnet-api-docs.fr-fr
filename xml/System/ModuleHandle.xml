<Type Name="ModuleHandle" FullName="System.ModuleHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9f200b193cd221f7108c8b67db53da34a4de0120" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58698790" /></Metadata><TypeSignature Language="C#" Value="public struct ModuleHandle" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ModuleHandle extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ModuleHandle" />
  <TypeSignature Language="VB.NET" Value="Public Structure ModuleHandle" />
  <TypeSignature Language="C++ CLI" Value="public value class ModuleHandle" />
  <TypeSignature Language="F#" Value="type ModuleHandle = struct" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente le handle runtime d'un module.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.ModuleHandle.ResolveFieldHandle%2A>, <xref:System.ModuleHandle.ResolveMethodHandle%2A>, et <xref:System.ModuleHandle.ResolveTypeHandle%2A> méthodes fournissent une résolution efficace des jetons de métadonnées pour les handles d’exécution pour les champs, méthodes et types du module en cours.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.Module" />
  </Docs>
  <Members>
    <Member MemberName="EmptyHandle">
      <MemberSignature Language="C#" Value="public static readonly ModuleHandle EmptyHandle;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.ModuleHandle EmptyHandle" />
      <MemberSignature Language="DocId" Value="F:System.ModuleHandle.EmptyHandle" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EmptyHandle As ModuleHandle " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly ModuleHandle EmptyHandle;" />
      <MemberSignature Language="F#" Value=" staticval mutable EmptyHandle : ModuleHandle" Usage="System.ModuleHandle.EmptyHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ModuleHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente un handle de module vide.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Détermine si la structure <see cref="T:System.ModuleHandle" /> spécifiée est égale à l'objet <see cref="T:System.ModuleHandle" /> en cours.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ModuleHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.ModuleHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.Equals(System.ModuleHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (handle As ModuleHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(ModuleHandle handle);" />
      <MemberSignature Language="F#" Value="override this.Equals : ModuleHandle -&gt; bool" Usage="moduleHandle.Equals handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.ModuleHandle" />
      </Parameters>
      <Docs>
        <param name="handle">Structure <see cref="T:System.ModuleHandle" /> à comparer à l'objet <see cref="T:System.ModuleHandle" /> en cours.</param>
        <summary>Retourne une valeur <see cref="T:System.Boolean" /> indiquant si la structure <see cref="T:System.ModuleHandle" /> spécifiée est égale à l'objet <see cref="T:System.ModuleHandle" /> en cours.</summary>
        <returns><see langword="true" /> si <paramref name="handle" /> est égal à la structure <see cref="T:System.ModuleHandle" /> en cours ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="moduleHandle.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objet à comparer avec la structure <see cref="T:System.ModuleHandle" /> en cours.</param>
        <summary>Retourne une valeur <see cref="T:System.Boolean" /> indiquant si l'objet spécifié est une structure <see cref="T:System.ModuleHandle" /> et s'il est égal à l'objet <see cref="T:System.ModuleHandle" /> en cours.</summary>
        <returns><see langword="true" /> si <paramref name="obj" /> est une structure <see cref="T:System.ModuleHandle" /> et qu'elle est égale à la structure <see cref="T:System.ModuleHandle" /> en cours ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="moduleHandle.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne le code de hachage de cette instance.</summary>
        <returns>Entier signé 32 bits qui est le code de hachage pour cette instance.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeFieldHandleFromMetadataToken">
      <MemberSignature Language="C#" Value="public RuntimeFieldHandle GetRuntimeFieldHandleFromMetadataToken (int fieldToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeFieldHandle GetRuntimeFieldHandleFromMetadataToken(int32 fieldToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeFieldHandleFromMetadataToken (fieldToken As Integer) As RuntimeFieldHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeFieldHandle GetRuntimeFieldHandleFromMetadataToken(int fieldToken);" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeFieldHandleFromMetadataToken : int -&gt; RuntimeFieldHandle" Usage="moduleHandle.GetRuntimeFieldHandleFromMetadataToken fieldToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeFieldHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fieldToken">Jeton de métadonnées qui identifie un champ dans le module.</param>
        <summary>Retourne un handle runtime pour le champ identifié par le jeton de métadonnées spécifié.</summary>
        <returns><see cref="T:System.RuntimeFieldHandle" /> pour le champ identifié par <paramref name="fieldToken" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeMethodHandleFromMetadataToken">
      <MemberSignature Language="C#" Value="public RuntimeMethodHandle GetRuntimeMethodHandleFromMetadataToken (int methodToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeMethodHandle GetRuntimeMethodHandleFromMetadataToken(int32 methodToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeMethodHandleFromMetadataToken (methodToken As Integer) As RuntimeMethodHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeMethodHandle GetRuntimeMethodHandleFromMetadataToken(int methodToken);" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeMethodHandleFromMetadataToken : int -&gt; RuntimeMethodHandle" Usage="moduleHandle.GetRuntimeMethodHandleFromMetadataToken methodToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="methodToken">Jeton de métadonnées qui identifie une méthode ou un constructeur dans le module.</param>
        <summary>Retourne un handle de méthode runtime pour la méthode ou le constructeur identifié par le jeton de métadonnées spécifié.</summary>
        <returns><see cref="T:System.RuntimeMethodHandle" /> de la méthode ou du constructeur identifié par <paramref name="methodToken" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeTypeHandleFromMetadataToken">
      <MemberSignature Language="C#" Value="public RuntimeTypeHandle GetRuntimeTypeHandleFromMetadataToken (int typeToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeTypeHandle GetRuntimeTypeHandleFromMetadataToken(int32 typeToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeTypeHandleFromMetadataToken (typeToken As Integer) As RuntimeTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeTypeHandle GetRuntimeTypeHandleFromMetadataToken(int typeToken);" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeTypeHandleFromMetadataToken : int -&gt; RuntimeTypeHandle" Usage="moduleHandle.GetRuntimeTypeHandleFromMetadataToken typeToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="typeToken">Jeton de métadonnées qui identifie un type dans le module.</param>
        <summary>Retourne un handle de type au moment de l'exécution pour le champ identifié par le jeton de métadonnées spécifié.</summary>
        <returns><see cref="T:System.RuntimeTypeHandle" /> pour le type identifié par <paramref name="typeToken" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MDStreamVersion">
      <MemberSignature Language="C#" Value="public int MDStreamVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MDStreamVersion" />
      <MemberSignature Language="DocId" Value="P:System.ModuleHandle.MDStreamVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MDStreamVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MDStreamVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MDStreamVersion : int" Usage="System.ModuleHandle.MDStreamVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la version de flux des métadonnées.</summary>
        <value>Entier 32 bits représentant la version de flux des métadonnées. Les deux octets de poids fort représentent le numéro de la version principale, et les deux octets de poids faible représentent le numéro de la version secondaire.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Pour plus d’informations sur l’en-tête de métadonnées, consultez la Partition II : Documentation de la définition de métadonnées et la sémantique. La documentation est disponible en ligne. Consultez [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) sur MSDN et [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) sur le site web d’Ecma International.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ModuleHandle left, ModuleHandle right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.ModuleHandle left, valuetype System.ModuleHandle right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.op_Equality(System.ModuleHandle,System.ModuleHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ModuleHandle, right As ModuleHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(ModuleHandle left, ModuleHandle right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : ModuleHandle * ModuleHandle -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.ModuleHandle" />
        <Parameter Name="right" Type="System.ModuleHandle" />
      </Parameters>
      <Docs>
        <param name="left">La structure <see cref="T:System.ModuleHandle" /> qui se trouve à gauche de l'opérateur d'égalité.</param>
        <param name="right">La structure <see cref="T:System.ModuleHandle" /> qui se trouve à droite de l'opérateur d'égalité.</param>
        <summary>Teste si deux structures <see cref="T:System.ModuleHandle" /> sont égales.</summary>
        <returns><see langword="true" /> si les structures <see cref="T:System.ModuleHandle" /> sont égales ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[La méthode équivalente pour cet opérateur est <xref:System.ModuleHandle.Equals%28System.ModuleHandle%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ModuleHandle left, ModuleHandle right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.ModuleHandle left, valuetype System.ModuleHandle right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.op_Inequality(System.ModuleHandle,System.ModuleHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ModuleHandle, right As ModuleHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(ModuleHandle left, ModuleHandle right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : ModuleHandle * ModuleHandle -&gt; bool" Usage="System.ModuleHandle.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.ModuleHandle" />
        <Parameter Name="right" Type="System.ModuleHandle" />
      </Parameters>
      <Docs>
        <param name="left">Structure <see cref="T:System.ModuleHandle" /> qui se trouve à gauche de l’opérateur d’inégalité.</param>
        <param name="right">Structure <see cref="T:System.ModuleHandle" /> qui se trouve à droite de l’opérateur d’inégalité.</param>
        <summary>Teste si deux structures <see cref="T:System.ModuleHandle" /> ne sont pas égales.</summary>
        <returns><see langword="true" /> si les structures <see cref="T:System.ModuleHandle" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[La méthode équivalente pour cet opérateur est <xref:System.ModuleHandle.Equals%28System.ModuleHandle%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveFieldHandle">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne un handle de champ runtime pour un champ identifié par un jeton de métadonnées.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveFieldHandle">
      <MemberSignature Language="C#" Value="public RuntimeFieldHandle ResolveFieldHandle (int fieldToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeFieldHandle ResolveFieldHandle(int32 fieldToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.ResolveFieldHandle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveFieldHandle (fieldToken As Integer) As RuntimeFieldHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeFieldHandle ResolveFieldHandle(int fieldToken);" />
      <MemberSignature Language="F#" Value="member this.ResolveFieldHandle : int -&gt; RuntimeFieldHandle" Usage="moduleHandle.ResolveFieldHandle fieldToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeFieldHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fieldToken">Jeton de métadonnées qui identifie un champ dans le module.</param>
        <summary>Retourne un handle runtime pour le champ identifié par le jeton de métadonnées spécifié.</summary>
        <returns><see cref="T:System.RuntimeFieldHandle" /> pour le champ identifié par <paramref name="fieldToken" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour résoudre un jeton de métadonnées qui identifie un champ dont le parent `TypeSpec` a une signature contenant le type d’élément `var` ou `mvar`, utilisez le <xref:System.ModuleHandle.ResolveFieldHandle%28System.Int32%2CSystem.RuntimeTypeHandle%5B%5D%2CSystem.RuntimeTypeHandle%5B%5D%29> surcharge de méthode, qui vous permet de fournir le contexte nécessaire.  
  
> [!NOTE]
>  Plus d’informations sur les jetons de métadonnées peuvent être trouvés dans la documentation du Common Language Infrastructure (CLI), en particulier « Partition II : Metadata Definition and Semantics ». La documentation est disponible en ligne. Consultez [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) sur MSDN et [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) sur le site web d’Ecma International.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><paramref name="metadataToken" /> n'est pas un jeton valide dans la portée du module actuel.  
  
ou 
 <paramref name="metadataToken" /> n'est pas un jeton de champ dans la portée du module actuel.  
  
ou 
 <paramref name="metadataToken" /> identifie un champ dont le parent <see langword="TypeSpec" /> a une signature qui contient un type d'élément <see langword="var" /> ou <see langword="mvar" />.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode est appelée sur un handle de champ vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveFieldHandle">
      <MemberSignature Language="C#" Value="public RuntimeFieldHandle ResolveFieldHandle (int fieldToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeFieldHandle ResolveFieldHandle(int32 fieldToken, valuetype System.RuntimeTypeHandle[] typeInstantiationContext, valuetype System.RuntimeTypeHandle[] methodInstantiationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveFieldHandle (fieldToken As Integer, typeInstantiationContext As RuntimeTypeHandle(), methodInstantiationContext As RuntimeTypeHandle()) As RuntimeFieldHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeFieldHandle ResolveFieldHandle(int fieldToken, cli::array &lt;RuntimeTypeHandle&gt; ^ typeInstantiationContext, cli::array &lt;RuntimeTypeHandle&gt; ^ methodInstantiationContext);" />
      <MemberSignature Language="F#" Value="member this.ResolveFieldHandle : int * RuntimeTypeHandle[] * RuntimeTypeHandle[] -&gt; RuntimeFieldHandle" Usage="moduleHandle.ResolveFieldHandle (fieldToken, typeInstantiationContext, methodInstantiationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeFieldHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldToken" Type="System.Int32" />
        <Parameter Name="typeInstantiationContext" Type="System.RuntimeTypeHandle[]" />
        <Parameter Name="methodInstantiationContext" Type="System.RuntimeTypeHandle[]" />
      </Parameters>
      <Docs>
        <param name="fieldToken">Jeton de métadonnées qui identifie un champ dans le module.</param>
        <param name="typeInstantiationContext">Tableau de structures <see cref="T:System.RuntimeTypeHandle" /> représentant les arguments de type générique du type où se trouve le jeton dans la portée, ou <see langword="null" /> si ce type n'est pas générique.</param>
        <param name="methodInstantiationContext">Tableau de structures <see cref="T:System.RuntimeTypeHandle" /> représentant les arguments de type générique de la méthode où se trouve le jeton est dans la portée, ou <see langword="null" /> si cette méthode n'est pas générique.</param>
        <summary>Retourne un handle de champ runtime pour le champ identifié par le jeton de métadonnées spécifié, en spécifiant les arguments de type générique du type et de la méthode où se trouve le jeton dans la portée.</summary>
        <returns><see cref="T:System.RuntimeFieldHandle" /> pour le champ identifié par <paramref name="fieldToken" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Plus d’informations sur les jetons de métadonnées peuvent être trouvés dans la documentation du Common Language Infrastructure (CLI), en particulier « Partition II : Metadata Definition and Semantics ». La documentation est disponible en ligne. Consultez [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) sur MSDN et [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) sur le site web d’Ecma International.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><paramref name="metadataToken" /> n'est pas un jeton valide dans la portée du module actuel.  
  
ou 
 <paramref name="metadataToken" /> n'est pas un jeton de champ dans la portée du module actuel.  
  
ou 
 <paramref name="metadataToken" /> identifie un champ dont le parent <see langword="TypeSpec" /> a une signature qui contient un type d'élément <see langword="var" /> ou <see langword="mvar" />.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode est appelée sur un handle de champ vide.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="fieldToken" /> n’est pas un jeton valide.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveMethodHandle">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne un handle de méthode runtime pour la méthode ou le constructeur identifié par un jeton de métadonnées.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveMethodHandle">
      <MemberSignature Language="C#" Value="public RuntimeMethodHandle ResolveMethodHandle (int methodToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeMethodHandle ResolveMethodHandle(int32 methodToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.ResolveMethodHandle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveMethodHandle (methodToken As Integer) As RuntimeMethodHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeMethodHandle ResolveMethodHandle(int methodToken);" />
      <MemberSignature Language="F#" Value="member this.ResolveMethodHandle : int -&gt; RuntimeMethodHandle" Usage="moduleHandle.ResolveMethodHandle methodToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="methodToken">Jeton de métadonnées qui identifie une méthode ou un constructeur dans le module.</param>
        <summary>Retourne un handle de méthode runtime pour la méthode ou le constructeur identifié par le jeton de métadonnées spécifié.</summary>
        <returns><see cref="T:System.RuntimeMethodHandle" /> de la méthode ou du constructeur identifié par <paramref name="methodToken" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour résoudre un jeton de métadonnées pour un `MethodSpec` dont la signature contient le type d’élément `var` ou `mvar`, utilisez le <xref:System.ModuleHandle.ResolveMethodHandle%28System.Int32%2CSystem.RuntimeTypeHandle%5B%5D%2CSystem.RuntimeTypeHandle%5B%5D%29> surcharge de méthode, qui vous permet de fournir le contexte nécessaire.  
  
> [!NOTE]
>  Plus d’informations sur les jetons de métadonnées peuvent être trouvés dans la documentation du Common Language Infrastructure (CLI), en particulier « Partition II : Metadata Definition and Semantics ». La documentation est disponible en ligne. Consultez [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) sur MSDN et [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) sur le site web d’Ecma International.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><paramref name="methodToken" /> n'est pas un jeton de métadonnées valide pour une méthode du module en cours.  
  
ou 
 <paramref name="metadataToken" /> n'est pas un jeton pour une méthode ou un constructeur dans la portée du module en cours.  
  
ou 
 <paramref name="metadataToken" /> est un <see langword="MethodSpec" /> dont la signature contient le type d'élément <see langword="var" /> ou <see langword="mvar" />.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode est appelée sur un handle de méthode vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMethodHandle">
      <MemberSignature Language="C#" Value="public RuntimeMethodHandle ResolveMethodHandle (int methodToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeMethodHandle ResolveMethodHandle(int32 methodToken, valuetype System.RuntimeTypeHandle[] typeInstantiationContext, valuetype System.RuntimeTypeHandle[] methodInstantiationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveMethodHandle (methodToken As Integer, typeInstantiationContext As RuntimeTypeHandle(), methodInstantiationContext As RuntimeTypeHandle()) As RuntimeMethodHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeMethodHandle ResolveMethodHandle(int methodToken, cli::array &lt;RuntimeTypeHandle&gt; ^ typeInstantiationContext, cli::array &lt;RuntimeTypeHandle&gt; ^ methodInstantiationContext);" />
      <MemberSignature Language="F#" Value="member this.ResolveMethodHandle : int * RuntimeTypeHandle[] * RuntimeTypeHandle[] -&gt; RuntimeMethodHandle" Usage="moduleHandle.ResolveMethodHandle (methodToken, typeInstantiationContext, methodInstantiationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodToken" Type="System.Int32" />
        <Parameter Name="typeInstantiationContext" Type="System.RuntimeTypeHandle[]" />
        <Parameter Name="methodInstantiationContext" Type="System.RuntimeTypeHandle[]" />
      </Parameters>
      <Docs>
        <param name="methodToken">Jeton de métadonnées qui identifie une méthode ou un constructeur dans le module.</param>
        <param name="typeInstantiationContext">Tableau de structures <see cref="T:System.RuntimeTypeHandle" /> représentant les arguments de type générique du type où se trouve le jeton dans la portée, ou <see langword="null" /> si ce type n'est pas générique.</param>
        <param name="methodInstantiationContext">Tableau de structures <see cref="T:System.RuntimeTypeHandle" /> représentant les arguments de type générique de la méthode où se trouve le jeton est dans la portée, ou <see langword="null" /> si cette méthode n'est pas générique.</param>
        <summary>Retourne un handle de méthode runtime pour la méthode ou le constructeur identifié par le jeton de métadonnées spécifié, en spécifiant les arguments de type générique du type et de la méthode où se trouve le jeton dans la portée.</summary>
        <returns><see cref="T:System.RuntimeMethodHandle" /> de la méthode ou du constructeur identifié par <paramref name="methodToken" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Plus d’informations sur les jetons de métadonnées peuvent être trouvés dans la documentation du Common Language Infrastructure (CLI), en particulier « Partition II : Metadata Definition and Semantics ». La documentation est disponible en ligne. Consultez [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) sur MSDN et [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) sur le site web d’Ecma International.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><paramref name="methodToken" /> n'est pas un jeton de métadonnées valide pour une méthode du module en cours.  
  
ou 
 <paramref name="metadataToken" /> n'est pas un jeton pour une méthode ou un constructeur dans la portée du module en cours.  
  
ou 
 <paramref name="metadataToken" /> est un <see langword="MethodSpec" /> dont la signature contient le type d'élément <see langword="var" /> ou <see langword="mvar" />.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode est appelée sur un handle de méthode vide.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="methodToken" /> n’est pas un jeton valide.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveTypeHandle">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne un handle de type au moment de l'exécution pour un type identifié par un jeton de métadonnées.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveTypeHandle">
      <MemberSignature Language="C#" Value="public RuntimeTypeHandle ResolveTypeHandle (int typeToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeTypeHandle ResolveTypeHandle(int32 typeToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.ResolveTypeHandle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveTypeHandle (typeToken As Integer) As RuntimeTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeTypeHandle ResolveTypeHandle(int typeToken);" />
      <MemberSignature Language="F#" Value="member this.ResolveTypeHandle : int -&gt; RuntimeTypeHandle" Usage="moduleHandle.ResolveTypeHandle typeToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="typeToken">Jeton de métadonnées qui identifie un type dans le module.</param>
        <summary>Retourne un handle de type au moment de l'exécution pour le champ identifié par le jeton de métadonnées spécifié.</summary>
        <returns><see cref="T:System.RuntimeTypeHandle" /> pour le type identifié par <paramref name="typeToken" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour résoudre un jeton de métadonnées pour un `TypeSpec` dont la signature contient le type d’élément `var` ou `mvar`, utilisez le <xref:System.ModuleHandle.ResolveTypeHandle%28System.Int32%2CSystem.RuntimeTypeHandle%5B%5D%2CSystem.RuntimeTypeHandle%5B%5D%29> surcharge de méthode, qui vous permet de fournir le contexte nécessaire.  
  
> [!NOTE]
>  Plus d’informations sur les jetons de métadonnées peuvent être trouvés dans la documentation du Common Language Infrastructure (CLI), en particulier « Partition II : Metadata Definition and Semantics ». La documentation est disponible en ligne. Consultez [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) sur MSDN et [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) sur le site web d’Ecma International.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><paramref name="typeToken" /> n'est pas un jeton de métadonnées valide pour un type du module en cours.  
  
ou 
 <paramref name="metadataToken" /> n'est pas le jeton d'un type dans la portée du module en cours.  
  
ou 
 <paramref name="metadataToken" /> est un <see langword="TypeSpec" /> dont la signature contient le type d'élément <see langword="var" /> ou <see langword="mvar" />.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode est appelée sur un handle de type vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeHandle">
      <MemberSignature Language="C#" Value="public RuntimeTypeHandle ResolveTypeHandle (int typeToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeTypeHandle ResolveTypeHandle(int32 typeToken, valuetype System.RuntimeTypeHandle[] typeInstantiationContext, valuetype System.RuntimeTypeHandle[] methodInstantiationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveTypeHandle (typeToken As Integer, typeInstantiationContext As RuntimeTypeHandle(), methodInstantiationContext As RuntimeTypeHandle()) As RuntimeTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeTypeHandle ResolveTypeHandle(int typeToken, cli::array &lt;RuntimeTypeHandle&gt; ^ typeInstantiationContext, cli::array &lt;RuntimeTypeHandle&gt; ^ methodInstantiationContext);" />
      <MemberSignature Language="F#" Value="member this.ResolveTypeHandle : int * RuntimeTypeHandle[] * RuntimeTypeHandle[] -&gt; RuntimeTypeHandle" Usage="moduleHandle.ResolveTypeHandle (typeToken, typeInstantiationContext, methodInstantiationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeToken" Type="System.Int32" />
        <Parameter Name="typeInstantiationContext" Type="System.RuntimeTypeHandle[]" />
        <Parameter Name="methodInstantiationContext" Type="System.RuntimeTypeHandle[]" />
      </Parameters>
      <Docs>
        <param name="typeToken">Jeton de métadonnées qui identifie un type dans le module.</param>
        <param name="typeInstantiationContext">Tableau de structures <see cref="T:System.RuntimeTypeHandle" /> représentant les arguments de type générique du type où se trouve le jeton dans la portée, ou <see langword="null" /> si ce type n'est pas générique.</param>
        <param name="methodInstantiationContext">Tableau d'objets de structure <see cref="T:System.RuntimeTypeHandle" /> représentant les arguments de type générique de la méthode où se trouve le jeton dans la portée, ou <see langword="null" /> si cette méthode n'est pas générique.</param>
        <summary>Retourne un handle de type au moment de l'exécution pour le type identifié par le jeton de métadonnées spécifié, en spécifiant les arguments de type générique du type et de la méthode où se trouve le jeton dans la portée.</summary>
        <returns><see cref="T:System.RuntimeTypeHandle" /> pour le type identifié par <paramref name="typeToken" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Plus d’informations sur les jetons de métadonnées peuvent être trouvés dans la documentation du Common Language Infrastructure (CLI), en particulier « Partition II : Metadata Definition and Semantics ». La documentation est disponible en ligne. Consultez [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) sur MSDN et [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) sur le site web d’Ecma International.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><paramref name="typeToken" /> n'est pas un jeton de métadonnées valide pour un type du module en cours.  
  
ou 
 <paramref name="metadataToken" /> n'est pas le jeton d'un type dans la portée du module en cours.  
  
ou 
 <paramref name="metadataToken" /> est un <see langword="TypeSpec" /> dont la signature contient le type d'élément <see langword="var" /> ou <see langword="mvar" />.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode est appelée sur un handle de type vide.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="typeToken" /> n’est pas un jeton valide.</exception>
      </Docs>
    </Member>
  </Members>
</Type>