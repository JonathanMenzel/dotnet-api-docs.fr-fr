<Type Name="ICloneable" FullName="System.ICloneable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81d441bf69059013e9540987ceb4c0a3f14b6cd5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430885" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ICloneable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICloneable" />
  <TypeSignature Language="F#" Value="type ICloneable = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="361a0-101">Prend en charge le clonage, qui crée une nouvelle instance d'une classe avec la même valeur qu'une instance existante.</span>
      <span class="sxs-lookup">
        <span data-stu-id="361a0-101">Supports cloning, which creates a new instance of a class with the same value as an existing instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="361a0-102">Le <xref:System.ICloneable> interface vous permet de fournir une implémentation personnalisée qui crée une copie d’un objet existant.</span><span class="sxs-lookup"><span data-stu-id="361a0-102">The <xref:System.ICloneable> interface enables you to provide a customized implementation that creates a copy of an existing object.</span></span> <span data-ttu-id="361a0-103">Le <xref:System.ICloneable> interface contient un seul membre, le <xref:System.ICloneable.Clone%2A> (méthode), qui vise à fournir la prise en charge de clonage au-delà de celles fournies par <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="361a0-103">The <xref:System.ICloneable> interface contains one member, the <xref:System.ICloneable.Clone%2A> method, which is intended to provide cloning support beyond that supplied by <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="361a0-104">Pour plus d’informations sur le clonage, profondeur et copie superficielle et des exemples, consultez la <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="361a0-104">For more information about cloning, deep versus shallow copies, and examples, see the <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="361a0-105">
        <para>Le <see cref="T:System.ICloneable" /> interface nécessite que votre implémentation de la <see cref="M:System.ICloneable.Clone" /> méthode retourne une copie de l’instance d’objet en cours. Elle n’indique pas si l’opération de clonage effectue une copie complète, une copie superficielle ou un élément entre les deux. Ni ne nécessite pas que toutes les valeurs de propriété de l’instance d’origine doit être copié vers la nouvelle instance. Par exemple, le <see cref="M:System.Globalization.NumberFormatInfo.Clone" /> méthode effectue une copie superficielle de toutes les propriétés à l’exception de la <see cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" /> propriété ; il définit toujours la valeur de cette propriété <see langword="false" /> dans l’objet cloné. Étant donné que les appelants de <see cref="M:System.ICloneable.Clone" /> ne peuvent pas dépendre de la méthode d’exécution prévisible opération de clonage, nous vous recommandons <see cref="T:System.ICloneable" /> ne pas être implémentées dans les API publiques.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="361a0-105">
          <para>The <see cref="T:System.ICloneable" /> interface simply requires that your implementation of the <see cref="M:System.ICloneable.Clone" /> method return a copy of the current object instance. It does not specify whether the cloning operation performs a deep copy, a shallow copy, or something in between. Nor does it require all property values of the original instance to be copied to the new instance. For example, the <see cref="M:System.Globalization.NumberFormatInfo.Clone" /> method performs a shallow copy of all properties except the <see cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" /> property; it always sets this property value to <see langword="false" /> in the cloned object. Because callers of <see cref="M:System.ICloneable.Clone" /> cannot depend on the method performing a predictable cloning operation, we recommend that <see cref="T:System.ICloneable" /> not be implemented in public APIs.</para>
        </span>
      </span>
    </block>
    <altmember cref="M:System.Object.MemberwiseClone" />
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ICloneable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj" Usage="iCloneable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="361a0-106">Crée un objet qui est une copie de l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="361a0-106">Creates a new object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="361a0-107">Nouvel objet qui est une copie de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="361a0-107">A new object that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="361a0-108">Le clone résultant doit être du même type, ou du moins compatible avec l’instance d’origine.</span><span class="sxs-lookup"><span data-stu-id="361a0-108">The resulting clone must be of the same type as, or compatible with, the original instance.</span></span>  
  
 <span data-ttu-id="361a0-109">Une implémentation de <xref:System.ICloneable.Clone%2A> peut effectuer une copie complète ou une copie superficielle.</span><span class="sxs-lookup"><span data-stu-id="361a0-109">An implementation of <xref:System.ICloneable.Clone%2A> can perform either a deep copy or a shallow copy.</span></span> <span data-ttu-id="361a0-110">Dans une copie complète, tous les objets sont dupliqués ; dans une copie superficielle, seuls les objets de niveau supérieur sont dupliqués et les niveaux inférieurs contiennent des références.</span><span class="sxs-lookup"><span data-stu-id="361a0-110">In a deep copy, all objects are duplicated; in a shallow copy, only the top-level objects are duplicated and the lower levels contain references.</span></span> <span data-ttu-id="361a0-111">Étant donné que les appelants de <xref:System.ICloneable.Clone%2A> ne peuvent pas dépendre de la méthode d’exécution prévisible opération de clonage, nous vous recommandons <xref:System.ICloneable> ne pas être implémentées dans les API publiques.</span><span class="sxs-lookup"><span data-stu-id="361a0-111">Because callers of <xref:System.ICloneable.Clone%2A> cannot depend on the method performing a predictable cloning operation, we recommend that <xref:System.ICloneable> not be implemented in public APIs.</span></span>  
  
 <span data-ttu-id="361a0-112">Consultez <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> pour plus d’informations sur le clonage, profondeur et copie superficielle et exemples.</span><span class="sxs-lookup"><span data-stu-id="361a0-112">See <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> for more information on cloning, deep versus shallow copies, and examples.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
  </Members>
</Type>