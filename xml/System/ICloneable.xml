<Type Name="ICloneable" FullName="System.ICloneable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81d441bf69059013e9540987ceb4c0a3f14b6cd5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430885" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ICloneable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICloneable" />
  <TypeSignature Language="F#" Value="type ICloneable = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Prend en charge le clonage, qui crée une nouvelle instance d'une classe avec la même valeur qu'une instance existante.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.ICloneable> interface vous permet de fournir une implémentation personnalisée qui crée une copie d’un objet existant. Le <xref:System.ICloneable> interface contient un seul membre, le <xref:System.ICloneable.Clone%2A> (méthode), qui vise à fournir la prise en charge de clonage au-delà de celles fournies par <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType>.  Pour plus d’informations sur le clonage, profondeur et copie superficielle et des exemples, consultez la <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Le <see cref="T:System.ICloneable" /> interface nécessite que votre implémentation de la <see cref="M:System.ICloneable.Clone" /> méthode retourne une copie de l’instance d’objet en cours. Elle n’indique pas si l’opération de clonage effectue une copie complète, une copie superficielle ou un élément entre les deux. Ni ne nécessite pas que toutes les valeurs de propriété de l’instance d’origine doit être copié vers la nouvelle instance. Par exemple, le <see cref="M:System.Globalization.NumberFormatInfo.Clone" /> méthode effectue une copie superficielle de toutes les propriétés à l’exception de la <see cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" /> propriété ; il définit toujours la valeur de cette propriété <see langword="false" /> dans l’objet cloné. Étant donné que les appelants de <see cref="M:System.ICloneable.Clone" /> ne peuvent pas dépendre de la méthode d’exécution prévisible opération de clonage, nous vous recommandons <see cref="T:System.ICloneable" /> ne pas être implémentées dans les API publiques.</para>
    </block>
    <altmember cref="M:System.Object.MemberwiseClone" />
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ICloneable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj" Usage="iCloneable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un objet qui est une copie de l'instance actuelle.</summary>
        <returns>Nouvel objet qui est une copie de cette instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le clone résultant doit être du même type, ou du moins compatible avec l’instance d’origine.  
  
 Une implémentation de <xref:System.ICloneable.Clone%2A> peut effectuer une copie complète ou une copie superficielle. Dans une copie complète, tous les objets sont dupliqués ; dans une copie superficielle, seuls les objets de niveau supérieur sont dupliqués et les niveaux inférieurs contiennent des références. Étant donné que les appelants de <xref:System.ICloneable.Clone%2A> ne peuvent pas dépendre de la méthode d’exécution prévisible opération de clonage, nous vous recommandons <xref:System.ICloneable> ne pas être implémentées dans les API publiques.  
  
 Consultez <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> pour plus d’informations sur le clonage, profondeur et copie superficielle et exemples.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
  </Members>
</Type>