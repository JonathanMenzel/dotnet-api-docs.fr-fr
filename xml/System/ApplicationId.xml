<Type Name="ApplicationId" FullName="System.ApplicationId">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81047738992cf176ce4a7c719c63568ae0bca3df" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52358040" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationId" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ApplicationId extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ApplicationId" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationId" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationId sealed" />
  <TypeSignature Language="F#" Value="type ApplicationId = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contient les informations permettant d'identifier de manière unique une application basée sur un manifeste. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une identité d’application se compose de la clé publique de l’éditeur, le nom de l’application, l’architecture de processeur cible, la culture de l’application et la version de l’application. Les valeurs de propriétés d’identité application correspondent aux informations contenues dans le manifeste d’application. Pour plus d’informations sur le manifeste d’application, consultez [manifeste d’Application ClickOnce](https://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243).  
  
 <xref:System.ApplicationId> est utilisé par le <xref:System.Security.Policy.ApplicationSecurityInfo> classe pour identifier une application basée sur un manifeste.  
  
   
  
## Examples  
 Le code suivant affiche de l’exemple le <xref:System.ApplicationId> propriétés en obtenant le <xref:System.ApplicationId> à partir d’un <xref:System.Security.Policy.ApplicationSecurityInfo> instance créée à l’aide de la <xref:System.ActivationContext> pour l’application basée sur un manifeste en cours d’exécution.  
  
 [!code-csharp[System.ApplicationIdentity#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ApplicationIdentity/CS/program.cs#1)]
 [!code-vb[System.ApplicationIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ApplicationIdentity/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationId (byte[] publicKeyToken, string name, Version version, string processorArchitecture, string culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] publicKeyToken, string name, class System.Version version, string processorArchitecture, string culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationId(cli::array &lt;System::Byte&gt; ^ publicKeyToken, System::String ^ name, Version ^ version, System::String ^ processorArchitecture, System::String ^ culture);" />
      <MemberSignature Language="F#" Value="new ApplicationId : byte[] * string * Version * string * string -&gt; ApplicationId" Usage="new System.ApplicationId (publicKeyToken, name, version, processorArchitecture, culture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="publicKeyToken" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.Version" />
        <Parameter Name="processorArchitecture" Type="System.String" />
        <Parameter Name="culture" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="publicKeyToken">Tableau d'octets représentant les données brutes de la clé publique.</param>
        <param name="name">Nom de l'application.</param>
        <param name="version">Objet <see cref="T:System.Version" /> qui spécifie la version de l'application.</param>
        <param name="processorArchitecture">Architecture du processeur de l'application.</param>
        <param name="culture">Culture de l'application.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ApplicationId" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le constructeur initialise la <xref:System.ApplicationId.Culture%2A>, <xref:System.ApplicationId.Name%2A>, <xref:System.ApplicationId.ProcessorArchitecture%2A>, <xref:System.ApplicationId.PublicKeyToken%2A>, et <xref:System.ApplicationId.Version%2A> propriétés de la <xref:System.ApplicationId>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="version" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="publicKeyToken" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> est une chaîne vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public ApplicationId Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ApplicationId Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ApplicationId.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As ApplicationId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationId ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; ApplicationId" Usage="applicationId.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ApplicationId</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée et retourne une copie identique de l'identité de l'application actuelle.</summary>
        <returns>Objet <see cref="T:System.ApplicationId" /> qui représente une copie exacte de l'original.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La copie retournée par cette méthode est identique à l’original comme établi par le <xref:System.ApplicationId.Equals%2A> (méthode). Les codes de hachage pour la version d’origine et la copie sont aussi identiques.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public string Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Culture" />
      <MemberSignature Language="DocId" Value="P:System.ApplicationId.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Culture { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : string" Usage="System.ApplicationId.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une chaîne représentant les informations de culture pour l'application.</summary>
        <value>Informations de culture pour l'application.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.ApplicationId.Culture%2A> valeur peut inclure des informations de langue, par exemple, « en-US ».  
  
 Pour plus d’informations sur les valeurs de culture, consultez <xref:System.Globalization.CultureInfo>.  
  
   
  
## Examples  
 Le code suivant affiche de l’exemple le <xref:System.ApplicationId.Culture%2A> propriété en obtenant le <xref:System.ApplicationId> à partir d’un <xref:System.Security.Policy.ApplicationSecurityInfo> instance créée à l’aide de la <xref:System.ActivationContext> pour l’application basée sur un manifeste en cours d’exécution.  Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.ApplicationId> classe.  
  
 [!code-csharp[System.ApplicationIdentity#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ApplicationIdentity/CS/program.cs#8)]
 [!code-vb[System.ApplicationIdentity#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ApplicationIdentity/VB/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ApplicationId.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="applicationId.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objet <see cref="T:System.ApplicationId" /> à comparer au <see cref="T:System.ApplicationId" /> en cours.</param>
        <summary>Détermine si l'objet <see cref="T:System.ApplicationId" /> spécifié est équivalent à <see cref="T:System.ApplicationId" /> en cours.</summary>
        <returns><see langword="true" /> si l'objet <see cref="T:System.ApplicationId" /> spécifié est équivalent à l'objet <see cref="T:System.ApplicationId" /> actuel ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode remplace la <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ApplicationId.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="applicationId.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient le code de hachage de l'identité de l'application actuelle.</summary>
        <returns>Code de hachage de l'identité de l'application actuelle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode génère le même code de hachage pour deux objets qui ont les mêmes valeurs pour leurs <xref:System.ApplicationId.Name%2A> et <xref:System.ApplicationId.Version%2A> propriétés.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ApplicationId.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.ApplicationId.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de l'application.</summary>
        <value>Nom de l'application.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ApplicationId.Name%2A> est le nom simple, non chiffré de l’application.  
  
   
  
## Examples  
 Le code suivant affiche de l’exemple le <xref:System.ApplicationId.Name%2A> propriété en obtenant le <xref:System.ApplicationId> à partir d’un <xref:System.Security.Policy.ApplicationSecurityInfo> instance créée à l’aide de la <xref:System.ActivationContext> pour l’application basée sur un manifeste en cours d’exécution. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.ApplicationId> classe.  
  
 [!code-csharp[System.ApplicationIdentity#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ApplicationIdentity/CS/program.cs#7)]
 [!code-vb[System.ApplicationIdentity#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ApplicationIdentity/VB/program.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessorArchitecture">
      <MemberSignature Language="C#" Value="public string ProcessorArchitecture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProcessorArchitecture" />
      <MemberSignature Language="DocId" Value="P:System.ApplicationId.ProcessorArchitecture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessorArchitecture As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProcessorArchitecture { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessorArchitecture : string" Usage="System.ApplicationId.ProcessorArchitecture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'architecture du processeur cible pour l'application.</summary>
        <value>Architecture du processeur de l'application.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les valeurs valides sont « msil », « x86 », « ia64 », « amd64 » et. La valeur par défaut est « msil », Microsoft intermediate language, ce qui signifie que tous vos assemblys sont indépendants de la plate-forme, et le common language runtime les compilera lorsqu’elles sont requises par votre application.  
  
   
  
## Examples  
 Le code suivant affiche de l’exemple le <xref:System.ApplicationId.ProcessorArchitecture%2A> propriété en obtenant le <xref:System.ApplicationId> à partir d’un <xref:System.Security.Policy.ApplicationSecurityInfo> instance créée à l’aide de la <xref:System.ActivationContext> pour l’application basée sur un manifeste en cours d’exécution.  Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.ApplicationId> classe.  
  
 [!code-csharp[System.ApplicationIdentity#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ApplicationIdentity/CS/program.cs#9)]
 [!code-vb[System.ApplicationIdentity#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ApplicationIdentity/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicKeyToken">
      <MemberSignature Language="C#" Value="public byte[] PublicKeyToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PublicKeyToken" />
      <MemberSignature Language="DocId" Value="P:System.ApplicationId.PublicKeyToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKeyToken As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PublicKeyToken { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKeyToken : byte[]" Usage="System.ApplicationId.PublicKeyToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le jeton de clé publique pour l'application.</summary>
        <value>Tableau d'octets contenant le jeton de clé publique de l'application.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le jeton de clé publique est représenté par les 8 derniers octets du hachage SHA-1 de la clé publique sous laquelle est signée l’application.  
  
 Pour plus d'informations, consultez <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Le code suivant affiche de l’exemple le <xref:System.ApplicationId.PublicKeyToken%2A> propriété en obtenant le <xref:System.ApplicationId> à partir d’un <xref:System.Security.Policy.ApplicationSecurityInfo> instance créée à l’aide de la <xref:System.ActivationContext> pour l’application basée sur un manifeste en cours d’exécution. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.ApplicationId> classe.  
  
 [!code-csharp[System.ApplicationIdentity#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ApplicationIdentity/CS/program.cs#11)]
 [!code-vb[System.ApplicationIdentity#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ApplicationIdentity/VB/program.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ApplicationId.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="applicationId.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée et retourne une représentation sous forme de chaîne de l'identité de l'application.</summary>
        <returns>Représentation sous forme de chaîne de l'identité de l'application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode remplace la <xref:System.Object.ToString%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.ApplicationId.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="System.ApplicationId.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la version de l'application.</summary>
        <value><see cref="T:System.Version" /> qui spécifie la version de l'application.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations, consultez <xref:System.Version?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Le code suivant affiche de l’exemple le <xref:System.ApplicationId.Version%2A> propriété en obtenant le <xref:System.ApplicationId> à partir d’un <xref:System.Security.Policy.ApplicationSecurityInfo> instance créée à l’aide de la <xref:System.ActivationContext> pour l’application basée sur un manifeste en cours d’exécution. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.ApplicationId> classe.  
  
 [!code-csharp[System.ApplicationIdentity#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ApplicationIdentity/CS/program.cs#10)]
 [!code-vb[System.ApplicationIdentity#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ApplicationIdentity/VB/program.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>