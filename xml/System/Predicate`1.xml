<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Predicate`1.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54d5c7551e524b5bca53c8809fe4a5d86b71bc330.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d5c7551e524b5bca53c8809fe4a5d86b71bc330</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>The type of the object to compare.</source>
          <target state="translated">Type de l'objet à comparer.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Predicate`1">
          <source>The object to compare against the criteria defined within the method represented by this delegate.</source>
          <target state="translated">Objet à comparer par rapport aux critères définis dans la méthode représentée par ce délégué.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Predicate`1">
          <source>Represents the method that defines a set of criteria and determines whether the specified object meets those criteria.</source>
          <target state="translated">Représente la méthode qui définit un ensemble de critères et détermine si l'objet spécifié répond à ces critères.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Predicate`1">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> meets the criteria defined within the method represented by this delegate; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> correspond aux critères définis dans la méthode représentée par ce délégué ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>This delegate is used by several methods of the <ph id="ph1">&lt;xref:System.Array&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> classes to search for elements in the collection.</source>
          <target state="translated">Ce délégué est utilisé par plusieurs méthodes de la <ph id="ph1">&lt;xref:System.Array&gt;</ph> et <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> classes pour rechercher des éléments dans la collection.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> delegate is represented by a lambda expression.</source>
          <target state="translated">En règle générale, le <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> délégué est représenté par une expression lambda.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>Because locally scoped variables are available to the lambda expression, it is easy to test for a condition that is not precisely known at compile time.</source>
          <target state="translated">Étant donné que les variables ayant une étendue locale sont disponibles à l’expression lambda, il est facile de tester une condition qui n’est pas précisément connue au moment de la compilation.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>This is simulated in the following example, which defines a <ph id="ph1">`HockeyTeam`</ph> class that contains information about a National Hockey League team and the year in which it was founded.</source>
          <target state="translated">Cela est simulé dans l’exemple suivant, qui définit un <ph id="ph1">`HockeyTeam`</ph> classe qui contient des informations sur une équipe et la ligue Hockey National et l’année dans laquelle il a été créé.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>The example defines an array of integer values that represent years, and randomly assigns one element of the array to <ph id="ph1">`foundedBeforeYear`</ph>, which is a variable that is locally scoped to the example's <ph id="ph2">`Main`</ph> method.</source>
          <target state="translated">L’exemple définit un tableau d’entiers qui représentent des années et affecte de manière aléatoire un élément du tableau à <ph id="ph1">`foundedBeforeYear`</ph>, qui est une variable définie localement pour l’exemple <ph id="ph2">`Main`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>Because locally scoped variables are available to a lambda expression, the lambda expression passed to the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindAll%2A?displayProperty=nameWithType&gt;</ph> method is able to return a <ph id="ph2">`HockeyTeam`</ph> object for each team founded on or before that year.</source>
          <target state="translated">Étant donné que les variables ayant une étendue locale ne peut être une expression lambda, l’expression lambda passée à la <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.FindAll%2A?displayProperty=nameWithType&gt;</ph> (méthode) est en mesure de retourner un <ph id="ph2">`HockeyTeam`</ph> objet pour chaque équipe fondée sur ou avant cette année.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>The following code example uses a <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> delegate with the <ph id="ph2">&lt;xref:System.Array.Find%2A?displayProperty=nameWithType&gt;</ph> method to search an array of <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> structures.</source>
          <target state="translated">Le de code suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> délégué avec le <ph id="ph2">&lt;xref:System.Array.Find%2A?displayProperty=nameWithType&gt;</ph> méthode pour rechercher un tableau de <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> structures.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>The example explicitly defines a <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> delegate named <ph id="ph2">`predicate`</ph> and assigns it a method named <ph id="ph3">`FindPoints`</ph> that returns <ph id="ph4">`true`</ph> if the product of the <ph id="ph5">&lt;xref:System.Drawing.Point.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph6">&lt;xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType&gt;</ph> fields is greater than 100,000.</source>
          <target state="translated">L’exemple définit explicitement une <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> délégué nommé <ph id="ph2">`predicate`</ph> et lui attribue une méthode nommée <ph id="ph3">`FindPoints`</ph> qui retourne <ph id="ph4">`true`</ph> si le produit de la <ph id="ph5">&lt;xref:System.Drawing.Point.X%2A?displayProperty=nameWithType&gt;</ph> et <ph id="ph6">&lt;xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType&gt;</ph> champs est supérieur à 100 000.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>Note that it is customary to use a lambda expression rather than to explicitly define a delegate of type <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph>, as the second example illustrates.</source>
          <target state="translated">Notez qu’il est habituel d’utiliser une expression lambda au lieu de définir explicitement un délégué du type <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph>, comme l’illustre le deuxième exemple.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>The following example is identical to the previous example, except that it uses a lambda expression to represent the <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> delegate.</source>
          <target state="translated">L’exemple suivant est identique à l’exemple précédent, sauf qu’elle utilise une expression lambda pour représenter le <ph id="ph1">&lt;xref:System.Predicate%601&gt;</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>Each element of the <ph id="ph1">`points`</ph> array is passed to the lambda expression until the expression finds an element that meets the search criteria.</source>
          <target state="translated">Chaque élément de la <ph id="ph1">`points`</ph> tableau est passé à l’expression lambda jusqu'à ce que l’expression de recherche un élément qui répond aux critères de recherche.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Predicate`1">
          <source>In this case, the lambda expression returns <ph id="ph1">`true`</ph> if the product of the X and Y fields is greater than 100,000.</source>
          <target state="translated">Dans ce cas, l’expression lambda retourne <ph id="ph1">`true`</ph> si le produit des champs X et Y est supérieur à 100 000.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>