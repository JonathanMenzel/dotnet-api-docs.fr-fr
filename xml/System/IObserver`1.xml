<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IObserver`1.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53facb3d52ed4cf715a9c826dd48e65f8e79aa81b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3facb3d52ed4cf715a9c826dd48e65f8e79aa81b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The object that provides notification information.</source>
          <target state="translated">Objet qui fournit des informations de notification.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IObserver`1">
          <source>Provides a mechanism for receiving push-based notifications.</source>
          <target state="translated">Fournit un mécanisme pour recevoir des notifications de type push.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> and <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> et <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> interfaces fournissent un mécanisme généralisé pour la notification de type push, également connu sous le modèle de design observateur.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface represents the class that sends notifications (the provider); the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> interface represents the class that receives them (the observer).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface représente la classe qui envoie des notifications (fournisseur) ; le <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> interface représente la classe qui les reçoit (Observateur).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source><ph id="ph1">`T`</ph> represents the class that provides the notification information.</source>
          <target state="translated"><ph id="ph1">`T`</ph> représente la classe qui fournit les informations de notification.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>An <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> implementation arranges to receive notifications from a provider (an <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation) by passing an instance of itself to the provider's <ph id="ph3">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> implémentation organise pour recevoir des notifications à partir d’un fournisseur (un <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implémentation) en passant une instance d’elle-même à du fournisseur <ph id="ph3">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>This method returns an <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> object that can be used to unsubscribe the observer before the provider finishes sending notifications.</source>
          <target state="translated">Cette méthode retourne un <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> fin de l’envoi de notifications de l’objet qui peut être utilisé pour annuler l’abonnement de l’Observateur avant que le fournisseur.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> interface defines the following three methods that the observer must implement:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> interface définit les trois méthodes suivantes que l’observateur doit implémenter :</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method, which is typically called by the provider to supply the observer with new data or state information.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> (méthode), qui est généralement appelée par le fournisseur pour fournir à l’Observateur avec de nouvelles informations d’état ou de données.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> (méthode), qui est généralement appelée par le fournisseur pour indiquer que les données sont indisponible, inaccessible ou endommagé, ou que le fournisseur a rencontré une autre condition d’erreur.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> (méthode), qui est généralement appelée par le fournisseur pour indiquer qu’il a terminé l’envoi de notifications aux observateurs.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following example illustrates the observer design pattern.</source>
          <target state="translated">L’exemple suivant illustre le modèle de design observateur.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It defines a <ph id="ph1">`Location`</ph> class that contains latitude and longitude information.</source>
          <target state="translated">Il définit un <ph id="ph1">`Location`</ph> classe qui contient les informations de latitude et longitude.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationReporter`</ph> class provides the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> implementation.</source>
          <target state="translated">Le <ph id="ph1">`LocationReporter`</ph> classe fournit le <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It displays information about the current location to the console.</source>
          <target state="translated">Il affiche des informations sur l’emplacement actuel dans la console.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Its constructor includes a <ph id="ph1">`name`</ph> parameter, which allows the <ph id="ph2">`LocationReporter`</ph> instance to identify itself in its string output.</source>
          <target state="translated">Son constructeur inclut un <ph id="ph1">`name`</ph> paramètre, ce qui permet la <ph id="ph2">`LocationReporter`</ph> instance identifier dans sa sortie de chaîne.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It also includes a <ph id="ph1">`Subscribe`</ph> method, which wraps a call to the provider's <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method.</source>
          <target state="translated">Il inclut également un <ph id="ph1">`Subscribe`</ph> méthode qui encapsule un appel à du fournisseur <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>This enables the method to assign the returned <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> reference to a private variable.</source>
          <target state="translated">Cela permet à la méthode attribuer le retourné <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> référence à une variable privée.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationReporter`</ph> class also includes an <ph id="ph2">`Unsubscribe`</ph> method, which calls the <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method of the object returned by the <ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">`LocationReporter`</ph> classe inclut également un <ph id="ph2">`Unsubscribe`</ph> (méthode), qui appelle la <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> méthode de l’objet retourné par la <ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following code defines the <ph id="ph1">`LocationReporter`</ph> class.</source>
          <target state="translated">Le code suivant définit la <ph id="ph1">`LocationReporter`</ph> classe.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class provides the <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation.</source>
          <target state="translated">Le <ph id="ph1">`LocationTracker`</ph> classe fournit le <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Its <ph id="ph1">`TrackLocation`</ph> method is passed a nullable <ph id="ph2">`Location`</ph> object that contains the latitude and longitude data.</source>
          <target state="translated">Son <ph id="ph1">`TrackLocation`</ph> autorisant des valeurs NULL est passé à méthode <ph id="ph2">`Location`</ph> objet qui contient les données de latitude et longitude.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>If the <ph id="ph1">`Location`</ph> value is not <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method calls the <ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method of each observer.</source>
          <target state="translated">Si le <ph id="ph1">`Location`</ph> valeur n’est pas <ph id="ph2">`null`</ph>, le <ph id="ph3">`TrackLocation`</ph> les appels de méthode le <ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> (méthode) de chaque observateur.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>If the <ph id="ph1">`Location`</ph> value is <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method instantiates a <ph id="ph4">`LocationNotFoundException`</ph> object, which is shown in the following example.</source>
          <target state="translated">Si le <ph id="ph1">`Location`</ph> valeur est <ph id="ph2">`null`</ph>, le <ph id="ph3">`TrackLocation`</ph> méthode instancie un <ph id="ph4">`LocationNotFoundException`</ph> objet, qui est indiqué dans l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It then calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method and passes it the <ph id="ph2">`LocationNotFoundException`</ph> object.</source>
          <target state="translated">Il appelle ensuite chaque observateur <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> (méthode) et lui passe la <ph id="ph2">`LocationNotFoundException`</ph> objet.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Note that <ph id="ph1">`LocationNotFoundException`</ph> derives from <ph id="ph2">&lt;xref:System.Exception&gt;</ph> but does not add any new members.</source>
          <target state="translated">Notez que <ph id="ph1">`LocationNotFoundException`</ph> dérive <ph id="ph2">&lt;xref:System.Exception&gt;</ph> , mais ne pas ajouter de nouveaux membres.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Observers register to receive notifications from a <ph id="ph1">`TrackLocation`</ph> object by calling its <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method, which assigns a reference to the observer object to a private generic <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">Observateurs s’inscrire pour recevoir des notifications à partir d’un <ph id="ph1">`TrackLocation`</ph> objet en appelant son <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> (méthode), qui assigne une référence à l’objet observateur générique privé <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The method returns an <ph id="ph1">`Unsubscriber`</ph> object, which is an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implementation that enables observers to stop receiving notifications.</source>
          <target state="translated">La méthode retourne un <ph id="ph1">`Unsubscriber`</ph> objet, qui est un <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implémentation qui permet aux observateurs d’arrêter de recevoir des notifications.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class also includes an <ph id="ph2">`EndTransmission`</ph> method.</source>
          <target state="translated">Le <ph id="ph1">`LocationTracker`</ph> classe inclut également un <ph id="ph2">`EndTransmission`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>When no further location data is available, the method calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method and then clears the internal list of observers.</source>
          <target state="translated">Lorsqu’aucune autre donnée d’emplacement n’est disponible, la méthode appelle chaque observateur <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> (méthode), puis efface la liste interne des observateurs.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following code then instantiates the provider and the observer.</source>
          <target state="translated">Le code suivant instancie ensuite le fournisseur et l’Observateur.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnCompleted">
          <source>Notifies the observer that the provider has finished sending push-based notifications.</source>
          <target state="translated">Signale à l’observateur que le fournisseur a terminé l’envoi des notifications de type push.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>When the observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> implementation is called, the <ph id="ph2">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method can optionally call the <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.IDisposable&gt;</ph> object that was returned to the observer when it called the <ph id="ph5">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Lorsque l’Observateur <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> implémentation est appelée, le <ph id="ph2">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> méthode peut éventuellement appeler le <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> méthode de la <ph id="ph4">&lt;xref:System.IDisposable&gt;</ph> objet qui a été retourné à l’Observateur lorsqu’elle est appelée le <ph id="ph5">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">L’exemple suivant fournit une implémentation de la <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> méthode dans une application de suivi de latitude/longitude.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>The method simply reports that no further data is available and calls the provider's <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">La méthode signale simplement qu’aucune autre donnée n’est disponible et appelle le fournisseur <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">Consultez la section exemple de la <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> rubrique pour obtenir un exemple complet.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>An object that provides additional information about the error.</source>
          <target state="translated">Objet qui fournit des informations supplémentaires sur l’erreur.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>Notifies the observer that the provider has experienced an error condition.</source>
          <target state="translated">Notifie l’observateur que le fournisseur a rencontré une condition d’erreur.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>Although <ph id="ph1">`error`</ph> is an object that is derived from <ph id="ph2">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph>, it does not necessarily represent an exception that is thrown by the provider.</source>
          <target state="translated">Bien que <ph id="ph1">`error`</ph> est un objet qui est dérivé de <ph id="ph2">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph>, il ne représente pas nécessairement une exception est levée par le fournisseur.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>It can also represent a routine or expected error condition, such as data that is missing or unavailable.</source>
          <target state="translated">Il peut également représenter une condition d’erreur attendu ou de routine, telles que les données sont manquantes ou indisponibles.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method should be seen as informational, and the provider should not expect the observer to provide error handling.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> méthode doit être considérée comme d’information et le fournisseur ne doit pas attendre l’Observateur pour fournir la gestion des erreurs.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">L’exemple suivant fournit une implémentation de la <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> méthode dans une application de suivi de latitude/longitude.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The method simply reports that data is currently unavailable; it does not make use of the <ph id="ph1">&lt;xref:System.Exception&gt;</ph> object passed to it as a parameter.</source>
          <target state="translated">La méthode signale simplement que les données sont actuellement pas disponibles. Il ne fait pas utiliser le <ph id="ph1">&lt;xref:System.Exception&gt;</ph> objet passé en tant que paramètre.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">Consultez la section exemple de la <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> rubrique pour obtenir un exemple complet.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnNext(`0)">
          <source>The current notification information.</source>
          <target state="translated">Informations de notification actuelles.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnNext(`0)">
          <source>Provides the observer with new data.</source>
          <target state="translated">Fournit à l’observateur des nouvelles données.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>After an observer has called a provider's <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method, the provider calls the observer's <ph id="ph2">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method to provide notifications.</source>
          <target state="translated">Une fois un observateur a appelé un fournisseur de <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> (méthode), le fournisseur appelle l’Observateur <ph id="ph2">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> méthode pour fournir des notifications.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">L’exemple suivant fournit une implémentation de la <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> méthode dans une application de suivi de latitude/longitude.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">Consultez la section exemple de la <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> rubrique pour obtenir un exemple complet.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>