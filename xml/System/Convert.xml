<Type Name="Convert" FullName="System.Convert">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ffcd1cbf8411eab65c94d972d515b16a4ab91f75" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50179431" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Convert" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Convert extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Convert" />
  <TypeSignature Language="VB.NET" Value="Public Class Convert" />
  <TypeSignature Language="C++ CLI" Value="public ref class Convert abstract sealed" />
  <TypeSignature Language="F#" Value="type Convert = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4a36e-101">Convertit un type de données de base en un autre type de données de base.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a36e-101">Converts a base data type to another base data type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-102">Les méthodes statiques de la <xref:System.Convert> classe sont principalement utilisées pour prendre en charge de la conversion vers et depuis les types de base de données dans le .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4a36e-102">The static methods of the <xref:System.Convert> class are primarily used to support conversion to and from the base data types in the .NET Framework.</span></span> <span data-ttu-id="4a36e-103">Les types de base pris en charge sont <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, <xref:System.DateTime> et <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-103">The supported base types are <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, <xref:System.DateTime> and <xref:System.String>.</span></span> <span data-ttu-id="4a36e-104">En outre, la <xref:System.Convert> classe inclut des méthodes pour prendre en charge d’autres types de conversions.</span><span class="sxs-lookup"><span data-stu-id="4a36e-104">In addition, the <xref:System.Convert> class includes methods to support  other kinds of conversions.</span></span>  
  
 <span data-ttu-id="4a36e-105">Cette rubrique contient les sections suivantes :</span><span class="sxs-lookup"><span data-stu-id="4a36e-105">This topic consists of the following sections:</span></span>  
  
 <span data-ttu-id="4a36e-106">[Conversions vers et depuis les Types de Base](#Base) </span><span class="sxs-lookup"><span data-stu-id="4a36e-106">[Conversions to and from Base Types](#Base) </span></span>  
 <span data-ttu-id="4a36e-107">[Nombres non décimaux](#NonDecimal) </span><span class="sxs-lookup"><span data-stu-id="4a36e-107">[Non-Decimal Numbers](#NonDecimal) </span></span>  
 <span data-ttu-id="4a36e-108">[Conversions d’objets personnalisés pour les Types de Base](#Custom) </span><span class="sxs-lookup"><span data-stu-id="4a36e-108">[Conversions from Custom Objects to Base Types](#Custom) </span></span>  
 <span data-ttu-id="4a36e-109">[Informations de mise en forme propres à la culture](#Culture) </span><span class="sxs-lookup"><span data-stu-id="4a36e-109">[Culture-Specific Formatting Information](#Culture) </span></span>  
 <span data-ttu-id="4a36e-110">[Encodage Base64](#Base64) </span><span class="sxs-lookup"><span data-stu-id="4a36e-110">[Base64 Encoding](#Base64) </span></span>  
 [<span data-ttu-id="4a36e-111">Autres Conversions courantes</span><span class="sxs-lookup"><span data-stu-id="4a36e-111">Other Common Conversions</span></span>](#Other)  
  
<a name="Base"></a>   
## <a name="conversions-to-and-from-base-types"></a><span data-ttu-id="4a36e-112">Conversions vers et depuis les Types de Base</span><span class="sxs-lookup"><span data-stu-id="4a36e-112">Conversions to and from Base Types</span></span>  
 <span data-ttu-id="4a36e-113">Il existe une méthode de conversion pour convertir chaque type de base pour chaque type de base.</span><span class="sxs-lookup"><span data-stu-id="4a36e-113">A conversion method exists to convert every base type to every other base type.</span></span> <span data-ttu-id="4a36e-114">Toutefois, l’appel réel à une méthode de conversion particulière peut produire un des cinq résultats, selon la valeur de type de base en cours d’exécution et le type de base cible.</span><span class="sxs-lookup"><span data-stu-id="4a36e-114">However, the actual call to a particular conversion method can produce one of five outcomes, depending on the value of the base type at run time and the target base type.</span></span> <span data-ttu-id="4a36e-115">Ces cinq résultats sont :</span><span class="sxs-lookup"><span data-stu-id="4a36e-115">These five outcomes are:</span></span>  
  
-   <span data-ttu-id="4a36e-116">Aucune conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-116">No conversion.</span></span> <span data-ttu-id="4a36e-117">Cela se produit lorsqu’une tentative est faite pour convertir un type en lui-même (par exemple, en appelant <xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType> avec un argument de type <xref:System.Int32>).</span><span class="sxs-lookup"><span data-stu-id="4a36e-117">This occurs when an attempt is made to convert from a type to itself (for example, by calling <xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType> with an argument of type <xref:System.Int32>).</span></span> <span data-ttu-id="4a36e-118">Dans ce cas, la méthode retourne simplement une instance du type d’origine.</span><span class="sxs-lookup"><span data-stu-id="4a36e-118">In this case, the method simply returns an instance of the original type.</span></span>  
  
-   <span data-ttu-id="4a36e-119">Élément <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-119">An <xref:System.InvalidCastException>.</span></span> <span data-ttu-id="4a36e-120">Cela se produit lorsqu’une conversion particulière n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="4a36e-120">This occurs when a particular conversion is not supported.</span></span> <span data-ttu-id="4a36e-121">Un <xref:System.InvalidCastException> est levée pour les conversions suivantes :</span><span class="sxs-lookup"><span data-stu-id="4a36e-121">An <xref:System.InvalidCastException> is thrown for the following conversions:</span></span>  
  
    -   <span data-ttu-id="4a36e-122">Les conversions de <xref:System.Char> à <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, ou <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-122">Conversions from <xref:System.Char> to <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, or <xref:System.DateTime>.</span></span>  
  
    -   <span data-ttu-id="4a36e-123">Les conversions de <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, ou <xref:System.DateTime> à <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-123">Conversions from <xref:System.Boolean>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>, or <xref:System.DateTime> to <xref:System.Char>.</span></span>  
  
    -   <span data-ttu-id="4a36e-124">Les conversions de <xref:System.DateTime> vers un autre type, à l’exception <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-124">Conversions from <xref:System.DateTime> to any other type except <xref:System.String>.</span></span>  
  
    -   <span data-ttu-id="4a36e-125">Conversions à partir de n’importe quel autre type, à l’exception <xref:System.String>à <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-125">Conversions from any other type, except <xref:System.String>, to <xref:System.DateTime>.</span></span>  
  
-   <span data-ttu-id="4a36e-126"><xref:System.FormatException></span><span class="sxs-lookup"><span data-stu-id="4a36e-126">A <xref:System.FormatException>.</span></span> <span data-ttu-id="4a36e-127">Cela se produit lorsque la tentative de convertir une valeur de chaîne en un autre type de base échoue parce que la chaîne n’est pas dans le format approprié.</span><span class="sxs-lookup"><span data-stu-id="4a36e-127">This occurs when the attempt to convert a string value to any other base type fails because the string is not in the proper format.</span></span> <span data-ttu-id="4a36e-128">L’exception est levée pour les conversions suivantes :</span><span class="sxs-lookup"><span data-stu-id="4a36e-128">The exception is thrown for the following conversions:</span></span>  
  
    -   <span data-ttu-id="4a36e-129">Une chaîne à convertir en un <xref:System.Boolean> valeur n’est pas égale <xref:System.Boolean.TrueString?displayProperty=nameWithType> ou <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-129">A string to be converted to a <xref:System.Boolean> value does not equal <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
    -   <span data-ttu-id="4a36e-130">Une chaîne à convertir en un <xref:System.Char> valeur se compose de plusieurs caractères.</span><span class="sxs-lookup"><span data-stu-id="4a36e-130">A string to be converted to a <xref:System.Char> value consists of multiple characters.</span></span>  
  
    -   <span data-ttu-id="4a36e-131">Une chaîne à convertir en un type numérique n’est pas reconnue comme un nombre valide.</span><span class="sxs-lookup"><span data-stu-id="4a36e-131">A string to be converted to any numeric type is not recognized as a valid number.</span></span>  
  
    -   <span data-ttu-id="4a36e-132">Une chaîne à convertir en un <xref:System.DateTime> n’est pas reconnu comme une date valide et une valeur d’heure.</span><span class="sxs-lookup"><span data-stu-id="4a36e-132">A string to be converted to a <xref:System.DateTime> is not recognized as a valid date and time value.</span></span>  
  
-   <span data-ttu-id="4a36e-133">Une conversion réussie.</span><span class="sxs-lookup"><span data-stu-id="4a36e-133">A successful conversion.</span></span> <span data-ttu-id="4a36e-134">Pour les conversions entre deux types de base différents non répertoriés dans les résultats précédents, toutes les conversions étendues ainsi que toutes les conversions restrictives qui ne provoquent pas une perte de données réussit, et la méthode retourne la valeur du type de base ciblé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-134">For conversions between two different base types not listed in the previous outcomes, all widening conversions as well as all narrowing conversions that do not result in a loss of data will succeed and the method will return a value of the targeted base type.</span></span>  
  
-   <span data-ttu-id="4a36e-135">Élément <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-135">An <xref:System.OverflowException>.</span></span> <span data-ttu-id="4a36e-136">Cela se produit lorsqu’une conversion restrictive provoque une perte de données.</span><span class="sxs-lookup"><span data-stu-id="4a36e-136">This occurs when a narrowing conversion results in a loss of data.</span></span> <span data-ttu-id="4a36e-137">Par exemple, essayez de convertir un <xref:System.Int32> instance dont la valeur est 10 000 pour un <xref:System.Byte> type lève une <xref:System.OverflowException> étant donné que 10 000 est en dehors de la plage de la <xref:System.Byte> type de données.</span><span class="sxs-lookup"><span data-stu-id="4a36e-137">For example, trying to convert a <xref:System.Int32> instance whose value is 10000 to a <xref:System.Byte> type throws an <xref:System.OverflowException> because 10000 is outside the range of the <xref:System.Byte> data type.</span></span>  
  
 <span data-ttu-id="4a36e-138">Une exception ne sera pas levée si la conversion d’un type numérique entraîne une perte de précision (autrement dit, la perte de quelques chiffres les moins significatifs).</span><span class="sxs-lookup"><span data-stu-id="4a36e-138">An exception will not be thrown if the conversion of a numeric type results in a loss of precision (that is, the loss of some least significant digits).</span></span> <span data-ttu-id="4a36e-139">Toutefois, une exception sera levée si le résultat est supérieur à la représentation par type de valeur de retour de la méthode de conversion particulière.</span><span class="sxs-lookup"><span data-stu-id="4a36e-139">However, an exception will be thrown if the result is larger than can be represented by the particular conversion method's return value type.</span></span>  
  
 <span data-ttu-id="4a36e-140">Par exemple, quand un <xref:System.Double> est converti en un <xref:System.Single>, une perte de précision peut se produire, mais aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-140">For example, when a <xref:System.Double> is converted to a <xref:System.Single>, a loss of precision might occur but no exception is thrown.</span></span> <span data-ttu-id="4a36e-141">Toutefois, si la grandeur de la <xref:System.Double> est trop grande pour être représentée par un <xref:System.Single>, une exception de dépassement de capacité est levée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-141">However, if the magnitude of the <xref:System.Double> is too large to be represented by a <xref:System.Single>, an overflow exception is thrown.</span></span>  
  
<a name="NonDecimal"></a>   
## <a name="non-decimal-numbers"></a><span data-ttu-id="4a36e-142">Nombres non décimaux</span><span class="sxs-lookup"><span data-stu-id="4a36e-142">Non-Decimal Numbers</span></span>  
 <span data-ttu-id="4a36e-143">Le <xref:System.Convert> classe inclut des méthodes statiques que vous pouvez appeler pour convertir des valeurs intégrales en représentations sous forme de chaîne de non décimal, et pour convertir des chaînes qui représentent des nombres non décimaux intégrales.</span><span class="sxs-lookup"><span data-stu-id="4a36e-143">The <xref:System.Convert> class includes static methods that you can call to convert integral values to non-decimal string representations, and to convert strings that represent non-decimal numbers to integral values.</span></span> <span data-ttu-id="4a36e-144">Chacune de ces méthodes de conversion inclut un `base` argument qui vous permet de spécifier le numéro système ; binaire (base 2), octal (base 8) et hexadécimal (base 16), ainsi que de la décimale (base 10).</span><span class="sxs-lookup"><span data-stu-id="4a36e-144">Each of these conversion methods includes a `base` argument  that lets you specify  the number system; binary (base 2), octal (base 8), and hexadecimal (base 16), as well as decimal (base 10).</span></span> <span data-ttu-id="4a36e-145">Il existe un ensemble de méthodes pour chacun des types intégraux primitifs conformes CLS convertir en une chaîne et l’autre pour convertir une chaîne à chacun des types intégraux primitifs :</span><span class="sxs-lookup"><span data-stu-id="4a36e-145">There is a set of methods to convert each of the CLS-compliant primitive integral types to a string, and one to convert a string to each of the primitive integral types:</span></span>  
  
-   <span data-ttu-id="4a36e-146"><xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> et <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>, pour convertir une valeur d’octet vers et depuis une chaîne dans une base spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-146"><xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> and <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29>, to convert a byte value to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="4a36e-147"><xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> et <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>, pour convertir un entier signé 16 bits vers et à partir d’une chaîne dans une base spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-147"><xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> and <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29>, to convert a 16-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="4a36e-148"><xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> et <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>, pour convertir un entier signé 32 bits vers et à partir d’une chaîne dans une base spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-148"><xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> and <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29>, to convert a 32-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="4a36e-149"><xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> et <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>, pour convertir un entier signé 64 bits vers et à partir d’une chaîne dans une base spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-149"><xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> and <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29>, to convert a 64-bit signed integer to and from a string in a specified base.</span></span>  
  
-   <span data-ttu-id="4a36e-150"><xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>, pour convertir la représentation sous forme de chaîne d’une valeur d’octet dans un format spécifié à un octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-150"><xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29>, to convert the string representation of a byte value in a specified format to a signed byte.</span></span>  
  
-   <span data-ttu-id="4a36e-151"><xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>, pour convertir la représentation sous forme de chaîne d’un entier dans un format spécifié en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-151"><xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 16-bit integer.</span></span>  
  
-   <span data-ttu-id="4a36e-152"><xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>, pour convertir la représentation sous forme de chaîne d’un entier dans un format spécifié en entier non signé 32 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-152"><xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 32-bit integer.</span></span>  
  
-   <span data-ttu-id="4a36e-153"><xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>, pour convertir la représentation sous forme de chaîne d’un entier dans un format spécifié en entier non signé 64 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-153"><xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29>, to convert the string representation of an integer in a specified format to an unsigned 64-bit integer.</span></span>  
  
 <span data-ttu-id="4a36e-154">L’exemple suivant convertit la valeur de <xref:System.Int16.MaxValue?displayProperty=nameWithType> vers une chaîne dans tous les formats numériques qui sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="4a36e-154">The following example converts the value of <xref:System.Int16.MaxValue?displayProperty=nameWithType> to a string in all supported numeric formats.</span></span> <span data-ttu-id="4a36e-155">Il puis convertit la valeur de chaîne en un <xref:System.Int16> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-155">It then converts the string value back to a <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Convert#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert/CPP/NonDecimal1.cpp#2)]
 [!code-csharp[System.Convert#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert/CS/NonDecimal1.cs#2)]
 [!code-vb[System.Convert#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert/VB/NonDecimal1.vb#2)]  
  
<a name="Custom"></a>   
## <a name="conversions-from-custom-objects-to-base-types"></a><span data-ttu-id="4a36e-156">Conversions d’objets personnalisés pour les Types de Base</span><span class="sxs-lookup"><span data-stu-id="4a36e-156">Conversions from Custom Objects to Base Types</span></span>  
 <span data-ttu-id="4a36e-157">La prise en charge des conversions entre des types de base, le <xref:System.Convert> méthode prend en charge la conversion d’un type personnalisé vers n’importe quel type de base.</span><span class="sxs-lookup"><span data-stu-id="4a36e-157">In addition to supporting conversions between the base types, the <xref:System.Convert> method supports conversion of any custom type to any base type.</span></span> <span data-ttu-id="4a36e-158">Pour ce faire, le type personnalisé doit implémenter la <xref:System.IConvertible> interface qui définit des méthodes pour convertir le type d’implémentation vers chacun des types de base.</span><span class="sxs-lookup"><span data-stu-id="4a36e-158">To do this, the custom type must implement the <xref:System.IConvertible> interface, which defines methods for converting the implementing type to each of the base types.</span></span> <span data-ttu-id="4a36e-159">Les conversions qui ne sont pas pris en charge par un type particulier doivent lever un <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-159">Conversions that are not supported by a particular type should throw an <xref:System.InvalidCastException>.</span></span>  
  
 <span data-ttu-id="4a36e-160">Lorsque le <xref:System.Convert.ChangeType%2A> méthode est passée à un type personnalisé en tant que son premier paramètre, ou lorsque le `Convert.To` *Type* (méthode) (tel que <xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType> ou <xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> est appelée et reçoit une instance d’un type personnalisé en tant que son premier paramètre, le <xref:System.Convert> (méthode), appelle à son tour, le type personnalisé <xref:System.IConvertible> implémentation pour effectuer la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-160">When the <xref:System.Convert.ChangeType%2A> method is passed a custom type as its first parameter, or when the `Convert.To`*Type* method (such as <xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType> or <xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> is called and passed an instance of a custom type as its first parameter, the <xref:System.Convert> method, in turn, calls the custom type's <xref:System.IConvertible> implementation to perform the conversion.</span></span> <span data-ttu-id="4a36e-161">Pour plus d’informations, consultez [Conversion de Type dans le .NET Framework](~/docs/standard/base-types/type-conversion.md).</span><span class="sxs-lookup"><span data-stu-id="4a36e-161">For more information, see [Type Conversion in the .NET Framework](~/docs/standard/base-types/type-conversion.md).</span></span>  
  
<a name="Culture"></a>   
## <a name="culture-specific-formatting-information"></a><span data-ttu-id="4a36e-162">Informations de mise en forme propres à la culture</span><span class="sxs-lookup"><span data-stu-id="4a36e-162">Culture-Specific Formatting Information</span></span>  
 <span data-ttu-id="4a36e-163">Toutes les méthodes de conversion de type de base et la <xref:System.Convert.ChangeType%2A> méthode comprennent des surcharges qui ont un paramètre de type <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-163">All the base type conversion methods and the <xref:System.Convert.ChangeType%2A> method include overloads that have a parameter of type <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a36e-164">Par exemple, le <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> méthode a deux surcharges suivantes :</span><span class="sxs-lookup"><span data-stu-id="4a36e-164">For example, the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> method has the following two overloads:</span></span>  
  
-   <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>  
  
-   <xref:System.Convert.ToBoolean%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>  
  
 <span data-ttu-id="4a36e-165">Le <xref:System.IFormatProvider> paramètre peut fournir des informations de mise en forme propres à la culture pour faciliter le processus de conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-165">The <xref:System.IFormatProvider> parameter can supply culture-specific formatting information to assist the conversion process.</span></span> <span data-ttu-id="4a36e-166">Toutefois, il est ignoré par la plupart des méthodes de conversion de type de base.</span><span class="sxs-lookup"><span data-stu-id="4a36e-166">However, it is ignored by most of the base type conversion methods.</span></span> <span data-ttu-id="4a36e-167">Il est utilisé uniquement par les méthodes de conversion de type de base suivantes. Si un `null` <xref:System.IFormatProvider> argument est passé à ces méthodes, le <xref:System.Globalization.CultureInfo> objet qui représente la culture du thread actuel est utilisé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-167">It is used only by the following base type conversion methods.If a `null`<xref:System.IFormatProvider> argument is passed to these methods, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="4a36e-168">Par les méthodes qui convertissent une valeur en un type numérique.</span><span class="sxs-lookup"><span data-stu-id="4a36e-168">By methods that convert a value to a numeric type.</span></span> <span data-ttu-id="4a36e-169">Le <xref:System.IFormatProvider> paramètre est utilisé par la surcharge qui a des paramètres de type <xref:System.String> et <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-169">The <xref:System.IFormatProvider> parameter is used by the overload that has parameters of type <xref:System.String> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a36e-170">Il est également utilisé par la surcharge qui a des paramètres de type <xref:System.Object> et <xref:System.IFormatProvider> si l’objet de l’exécution est de type un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-170">It is also used by the overload that has parameters of type <xref:System.Object> and <xref:System.IFormatProvider> if the object's run-time type is a <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="4a36e-171">Par les méthodes qui convertissent une valeur à une date et une heure.</span><span class="sxs-lookup"><span data-stu-id="4a36e-171">By methods that convert a value to a date and time.</span></span> <span data-ttu-id="4a36e-172">Le <xref:System.IFormatProvider> paramètre est utilisé par la surcharge qui a des paramètres de type <xref:System.String> et <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-172">The <xref:System.IFormatProvider> parameter is used by the overload that has parameters of type <xref:System.String> and <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a36e-173">Il est également utilisé par la surcharge qui a des paramètres de type <xref:System.Object> et <xref:System.IFormatProvider> si l’objet de l’exécution est de type un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-173">It is also used by the overload that has parameters of type <xref:System.Object> and <xref:System.IFormatProvider> if the object's run-time type is a <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="4a36e-174">Par la <xref:System.Convert.ToString%2A?displayProperty=nameWithType> surcharges qui incluent un <xref:System.IFormatProvider> paramètre et qui convertissent une valeur numérique en une chaîne ou un <xref:System.DateTime> valeur à une chaîne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-174">By the <xref:System.Convert.ToString%2A?displayProperty=nameWithType> overloads that include an <xref:System.IFormatProvider> parameter and that convert either a numeric value to a string or a <xref:System.DateTime> value to a string.</span></span>  
  
 <span data-ttu-id="4a36e-175">Toutefois, n’importe quel type défini par l’utilisateur qui implémente <xref:System.IConvertible> faire utiliser la <xref:System.IFormatProvider> paramètre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-175">However, any user-defined type that implements <xref:System.IConvertible> can make use of the <xref:System.IFormatProvider> parameter.</span></span>  
  
<a name="Base64"></a>   
## <a name="base64-encoding"></a><span data-ttu-id="4a36e-176">Encodage Base64</span><span class="sxs-lookup"><span data-stu-id="4a36e-176">Base64 Encoding</span></span>  
 <span data-ttu-id="4a36e-177">Encodage Base64 convertit les données binaires en une chaîne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-177">Base64 encoding converts binary data to a string.</span></span> <span data-ttu-id="4a36e-178">Données sont exprimées en chiffres base 64 peuvent être aisément transmises sur des canaux de données qui peuvent transmettre uniquement des caractères 7 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-178">Data expressed as base-64 digits can be easily conveyed over data channels that can only transmit 7-bit characters.</span></span> <span data-ttu-id="4a36e-179">Le <xref:System.Convert> classe comprend les méthodes suivantes pour prendre en charge l’encodage base64 : un ensemble de méthodes prend en charge la conversion d’un tableau d’octets vers et depuis un <xref:System.String> ou vers et à partir d’un tableau de caractères Unicode constitués de chiffres en base 64.</span><span class="sxs-lookup"><span data-stu-id="4a36e-179">The <xref:System.Convert> class includes the following methods to support base64 encoding: A set of methods support converting an array of bytes to and from a <xref:System.String> or to and from an array of Unicode characters consisting of base-64 digit characters.</span></span>  
  
-   <span data-ttu-id="4a36e-180"><xref:System.Convert.ToBase64String%2A>, qui convertit un tableau d’octets en une chaîne codée en base64.</span><span class="sxs-lookup"><span data-stu-id="4a36e-180"><xref:System.Convert.ToBase64String%2A>, which converts a byte array to a base64-encoded string.</span></span>  
  
-   <span data-ttu-id="4a36e-181"><xref:System.Convert.ToBase64CharArray%2A>, qui convertit un tableau d’octets en un tableau de caractères codé en base64.</span><span class="sxs-lookup"><span data-stu-id="4a36e-181"><xref:System.Convert.ToBase64CharArray%2A>, which converts a byte array to a base64-encoded character array.</span></span>  
  
-   <span data-ttu-id="4a36e-182"><xref:System.Convert.FromBase64String%2A>, qui convertit une chaîne codée en base64 en un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="4a36e-182"><xref:System.Convert.FromBase64String%2A>, which converts a base64-encoded string to a byte array.</span></span>  
  
-   <span data-ttu-id="4a36e-183"><xref:System.Convert.FromBase64CharArray%2A>, qui convertit un tableau de caractères codé en base64 dans un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="4a36e-183"><xref:System.Convert.FromBase64CharArray%2A>, which converts a base64-encoded character array to a byte array.</span></span>  
  
<a name="Other"></a>   
## <a name="other-common-conversions"></a><span data-ttu-id="4a36e-184">Autres Conversions courantes</span><span class="sxs-lookup"><span data-stu-id="4a36e-184">Other Common Conversions</span></span>  
 <span data-ttu-id="4a36e-185">Vous pouvez utiliser les autres classes dans le .NET Framework pour effectuer certaines conversions qui ne sont pas pris en charge par les méthodes statiques de la <xref:System.Convert> classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-185">You can use other classes in the NET Framework to perform some conversions that are not supported by the static methods of the <xref:System.Convert> class.</span></span>  <span data-ttu-id="4a36e-186">Elles incluent notamment :</span><span class="sxs-lookup"><span data-stu-id="4a36e-186">These include:</span></span>  
  
 <span data-ttu-id="4a36e-187">Conversion en tableaux d’octets</span><span class="sxs-lookup"><span data-stu-id="4a36e-187">Conversion to byte arrays</span></span>  
 <span data-ttu-id="4a36e-188">Le <xref:System.BitConverter> classe fournit des méthodes qui convertissent les types numériques primitifs (y compris <xref:System.Boolean>) aux tableaux d’octets et de byte tableaux sauvegarde pour les types de données primitifs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-188">The <xref:System.BitConverter> class  provides methods that convert the primitive numeric types (including <xref:System.Boolean>) to byte arrays and from byte arrays back to primitive data types.</span></span>  
  
 <span data-ttu-id="4a36e-189">Encodage de caractères et le décodage</span><span class="sxs-lookup"><span data-stu-id="4a36e-189">Character encoding and decoding</span></span>  
 <span data-ttu-id="4a36e-190">Le <xref:System.Text.Encoding> classe et ses classes dérivées (telles que <xref:System.Text.UnicodeEncoding> et <xref:System.Text.UTF8Encoding>) fournissent des méthodes pour encoder un tableau de caractères ou une chaîne (autrement dit, pour les convertir en un tableau d’octets dans un encodage particulier) et pour décoder un codé en tableau d’octets (autrement dit, convertir un tableau d’octets en caractères Unicode encodé en UTF16.</span><span class="sxs-lookup"><span data-stu-id="4a36e-190">The <xref:System.Text.Encoding> class and its derived classes (such as <xref:System.Text.UnicodeEncoding> and <xref:System.Text.UTF8Encoding>) provide methods to encode a character array or a string (that is, to convert them to a byte array in a particular encoding) and to decode an encoded byte array (that is, convert a byte array back to UTF16-encoded Unicode characters.</span></span> <span data-ttu-id="4a36e-191">Pour plus d’informations, consultez [encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md)</span><span class="sxs-lookup"><span data-stu-id="4a36e-191">For more information, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-192">L’exemple suivant illustre certaines des méthodes de conversion dans le <xref:System.Convert> classe, y compris <xref:System.Convert.ToInt32%2A>, <xref:System.Convert.ToBoolean%2A>, et <xref:System.Convert.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-192">The following example demonstrates some of the conversion methods in the <xref:System.Convert> class, including <xref:System.Convert.ToInt32%2A>, <xref:System.Convert.ToBoolean%2A>, and <xref:System.Convert.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Convert#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert/CPP/converter.cpp#1)]
 [!code-csharp[System.Convert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert/CS/converter.cs#1)]
 [!code-vb[System.Convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert/VB/converter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Decimal" />
    <altmember cref="T:System.Boolean" />
    <altmember cref="T:System.Char" />
    <altmember cref="T:System.String" />
    <related type="Article" href="~/docs/standard/base-types/type-conversion.md">
      <span data-ttu-id="4a36e-193">Conversion de type dans le .NET Framework</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a36e-193">Type Conversion in the .NET Framework</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-194">Retourne un objet d'un type spécifié dont la valeur est équivalente à celle d'un objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-194">Returns an object of a specified type whose value is equivalent to a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, Type conversionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, class System.Type conversionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeType (value As Object, conversionType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, Type ^ conversionType);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * Type -&gt; obj" Usage="System.Convert.ChangeType (value, conversionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="conversionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-195">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-195">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="conversionType">
          <span data-ttu-id="4a36e-196">Type d'objet à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-196">The type of object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-197">Retourne un objet du type spécifié dont la valeur est équivalente à celle de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-197">Returns an object of the specified type and whose value is equivalent to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-198">Objet dont le type est <paramref name="conversionType" /> et dont la valeur équivaut à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-198">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4a36e-199">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-199">-or-</span>
          </span>
          <span data-ttu-id="4a36e-200">Référence null (<see langword="Nothing" /> en Visual Basic), si <paramref name="value" /> est <see langword="null" /> et <paramref name="conversionType" /> n'est pas un type de valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-200">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-201"><xref:System.Convert.ChangeType%2A> est une méthode de conversion à usage général qui convertit l’objet spécifié par `value` à `conversionType`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-201"><xref:System.Convert.ChangeType%2A> is a general-purpose conversion method that converts the object specified by `value` to `conversionType`.</span></span> <span data-ttu-id="4a36e-202">Le `value` paramètre peut être un objet de n’importe quel type, et `conversionType` peut également être un <xref:System.Type> objet qui représente n’importe quel type de base ou personnalisé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-202">The `value` parameter can be an object of any type, and `conversionType` can also be a <xref:System.Type> object that represents any base or custom type.</span></span> <span data-ttu-id="4a36e-203">Pour la conversion réussisse, `value` doit implémenter le <xref:System.IConvertible> interface, étant donné que la méthode encapsule simplement un appel à une approprié <xref:System.IConvertible> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-203">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="4a36e-204">La méthode requiert que la conversion de `value` à `conversionType` pris en charge.</span><span class="sxs-lookup"><span data-stu-id="4a36e-204">The method requires that conversion of `value` to `conversionType` be supported.</span></span>  
  
 <span data-ttu-id="4a36e-205">Cette méthode utilise la culture du thread actuel pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-205">This method uses the current thread's culture for the conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-206">L'exemple suivant illustre l'utilisation de la méthode <xref:System.Convert.ChangeType%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-206">The following example illustrates the use of the <xref:System.Convert.ChangeType%2A> method.</span></span>  
  
 [!code-cpp[convertchangetype#1](~/samples/snippets/cpp/VS_Snippets_CLR/convertchangetype/CPP/convertchangetype.cpp#1)]
 [!code-csharp[convertchangetype#1](~/samples/snippets/csharp/VS_Snippets_CLR/convertchangetype/CS/convertchangetype.cs#1)]
 [!code-vb[convertchangetype#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convertchangetype/VB/convertchangetype.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-207">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-207">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-208">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-208">-or-</span>
          </span>
          <span data-ttu-id="4a36e-209">
            <paramref name="value" /> est <see langword="null" /> et <paramref name="conversionType" /> est un type valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-209">
              <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span>
          </span>
          <span data-ttu-id="4a36e-210">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-210">-or-</span>
          </span>
          <span data-ttu-id="4a36e-211">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-211">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-212">Le format de <paramref name="value" /> n’est pas reconnu par <paramref name="conversionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-212">
              <paramref name="value" /> is not in a format recognized by <paramref name="conversionType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-213">
            <paramref name="value" /> représente un nombre qui est en dehors de la plage de <paramref name="conversionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-213">
              <paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-214">
            <paramref name="conversionType" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-214">
              <paramref name="conversionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="4a36e-215">Le <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> méthode peut convertir une valeur d’énumération à un autre type.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-215">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> method can convert an enumeration value to another type.</span>
            </span>
            <span data-ttu-id="4a36e-216">Cependant, il ne peut pas convertir un autre type d’une valeur d’énumération, même si le type de source est le type sous-jacent de l’énumération.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-216">However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration.</span>
            </span>
            <span data-ttu-id="4a36e-217">Pour convertir un type en une valeur d’énumération, utilisez un opérateur de cast (en c#) ou une fonction de conversion (en Visual Basic).</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-217">To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic).</span>
            </span>
            <span data-ttu-id="4a36e-218">L’exemple suivant illustre la conversion vers et depuis un <c>Continent</c> valeur d’énumération.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-218">The following example illustrates the conversion to and from a <c>Continent</c> enumeration value.</span>
            </span>
            <span data-ttu-id="4a36e-219">[ ! code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [ ! code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-219">[!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span>
            </span>
            <span data-ttu-id="4a36e-220">Le <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> méthode peut convertir un type nullable à un autre type.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-220">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> method can convert a nullable type to another type.</span>
            </span>
            <span data-ttu-id="4a36e-221">Toutefois, il ne peut pas convertir en un autre type valeur d’un type nullable, même si <paramref name="conversionType" /> est le type sous-jacent de le <see cref="T:System.Nullable`1" />. Pour effectuer la conversion, vous pouvez utiliser un opérateur de cast (en c#) ou une fonction de conversion (en Visual Basic).</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-221">However, it cannot convert another type to a value of a nullable type, even if <paramref name="conversionType" /> is the underlying type of the <see cref="T:System.Nullable`1" />.To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic).</span>
            </span>
            <span data-ttu-id="4a36e-222">L’exemple suivant illustre la conversion vers et à partir d’un type nullable.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-222">The following example illustrates the conversion to and from a nullable type.</span>
            </span>
            <span data-ttu-id="4a36e-223">[ ! code-csharp[System.Convert.ChangeType#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable.cs#7)] [ ! code-vb[System.Convert.ChangeType#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable.vb#7)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-223">[!code-csharp[System.Convert.ChangeType#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable.cs#7)] [!code-vb[System.Convert.ChangeType#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable.vb#7)]</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, TypeCode typeCode);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * TypeCode -&gt; obj" Usage="System.Convert.ChangeType (value, typeCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-224">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-224">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="typeCode">
          <span data-ttu-id="4a36e-225">Type d'objet à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-225">The type of object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-226">Retourne un objet du type spécifié dont la valeur est équivalente à celle de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-226">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-227">Objet dont le type sous-jacent est <paramref name="typeCode" /> et dont la valeur équivaut à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-227">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4a36e-228">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-228">-or-</span>
          </span>
          <span data-ttu-id="4a36e-229">Référence null (<see langword="Nothing" /> en Visual Basic), si <paramref name="value" /> est <see langword="null" /> et <paramref name="typeCode" /> est <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, ou <see cref="F:System.TypeCode.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-229">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-230"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> est une méthode de conversion à usage général qui convertit l’objet spécifié par `value` à un type prédéfini spécifié par `typeCode`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-230"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> is a general-purpose conversion method that converts the object specified by `value` to a predefined type specified by `typeCode`.</span></span> <span data-ttu-id="4a36e-231">Le `value` paramètre peut être un objet de n’importe quel type.</span><span class="sxs-lookup"><span data-stu-id="4a36e-231">The `value` parameter can be an object of any type.</span></span> <span data-ttu-id="4a36e-232">Pour la conversion réussisse, `value` doit implémenter le <xref:System.IConvertible> interface, étant donné que la méthode encapsule simplement un appel à une approprié <xref:System.IConvertible> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-232">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="4a36e-233">La méthode requiert également que la conversion de `value` à `typeCode` pris en charge.</span><span class="sxs-lookup"><span data-stu-id="4a36e-233">The method also requires that conversion of `value` to `typeCode` be supported.</span></span>  
  
 <span data-ttu-id="4a36e-234">Le <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> méthode ne prend pas en charge la conversion de `value` à un type personnalisé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-234">The <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> method does not support the conversion of `value` to a custom type.</span></span> <span data-ttu-id="4a36e-235">Pour effectuer une telle conversion, appelez le <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-235">To perform such a conversion, call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-236">L’exemple suivant montre comment utiliser le <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> méthode pour modifier un <xref:System.Object> au type spécifié par le <xref:System.TypeCode> paramètre, si possible.</span><span class="sxs-lookup"><span data-stu-id="4a36e-236">The following example illustrates how to use the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29> method to change an <xref:System.Object> to the type specified by the <xref:System.TypeCode> parameter, if possible.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype_01.cpp#2)]
 [!code-csharp[System.Convert.ChangeType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype01.cs#2)]
 [!code-vb[System.Convert.ChangeType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype01.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-237">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-237">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-238">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-238">-or-</span>
          </span>
          <span data-ttu-id="4a36e-239">
            <paramref name="value" /> est <see langword="null" />, et <paramref name="typeCode" /> spécifie un type valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-239">
              <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span>
          </span>
          <span data-ttu-id="4a36e-240">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-240">-or-</span>
          </span>
          <span data-ttu-id="4a36e-241">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-241">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-242">le format de <paramref name="value" /> n’est pas reconnu par le type <paramref name="typeCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-242">
              <paramref name="value" /> is not in a format recognized by the <paramref name="typeCode" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-243">
            <paramref name="value" /> représente un nombre qui est en dehors de la plage du type <paramref name="typeCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-243">
              <paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-244">
            <paramref name="typeCode" /> n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-244">
              <paramref name="typeCode" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, Type conversionType, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, class System.Type conversionType, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeType (value As Object, conversionType As Type, provider As IFormatProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, Type ^ conversionType, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * Type * IFormatProvider -&gt; obj" Usage="System.Convert.ChangeType (value, conversionType, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="conversionType" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-245">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-245">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="conversionType">
          <span data-ttu-id="4a36e-246">Type d'objet à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-246">The type of object to return.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-247">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-247">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-248">Retourne un objet du type spécifié dont la valeur est équivalente à celle de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-248">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          </span>
          <span data-ttu-id="4a36e-249">Un paramètre fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-249">A parameter supplies culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-250">Objet dont le type est <paramref name="conversionType" /> et dont la valeur équivaut à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-250">An object whose type is <paramref name="conversionType" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4a36e-251">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-251">-or-</span>
          </span>
          <span data-ttu-id="4a36e-252">
            <paramref name="value" />, si le <see cref="T:System.Type" /> de <paramref name="value" /> et <paramref name="conversionType" /> sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-252">
              <paramref name="value" />, if the <see cref="T:System.Type" /> of <paramref name="value" /> and <paramref name="conversionType" /> are equal.</span>
          </span>
          <span data-ttu-id="4a36e-253">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-253">-or-</span>
          </span>
          <span data-ttu-id="4a36e-254">Référence null (<see langword="Nothing" /> en Visual Basic), si <paramref name="value" /> est <see langword="null" /> et <paramref name="conversionType" /> n'est pas un type de valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-254">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-255"><xref:System.Convert.ChangeType%2A> est une méthode de conversion à usage général qui convertit l’objet spécifié par `value` à `conversionType`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-255"><xref:System.Convert.ChangeType%2A> is a general-purpose conversion method that converts the object specified by `value` to `conversionType`.</span></span> <span data-ttu-id="4a36e-256">Le `value` paramètre peut être un objet de n’importe quel type, et `conversionType` peut également être un <xref:System.Type> objet qui représente n’importe quel type de base ou personnalisé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-256">The `value` parameter can be an object of any type, and `conversionType` can also be a <xref:System.Type> object that represents any base or custom type.</span></span> <span data-ttu-id="4a36e-257">Pour la conversion réussisse, `value` doit implémenter le <xref:System.IConvertible> interface, étant donné que la méthode encapsule simplement un appel à une approprié <xref:System.IConvertible> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-257">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="4a36e-258">La méthode requiert que la conversion de `value` à `conversionType` pris en charge.</span><span class="sxs-lookup"><span data-stu-id="4a36e-258">The method requires that conversion of `value` to `conversionType` be supported.</span></span>  
  
 <span data-ttu-id="4a36e-259">Le `provider` paramètre est un <xref:System.IFormatProvider> implémentation qui fournit des informations de mise en forme pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-259">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies formatting information for the conversion.</span></span> <span data-ttu-id="4a36e-260">Si et comment ce paramètre est utilisé dépend de sous-jacent <xref:System.IConvertible> implémentation.</span><span class="sxs-lookup"><span data-stu-id="4a36e-260">Whether and how this parameter is used depends on the underlying <xref:System.IConvertible> implementation.</span></span> <span data-ttu-id="4a36e-261">Si `value` est un type de données de base, `provider` est utilisé uniquement pour les conversions suivantes :</span><span class="sxs-lookup"><span data-stu-id="4a36e-261">If `value` is a base data type, `provider` is used only for the following conversions:</span></span>  
  
-   <span data-ttu-id="4a36e-262">Conversion d’un nombre en une chaîne, ou à partir d’une chaîne à un nombre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-262">Conversion from a number to a string, or from a string to a number.</span></span> <span data-ttu-id="4a36e-263">`provider` doit être un <xref:System.Globalization.CultureInfo> objet, un <xref:System.Globalization.NumberFormatInfo> objet, ou pour un personnalisé <xref:System.IFormatProvider> implémentation qui retourne un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-263">`provider` must be a <xref:System.Globalization.CultureInfo> object, a <xref:System.Globalization.NumberFormatInfo> object, or a custom <xref:System.IFormatProvider> implementation that returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-264">Toutefois, étant donné que le <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> méthode effectue la conversion en utilisant le spécificateur de format « G » par défaut, le `provider` paramètre n’a aucun effet si `value` ou le type cible est un entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-264">However, because the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method performs the conversion using the default "G" format specifier, the `provider` parameter has no effect if `value` or the target type is an unsigned integer.</span></span> <span data-ttu-id="4a36e-265">Si `provider` est `null`, le <xref:System.Globalization.CultureInfo> objet qui représente la culture du thread actuel est utilisé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-265">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="4a36e-266">Conversion à partir d’un <xref:System.DateTime> valeur en une chaîne ou d’une chaîne à un <xref:System.DateTime> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-266">Conversion from a <xref:System.DateTime> value to a string, or from a string to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="4a36e-267">`provider` doit être un <xref:System.Globalization.CultureInfo> ou <xref:System.Globalization.DateTimeFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-267">`provider` must be a <xref:System.Globalization.CultureInfo> or <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="4a36e-268">Si `provider` est `null`, le <xref:System.Globalization.CultureInfo> objet qui représente la culture du thread actuel est utilisé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-268">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-269">Si `value` est un type défini par l’application, son <xref:System.IConvertible> implémentation peut utiliser le `provider` paramètre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-269">If `value` is an application-defined type, its <xref:System.IConvertible> implementation may use the `provider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-270">L'exemple suivant définit une classe `Temperature` qui implémente l'interface <xref:System.IConvertible> .</span><span class="sxs-lookup"><span data-stu-id="4a36e-270">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype03.cpp#3)]
 [!code-csharp[System.Convert.ChangeType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype03.cs#3)]
 [!code-vb[System.Convert.ChangeType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype03.vb#3)]  
  
 <span data-ttu-id="4a36e-271">L’exemple suivant crée une instance de la `Temperature` classe et appelle le <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> méthode pour le convertir en types numériques de base pris en charge par le .NET Framework et en un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-271">The following example creates an instance of the `Temperature` class and calls the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method to convert it to the basic numeric types supported by the .NET Framework and to a <xref:System.String>.</span></span> <span data-ttu-id="4a36e-272">Il montre que le <xref:System.Convert.ChangeType%2A> méthode encapsule un appel vers le type de source <xref:System.IConvertible> implémentation.</span><span class="sxs-lookup"><span data-stu-id="4a36e-272">It illustrates that the <xref:System.Convert.ChangeType%2A> method wraps a call to the source type's <xref:System.IConvertible> implementation.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype03.cpp#4)]
 [!code-csharp[System.Convert.ChangeType#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype03.cs#4)]
 [!code-vb[System.Convert.ChangeType#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype03.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-273">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-273">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-274">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-274">-or-</span>
          </span>
          <span data-ttu-id="4a36e-275">
            <paramref name="value" /> est <see langword="null" /> et <paramref name="conversionType" /> est un type valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-275">
              <paramref name="value" /> is <see langword="null" /> and <paramref name="conversionType" /> is a value type.</span>
          </span>
          <span data-ttu-id="4a36e-276">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-276">-or-</span>
          </span>
          <span data-ttu-id="4a36e-277">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-277">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-278">
            <paramref name="value" /> n’est pas dans un format pour le <paramref name="conversionType" /> reconnu par <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-278">
              <paramref name="value" /> is not in a format for <paramref name="conversionType" /> recognized by <paramref name="provider" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-279">
            <paramref name="value" /> représente un nombre qui est en dehors de la plage du <paramref name="conversionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-279">
              <paramref name="value" /> represents a number that is out of the range of <paramref name="conversionType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-280">
            <paramref name="conversionType" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-280">
              <paramref name="conversionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="4a36e-281">Le <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> méthode peut convertir une valeur d’énumération à un autre type.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-281">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> method can convert an enumeration value to another type.</span>
            </span>
            <span data-ttu-id="4a36e-282">Cependant, il ne peut pas convertir un autre type d’une valeur d’énumération, même si le type de source est le type sous-jacent de l’énumération.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-282">However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration.</span>
            </span>
            <span data-ttu-id="4a36e-283">Pour convertir un type en une valeur d’énumération, utilisez un opérateur de cast (en c#) ou une fonction de conversion (en Visual Basic).</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-283">To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic).</span>
            </span>
            <span data-ttu-id="4a36e-284">L’exemple suivant illustre la conversion vers et depuis un <c>Continent</c> valeur d’énumération.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-284">The following example illustrates the conversion to and from a <c>Continent</c> enumeration value.</span>
            </span>
            <span data-ttu-id="4a36e-285">[ ! code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [ ! code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-285">[!code-csharp[System.Convert.ChangeType#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_enum2.cs#5)] [!code-vb[System.Convert.ChangeType#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_enum2.vb#5)]</span>
            </span>
            <span data-ttu-id="4a36e-286">Le <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> méthode peut convertir un type nullable à un autre type.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-286">The <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /> method can convert a nullable type to another type.</span>
            </span>
            <span data-ttu-id="4a36e-287">Toutefois, il ne peut pas convertir en un autre type valeur d’un type nullable, même si <paramref name="conversionType" /> est le type sous-jacent de le <see cref="T:System.Nullable`1" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-287">However, it cannot convert another type to a value of a nullable type, even if <paramref name="conversionType" /> is the underlying type of the <see cref="T:System.Nullable`1" />.</span>
            </span>
            <span data-ttu-id="4a36e-288">Pour effectuer la conversion, vous pouvez utiliser un opérateur de cast (en c#) ou une fonction de conversion (en Visual Basic).</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-288">To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic).</span>
            </span>
            <span data-ttu-id="4a36e-289">L’exemple suivant illustre la conversion vers et à partir d’un type nullable.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-289">The following example illustrates the conversion to and from a nullable type.</span>
            </span>
            <span data-ttu-id="4a36e-290">[ ! code-csharp[System.Convert.ChangeType#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable_1.cs#8)] [ ! code-vb[System.Convert.ChangeType#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable_1.vb#8)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a36e-290">[!code-csharp[System.Convert.ChangeType#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype_nullable_1.cs#8)] [!code-vb[System.Convert.ChangeType#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype_nullable_1.vb#8)]</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public static object ChangeType (object value, TypeCode typeCode, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ChangeType(object value, valuetype System.TypeCode typeCode, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ChangeType(System::Object ^ value, TypeCode typeCode, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ChangeType : obj * TypeCode * IFormatProvider -&gt; obj" Usage="System.Convert.ChangeType (value, typeCode, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-291">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-291">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="typeCode">
          <span data-ttu-id="4a36e-292">Type d'objet à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-292">The type of object to return.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-293">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-293">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-294">Retourne un objet du type spécifié dont la valeur est équivalente à celle de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-294">Returns an object of the specified type whose value is equivalent to the specified object.</span>
          </span>
          <span data-ttu-id="4a36e-295">Un paramètre fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-295">A parameter supplies culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-296">Objet dont le type sous-jacent est <paramref name="typeCode" /> et dont la valeur équivaut à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-296">An object whose underlying type is <paramref name="typeCode" /> and whose value is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4a36e-297">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-297">-or-</span>
          </span>
          <span data-ttu-id="4a36e-298">Référence null (<see langword="Nothing" /> en Visual Basic), si <paramref name="value" /> est <see langword="null" /> et <paramref name="typeCode" /> est <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, ou <see cref="F:System.TypeCode.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-298">A null reference (<see langword="Nothing" /> in Visual Basic), if <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> is <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" />, or <see cref="F:System.TypeCode.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-299"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> est une méthode de conversion à usage général qui convertit l’objet spécifié par `value` à un type prédéfini spécifié par `typeCode`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-299"><xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> is a general-purpose conversion method that converts the object specified by `value` to a predefined type specified by `typeCode`.</span></span> <span data-ttu-id="4a36e-300">Le `value` paramètre peut être un objet de n’importe quel type.</span><span class="sxs-lookup"><span data-stu-id="4a36e-300">The `value` parameter can be an object of any type.</span></span> <span data-ttu-id="4a36e-301">Pour la conversion réussisse, `value` doit implémenter le <xref:System.IConvertible> interface, étant donné que la méthode encapsule simplement un appel à une approprié <xref:System.IConvertible> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-301">For the conversion to succeed, `value` must implement the <xref:System.IConvertible> interface, because the method simply wraps a call to an appropriate <xref:System.IConvertible> method.</span></span> <span data-ttu-id="4a36e-302">La méthode requiert également que la conversion de `value` à `typeCode` pris en charge.</span><span class="sxs-lookup"><span data-stu-id="4a36e-302">The method also requires that conversion of `value` to `typeCode` be supported.</span></span>  
  
 <span data-ttu-id="4a36e-303">Le <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> méthode ne prend pas en charge la conversion de `value` à un type personnalisé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-303">The <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method does not support the conversion of `value` to a custom type.</span></span> <span data-ttu-id="4a36e-304">Pour effectuer une telle conversion, appelez le <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-304">To perform such a conversion, call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="4a36e-305">Le `provider` paramètre est un <xref:System.IFormatProvider> implémentation qui fournit des informations de mise en forme pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-305">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies formatting information for the conversion.</span></span> <span data-ttu-id="4a36e-306">Si et comment ce paramètre est utilisé dépend de sous-jacent <xref:System.IConvertible> implémentation.</span><span class="sxs-lookup"><span data-stu-id="4a36e-306">Whether and how this parameter is used depends on the underlying <xref:System.IConvertible> implementation.</span></span> <span data-ttu-id="4a36e-307">Si `value` est un type de données de base, `provider` est utilisé uniquement pour les conversions suivantes.</span><span class="sxs-lookup"><span data-stu-id="4a36e-307">If `value` is a base data type, `provider` is used only for the following conversions.</span></span> <span data-ttu-id="4a36e-308">Si un `null` <xref:System.IFormatProvider> argument est passé à ces méthodes, le <xref:System.Globalization.CultureInfo> objet qui représente la culture du thread actuel est utilisé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-308">If a `null`<xref:System.IFormatProvider> argument is passed to these methods, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
-   <span data-ttu-id="4a36e-309">Conversion d’un nombre en une chaîne, ou à partir d’une chaîne à un nombre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-309">Conversion from a number to a string, or from a string to a number.</span></span> <span data-ttu-id="4a36e-310">`provider` doit être un <xref:System.Globalization.CultureInfo> objet, un <xref:System.Globalization.NumberFormatInfo> objet, ou pour un personnalisé <xref:System.IFormatProvider> implémentation qui retourne un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-310">`provider` must be a <xref:System.Globalization.CultureInfo> object, a <xref:System.Globalization.NumberFormatInfo> object, or a custom <xref:System.IFormatProvider> implementation that returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-311">Toutefois, étant donné que le <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> méthode effectue la conversion en utilisant le spécificateur de format « G » par défaut, le `provider` paramètre n’a aucun effet si `value` ou le type cible est un entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-311">However, because the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method performs the conversion using the default "G" format specifier, the `provider` parameter has no effect if `value` or the target type is an unsigned integer.</span></span>  
  
-   <span data-ttu-id="4a36e-312">Conversion à partir d’un <xref:System.DateTime> valeur en une chaîne ou d’une chaîne à un <xref:System.DateTime> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-312">Conversion from a <xref:System.DateTime> value to a string, or from a string to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="4a36e-313">`provider` doit être un <xref:System.Globalization.CultureInfo> ou <xref:System.Globalization.DateTimeFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-313">`provider` must be a <xref:System.Globalization.CultureInfo> or <xref:System.Globalization.DateTimeFormatInfo> object.</span></span>  
  
 <span data-ttu-id="4a36e-314">Si `value` est un type défini par l’application, son <xref:System.IConvertible> implémentation peut utiliser le `provider` paramètre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-314">If `value` is an application-defined type, its <xref:System.IConvertible> implementation may use the `provider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-315">L’exemple suivant définit un fournisseur de format personnalisé nommé `InterceptProvider` qui indique quand son <xref:System.IFormatProvider.GetFormat%2A> méthode est appelée et retourne un <xref:System.Globalization.NumberFormatInfo> pour la culture fr-FR et un <xref:System.Globalization.DateTimeFormatInfo> objet pour la culture en-US.</span><span class="sxs-lookup"><span data-stu-id="4a36e-315">The following example defines a custom format provider named `InterceptProvider` that indicates when its <xref:System.IFormatProvider.GetFormat%2A> method is called and returns a <xref:System.Globalization.NumberFormatInfo> for the fr-FR culture and a <xref:System.Globalization.DateTimeFormatInfo> object for the en-US culture.</span></span> <span data-ttu-id="4a36e-316">Ce fournisseur de format est utilisé dans tous les appels à la <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-316">This format provider is used in all calls to the <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="4a36e-317">L’exemple crée ensuite un tableau avec un <xref:System.Double> et un <xref:System.DateTime> valeur et effectue des appels répétés à <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> avec chaque valeur et chaque membre de la <xref:System.TypeCode> énumération.</span><span class="sxs-lookup"><span data-stu-id="4a36e-317">The example then creates an array with a <xref:System.Double> and a <xref:System.DateTime> value and makes repeated calls to <xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29> with each value and each member of the <xref:System.TypeCode> enumeration.</span></span> <span data-ttu-id="4a36e-318">L’exemple illustre lorsque la méthode utilise le <xref:System.IFormatProvider> paramètre et illustre également l’utilisation de la `provider` paramètre pour effectuer la mise en forme dépendante de la culture.</span><span class="sxs-lookup"><span data-stu-id="4a36e-318">The example illustrates when the method uses the <xref:System.IFormatProvider> parameter and also illustrates the use of the `provider` parameter to perform culture-sensitive formatting.</span></span>  
  
 [!code-cpp[System.Convert.ChangeType#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.changetype/cpp/changetype00.cpp#1)]
 [!code-csharp[System.Convert.ChangeType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.changetype/cs/changetype00.cs#1)]
 [!code-vb[System.Convert.ChangeType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.changetype/vb/changetype00.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-319">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-319">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-320">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-320">-or-</span>
          </span>
          <span data-ttu-id="4a36e-321">
            <paramref name="value" /> est <see langword="null" />, et <paramref name="typeCode" /> spécifie un type valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-321">
              <paramref name="value" /> is <see langword="null" /> and <paramref name="typeCode" /> specifies a value type.</span>
          </span>
          <span data-ttu-id="4a36e-322">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-322">-or-</span>
          </span>
          <span data-ttu-id="4a36e-323">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-323">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-324">
            <paramref name="value" /> n’est pas dans un format pour le type <paramref name="typeCode" /> reconnu par <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-324">
              <paramref name="value" /> is not in a format for the <paramref name="typeCode" /> type recognized by <paramref name="provider" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-325">
            <paramref name="value" /> représente un nombre qui est en dehors de la plage du type <paramref name="typeCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-325">
              <paramref name="value" /> represents a number that is out of the range of the <paramref name="typeCode" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-326">
            <paramref name="typeCode" /> n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-326">
              <paramref name="typeCode" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DBNull">
      <MemberSignature Language="C#" Value="public static readonly object DBNull;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DBNull" />
      <MemberSignature Language="DocId" Value="F:System.Convert.DBNull" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DBNull As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DBNull;" />
      <MemberSignature Language="F#" Value=" staticval mutable DBNull : obj" Usage="System.Convert.DBNull" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-327">Constante qui représente une colonne de base de données sans données, c'est-à-dire une base de données de valeur null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-327">A constant that represents a database column that is absent of data; that is, database null.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-328">Le <xref:System.Convert.DBNull> champ équivaut à <xref:System.DBNull.Value?displayProperty=nameWithType>, comme illustré dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="4a36e-328">The <xref:System.Convert.DBNull> field is equivalent to <xref:System.DBNull.Value?displayProperty=nameWithType>, as the following example shows.</span></span>  
  
 [!code-csharp[System.Convert.DBNull#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.dbnull/cs/dbnull1.cs#1)]
 [!code-vb[System.Convert.DBNull#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.dbnull/vb/dbnull1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DBNull" />
        <altmember cref="F:System.DBNull.Value" />
      </Docs>
    </Member>
    <Member MemberName="FromBase64CharArray">
      <MemberSignature Language="C#" Value="public static byte[] FromBase64CharArray (char[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] FromBase64CharArray(char[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBase64CharArray (inArray As Char(), offset As Integer, length As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ FromBase64CharArray(cli::array &lt;char&gt; ^ inArray, int offset, int length);" />
      <MemberSignature Language="F#" Value="static member FromBase64CharArray : char[] * int * int -&gt; byte[]" Usage="System.Convert.FromBase64CharArray (inArray, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="4a36e-329">Tableau de caractères Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-329">A Unicode character array.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="4a36e-330">Position dans <c>inArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-330">A position within <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4a36e-331">Nombre d’éléments dans <c>inArray</c> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-331">The number of elements in <c>inArray</c> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-332">Convertit un sous-ensemble d'un tableau de caractères Unicode, qui encode les données binaires en chiffres base 64, en un tableau équivalent d'entiers non signés 8 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-332">Converts a subset of a Unicode character array, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span>
          </span>
          <span data-ttu-id="4a36e-333">Des paramètres spécifient le sous-ensemble du tableau d'entrée et le nombre d'éléments à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-333">Parameters specify the subset in the input array and the number of elements to convert.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-334">Tableau d'entiers non signés 8 bits équivalent aux éléments <paramref name="length" /> situés à la position <paramref name="offset" /> dans <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-334">An array of 8-bit unsigned integers equivalent to <paramref name="length" /> elements at position <paramref name="offset" /> in <paramref name="inArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-335">`inArray` se compose de chiffres en base 64, des espaces blancs et des espaces de remplissage.</span><span class="sxs-lookup"><span data-stu-id="4a36e-335">`inArray` is composed of base-64 digits, white-space characters, and trailing padding characters.</span></span> <span data-ttu-id="4a36e-336">Les chiffres en base 64 dans l’ordre croissant à partir de zéro sont les caractères majuscules « A » à « Z », les caractères minuscules « a » à « z », les chiffres « 0 » à « 9 » et les symboles « + » et « / ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-336">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</span></span>  
  
 <span data-ttu-id="4a36e-337">Les caractères d’espace blanc, leurs noms Unicode et les points de code hexadécimal, sont onglet (tabulation horizontale, U + 0009), saut de ligne (saut de ligne, U + 000D), retour chariot (retour chariot, U + 000D) et espace (SPACE, U + 0020).</span><span class="sxs-lookup"><span data-stu-id="4a36e-337">The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</span></span> <span data-ttu-id="4a36e-338">Un nombre arbitraire d’espaces blancs peut apparaître dans `inArray` , car tous les espaces blancs sont ignorées.</span><span class="sxs-lookup"><span data-stu-id="4a36e-338">An arbitrary number of white-space characters can appear in `inArray` because all white-space characters are ignored.</span></span>  
  
 <span data-ttu-id="4a36e-339">Le caractère sans valeur, « = », est utilisé pour le remplissage à droite.</span><span class="sxs-lookup"><span data-stu-id="4a36e-339">The valueless character, "=", is used for trailing padding.</span></span> <span data-ttu-id="4a36e-340">La fin de `inArray` peut se composer de zéro, un ou deux caractères de remplissage.</span><span class="sxs-lookup"><span data-stu-id="4a36e-340">The end of `inArray` can consist of zero, one, or two padding characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a36e-341">Le <xref:System.Convert.FromBase64CharArray%2A> méthode est conçue pour traiter un tableau de caractères unique qui contient toutes les données à décoder.</span><span class="sxs-lookup"><span data-stu-id="4a36e-341">The <xref:System.Convert.FromBase64CharArray%2A> method is designed to process a single character array that contains all the data to be decoded.</span></span> <span data-ttu-id="4a36e-342">Pour décoder les données caractères en base 64 à partir d’un flux de données, utilisez la <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-342">To decode base-64 character data from a stream, use the <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-343">L’exemple suivant illustre l’utilisation de la <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> méthode à décoder les données d’UUEncode (base 64) et enregistrez-le en tant que sortie binaire.</span><span class="sxs-lookup"><span data-stu-id="4a36e-343">The following example demonstrates the use of the <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to decode UUencoded (base-64) data and save it as binary output.</span></span>  
  
 [!code-cpp[System.Convert UUEncodeDecode functions#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CPP/class1.cpp#3)]
 [!code-csharp[System.Convert UUEncodeDecode functions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CS/class1.cs#3)]
 [!code-vb[System.Convert UUEncodeDecode functions#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/VB/class1.vb#3)]  
  
 <span data-ttu-id="4a36e-344">L’exemple suivant montre le <xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29> et <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> méthodes.</span><span class="sxs-lookup"><span data-stu-id="4a36e-344">The following example demonstrates the <xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29> and <xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> methods.</span></span> <span data-ttu-id="4a36e-345">L’entrée est divisée en groupes de trois octets (24 bits) chacun.</span><span class="sxs-lookup"><span data-stu-id="4a36e-345">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="4a36e-346">Par conséquent, chaque groupe se compose de quatre nombres de 6 bits où chaque nombre compris entre décimaux de 0 à 63.</span><span class="sxs-lookup"><span data-stu-id="4a36e-346">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="4a36e-347">Dans cet exemple, il existe des groupes de 3 octets 85 avec un octet restant.</span><span class="sxs-lookup"><span data-stu-id="4a36e-347">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="4a36e-348">Le premier groupe se compose des valeurs hexadécimales 00, 01 et 02, qui produisent des quatre valeurs de 6 bits sont égales à décimal 0, 0, 4 et 2.</span><span class="sxs-lookup"><span data-stu-id="4a36e-348">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="4a36e-349">Ces quatre valeurs correspondent aux chiffres en base 64, « A », « A », « E » et « C », au début de la sortie.</span><span class="sxs-lookup"><span data-stu-id="4a36e-349">Those four values correspond to the base-64 digits, "A", "A", "E", and "C", at the beginning of the output.</span></span>  
  
 <span data-ttu-id="4a36e-350">Si un nombre intégral de groupes de 3 octets n’existe pas, les octets restants sont remplis avec des zéros non significatifs pour former un groupe complet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-350">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="4a36e-351">Dans cet exemple, la valeur du dernier octet est la valeur hexadécimale FF.</span><span class="sxs-lookup"><span data-stu-id="4a36e-351">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="4a36e-352">Les 6 premiers bits sont égaux au décimal 63, ce qui correspond au chiffre en base 64 « / » à la fin de la sortie, et les 2 bits suivants sont remplis avec des zéros non significatifs pour obtenir le décimal 48, qui correspond au caractère de base-64, « w ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-352">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="4a36e-353">Les deux dernières valeurs de 6 bits sont le remplissage et correspondent à l’aide caractère de remplissage, « = ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-353">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64chararray#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64chararray/CPP/tb64ca.cpp#1)]
 [!code-csharp[convert.tobase64chararray#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64chararray/CS/tb64ca.cs#1)]
 [!code-vb[convert.tobase64chararray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64chararray/VB/tb64ca.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-354">
            <paramref name="inArray" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-354">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-355">
            <paramref name="offset" /> ou <paramref name="length" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-355">
              <paramref name="offset" /> or <paramref name="length" /> is less than 0.</span>
          </span>
          <span data-ttu-id="4a36e-356">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-356">-or-</span>
          </span>
          <span data-ttu-id="4a36e-357">
            <paramref name="offset" /> plus <paramref name="length" /> indique une position qui n’appartient pas à <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-357">
              <paramref name="offset" /> plus <paramref name="length" /> indicates a position not within <paramref name="inArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-358">La longueur d’<paramref name="inArray" />, en ignorant les espaces blancs, n’est pas zéro ou un multiple de 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-358">The length of <paramref name="inArray" />, ignoring white-space characters, is not zero or a multiple of 4.</span>
          </span>
          <span data-ttu-id="4a36e-359">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-359">-or-</span>
          </span>
          <span data-ttu-id="4a36e-360">Le format d’<paramref name="inArray" /> n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-360">The format of <paramref name="inArray" /> is invalid.</span>
          </span>
          <span data-ttu-id="4a36e-361">
            <paramref name="inArray" /> contient un caractère non-Base 64, plus de deux caractères de remplissage ou un caractère différent d’un espace blanc parmi les caractères de remplissage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-361">
              <paramref name="inArray" /> contains a non-base-64 character, more than two padding characters, or a non-white-space character among the padding characters.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.FromBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="FromBase64String">
      <MemberSignature Language="C#" Value="public static byte[] FromBase64String (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] FromBase64String(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.FromBase64String(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBase64String (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ FromBase64String(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member FromBase64String : string -&gt; byte[]" Usage="System.Convert.FromBase64String s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4a36e-362">Chaîne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-362">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-363">Convertit la chaîne spécifiée, qui encode les données binaires en chiffres base 64, en tableau équivalent d'entiers non signés 8 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-363">Converts the specified string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-364">Tableau d'entiers non signés 8 bits équivalent à <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-364">An array of 8-bit unsigned integers that is equivalent to <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-365">`s` se compose de chiffres en base 64, des espaces blancs et des espaces de remplissage.</span><span class="sxs-lookup"><span data-stu-id="4a36e-365">`s` is composed of base-64 digits, white-space characters, and trailing padding characters.</span></span> <span data-ttu-id="4a36e-366">Les chiffres en base 64 dans l’ordre croissant à partir de zéro sont les caractères majuscules « A » à « Z », les caractères minuscules « a » à « z », les chiffres « 0 » à « 9 » et les symboles « + » et « / ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-366">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</span></span>  
  
 <span data-ttu-id="4a36e-367">Les caractères d’espace blanc, leurs noms Unicode et les points de code hexadécimal, sont onglet (tabulation horizontale, U + 0009), saut de ligne (saut de ligne, U + 000D), retour chariot (retour chariot, U + 000D) et espace (SPACE, U + 0020).</span><span class="sxs-lookup"><span data-stu-id="4a36e-367">The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</span></span> <span data-ttu-id="4a36e-368">Un nombre arbitraire d’espaces blancs peut apparaître dans `s` , car tous les espaces blancs sont ignorées.</span><span class="sxs-lookup"><span data-stu-id="4a36e-368">An arbitrary number of white-space characters can appear in `s` because all white-space characters are ignored.</span></span>  
  
 <span data-ttu-id="4a36e-369">Le caractère sans valeur, « = », est utilisé pour le remplissage à droite.</span><span class="sxs-lookup"><span data-stu-id="4a36e-369">The valueless character, "=", is used for trailing padding.</span></span> <span data-ttu-id="4a36e-370">La fin de `s` peut se composer de zéro, un ou deux caractères de remplissage.</span><span class="sxs-lookup"><span data-stu-id="4a36e-370">The end of `s` can consist of zero, one, or two padding characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a36e-371">Le <xref:System.Convert.FromBase64String%2A> méthode est conçue pour traiter une chaîne unique qui contient toutes les données à décoder.</span><span class="sxs-lookup"><span data-stu-id="4a36e-371">The <xref:System.Convert.FromBase64String%2A> method is designed to process a single string that contains all the data to be decoded.</span></span> <span data-ttu-id="4a36e-372">Pour décoder les données caractères en base 64 à partir d’un flux de données, utilisez la <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-372">To decode base-64 character data from a stream, use the <xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-373">L’exemple suivant utilise le <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> méthode pour convertir un tableau d’octets en une chaîne encodée au format UUEncode (base 64), puis appelle la <xref:System.Convert.FromBase64String%28System.String%29> méthode pour restaurer le tableau d’octets d’origine.</span><span class="sxs-lookup"><span data-stu-id="4a36e-373">The following example uses the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to convert a byte array to a UUencoded (base-64) string, and then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to restore the original byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String2.cs#1)]
 [!code-vb[System.Convert.ToBase64String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String2.vb#1)]  
  
 <span data-ttu-id="4a36e-374">Voici un exemple plus complexe qui crée un tableau de 20 éléments d’entiers 32 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-374">The following is a more complex example that creates a 20-element array of 32-bit integers.</span></span> <span data-ttu-id="4a36e-375">Il utilise ensuite le <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> méthode pour convertir chaque élément dans un tableau d’octets, qui est stockée dans la position appropriée dans une mémoire tampon en appelant le <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-375">It then uses the <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a36e-376">Cette mémoire tampon est alors transmis à la <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> méthode pour créer une chaîne encodée au format UUEncode (base 64).</span><span class="sxs-lookup"><span data-stu-id="4a36e-376">This buffer is then passed to the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to create a UUencoded (base-64) string.</span></span>  <span data-ttu-id="4a36e-377">Il appelle ensuite la <xref:System.Convert.FromBase64String%28System.String%29> méthode à décoder la chaîne d’UUENCODE, puis appelle la <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> méthode pour convertir chaque ensemble de quatre octets (la taille d’un entier 32 bits) en un entier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-377">It then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to decode the UUencoded string, and calls the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</span></span> <span data-ttu-id="4a36e-378">La sortie de l’exemple montre que le tableau d’origine a été restauré avec succès.</span><span class="sxs-lookup"><span data-stu-id="4a36e-378">The output from the example shows that the original array has been successfully restored.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String.cs#2)]
 [!code-vb[System.Convert.ToBase64String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-379">
            <paramref name="s" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-379">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-380">La longueur de <paramref name="s" />, en ignorant les espaces blancs, n’est pas zéro ou un multiple de 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-380">The length of <paramref name="s" />, ignoring white-space characters, is not zero or a multiple of 4.</span>
          </span>
          <span data-ttu-id="4a36e-381">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-381">-or-</span>
          </span>
          <span data-ttu-id="4a36e-382">Le format de <paramref name="s" /> n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-382">The format of <paramref name="s" /> is invalid.</span>
          </span>
          <span data-ttu-id="4a36e-383">
            <paramref name="s" /> contient un caractère qui n’est pas de base 64, plus de deux caractères de remplissage ou un caractère différent d’un espace blanc parmi les caractères de remplissage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-383">
              <paramref name="s" /> contains a non-base-64 character, more than two padding characters, or a non-white space-character among the padding characters.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.ToBase64String(System.Byte[])" />
        <altmember cref="T:System.Security.Cryptography.FromBase64Transform" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Base64-1c3d9c03">
          <span data-ttu-id="4a36e-384">: .NET Framework 4 en Base64 d’échantillonnage</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-384">Sample: .NET Framework 4 Base64 Converter</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode GetTypeCode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode GetTypeCode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.GetTypeCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeCode (value As Object) As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode GetTypeCode(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member GetTypeCode : obj -&gt; TypeCode" Usage="System.Convert.GetTypeCode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-385">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-385">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-386">Retourne le <see cref="T:System.TypeCode" /> de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-386">Returns the <see cref="T:System.TypeCode" /> for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-387">
            <see cref="T:System.TypeCode" /> de <paramref name="value" />, ou <see cref="F:System.TypeCode.Empty" /> si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-387">The <see cref="T:System.TypeCode" /> for <paramref name="value" />, or <see cref="F:System.TypeCode.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDBNull(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDBNull (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="System.Convert.IsDBNull value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-388">Objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-388">An object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-389">Retourne une indication précisant si l'objet spécifié est de type <see cref="T:System.DBNull" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-389">Returns an indication whether the specified object is of type <see cref="T:System.DBNull" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-390">
            <see langword="true" /> si <paramref name="value" /> est de type <see cref="T:System.DBNull" />, sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-390">
              <see langword="true" /> if <paramref name="value" /> is of type <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-391">Le <xref:System.Convert.IsDBNull%2A> méthode tests si le `value` paramètre est égal à <xref:System.DBNull.Value?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-391">The <xref:System.Convert.IsDBNull%2A> method tests whether the `value` parameter is equal to <xref:System.DBNull.Value?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a36e-392">Il est équivalent au code suivant :</span><span class="sxs-lookup"><span data-stu-id="4a36e-392">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Convert.IsDBNull#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.IsDBNull/cs/Form1.cs#1)]
 [!code-vb[System.Convert.IsDBNull#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.IsDBNull/vb/Form1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="4a36e-393"><xref:System.DBNull.Value?displayProperty=nameWithType> est utilisé pour indiquer une valeur qui est manquante.</span><span class="sxs-lookup"><span data-stu-id="4a36e-393"><xref:System.DBNull.Value?displayProperty=nameWithType> is used to indicate a value that is missing.</span></span> <span data-ttu-id="4a36e-394">Il n’est pas équivalent à `null` ou <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-394">It is not equivalent to `null` or to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a36e-395">Par conséquent, un code tel que `Convert.IsDBNull(null)` en c# ou `Convert.IsDBNull(Nothing)` dans Visual Basic retourne`false`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-395">Therefore, code such as `Convert.IsDBNull(null)` in C# or `Convert.IsDBNull(Nothing)` in Visual Basic returns`false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-396">L’exemple suivant utilise un <xref:System.Data.SqlClient.SqlDataReader> objet pour récupérer des données d’enquête d’une base de données.</span><span class="sxs-lookup"><span data-stu-id="4a36e-396">The following example uses a <xref:System.Data.SqlClient.SqlDataReader> object to retrieve survey data from a database.</span></span> <span data-ttu-id="4a36e-397">Il assigne les valeurs de champ de chaque ligne dans un tableau, puis passe chaque élément de tableau à la <xref:System.Convert.IsDBNull%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-397">It assigns each row's field values to an array, and then passes each array element to the <xref:System.Convert.IsDBNull%2A> method.</span></span> <span data-ttu-id="4a36e-398">Si la méthode retourne `true`, l’exemple affecte la chaîne « NA » à l’élément de tableau.</span><span class="sxs-lookup"><span data-stu-id="4a36e-398">If the method returns `true`, the example assigns the string "NA" to the array element.</span></span> <span data-ttu-id="4a36e-399">Le tableau est ensuite ajouté à la <xref:System.Windows.Forms.DataGridView.Rows%2A> collection d’un <xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType> contrôle.</span><span class="sxs-lookup"><span data-stu-id="4a36e-399">The array is then added to the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection of a <xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType> control.</span></span>  
  
 [!code-csharp[System.Convert.IsDBNull#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.IsDBNull/cs/Form1.cs#2)]
 [!code-vb[System.Convert.IsDBNull#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.IsDBNull/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DBNull" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBase64CharArray">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-400">Convertit un sous-ensemble d'un tableau d'entiers non signés 8 bits en sous-ensemble équivalent d'un tableau de caractères Unicode encodé en chiffres base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-400">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          </span>
        </summary>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBase64CharArray">
      <MemberSignature Language="C#" Value="public static int ToBase64CharArray (byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToBase64CharArray(unsigned int8[] inArray, int32 offsetIn, int32 length, char[] outArray, int32 offsetOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64CharArray (inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToBase64CharArray(cli::array &lt;System::Byte&gt; ^ inArray, int offsetIn, int length, cli::array &lt;char&gt; ^ outArray, int offsetOut);" />
      <MemberSignature Language="F#" Value="static member ToBase64CharArray : byte[] * int * int * char[] * int -&gt; int" Usage="System.Convert.ToBase64CharArray (inArray, offsetIn, length, outArray, offsetOut)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offsetIn" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="outArray" Type="System.Char[]" />
        <Parameter Name="offsetOut" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="4a36e-401">Tableau d'entrée d'entiers non signés 8 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-401">An input array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offsetIn">
          <span data-ttu-id="4a36e-402">Position dans <c>inArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-402">A position within <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4a36e-403">Nombre d’éléments de <c>inArray</c> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-403">The number of elements of <c>inArray</c> to convert.</span>
          </span>
        </param>
        <param name="outArray">
          <span data-ttu-id="4a36e-404">Tableau de sortie de caractères Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-404">An output array of Unicode characters.</span>
          </span>
        </param>
        <param name="offsetOut">
          <span data-ttu-id="4a36e-405">Position dans <c>outArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-405">A position within <c>outArray</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-406">Convertit un sous-ensemble d'un tableau d'entiers non signés 8 bits en sous-ensemble équivalent d'un tableau de caractères Unicode encodé en chiffres base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-406">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="4a36e-407">Des paramètres spécifient les sous-ensembles en tant qu'offsets des tableaux d'entrée et de sortie ainsi que le nombre d'éléments du tableau d'entrée à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-407">Parameters specify the subsets as offsets in the input and output arrays, and the number of elements in the input array to convert.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-408">Entier 32 bits signé contenant le nombre d'octets dans <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-408">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-409">Le sous-ensemble de `length` éléments de `inArray` en commençant à la position `offsetIn`, en tant que valeur numérique et sont convertis en un sous-ensemble d’éléments dans `outArray` en commençant à la position `offsetOut`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-409">The subset of `length` elements of `inArray` starting at position `offsetIn`, are taken as a numeric value and converted to a subset of elements in `outArray` starting at position `offsetOut`.</span></span> <span data-ttu-id="4a36e-410">La valeur de retour indique le nombre d’éléments convertis dans `outArray`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-410">The return value indicates the number of converted elements in `outArray`.</span></span> <span data-ttu-id="4a36e-411">Le sous-ensemble de `outArray` se compose de chiffres en base 64.</span><span class="sxs-lookup"><span data-stu-id="4a36e-411">The subset of `outArray` consists of base-64 digits.</span></span>  
  
 <span data-ttu-id="4a36e-412">Les chiffres en base 64 dans l’ordre croissant à partir de zéro sont les caractères majuscules « A » à « Z », les caractères minuscules « a » à « z », les chiffres « 0 » à « 9 » et les symboles « + » et « / ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-412">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="4a36e-413">Le caractère sans valeur, « = », est utilisé pour le remplissage à droite.</span><span class="sxs-lookup"><span data-stu-id="4a36e-413">The valueless character, "=", is used for trailing padding.</span></span>  
  
 <span data-ttu-id="4a36e-414">Le `offset` et `length` paramètres sont des nombres signés de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-414">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="4a36e-415">Le `offsetIn` et `offsetOut` paramètres sont des positions de tableau de base zéro.</span><span class="sxs-lookup"><span data-stu-id="4a36e-415">The `offsetIn` and `offsetOut` parameters are zero-based array positions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a36e-416">Le <xref:System.Convert.ToBase64CharArray%2A> méthode est conçue pour traiter un tableau d’octets unique qui contient toutes les données à encoder.</span><span class="sxs-lookup"><span data-stu-id="4a36e-416">The <xref:System.Convert.ToBase64CharArray%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="4a36e-417">Pour créer un tableau de caractères de base-64 à partir d’un flux d’octets, utilisez la <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-417">To create a base-64 character array from a byte stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-418">L’exemple suivant montre comment utiliser le <xref:System.Convert.ToBase64CharArray%2A> au format UUencode (méthode) (encoder en base 64) un flux binaire, puis enregistrez le codage dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-418">The following example demonstrates using the <xref:System.Convert.ToBase64CharArray%2A> method to UUencode (encode in base 64) a binary stream, then save the encoding to a file.</span></span>  
  
 [!code-cpp[System.Convert UUEncodeDecode functions#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CPP/class1.cpp#2)]
 [!code-csharp[System.Convert UUEncodeDecode functions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/CS/class1.cs#2)]
 [!code-vb[System.Convert UUEncodeDecode functions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert UUEncodeDecode functions/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-419">
            <paramref name="inArray" /> ou <paramref name="outArray" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-419">
              <paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-420">
            <paramref name="offsetIn" />, <paramref name="offsetOut" /> ou <paramref name="length" /> est un nombre négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-420">
              <paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="4a36e-421">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-421">-or-</span>
          </span>
          <span data-ttu-id="4a36e-422">
            <paramref name="offsetIn" /> plus <paramref name="length" /> est supérieur à la longueur de <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-422">
              <paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
          <span data-ttu-id="4a36e-423">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-423">-or-</span>
          </span>
          <span data-ttu-id="4a36e-424">
            <paramref name="offsetOut" /> plus le nombre d’éléments à retourner est supérieur à la longueur de <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-424">
              <paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64CharArray">
      <MemberSignature Language="C#" Value="public static int ToBase64CharArray (byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToBase64CharArray(unsigned int8[] inArray, int32 offsetIn, int32 length, char[] outArray, int32 offsetOut, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64CharArray (inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer, options As Base64FormattingOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToBase64CharArray(cli::array &lt;System::Byte&gt; ^ inArray, int offsetIn, int length, cli::array &lt;char&gt; ^ outArray, int offsetOut, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64CharArray : byte[] * int * int * char[] * int * Base64FormattingOptions -&gt; int" Usage="System.Convert.ToBase64CharArray (inArray, offsetIn, length, outArray, offsetOut, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offsetIn" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="outArray" Type="System.Char[]" />
        <Parameter Name="offsetOut" Type="System.Int32" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="4a36e-425">Tableau d'entrée d'entiers non signés 8 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-425">An input array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offsetIn">
          <span data-ttu-id="4a36e-426">Position dans <c>inArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-426">A position within <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4a36e-427">Nombre d’éléments de <c>inArray</c> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-427">The number of elements of <c>inArray</c> to convert.</span>
          </span>
        </param>
        <param name="outArray">
          <span data-ttu-id="4a36e-428">Tableau de sortie de caractères Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-428">An output array of Unicode characters.</span>
          </span>
        </param>
        <param name="offsetOut">
          <span data-ttu-id="4a36e-429">Position dans <c>outArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-429">A position within <c>outArray</c>.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="4a36e-430">
            <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> pour insérer un saut de ligne tous les 76 caractères, ou <see cref="F:System.Base64FormattingOptions.None" /> pour ne pas insérer de sauts de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-430">
              <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-431">Convertit un sous-ensemble d'un tableau d'entiers non signés 8 bits en sous-ensemble équivalent d'un tableau de caractères Unicode encodé en chiffres base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-431">Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="4a36e-432">Des paramètres spécifient les sous-ensembles en tant qu'offsets des tableaux d'entrée et de sortie, le nombre d'éléments du tableau d'entrée à convertir et indiquent si des sauts de ligne sont insérés dans le tableau de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-432">Parameters specify the subsets as offsets in the input and output arrays, the number of elements in the input array to convert, and whether line breaks are inserted in the output array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-433">Entier 32 bits signé contenant le nombre d'octets dans <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-433">A 32-bit signed integer containing the number of bytes in <paramref name="outArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-434">Le sous-ensemble de `length` les éléments de la `inArray` en commençant à la position de paramètre `offsetIn`, en tant que valeur numérique et sont convertis en un sous-ensemble d’éléments dans le `outArray` en commençant à la position de paramètre `offsetOut`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-434">The subset of `length` elements of the `inArray` parameter starting at position `offsetIn`, are taken as a numeric value and converted to a subset of elements in the `outArray` parameter starting at position `offsetOut`.</span></span> <span data-ttu-id="4a36e-435">La valeur de retour indique le nombre d’éléments convertis dans `outArray`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-435">The return value indicates the number of converted elements in `outArray`.</span></span> <span data-ttu-id="4a36e-436">Le sous-ensemble de `outArray` se compose de chiffres en base 64.</span><span class="sxs-lookup"><span data-stu-id="4a36e-436">The subset of `outArray` consists of base-64 digits.</span></span>  
  
 <span data-ttu-id="4a36e-437">Les chiffres en base 64 dans l’ordre croissant à partir de zéro sont les caractères majuscules « A » à « Z », les caractères minuscules « a » à « z », les chiffres « 0 » à « 9 » et les symboles « + » et « / ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-437">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="4a36e-438">Le caractère sans valeur « = » est utilisé pour le remplissage à droite.</span><span class="sxs-lookup"><span data-stu-id="4a36e-438">The valueless character "=" is used for trailing padding.</span></span>  
  
 <span data-ttu-id="4a36e-439">Le `offset` et `length` paramètres sont des nombres signés de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-439">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="4a36e-440">Le `offsetIn` et `offsetOut` paramètres sont des positions de tableau de base zéro.</span><span class="sxs-lookup"><span data-stu-id="4a36e-440">The `offsetIn` and `offsetOut` parameters are zero-based array positions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a36e-441">Le <xref:System.Convert.ToBase64CharArray%2A> méthode est conçue pour traiter un tableau d’octets unique qui contient toutes les données à encoder.</span><span class="sxs-lookup"><span data-stu-id="4a36e-441">The <xref:System.Convert.ToBase64CharArray%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="4a36e-442">Pour créer un tableau de caractères de base-64 à partir d’un flux d’octets, utilisez la <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-442">To create a base-64 character array from a byte stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="4a36e-443">Si le `options` paramètre est défini sur <xref:System.Base64FormattingOptions.InsertLineBreaks> et la sortie de la conversion est supérieure à 76 caractères, un saut de ligne est inséré tous les 76 caractères.</span><span class="sxs-lookup"><span data-stu-id="4a36e-443">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="4a36e-444">Un saut de ligne est défini comme un retour chariot (U + 000D) suivi d’une ligne saut (U + 000D).</span><span class="sxs-lookup"><span data-stu-id="4a36e-444">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="4a36e-445">Pour plus d’informations, consultez la RFC 2045, « Multipurpose Internet Mail Extensions », à l’adresse [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="4a36e-445">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-446">L’exemple suivant montre le <xref:System.Convert.ToBase64CharArray%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-446">The following example demonstrates the <xref:System.Convert.ToBase64CharArray%2A> method.</span></span> <span data-ttu-id="4a36e-447">L’entrée est divisée en groupes de trois octets (24 bits) chacun.</span><span class="sxs-lookup"><span data-stu-id="4a36e-447">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="4a36e-448">Par conséquent, chaque groupe se compose de quatre nombres de 6 bits où chaque nombre compris entre décimaux de 0 à 63.</span><span class="sxs-lookup"><span data-stu-id="4a36e-448">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="4a36e-449">Dans cet exemple, il existe des groupes de 3 octets 85 avec un octet restant.</span><span class="sxs-lookup"><span data-stu-id="4a36e-449">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="4a36e-450">Le premier groupe se compose des valeurs hexadécimales 00, 01 et 02, qui produisent des quatre valeurs de 6 bits sont égales à décimal 0, 0, 4 et 2.</span><span class="sxs-lookup"><span data-stu-id="4a36e-450">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="4a36e-451">Ces quatre valeurs correspondent aux chiffres en base 64 « A », « A », « E » et « C » au début de la sortie.</span><span class="sxs-lookup"><span data-stu-id="4a36e-451">Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</span></span>  
  
 <span data-ttu-id="4a36e-452">Si un nombre intégral de groupes de 3 octets n’existe pas, les octets restants sont remplis avec des zéros non significatifs pour former un groupe complet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-452">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="4a36e-453">Dans cet exemple, la valeur du dernier octet est la valeur hexadécimale FF.</span><span class="sxs-lookup"><span data-stu-id="4a36e-453">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="4a36e-454">Les 6 premiers bits sont égaux au décimal 63, ce qui correspond au chiffre en base 64 « / » à la fin de la sortie, et les 2 bits suivants sont remplis avec des zéros non significatifs pour obtenir le décimal 48, qui correspond au caractère de base-64, « w ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-454">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="4a36e-455">Les deux dernières valeurs de 6 bits sont le remplissage et correspondent à l’aide caractère de remplissage, « = ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-455">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64chararray#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64chararray/CPP/tb64ca.cpp#1)]
 [!code-csharp[convert.tobase64chararray#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64chararray/CS/tb64ca.cs#1)]
 [!code-vb[convert.tobase64chararray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64chararray/VB/tb64ca.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-456">
            <paramref name="inArray" /> ou <paramref name="outArray" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-456">
              <paramref name="inArray" /> or <paramref name="outArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-457">
            <paramref name="offsetIn" />, <paramref name="offsetOut" /> ou <paramref name="length" /> est un nombre négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-457">
              <paramref name="offsetIn" />, <paramref name="offsetOut" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="4a36e-458">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-458">-or-</span>
          </span>
          <span data-ttu-id="4a36e-459">
            <paramref name="offsetIn" /> plus <paramref name="length" /> est supérieur à la longueur de <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-459">
              <paramref name="offsetIn" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
          <span data-ttu-id="4a36e-460">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-460">-or-</span>
          </span>
          <span data-ttu-id="4a36e-461">
            <paramref name="offsetOut" /> plus le nombre d’éléments à retourner est supérieur à la longueur de <paramref name="outArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-461">
              <paramref name="offsetOut" /> plus the number of elements to return is greater than the length of <paramref name="outArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-462">
            <paramref name="options" /> n’est pas une valeur de <see cref="T:System.Base64FormattingOptions" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-462">
              <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBase64String">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-463">Convertit la valeur d'un tableau d'entiers non signés 8 bits en sa représentation sous forme de chaîne équivalente, encodée en chiffres base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-463">Converts the value of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
        </summary>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] -&gt; string" Usage="System.Convert.ToBase64String inArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="4a36e-464">Tableau d'entiers non signés 8 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-464">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-465">Convertit un tableau d'entiers non signés 8 bits en sa représentation sous forme de chaîne équivalente, encodée en chiffres base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-465">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-466">Représentation sous forme de chaîne en base 64 du contenu de <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-466">The string representation, in base 64, of the contents of <paramref name="inArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-467">Les éléments de `inArray` en tant que valeur numérique et sont convertis en une représentation de chaîne encodée en chiffres base 64.</span><span class="sxs-lookup"><span data-stu-id="4a36e-467">The elements of `inArray` are taken as a numeric value and converted to a string representation that is encoded with base-64 digits.</span></span>  
  
 <span data-ttu-id="4a36e-468">Les chiffres en base 64 dans l’ordre croissant à partir de zéro sont les caractères majuscules « A » à « Z », les caractères minuscules « a » à « z », les chiffres « 0 » à « 9 » et les symboles « + » et « / ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-468">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="4a36e-469">Le caractère sans valeur, « = », est utilisé pour le remplissage à droite.</span><span class="sxs-lookup"><span data-stu-id="4a36e-469">The valueless character, "=", is used for trailing padding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a36e-470">Le <xref:System.Convert.ToBase64String%2A> méthode est conçue pour traiter un tableau d’octets unique qui contient toutes les données à encoder.</span><span class="sxs-lookup"><span data-stu-id="4a36e-470">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="4a36e-471">Pour encoder les données à partir d’un flux de données, utilisez la <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-471">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="4a36e-472">En règle générale, le <xref:System.Convert.ToBase64String%2A> méthode n’est pas utilisé pour effectuer un aller-retour un UUEncode (encodage en base 64) chaîne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-472">Ordinarily, the <xref:System.Convert.ToBase64String%2A> method is not used to round-trip a  UUEncoded (base-64 encoded) string.</span></span>  <span data-ttu-id="4a36e-473">Autrement dit, si vous décodez une chaîne en appelant le <xref:System.Convert.FromBase64String%2A> (méthode), puis encode le tableau d’octets retourné en appelant le <xref:System.Convert.ToBase64String%2A> (méthode), la chaîne résultante sera pas nécessairement identique à la chaîne d’origine.</span><span class="sxs-lookup"><span data-stu-id="4a36e-473">That is, if you decode a string by calling the <xref:System.Convert.FromBase64String%2A> method, then encode the returned byte array by calling the <xref:System.Convert.ToBase64String%2A> method, the resulting string will not necessarily be identical to the original string.</span></span> <span data-ttu-id="4a36e-474">La chaîne effectue un aller-retour uniquement si la chaîne d’origine est une chaîne codée en base 64 valide.</span><span class="sxs-lookup"><span data-stu-id="4a36e-474">The string will round-trip only if the original string is a valid base-64 encoded string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-475">L’exemple suivant utilise le <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> méthode pour convertir un tableau d’octets en une chaîne encodée au format UUEncode (base 64), puis appelle la <xref:System.Convert.FromBase64String%28System.String%29> méthode pour restaurer le tableau d’octets d’origine.</span><span class="sxs-lookup"><span data-stu-id="4a36e-475">The following example uses the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to convert a byte array to a UUencoded (base-64) string, and then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to restore the original byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String2.cs#1)]
 [!code-vb[System.Convert.ToBase64String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String2.vb#1)]  
  
 <span data-ttu-id="4a36e-476">Voici un exemple plus complexe qui crée un tableau de 20 éléments d’entiers 32 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-476">The following is a more complex example that creates a 20-element array of 32-bit integers.</span></span> <span data-ttu-id="4a36e-477">Il utilise ensuite le <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> méthode pour convertir chaque élément dans un tableau d’octets, qui est stockée dans la position appropriée dans une mémoire tampon en appelant le <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-477">It then uses the <xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a36e-478">Cette mémoire tampon est alors transmis à la <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> méthode pour créer une chaîne encodée au format UUEncode (base 64).</span><span class="sxs-lookup"><span data-stu-id="4a36e-478">This buffer is then passed to the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29> method to create a UUencoded (base-64) string.</span></span>  <span data-ttu-id="4a36e-479">Il appelle ensuite la <xref:System.Convert.FromBase64String%28System.String%29> méthode à décoder la chaîne d’UUENCODE, puis appelle la <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> méthode pour convertir chaque ensemble de quatre octets (la taille d’un entier 32 bits) en un entier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-479">It then calls the <xref:System.Convert.FromBase64String%28System.String%29> method to decode the UUencoded string, and calls the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</span></span> <span data-ttu-id="4a36e-480">La sortie de l’exemple montre que le tableau d’origine a été restauré avec succès.</span><span class="sxs-lookup"><span data-stu-id="4a36e-480">The output from the example shows that the original array has been successfully restored.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String.cs#2)]
 [!code-vb[System.Convert.ToBase64String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-481">
            <paramref name="inArray" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-481">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), options As Base64FormattingOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (inArray, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="4a36e-482">Tableau d'entiers non signés 8 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-482">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="4a36e-483">
            <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> pour insérer un saut de ligne tous les 76 caractères, ou <see cref="F:System.Base64FormattingOptions.None" /> pour ne pas insérer de sauts de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-483">
              <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-484">Convertit un tableau d'entiers non signés 8 bits en sa représentation sous forme de chaîne équivalente, encodée en chiffres base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-484">Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="4a36e-485">Un paramètre spécifie s'il faut insérer des sauts de ligne dans la valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-485">A parameter specifies whether to insert line breaks in the return value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-486">Représentation sous forme de chaîne en base 64 des éléments de <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-486">The string representation in base 64 of the elements in <paramref name="inArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-487">Les éléments de la `inArray` paramètre en tant que valeur numérique et sont convertis en une représentation de chaîne en base 64.</span><span class="sxs-lookup"><span data-stu-id="4a36e-487">The elements of the `inArray` parameter are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="4a36e-488">Les chiffres en base 64 dans l’ordre croissant à partir de zéro sont les caractères majuscules « A » à « Z », les caractères minuscules « a » à « z », les chiffres « 0 » à « 9 » et les symboles « + » et « / ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-488">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="4a36e-489">Le caractère sans valeur « = » est utilisé pour le remplissage à droite.</span><span class="sxs-lookup"><span data-stu-id="4a36e-489">The valueless character "=" is used for trailing padding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a36e-490">Le <xref:System.Convert.ToBase64String%2A> méthode est conçue pour traiter un tableau d’octets unique qui contient toutes les données à encoder.</span><span class="sxs-lookup"><span data-stu-id="4a36e-490">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="4a36e-491">Pour encoder les données à partir d’un flux de données, utilisez la <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-491">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="4a36e-492">Si le `options` paramètre est défini sur <xref:System.Base64FormattingOptions.InsertLineBreaks> et la sortie de la conversion est supérieure à 76 caractères, un saut de ligne est inséré tous les 76 caractères.</span><span class="sxs-lookup"><span data-stu-id="4a36e-492">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="4a36e-493">Un saut de ligne est défini comme un retour chariot (U + 000D) suivi d’une ligne saut (U + 000D).</span><span class="sxs-lookup"><span data-stu-id="4a36e-493">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="4a36e-494">Étant donné que les sauts de ligne sont considérés comme des caractères d’espace blanc dans un codage base 64, elles sont ignorées lors de la conversion en base 64 de la chaîne à un tableau d’octets encodée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-494">Because line breaks are considered white-space characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</span></span> <span data-ttu-id="4a36e-495">Les sauts de ligne sont simplement pratiques lors de l’affichage de la chaîne encodée à un contrôle ou un périphérique tel qu’une fenêtre de console.</span><span class="sxs-lookup"><span data-stu-id="4a36e-495">The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</span></span> <span data-ttu-id="4a36e-496">Pour plus d’informations, consultez la RFC 2045, « Multipurpose Internet Mail Extensions », à l’adresse [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="4a36e-496">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-497">L’exemple suivant appelle la <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> avec un <xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType> argument pour insérer une ligne s’arrête dans la chaîne qui est générée par l’encodage d’un tableau d’octets 100 éléments.</span><span class="sxs-lookup"><span data-stu-id="4a36e-497">The following example calls the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> with a <xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType> argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String3.cs#3)]
 [!code-vb[System.Convert.ToBase64String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String3.vb#3)]  
  
 <span data-ttu-id="4a36e-498">Comme le résultat de l’exemple montre le <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> réussit en mode de restauration le tableau d’octets d’origine ; les caractères de saut de ligne sont ignorés lors de la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-498">As the output from the example shows, the <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-499">
            <paramref name="inArray" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-499">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-500">
            <paramref name="options" /> n’est pas une valeur de <see cref="T:System.Base64FormattingOptions" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-500">
              <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (ReadOnlySpan&lt;byte&gt; bytes, Base64FormattingOptions options = System.Base64FormattingOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.ReadOnlySpan{System.Byte},System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (bytes As ReadOnlySpan(Of Byte), Optional options As Base64FormattingOptions = System.Base64FormattingOptions.None) As String" />
      <MemberSignature Language="F#" Value="static member ToBase64String : ReadOnlySpan&lt;byte&gt; * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (bytes, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, int offset, int length);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * int * int -&gt; string" Usage="System.Convert.ToBase64String (inArray, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="4a36e-501">Tableau d'entiers non signés 8 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-501">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="4a36e-502">Offset dans <c>inArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-502">An offset in <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4a36e-503">Nombre d’éléments de <c>inArray</c> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-503">The number of elements of <c>inArray</c> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-504">Convertit un sous-ensemble d'un tableau d'entiers non signés 8 bits en sa représentation sous forme de chaîne équivalente, encodée en chiffres base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-504">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="4a36e-505">Des paramètres spécifient le sous-ensemble en tant qu'offset du tableau d'entrée et le nombre d'éléments du tableau à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-505">Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-506">Représentation sous forme de chaîne, en base 64, des éléments <paramref name="length" /> de <paramref name="inArray" />, en commençant à la position <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-506">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-507">Les éléments de `inArray` en tant que valeur numérique et sont convertis en une représentation de chaîne en base 64.</span><span class="sxs-lookup"><span data-stu-id="4a36e-507">The elements of `inArray` are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="4a36e-508">Les chiffres en base 64 dans l’ordre croissant à partir de zéro sont les caractères majuscules « A » à « Z », les caractères minuscules « a » à « z », les chiffres « 0 » à « 9 » et les symboles « + » et « / ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-508">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="4a36e-509">Le caractère sans valeur, « = », est utilisé pour le remplissage à droite.</span><span class="sxs-lookup"><span data-stu-id="4a36e-509">The valueless character, "=", is used for trailing padding.</span></span>  
  
 <span data-ttu-id="4a36e-510">Le `offset` et `length` paramètres sont des nombres signés de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-510">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="4a36e-511">Le `offset` paramètre est de base zéro.</span><span class="sxs-lookup"><span data-stu-id="4a36e-511">The `offset` parameter is zero-based.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a36e-512">Le <xref:System.Convert.ToBase64String%2A> méthode est conçue pour traiter un tableau d’octets unique qui contient toutes les données à encoder.</span><span class="sxs-lookup"><span data-stu-id="4a36e-512">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="4a36e-513">Pour encoder les données à partir d’un flux de données, utilisez la <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-513">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-514">
            <paramref name="inArray" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-514">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-515">
            <paramref name="offset" /> ou <paramref name="length" /> est un nombre négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-515">
              <paramref name="offset" /> or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="4a36e-516">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-516">-or-</span>
          </span>
          <span data-ttu-id="4a36e-517">
            <paramref name="offset" /> plus <paramref name="length" /> est supérieur à la longueur de <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-517">
              <paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Base64-1c3d9c03">
          <span data-ttu-id="4a36e-518">: .NET Framework 4 en Base64 d’échantillonnage</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-518">Sample: .NET Framework 4 Base64 Converter</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToBase64String">
      <MemberSignature Language="C#" Value="public static string ToBase64String (byte[] inArray, int offset, int length, Base64FormattingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToBase64String(unsigned int8[] inArray, int32 offset, int32 length, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBase64String (inArray As Byte(), offset As Integer, length As Integer, options As Base64FormattingOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToBase64String(cli::array &lt;System::Byte&gt; ^ inArray, int offset, int length, Base64FormattingOptions options);" />
      <MemberSignature Language="F#" Value="static member ToBase64String : byte[] * int * int * Base64FormattingOptions -&gt; string" Usage="System.Convert.ToBase64String (inArray, offset, length, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="inArray">
          <span data-ttu-id="4a36e-519">Tableau d'entiers non signés 8 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-519">An array of 8-bit unsigned integers.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="4a36e-520">Offset dans <c>inArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-520">An offset in <c>inArray</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4a36e-521">Nombre d’éléments de <c>inArray</c> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-521">The number of elements of <c>inArray</c> to convert.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="4a36e-522">
            <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> pour insérer un saut de ligne tous les 76 caractères, ou <see cref="F:System.Base64FormattingOptions.None" /> pour ne pas insérer de sauts de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-522">
              <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> to insert a line break every 76 characters, or <see cref="F:System.Base64FormattingOptions.None" /> to not insert line breaks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-523">Convertit un sous-ensemble d'un tableau d'entiers non signés 8 bits en sa représentation sous forme de chaîne équivalente, encodée en chiffres base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-523">Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</span>
          </span>
          <span data-ttu-id="4a36e-524">Des paramètres spécifient le sous-ensemble en tant qu'offset du tableau d'entrée, le nombre d'éléments du tableau à convertir et indiquent s'il faut insérer des sauts de ligne dans la valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-524">Parameters specify the subset as an offset in the input array, the number of elements in the array to convert, and whether to insert line breaks in the return value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-525">Représentation sous forme de chaîne, en base 64, des éléments <paramref name="length" /> de <paramref name="inArray" />, en commençant à la position <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-525">The string representation in base 64 of <paramref name="length" /> elements of <paramref name="inArray" />, starting at position <paramref name="offset" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-526">Les éléments de la `inArray` paramètre en tant que valeur numérique et sont convertis en une représentation de chaîne en base 64.</span><span class="sxs-lookup"><span data-stu-id="4a36e-526">The elements of the `inArray` parameter are taken as a numeric value and converted to a string representation in base 64.</span></span>  
  
 <span data-ttu-id="4a36e-527">Les chiffres en base 64 dans l’ordre croissant à partir de zéro sont les caractères majuscules « A » à « Z », les caractères minuscules « a » à « z », les chiffres « 0 » à « 9 » et les symboles « + » et « / ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-527">The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</span></span> <span data-ttu-id="4a36e-528">Le caractère sans valeur « = » est utilisé pour le remplissage à droite.</span><span class="sxs-lookup"><span data-stu-id="4a36e-528">The valueless character "=" is used for trailing padding.</span></span>  
  
 <span data-ttu-id="4a36e-529">Le `offset` et `length` paramètres sont des nombres signés de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-529">The `offset` and `length` parameters are 32-bit signed numbers.</span></span> <span data-ttu-id="4a36e-530">Le `offset` paramètre est de base zéro.</span><span class="sxs-lookup"><span data-stu-id="4a36e-530">The `offset` parameter is zero-based.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a36e-531">Le <xref:System.Convert.ToBase64String%2A> méthode est conçue pour traiter un tableau d’octets unique qui contient toutes les données à encoder.</span><span class="sxs-lookup"><span data-stu-id="4a36e-531">The <xref:System.Convert.ToBase64String%2A> method is designed to process a single byte array that contains all the data to be encoded.</span></span> <span data-ttu-id="4a36e-532">Pour encoder les données à partir d’un flux de données, utilisez la <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-532">To encode data from a stream, use the <xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="4a36e-533">Si le `options` paramètre est défini sur <xref:System.Base64FormattingOptions.InsertLineBreaks> et la sortie de la conversion est supérieure à 76 caractères, un saut de ligne est inséré tous les 76 caractères.</span><span class="sxs-lookup"><span data-stu-id="4a36e-533">If the `options` parameter is set to <xref:System.Base64FormattingOptions.InsertLineBreaks> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</span></span> <span data-ttu-id="4a36e-534">Un saut de ligne est défini comme un retour chariot (U + 000D) suivi d’une ligne saut (U + 000D).</span><span class="sxs-lookup"><span data-stu-id="4a36e-534">A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="4a36e-535">Pour plus d’informations, consultez la RFC 2045, « Multipurpose Internet Mail Extensions », à l’adresse [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="4a36e-535">For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-536">L’exemple suivant montre le <xref:System.Convert.ToBase64String%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-536">The following example demonstrates the <xref:System.Convert.ToBase64String%2A> method.</span></span> <span data-ttu-id="4a36e-537">L’entrée est divisée en groupes de trois octets (24 bits) chacun.</span><span class="sxs-lookup"><span data-stu-id="4a36e-537">The input is divided into groups of three bytes (24 bits) each.</span></span> <span data-ttu-id="4a36e-538">Par conséquent, chaque groupe se compose de quatre nombres de 6 bits où chaque nombre compris entre décimaux de 0 à 63.</span><span class="sxs-lookup"><span data-stu-id="4a36e-538">Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</span></span> <span data-ttu-id="4a36e-539">Dans cet exemple, il existe des groupes de 3 octets 85 avec un octet restant.</span><span class="sxs-lookup"><span data-stu-id="4a36e-539">In this example, there are 85 3-byte groups with one byte remaining.</span></span> <span data-ttu-id="4a36e-540">Le premier groupe se compose des valeurs hexadécimales 00, 01 et 02, qui produisent des quatre valeurs de 6 bits sont égales à décimal 0, 0, 4 et 2.</span><span class="sxs-lookup"><span data-stu-id="4a36e-540">The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</span></span> <span data-ttu-id="4a36e-541">Ces quatre valeurs correspondent aux chiffres en base 64 « A », « A », « E » et « C » au début de la sortie.</span><span class="sxs-lookup"><span data-stu-id="4a36e-541">Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</span></span>  
  
 <span data-ttu-id="4a36e-542">Si un nombre intégral de groupes de 3 octets n’existe pas, les octets restants sont remplis avec des zéros non significatifs pour former un groupe complet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-542">If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</span></span> <span data-ttu-id="4a36e-543">Dans cet exemple, la valeur du dernier octet est la valeur hexadécimale FF.</span><span class="sxs-lookup"><span data-stu-id="4a36e-543">In this example, the value of the last byte is hexadecimal FF.</span></span> <span data-ttu-id="4a36e-544">Les 6 premiers bits sont égaux au décimal 63, ce qui correspond au chiffre en base 64 « / » à la fin de la sortie, et les 2 bits suivants sont remplis avec des zéros non significatifs pour obtenir le décimal 48, qui correspond au caractère de base-64, « w ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-544">The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</span></span> <span data-ttu-id="4a36e-545">Les deux dernières valeurs de 6 bits sont le remplissage et correspondent à l’aide caractère de remplissage, « = ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-545">The last two 6-bit values are padding and correspond to the valueless padding character, "=".</span></span>  
  
 [!code-cpp[convert.tobase64string#1](~/samples/snippets/cpp/VS_Snippets_CLR/convert.tobase64string/CPP/tb64s.cpp#1)]
 [!code-csharp[convert.tobase64string#1](~/samples/snippets/csharp/VS_Snippets_CLR/convert.tobase64string/CS/tb64s.cs#1)]
 [!code-vb[convert.tobase64string#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/convert.tobase64string/VB/tb64s.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-546">
            <paramref name="inArray" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-546">
              <paramref name="inArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-547">
            <paramref name="offset" /> ou <paramref name="length" /> est un nombre négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-547">
              <paramref name="offset" /> or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="4a36e-548">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-548">-or-</span>
          </span>
          <span data-ttu-id="4a36e-549">
            <paramref name="offset" /> plus <paramref name="length" /> est supérieur à la longueur de <paramref name="inArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-549">
              <paramref name="offset" /> plus <paramref name="length" /> is greater than the length of <paramref name="inArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-550">
            <paramref name="options" /> n’est pas une valeur de <see cref="T:System.Base64FormattingOptions" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-550">
              <paramref name="options" /> is not a valid <see cref="T:System.Base64FormattingOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64String(System.String)" />
        <altmember cref="T:System.Security.Cryptography.ToBase64Transform" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToBoolean">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-551">Convertit une valeur spécifiée en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-551">Converts a specified value to an equivalent Boolean value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(bool value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : bool -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-552">Valeur booléenne à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-552">The Boolean value to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-553">Retourne la valeur booléenne spécifiée. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-553">Returns the specified Boolean value; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-554">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-554">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : byte -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-555">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-555">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-556">Convertit la valeur de l'entier non signé 8 bits spécifié en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-556">Converts the value of the specified 8-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-557">
            <see langword="true" /> si <paramref name="value" /> est différent de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-557">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-558">L’exemple suivant convertit un tableau de <xref:System.Byte> valeurs <xref:System.Boolean> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-558">The following example converts an array of <xref:System.Byte> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#12)]
 [!code-csharp[System.Convert.ToBoolean#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#12)]
 [!code-vb[System.Convert.ToBoolean#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(char value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : char -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-559">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-559">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-560">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-560">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-561">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-561">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-562">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-562">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-563">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-563">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : DateTime -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-564">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-564">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-565">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-565">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-566">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-566">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-567">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-567">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-568">L’exemple suivant montre que la tentative de convertir un <xref:System.DateTime> valeur à un type booléen lève <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-568">The following example demonstrates that an attempt to convert a <xref:System.DateTime> value to a Boolean type throws <xref:System.InvalidCastException>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#20)]
 [!code-csharp[System.Convert Snippets#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#20)]
 [!code-vb[System.Convert Snippets#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-569">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-569">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : decimal -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-570">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-570">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-571">Convertit la valeur du nombre décimal spécifié en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-571">Converts the value of the specified decimal number to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-572">
            <see langword="true" /> si <paramref name="value" /> est différent de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-572">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-573">L’exemple suivant convertit un tableau de <xref:System.Decimal> valeurs <xref:System.Boolean> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-573">The following example converts an array of <xref:System.Decimal> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#2)]
 [!code-csharp[System.Convert.ToBoolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#2)]
 [!code-vb[System.Convert.ToBoolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(double value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : double -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-574">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-574">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-575">Convertit la valeur du nombre à virgule flottante double précision spécifié en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-575">Converts the value of the specified double-precision floating-point number to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-576">
            <see langword="true" /> si <paramref name="value" /> est différent de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-576">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-577">L’exemple suivant convertit une valeur booléenne à un <xref:System.Double> et une <xref:System.Double> à une valeur booléenne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-577">The following example converts a Boolean to a <xref:System.Double> and a <xref:System.Double> to a Boolean value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#1)]
 [!code-csharp[System.Convert Snippets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#1)]
 [!code-vb[System.Convert Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(short value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int16 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-578">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-578">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-579">Convertit la valeur de l'entier signé 16 bits spécifié en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-579">Converts the value of the specified 16-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-580">
            <see langword="true" /> si <paramref name="value" /> est différent de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-580">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-581">L’exemple suivant convertit un tableau de <xref:System.Int16> valeurs <xref:System.Boolean> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-581">The following example converts an array of <xref:System.Int16> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#3)]
 [!code-csharp[System.Convert.ToBoolean#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#3)]
 [!code-vb[System.Convert.ToBoolean#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(int value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-582">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-582">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-583">Convertit la valeur de l'entier signé 32 bits spécifié en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-583">Converts the value of the specified 32-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-584">
            <see langword="true" /> si <paramref name="value" /> est différent de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-584">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-585">L’exemple suivant convertit un tableau de <xref:System.Int32> valeurs <xref:System.Boolean> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-585">The following example converts an array of <xref:System.Int32> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#4)]
 [!code-csharp[System.Convert.ToBoolean#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#4)]
 [!code-vb[System.Convert.ToBoolean#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(long value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : int64 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-586">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-586">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-587">Convertit la valeur de l'entier signé 64 bits spécifié en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-587">Converts the value of the specified 64-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-588">
            <see langword="true" /> si <paramref name="value" /> est différent de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-588">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-589">L’exemple suivant convertit un tableau de <xref:System.Int64> valeurs <xref:System.Boolean> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-589">The following example converts an array of <xref:System.Int64> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#5)]
 [!code-csharp[System.Convert.ToBoolean#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#5)]
 [!code-vb[System.Convert.ToBoolean#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : obj -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-590">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-590">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-591">Convertit la valeur d'un objet spécifié en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-591">Converts the value of a specified object to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-592">
            <see langword="true" /> ou <see langword="false" />, qui reflète la valeur retournée en appelant la méthode <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> pour le type sous-jacent de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-592">
              <see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4a36e-593">Si <paramref name="value" /> est <see langword="null" />, la méthode retourne <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-593">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-594">L’exemple suivant convertit un tableau de valeurs d’objet à <xref:System.Boolean> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-594">The following example converts an array of object values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#11)]
 [!code-csharp[System.Convert.ToBoolean#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#11)]
 [!code-vb[System.Convert.ToBoolean#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-595">
            <paramref name="value" /> est une chaîne qui n’est pas égale à <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-595">
              <paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-596">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-596">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-597">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-597">-or-</span>
          </span>
          <span data-ttu-id="4a36e-598">La conversion de <paramref name="value" /> en un <see cref="T:System.Boolean" /> n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-598">The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As SByte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : sbyte -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-599">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-599">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-600">Convertit la valeur de l'entier signé 8 bits spécifié en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-600">Converts the value of the specified 8-bit signed integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-601">
            <see langword="true" /> si <paramref name="value" /> est différent de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-601">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-602">L’exemple suivant convertit un tableau de <xref:System.SByte> valeurs <xref:System.Boolean> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-602">The following example converts an array of <xref:System.SByte> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#6)]
 [!code-csharp[System.Convert.ToBoolean#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#6)]
 [!code-vb[System.Convert.ToBoolean#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(float value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : single -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-603">Nombre à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-603">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-604">Convertit la valeur du nombre à virgule flottante simple précision spécifié en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-604">Converts the value of the specified single-precision floating-point number to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-605">
            <see langword="true" /> si <paramref name="value" /> est différent de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-605">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-606">L’exemple suivant convertit un tableau de <xref:System.Single> valeurs <xref:System.Boolean> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-606">The following example converts an array of <xref:System.Single> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#7)]
 [!code-csharp[System.Convert.ToBoolean#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#7)]
 [!code-vb[System.Convert.ToBoolean#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : string -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-607">Chaîne qui contient la valeur de <see cref="F:System.Boolean.TrueString" /> ou de <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-607">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-608">Convertit la représentation sous forme de chaîne spécifiée d'une valeur logique en son équivalent booléen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-608">Converts the specified string representation of a logical value to its Boolean equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-609">
            <see langword="true" /> si <paramref name="value" /> équivaut à <see cref="F:System.Boolean.TrueString" /> ou <see langword="false" /> si <paramref name="value" /> équivaut à <see cref="F:System.Boolean.FalseString" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-609">
              <see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-610">Pour une conversion réussie se produisent, le `value` paramètre doit être égal <xref:System.Boolean.TrueString?displayProperty=nameWithType>, une constante dont la valeur est `True`, <xref:System.Boolean.FalseString?displayProperty=nameWithType>, une constante dont la valeur est `False`, ou il doit être `null`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-610">For a successful conversion to occur, the `value` parameter must equal either <xref:System.Boolean.TrueString?displayProperty=nameWithType>, a constant whose value is `True`, <xref:System.Boolean.FalseString?displayProperty=nameWithType>, a constant whose value is `False`, or it must be `null`.</span></span> <span data-ttu-id="4a36e-611">Si l'on compare `value` avec <xref:System.Boolean.TrueString?displayProperty=nameWithType> et <xref:System.Boolean.FalseString?displayProperty=nameWithType>, la méthode ignore la casse blancs également comme début et de fin.</span><span class="sxs-lookup"><span data-stu-id="4a36e-611">In comparing `value` with <xref:System.Boolean.TrueString?displayProperty=nameWithType> and <xref:System.Boolean.FalseString?displayProperty=nameWithType>, the method ignores case as well as leading and trailing white space.</span></span>  
  
 <span data-ttu-id="4a36e-612">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-612">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-613">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-613">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-614">L’exemple suivant utilise la <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> méthode pour convertir des chaînes en valeurs booléennes.</span><span class="sxs-lookup"><span data-stu-id="4a36e-614">The following example uses the <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> method to convert various strings to Boolean values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean1.cpp#1)]
 [!code-csharp[System.Convert.ToBoolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/ToBoolean1.cs#1)]
 [!code-vb[System.Convert.ToBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/ToBoolean1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-615">
            <paramref name="value" /> n’est pas égal à <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-615">
              <paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint16 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-616">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-616">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-617">Convertit la valeur de l'entier non signé 16 bits spécifié en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-617">Converts the value of the specified 16-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-618">
            <see langword="true" /> si <paramref name="value" /> est différent de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-618">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-619">L’exemple suivant convertit un tableau de <xref:System.UInt16> valeurs <xref:System.Boolean> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-619">The following example converts an array of <xref:System.UInt16> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#8)]
 [!code-csharp[System.Convert.ToBoolean#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#8)]
 [!code-vb[System.Convert.ToBoolean#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint32 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-620">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-620">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-621">Convertit la valeur de l'entier non signé 32 bits spécifié en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-621">Converts the value of the specified 32-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-622">
            <see langword="true" /> si <paramref name="value" /> est différent de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-622">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-623">L’exemple suivant convertit un tableau de <xref:System.Int32> valeurs <xref:System.Boolean> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-623">The following example converts an array of <xref:System.Int32> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#9)]
 [!code-csharp[System.Convert.ToBoolean#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#9)]
 [!code-vb[System.Convert.ToBoolean#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : uint64 -&gt; bool" Usage="System.Convert.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-624">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-624">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-625">Convertit la valeur de l'entier non signé 64 bits spécifié en valeur booléenne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-625">Converts the value of the specified 64-bit unsigned integer to an equivalent Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-626">
            <see langword="true" /> si <paramref name="value" /> est différent de zéro ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-626">
              <see langword="true" /> if <paramref name="value" /> is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-627">L’exemple suivant convertit un tableau de <xref:System.UInt64> valeurs <xref:System.Boolean> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-627">The following example converts an array of <xref:System.UInt64> values to <xref:System.Boolean> values.</span></span>  
  
 [!code-cpp[System.Convert.ToBoolean#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cpp/toboolean2.cpp#10)]
 [!code-csharp[System.Convert.ToBoolean#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToBoolean/cs/toboolean2.cs#10)]
 [!code-vb[System.Convert.ToBoolean#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToBoolean/vb/toboolean2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Object, provider As IFormatProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : obj * IFormatProvider -&gt; bool" Usage="System.Convert.ToBoolean (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-628">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-628">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-629">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-629">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-630">Convertit la valeur de l'objet spécifié en valeur booléenne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-630">Converts the value of the specified object to an equivalent Boolean value, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-631">
            <see langword="true" /> ou <see langword="false" />, qui reflète la valeur retournée en appelant la méthode <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> pour le type sous-jacent de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-631">
              <see langword="true" /> or <see langword="false" />, which reflects the value returned by invoking the <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> method for the underlying type of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4a36e-632">Si <paramref name="value" /> est <see langword="null" />, la méthode retourne <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-632">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-633">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-633">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-634">Les types de base ignorent le `provider` paramètre ; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-634">The base types ignore the `provider` parameter; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-635">L’exemple suivant définit une classe qui implémente <xref:System.IConvertible> et une classe qui implémente <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-635">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a36e-636">Objets de la classe qui implémente <xref:System.IConvertible> contiennent un tableau de <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-636">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="4a36e-637">Un objet de chaque classe est passé à la <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-637">An object of each class is passed to the <xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="4a36e-638">Cette méthode retourne `true` si une des valeurs non ignorées du tableau est différente de zéro.</span><span class="sxs-lookup"><span data-stu-id="4a36e-638">This method returns `true` if any of the non-discarded array values are non-zero.</span></span> <span data-ttu-id="4a36e-639">Le <xref:System.IFormatProvider> objet détermine la façon dont les éléments sont ignorés pour ce calcul.</span><span class="sxs-lookup"><span data-stu-id="4a36e-639">The <xref:System.IFormatProvider> object determines how elements are discarded for this calculation.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-640">
            <paramref name="value" /> est une chaîne qui n’est pas égale à <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-640">
              <paramref name="value" /> is a string that does not equal <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-641">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-641">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-642">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-642">-or-</span>
          </span>
          <span data-ttu-id="4a36e-643">La conversion de <paramref name="value" /> en un <see cref="T:System.Boolean" /> n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-643">The conversion of <paramref name="value" /> to a <see cref="T:System.Boolean" /> is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As String, provider As IFormatProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : string * IFormatProvider -&gt; bool" Usage="System.Convert.ToBoolean (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-644">Chaîne qui contient la valeur de <see cref="F:System.Boolean.TrueString" /> ou de <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-644">A string that contains the value of either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-645">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-645">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="4a36e-646">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-646">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-647">Convertit la représentation sous forme de chaîne spécifiée d'une valeur logique en son équivalent booléen à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-647">Converts the specified string representation of a logical value to its Boolean equivalent, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-648">
            <see langword="true" /> si <paramref name="value" /> équivaut à <see cref="F:System.Boolean.TrueString" /> ou <see langword="false" /> si <paramref name="value" /> équivaut à <see cref="F:System.Boolean.FalseString" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-648">
              <see langword="true" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.TrueString" />, or <see langword="false" /> if <paramref name="value" /> equals <see cref="F:System.Boolean.FalseString" /> or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-649">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-649">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-650">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-650">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-651">
            <paramref name="value" /> n’est pas égal à <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-651">
              <paramref name="value" /> is not equal to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-652">Convertit une valeur spécifiée en entier non signé 8 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-652">Converts a specified value to an 8-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Boolean) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(bool value);" />
      <MemberSignature Language="F#" Value="static member ToByte : bool -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-653">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-653">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-654">Convertit la valeur booléenne spécifiée en entier non signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-654">Converts the specified Boolean value to the equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-655">Chiffre 1, si <paramref name="value" /> est <see langword="true" /> ; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-655">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-656">L’exemple suivant illustre la conversion de <xref:System.Boolean> à <xref:System.Byte> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-656">The following example illustrates the conversion of <xref:System.Boolean> to <xref:System.Byte> values.</span></span>  
  
 [!code-cpp[System.Convert.ToByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.convert.tobyte/cpp/tobyte1.cpp#1)]
 [!code-csharp[System.Convert.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#1)]
 [!code-vb[System.Convert.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToByte : byte -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-657">Entier non signé 8 bits à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-657">The 8-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-658">Retourne l'entier non signé 8 bits spécifié. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-658">Returns the specified 8-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-659">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-659">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Char) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(char value);" />
      <MemberSignature Language="F#" Value="static member ToByte : char -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-660">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-660">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-661">Convertit la valeur du caractère Unicode spécifié en entier non signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-661">Converts the value of the specified Unicode character to the equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-662">Entier non signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-662">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-663">Cette méthode retourne une valeur d’octet non signé qui représente le code numérique de la <xref:System.Char> objet passé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-663">This method returns an unsigned byte value that represents the numeric code of the <xref:System.Char> object passed to it.</span></span> <span data-ttu-id="4a36e-664">Dans le .NET Framework, un <xref:System.Char> objet est une valeur de 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-664">In the .NET Framework, a <xref:System.Char> object is a 16-bit value.</span></span> <span data-ttu-id="4a36e-665">Cela signifie que la méthode convient pour retourner les codes de caractères numériques dans la plage de caractères ASCII ou dans les plages Unicode C0 contrôles et Latin de base et les contrôles C1 et Supplément Latin-1, à partir de U + 0000 à U + 00FF.</span><span class="sxs-lookup"><span data-stu-id="4a36e-665">This means that the method is suitable for returning the numeric codes of characters in the ASCII character range or in the Unicode C0 Controls and Basic Latin, and C1 Controls and Latin-1 Supplement ranges, from U+0000 to U+00FF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-666">L’exemple suivant convertit un tableau de <xref:System.Char> valeurs <xref:System.Byte> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-666">The following example converts an array of <xref:System.Char> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#2)]
 [!code-vb[System.Convert.ToByte#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-667">
            <paramref name="value" /> représente un nombre supérieur à <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-667">
              <paramref name="value" /> represents a number that is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As DateTime) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToByte : DateTime -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-668">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-668">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-669">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-669">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-670">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-670">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-671">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-671">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-672">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-672">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToByte : decimal -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-673">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-673">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-674">Convertit la valeur du nombre décimal spécifié en entier non signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-674">Converts the value of the specified decimal number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-675">
            <paramref name="value" />, arrondi à l’entier non signé 8 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-675">
              <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="4a36e-676">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-676">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-677">L’exemple suivant convertit un <xref:System.Byte> valeur un <xref:System.Decimal> et un <xref:System.Decimal> valeur à un <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-677">The following example converts a <xref:System.Byte> value to a <xref:System.Decimal> and a <xref:System.Decimal> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#18)]
 [!code-csharp[System.Convert Snippets#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#18)]
 [!code-vb[System.Convert Snippets#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-678">
            <paramref name="value" /> est supérieur à <see cref="F:System.Byte.MaxValue" /> ou inférieur à <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-678">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Double) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(double value);" />
      <MemberSignature Language="F#" Value="static member ToByte : double -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-679">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-679">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-680">Convertit la valeur du nombre à virgule flottante double précision spécifié en entier non signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-680">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-681">
            <paramref name="value" />, arrondi à l’entier non signé 8 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-681">
              <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="4a36e-682">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-682">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-683">L’exemple suivant convertit un <xref:System.Byte> valeur un <xref:System.Double> et un <xref:System.Double> valeur à un <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-683">The following example converts a <xref:System.Byte> value to a <xref:System.Double> and a <xref:System.Double> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#2)]
 [!code-csharp[System.Convert Snippets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#2)]
 [!code-vb[System.Convert Snippets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-684">
            <paramref name="value" /> est supérieur à <see cref="F:System.Byte.MaxValue" /> ou inférieur à <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-684">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Short) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(short value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int16 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-685">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-685">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-686">Convertit la valeur de l'entier signé 16 bits spécifié en entier non signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-686">Converts the value of the specified 16-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-687">Entier non signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-687">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-688">L’exemple suivant convertit un tableau de <xref:System.Int16> valeurs <xref:System.Byte> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-688">The following example converts an array of <xref:System.Int16> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#3)]
 [!code-vb[System.Convert.ToByte#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-689">
            <paramref name="value" /> est inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-689">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(int value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-690">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-690">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-691">Convertit la valeur de l'entier signé 32 bits spécifié en entier non signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-691">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-692">Entier non signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-692">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-693">L’exemple suivant convertit un tableau de <xref:System.Int32> valeurs <xref:System.Byte> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-693">The following example converts an array of <xref:System.Int32> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#4)]
 [!code-vb[System.Convert.ToByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-694">
            <paramref name="value" /> est inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-694">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Long) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(long value);" />
      <MemberSignature Language="F#" Value="static member ToByte : int64 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-695">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-695">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-696">Convertit la valeur de l'entier signé 64 bits spécifié en entier non signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-696">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-697">Entier non signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-697">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-698">L’exemple suivant convertit un tableau de <xref:System.Int64> valeurs <xref:System.Byte> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-698">The following example converts an array of <xref:System.Int64> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#5)]
 [!code-vb[System.Convert.ToByte#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-699">
            <paramref name="value" /> est inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-699">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Object) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToByte : obj -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-700">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-700">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-701">Convertit la valeur de l'objet spécifié en entier non signé 8 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-701">Converts the value of the specified object to an 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-702">Entier non signé 8 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-702">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-703">Si `value` n’est pas `null`, cette méthode encapsule un appel à la <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> implémentation du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-703">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-704">L’exemple suivant utilise le <xref:System.Convert.ToByte%28System.Object%29> méthode pour convertir un tableau d’objets à <xref:System.Byte> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-704">The following example uses the <xref:System.Convert.ToByte%28System.Object%29> method to convert an array of objects to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#6)]
 [!code-vb[System.Convert.ToByte#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-705">
            <paramref name="value" /> n’a pas le format de propriété pour une valeur <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-705">
              <paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-706">
            <paramref name="value" /> n’implémente pas <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-706">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
          <span data-ttu-id="4a36e-707">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-707">-or-</span>
          </span>
          <span data-ttu-id="4a36e-708">La conversion de <paramref name="value" /> en type <see cref="T:System.Byte" /> n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-708">Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-709">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-709">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As SByte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToByte : sbyte -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-710">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-710">The 8-bit signed integer to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-711">Convertit la valeur de l'entier signé 8 bits spécifié en entier non signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-711">Converts the value of the specified 8-bit signed integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-712">Entier non signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-712">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-713">L’exemple suivant convertit un tableau de <xref:System.SByte> valeurs <xref:System.Byte> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-713">The following example converts an array of <xref:System.SByte> values to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#7)]
 [!code-vb[System.Convert.ToByte#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-714">
            <paramref name="value" /> est inférieur à <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-714">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Single) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(float value);" />
      <MemberSignature Language="F#" Value="static member ToByte : single -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-715">Nombre à virgule flottante simple précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-715">A single-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-716">Convertit la valeur du nombre à virgule flottante simple précision spécifié en entier non signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-716">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-717">
            <paramref name="value" />, arrondi à l’entier non signé 8 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-717">
              <paramref name="value" />, rounded to the nearest 8-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="4a36e-718">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-718">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-719">L’exemple suivant convertit un <xref:System.Single> valeur à un <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-719">The following example converts a <xref:System.Single> value to a <xref:System.Byte>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#19)]
 [!code-csharp[System.Convert Snippets#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#19)]
 [!code-vb[System.Convert Snippets#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-720">
            <paramref name="value" /> est supérieur à <see cref="F:System.Byte.MaxValue" /> ou inférieur à <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-720">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToByte : string -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-721">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-721">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-722">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier non signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-722">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-723">Entier non signé 8 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-723">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-724">À l’aide de la <xref:System.Convert.ToByte%28System.String%29> méthode équivaut à passer `value` à la <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-724">Using the <xref:System.Convert.ToByte%28System.String%29> method is equivalent to passing `value` to the <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a36e-725">`value` est interprétée à l'aide des conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4a36e-725">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="4a36e-726">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-726">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-727">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-727">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-728">L’exemple suivant définit un tableau de chaînes et tente de convertir chaque chaîne à un <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-728">The following example defines a string array and attempts to convert each string to a <xref:System.Byte>.</span></span>  <span data-ttu-id="4a36e-729">Notez que pendant un `null` analyse de chaîne à zéro, <xref:System.String.Empty?displayProperty=nameWithType> lève un <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-729">Note that while a `null` string parses to zero, <xref:System.String.Empty?displayProperty=nameWithType> throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="4a36e-730">Notez également que bien que les espaces à gauche et analysent avec succès, mise en forme de symboles, tels que les symboles monétaires, séparateurs de groupes ou des séparateurs décimaux, ne le faites pas.</span><span class="sxs-lookup"><span data-stu-id="4a36e-730">Also note that while leading and trailing spaces parse successfully, formatting symbols, such as currency symbols, group separators, or decimal separators, do not.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/ToByte5.cs#15)]
 [!code-vb[System.Convert.ToByte#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte5.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-731">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-731">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-732">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-732">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As UShort) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint16 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-733">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-733">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-734">Convertit la valeur de l'entier 16 bits non signé spécifié en un entier 8 bits non signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-734">Converts the value of the specified 16-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-735">Entier non signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-735">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-736">L’exemple suivant convertit un tableau d’entiers 16 bits non signés à <xref:System.Byte> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-736">The following example converts an array of unsigned 16-bit integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#8)]
 [!code-vb[System.Convert.ToByte#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-737">
            <paramref name="value" /> est supérieur à <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-737">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As UInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint32 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-738">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-738">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-739">Convertit la valeur de l'entier 32 bits non signé spécifié en un entier 8 bits non signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-739">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-740">Entier non signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-740">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-741">L’exemple suivant convertit un tableau d’entiers non signés à <xref:System.Byte> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-741">The following example converts an array of unsigned integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#9)]
 [!code-vb[System.Convert.ToByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-742">
            <paramref name="value" /> est supérieur à <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-742">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As ULong) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToByte : uint64 -&gt; byte" Usage="System.Convert.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-743">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-743">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-744">Convertit la valeur de l'entier 64 bits non signé spécifié en un entier 8 bits non signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-744">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-745">Entier non signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-745">An 8-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-746">L’exemple suivant convertit un tableau d’entiers longs non signés à <xref:System.Byte> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-746">The following example converts an array of unsigned long integers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#10)]
 [!code-vb[System.Convert.ToByte#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-747">
            <paramref name="value" /> est supérieur à <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-747">
              <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Object, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToByte : obj * IFormatProvider -&gt; byte" Usage="System.Convert.ToByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-748">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-748">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-749">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-749">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-750">Convertit la valeur de l'objet spécifié en entier non signé 8 bits à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-750">Converts the value of the specified object to an 8-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-751">Entier non signé 8 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-751">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-752">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-752">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-753">Ignorent les types de base `provider`; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-753">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-754">L'exemple suivant définit une classe `ByteString` qui implémente l'interface <xref:System.IConvertible> .</span><span class="sxs-lookup"><span data-stu-id="4a36e-754">The following example defines a `ByteString` class that implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4a36e-755">La classe stocke la représentation sous forme de chaîne d’une valeur d’octet, ainsi qu’un champ de connexion, afin qu’il soit en mesure de représenter les deux valeurs d’octets signés et non signés.</span><span class="sxs-lookup"><span data-stu-id="4a36e-755">The class stores the string representation of a byte value along with a sign field, so that it is able to represent both signed and unsigned byte values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte3.cs#12)]
 [!code-vb[System.Convert.ToByte#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte3.vb#12)]  
  
 <span data-ttu-id="4a36e-756">L’exemple suivant instancie plusieurs `ByteString` objets et appelle le <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> méthode pour convertir les valeurs d’octet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-756">The following example instantiates several `ByteString` objects and calls the <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> method to convert them to byte values.</span></span> <span data-ttu-id="4a36e-757">Il montre que le <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> méthode encapsule un appel à la <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> méthode de l’objet à convertir.</span><span class="sxs-lookup"><span data-stu-id="4a36e-757">It illustrates that the <xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29> method wraps a call to the <xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType> method of the object to be converted.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte3.cs#13)]
 [!code-vb[System.Convert.ToByte#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte3.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-758">
            <paramref name="value" /> n’a pas le format de propriété pour une valeur <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-758">
              <paramref name="value" /> is not in the property format for a <see cref="T:System.Byte" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-759">
            <paramref name="value" /> n’implémente pas <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-759">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
          <span data-ttu-id="4a36e-760">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-760">-or-</span>
          </span>
          <span data-ttu-id="4a36e-761">La conversion de <paramref name="value" /> en type <see cref="T:System.Byte" /> n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-761">Conversion from <paramref name="value" /> to the <see cref="T:System.Byte" /> type is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-762">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-762">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToByte : string * IFormatProvider -&gt; byte" Usage="System.Convert.ToByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-763">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-763">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-764">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-764">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-765">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier non signé 8 bits équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-765">Converts the specified string representation of a number to an equivalent 8-bit unsigned integer, using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-766">Entier non signé 8 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-766">An 8-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-767">`provider` est un <xref:System.IFormatProvider> instance qui obtient un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-767">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-768">Le <xref:System.Globalization.NumberFormatInfo> objet fournit des informations spécifiques à la culture concernant le format de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-768">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a36e-769">Si `provider` est `null`, le <xref:System.Globalization.NumberFormatInfo> de l’objet pour la culture actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-769">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-770">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-770">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Byte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-771">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-771">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-772">L’exemple suivant crée un personnalisé <xref:System.Globalization.NumberFormatInfo> objet qui définit le signe positif comme « pos » et le signe négatif comme « neg », qu’il utilise dans les appels à la <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-772">The following example creates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the positive sign as "pos" and the negative sign as "neg", which it uses in calls to the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="4a36e-773">Il appelle ensuite la <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> méthode à plusieurs reprises pour convertir chaque élément dans un tableau de chaînes à un <xref:System.Byte> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-773">It then calls the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29> method repeatedly to convert each element in a string array to a <xref:System.Byte> value.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte4.cs#14)]
 [!code-vb[System.Convert.ToByte#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte4.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-774">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-774">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-775">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-775">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToByte(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As String, fromBase As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToByte : string * int -&gt; byte" Usage="System.Convert.ToByte (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-776">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-776">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="4a36e-777">Base du nombre figurant dans <c>value</c>, qui doit correspondre à 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-777">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-778">Convertit la représentation sous forme de chaîne d'un nombre dans une base spécifiée en entier non signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-778">Converts the string representation of a number in a specified base to an equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-779">Entier non signé 8 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-779">An 8-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-780">Si `fromBase` est 16, vous pouvez faire précéder le nombre spécifié par le `value` paramètre avec « 0 x » ou « 0 X ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-780">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="4a36e-781">Étant donné que le <xref:System.Byte> type de données prend en charge les valeurs non signées uniquement, le <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> méthode suppose que `value` est exprimé à l’aide de la représentation binaire non signée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-781">Because the <xref:System.Byte> data type supports unsigned values only, the <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="4a36e-782">En d’autres termes, toutes les huit bits sont utilisés pour représenter la valeur numérique, et un bit de signe est absent.</span><span class="sxs-lookup"><span data-stu-id="4a36e-782">In other words, all eight bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="4a36e-783">Par conséquent, il est possible d’écrire du code dans lequel un valeur d’octet signée qui est en dehors des limites de la <xref:System.Byte> type de données est converti en un <xref:System.Byte> valeur sans la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4a36e-783">As a result, it is possible to write code in which a signed byte value that is out of the range of the <xref:System.Byte> data type is converted to a <xref:System.Byte> value without the method throwing an exception.</span></span> <span data-ttu-id="4a36e-784">L’exemple suivant convertit <xref:System.SByte.MinValue> à sa représentation sous forme de chaîne hexadécimale, puis appelle le <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-784">The following example converts <xref:System.SByte.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="4a36e-785">Au lieu de lever une exception, la méthode affiche le message « 0 x 80 convertit à 128. »</span><span class="sxs-lookup"><span data-stu-id="4a36e-785">Instead of throwing an exception, the method displays the message, "0x80 converts to 128."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#3)]
 [!code-vb[System.Convert.BaseConversion#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#3)]  
  
 <span data-ttu-id="4a36e-786">Lorsque vous effectuez des opérations binaires ou conversions numériques, il incombe toujours au développeur de vérifier qu’une méthode ou un opérateur utilise la représentation numérique appropriée pour interpréter une valeur particulière.</span><span class="sxs-lookup"><span data-stu-id="4a36e-786">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="4a36e-787">L’exemple suivant illustre une technique pour s’assurer que la méthode n’utilise pas à tort représentation binaire non signée lorsqu’elle convertit une représentation sous forme de chaîne hexadécimale à un <xref:System.Byte> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-787">The following example illustrates one technique for ensuring that the method does not inappropriately use unsigned binary representation when it converts a hexadecimal string representation to a <xref:System.Byte> value.</span></span> <span data-ttu-id="4a36e-788">L’exemple détermine si une valeur représente un signé ou un entier non signé pendant la conversation de cette valeur en sa représentation de chaîne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-788">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="4a36e-789">Lorsque l’exemple convertit la valeur en un <xref:System.Byte> valeur, vérifie si la valeur d’origine était un entier signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-789">When the example converts the value back to a <xref:System.Byte> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="4a36e-790">Si de la sorte, et si son bit de poids fort est défini (ce qui indique que la valeur est négative et qu’il utilise deux complément au lieu de la représentation binaire non signée), la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4a36e-790">If so, and if its high-order bit is set (which indicates that the value is negative and that it uses two's complement instead of unsigned binary representation), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#4)]
 [!code-vb[System.Convert.BaseConversion#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-791">L’exemple suivant essaie également d’interpréter un tableau de chaînes comme la représentation sous forme de valeurs binaires, octales, décimales et hexadécimales.</span><span class="sxs-lookup"><span data-stu-id="4a36e-791">The following example alternately attempts to interpret an array of strings as the representation of binary, octal, decimal, and hexadecimal values.</span></span>  
  
 [!code-csharp[System.Convert.ToByte#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte2.cs#11)]
 [!code-vb[System.Convert.ToByte#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-792">
            <paramref name="fromBase" /> n’a pas la valeur 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-792">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="4a36e-793">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-793">-or-</span>
          </span>
          <span data-ttu-id="4a36e-794">
            <paramref name="value" />, qui représente un nombre non signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-794">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-795">
            <paramref name="value" /> a la valeur <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-795">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-796">
            <paramref name="value" /> contient un caractère qui n’est pas un chiffre valide dans la base spécifiée par <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-796">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="4a36e-797">Le message d’exception indique qu’il n’y a pas de chiffres à convertir si le premier caractère dans <paramref name="value" /> n’est pas valide ; sinon, le message indique que <paramref name="value" /> contient des caractères de fin non valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-797">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-798">
            <paramref name="value" />, qui représente un nombre non signé en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-798">
              <paramref name="value" />, which represents a base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="4a36e-799">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-799">-or-</span>
          </span>
          <span data-ttu-id="4a36e-800">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-800">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToChar">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-801">Convertit une valeur spécifiée en caractères Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-801">Converts a specified value to a Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Boolean) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(bool value);" />
      <MemberSignature Language="F#" Value="static member ToChar : bool -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-802">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-802">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-803">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-803">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-804">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-804">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-805">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-805">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-806">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-806">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Byte) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToChar : byte -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-807">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-807">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-808">Convertit la valeur de l'entier non signé 8 bits spécifié en son caractère Unicode équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-808">Converts the value of the specified 8-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-809">Caractère Unicode équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-809">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-810">L’exemple suivant convertit un tableau d’octets non signés à <xref:System.Char> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-810">The following example converts an array of unsigned bytes to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#1)]
 [!code-vb[System.Convert.ToChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(char value);" />
      <MemberSignature Language="F#" Value="static member ToChar : char -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-811">Caractère Unicode à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-811">The Unicode character to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-812">Retourne la valeur du caractère Unicode spécifiée. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-812">Returns the specified Unicode character value; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-813">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-813">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As DateTime) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToChar : DateTime -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-814">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-814">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-815">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-815">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-816">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-816">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-817">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-817">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-818">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-818">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToChar : decimal -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-819">Nombre décimal à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-819">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-820">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-820">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-821">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-821">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-822">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-822">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-823">L’exemple suivant tente de convertir un <xref:System.Decimal> à <xref:System.Char>et lève <xref:System.InvalidCastException> en cas d’échec.</span><span class="sxs-lookup"><span data-stu-id="4a36e-823">The following example attempts to convert a <xref:System.Decimal> to <xref:System.Char>, and throws <xref:System.InvalidCastException> on failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#17)]
 [!code-csharp[System.Convert Snippets#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#17)]
 [!code-vb[System.Convert Snippets#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-824">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-824">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Double) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(double value);" />
      <MemberSignature Language="F#" Value="static member ToChar : double -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-825">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-825">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-826">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-826">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-827">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-827">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-828">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-828">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-829">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-829">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Short) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(short value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int16 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-830">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-830">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-831">Convertit la valeur de l'entier signé 16 bits spécifié en son caractère Unicode équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-831">Converts the value of the specified 16-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-832">Caractère Unicode équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-832">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-833">L’exemple suivant convertit un tableau d’entiers signés 16 bits <xref:System.Char> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-833">The following example converts an array of signed 16-bit integers to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#2)]
 [!code-vb[System.Convert.ToChar#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-834">
            <paramref name="value" /> est inférieur à <see cref="F:System.Char.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-834">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(int value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-835">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-835">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-836">Convertit la valeur de l'entier signé 32 bits spécifié en son caractère Unicode équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-836">Converts the value of the specified 32-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-837">Caractère Unicode équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-837">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-838">L’exemple suivant convertit un tableau d’entiers signés à <xref:System.Char> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-838">The following example converts an array of signed integers to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#3)]
 [!code-vb[System.Convert.ToChar#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-839">
            <paramref name="value" /> est inférieur à <see cref="F:System.Char.MinValue" /> ou supérieur à <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-839">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Long) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(long value);" />
      <MemberSignature Language="F#" Value="static member ToChar : int64 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-840">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-840">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-841">Convertit la valeur de l'entier signé 64 bits spécifié en son caractère Unicode équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-841">Converts the value of the specified 64-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-842">Caractère Unicode équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-842">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-843">L’exemple suivant essaie de convertir un entier long pour un <xref:System.Char>et lève un <xref:System.OverflowException> en cas d’échec.</span><span class="sxs-lookup"><span data-stu-id="4a36e-843">The following example attempts to convert a long integer to a <xref:System.Char>, and throws a <xref:System.OverflowException> on failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#8)]
 [!code-csharp[System.Convert Snippets#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#8)]
 [!code-vb[System.Convert Snippets#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-844">
            <paramref name="value" /> est inférieur à <see cref="F:System.Char.MinValue" /> ou supérieur à <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-844">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Object) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToChar : obj -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-845">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-845">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-846">Convertit la valeur de l'objet spécifié en caractère Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-846">Converts the value of the specified object to a Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-847">Caractère Unicode équivalent à value, ou <see cref="F:System.Char.MinValue" /> si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-847">A Unicode character that is equivalent to value, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-848">Si `value` n’est pas `null`, cette méthode encapsule un appel à la <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> implémentation du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-848">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-849">L’exemple suivant essaie de convertir chaque élément dans un tableau d’objets à un <xref:System.Char> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-849">The following example attempts to convert each element in an object array to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#9)]
 [!code-vb[System.Convert.ToChar#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-850">
            <paramref name="value" /> est une chaîne null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-850">
              <paramref name="value" /> is a null string.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-851">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-851">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-852">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-852">-or-</span>
          </span>
          <span data-ttu-id="4a36e-853">La conversion de <paramref name="value" /> en un <see cref="T:System.Char" /> n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-853">The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-854">
            <paramref name="value" /> est inférieur à <see cref="F:System.Char.MinValue" /> ou supérieur à <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-854">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As SByte) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToChar : sbyte -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-855">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-855">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-856">Convertit la valeur de l'entier signé 8 bits spécifié en son caractère Unicode équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-856">Converts the value of the specified 8-bit signed integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-857">Caractère Unicode équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-857">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-858">L’exemple suivant convertit un tableau d’octets signés <xref:System.Char> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-858">The following example converts an array of signed bytes to <xref:System.Char> values.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#4)]
 [!code-vb[System.Convert.ToChar#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-859">
            <paramref name="value" /> est inférieur à <see cref="F:System.Char.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-859">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Single) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(float value);" />
      <MemberSignature Language="F#" Value="static member ToChar : single -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-860">Nombre à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-860">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-861">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-861">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-862">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-862">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-863">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-863">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-864">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-864">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToChar : string -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-865">Chaîne de longueur 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-865">A string of length 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-866">Convertit le premier caractère d'une chaîne spécifiée en caractère Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-866">Converts the first character of a specified string to a Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-867">Caractère Unicode qui est équivalent au premier et unique caractère de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-867">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-868">`value` doit être une chaîne qui contient un caractère unique.</span><span class="sxs-lookup"><span data-stu-id="4a36e-868">`value` must be a string that contains a single character.</span></span>  
  
 <span data-ttu-id="4a36e-869">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Char.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-869">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Char.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-870">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-870">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-871">L’exemple suivant convertit chaque élément dans un tableau de chaînes à un <xref:System.Char> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-871">The following example converts each element in a string array to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#5)]
 [!code-vb[System.Convert.ToChar#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-872">
            <paramref name="value" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-872">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-873">La longueur de <paramref name="value" /> n’est pas égale à 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-873">The length of <paramref name="value" /> is not 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As UShort) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint16 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-874">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-874">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-875">Convertit la valeur de l'entier non signé 16 bits spécifié en son caractère Unicode équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-875">Converts the value of the specified 16-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-876">Caractère Unicode équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-876">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-877">L’exemple suivant convertit chaque élément dans un tableau d’entiers 16 bits non signés à un <xref:System.Char> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-877">The following example converts each element in an array of unsigned 16-bit integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#6)]
 [!code-vb[System.Convert.ToChar#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As UInteger) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint32 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-878">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-878">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-879">Convertit la valeur de l'entier non signé 32 bits spécifié en son caractère Unicode équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-879">Converts the value of the specified 32-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-880">Caractère Unicode équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-880">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-881">L’exemple suivant convertit chaque élément dans un tableau d’entiers non signés à un <xref:System.Char> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-881">The following example converts each element in an array of unsigned integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#7)]
 [!code-vb[System.Convert.ToChar#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-882">
            <paramref name="value" /> est supérieur à <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-882">
              <paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As ULong) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToChar : uint64 -&gt; char" Usage="System.Convert.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-883">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-883">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-884">Convertit la valeur de l'entier non signé 64 bits spécifié en son caractère Unicode équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-884">Converts the value of the specified 64-bit unsigned integer to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-885">Caractère Unicode équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-885">A Unicode character that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-886">L’exemple suivant convertit chaque élément dans un tableau d’entiers longs non signés à un <xref:System.Char> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-886">The following example converts each element in an array of unsigned long integers to a <xref:System.Char> value.</span></span>  
  
 [!code-csharp[System.Convert.ToChar#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tochar/cs/tochar1.cs#8)]
 [!code-vb[System.Convert.ToChar#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tochar/vb/tochar1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-887">
            <paramref name="value" /> est supérieur à <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-887">
              <paramref name="value" /> is greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Object, provider As IFormatProvider) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToChar : obj * IFormatProvider -&gt; char" Usage="System.Convert.ToChar (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-888">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-888">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-889">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-889">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-890">Convertit la valeur de l'objet spécifié en son caractère Unicode équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-890">Converts the value of the specified object to its equivalent Unicode character, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-891">Caractère Unicode équivalent à <paramref name="value" />, ou <see cref="F:System.Char.MinValue" /> si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-891">A Unicode character that is equivalent to <paramref name="value" />, or <see cref="F:System.Char.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-892">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-892">The return value is the result of invoking the <xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="4a36e-893">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-893">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-894">Ignorent les types de base `provider`; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-894">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-895">L’exemple suivant définit une classe qui implémente <xref:System.IConvertible> et une classe qui implémente <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-895">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a36e-896">Objets de la classe qui implémente <xref:System.IConvertible> contiennent un tableau de <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-896">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="4a36e-897">Un objet de chaque classe est passé à la `ToChar` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-897">An object of each class is passed to the `ToChar` method.</span></span> <span data-ttu-id="4a36e-898">Cette méthode retourne un caractère dont Unicode valeur est la moyenne du tableau de <xref:System.Double> valeurs, à l’aide de l’objet qui implémente <xref:System.IFormatProvider> pour déterminer comment calculer la moyenne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-898">This method returns a character whose Unicode value is the average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-899">
            <paramref name="value" /> est une chaîne null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-899">
              <paramref name="value" /> is a null string.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-900">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-900">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-901">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-901">-or-</span>
          </span>
          <span data-ttu-id="4a36e-902">La conversion de <paramref name="value" /> en un <see cref="T:System.Char" /> n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-902">The conversion of <paramref name="value" /> to a <see cref="T:System.Char" /> is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-903">
            <paramref name="value" /> est inférieur à <see cref="F:System.Char.MinValue" /> ou supérieur à <see cref="F:System.Char.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-903">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToChar(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As String, provider As IFormatProvider) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToChar : string * IFormatProvider -&gt; char" Usage="System.Convert.ToChar (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-904">Chaîne de longueur 1 ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-904">A string of length 1 or <see langword="null" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-905">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-905">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="4a36e-906">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-906">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-907">Convertit le premier caractère d'une chaîne spécifiée en caractère Unicode à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-907">Converts the first character of a specified string to a Unicode character, using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-908">Caractère Unicode qui est équivalent au premier et unique caractère de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-908">A Unicode character that is equivalent to the first and only character in <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-909">`value` doit être une chaîne qui contient un caractère unique.</span><span class="sxs-lookup"><span data-stu-id="4a36e-909">`value` must be a string that contains a single character.</span></span>  
  
 <span data-ttu-id="4a36e-910">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Char.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-910">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Char.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-911">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-911">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-912">L’exemple suivant convertit une représentation de chaîne d’un <xref:System.Char> valeur avec le `ToChar` (méthode), à l’aide un <xref:System.IFormatProvider> objet qui affiche le type du fournisseur de format pour lequel il est appelé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-912">The following example converts a string representation of a <xref:System.Char> value with the `ToChar` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="4a36e-913">L’exemple montre que le fournisseur de format n’est pas référencé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-913">The example shows that the format provider is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToNonNum_String#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/CPP/stringnonnum.cpp#2)]
 [!code-csharp[System.Convert.ToNonNum_String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/CS/stringnonnum.cs#2)]
 [!code-vb[System.Convert.ToNonNum_String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToNonNum_String/VB/stringnonnum.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-914">
            <paramref name="value" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-914">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-915">La longueur de <paramref name="value" /> n’est pas égale à 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-915">The length of <paramref name="value" /> is not 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-916">Convertit une valeur spécifiée en valeur <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-916">Converts a specified value to a <see cref="T:System.DateTime" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Boolean) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : bool -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-917">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-917">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-918">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-918">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-919">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-919">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-920">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-920">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-921">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-921">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Byte) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : byte -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-922">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-922">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-923">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-923">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-924">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-924">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-925">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-925">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-926">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-926">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Char) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(char value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : char -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-927">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-927">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-928">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-928">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-929">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-929">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-930">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-930">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-931">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-931">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : DateTime -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-932">Valeur de date et heure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-932">A date and time value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-933">Retourne l'objet <see cref="T:System.DateTime" /> spécifié. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-933">Returns the specified <see cref="T:System.DateTime" /> object; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-934">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-934">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Decimal) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : decimal -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-935">Nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-935">The number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-936">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-936">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-937">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-937">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-938">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-938">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-939">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-939">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(double value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : double -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-940">Valeur à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-940">The double-precision floating-point value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-941">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-941">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-942">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-942">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-943">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-943">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-944">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-944">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Short) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(short value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int16 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-945">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-945">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-946">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-946">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-947">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-947">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-948">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-948">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-949">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-949">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(int value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-950">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-950">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-951">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-951">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-952">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-952">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-953">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-953">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-954">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-954">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(long value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : int64 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-955">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-955">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-956">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-956">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-957">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-957">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-958">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-958">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-959">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-959">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : obj -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-960">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-960">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-961">Convertit la valeur de l'objet spécifié en objet <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-961">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-962">Équivalent de date et heure de la valeur de <paramref name="value" /> ou équivalent de date et heure de <see cref="F:System.DateTime.MinValue" /> si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-962">The date and time equivalent of the value of <paramref name="value" />, or a date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-963">Pour la conversion réussisse, le type runtime de le `value` paramètre doit être un <xref:System.DateTime> ou un <xref:System.String>, ou `value` doit être `null`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-963">For the conversion to succeed, the runtime type of the `value` parameter must be either a <xref:System.DateTime> or a <xref:System.String>, or `value` must be `null`.</span></span> <span data-ttu-id="4a36e-964">Sinon, la méthode lève un <xref:System.InvalidCastException>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-964">Otherwise, the method throws an <xref:System.InvalidCastException>.</span></span> <span data-ttu-id="4a36e-965">En outre, si `value` est une chaîne, il doit contenir une représentation valide d’une valeur de date et d’heure dans la culture actuelle ou une <xref:System.FormatException> est levée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-965">In addition, if `value` is a string, it must contain a valid representation of a date and time value in the current culture or a <xref:System.FormatException> is thrown.</span></span>  
  
 <span data-ttu-id="4a36e-966">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-966">The return value is the result of invoking the <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-967">L’exemple suivant appelle la <xref:System.Convert.ToDateTime%28System.Object%29> méthode avec un large éventail de <xref:System.Object> variables.</span><span class="sxs-lookup"><span data-stu-id="4a36e-967">The following example calls the <xref:System.Convert.ToDateTime%28System.Object%29> method with a variety of <xref:System.Object> variables.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime1.cs#1)]
 [!code-vb[System.Convert.ToDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-968">
            <paramref name="value" /> n’est pas une valeur date et heure valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-968">
              <paramref name="value" /> is not a valid date and time value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-969">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-969">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-970">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-970">-or-</span>
          </span>
          <span data-ttu-id="4a36e-971">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-971">The conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As SByte) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : sbyte -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-972">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-972">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-973">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-973">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-974">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-974">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-975">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-975">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-976">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-976">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Single) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(float value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : single -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-977">Valeur à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-977">The single-precision floating-point value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-978">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-978">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-979">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-979">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-980">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-980">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-981">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-981">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-982">Représentation sous forme de chaîne d'une valeur de date et heure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-982">The string representation of a date and time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-983">Convertit la représentation sous forme de chaîne spécifiée d'une valeur de date et heure en valeur de date et heure équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-983">Converts the specified string representation of a date and time to an equivalent date and time value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-984">Équivalent de date et heure de la valeur de <paramref name="value" /> ou équivalent de date et heure de <see cref="F:System.DateTime.MinValue" /> si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-984">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-985">Si `value` n’est pas `null`, la valeur de retour est le résultat de l’appel de la <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> méthode sur `value` en utilisant les informations de mise en forme dans un <xref:System.Globalization.DateTimeFormatInfo> objet est initialisé pour la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="4a36e-985">If `value` is not `null`, the return value is the result of invoking the <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> method on `value` using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is initialized for the current culture.</span></span> <span data-ttu-id="4a36e-986">Le `value` argument doit contenir la représentation sous forme d’une date et heure dans un des formats décrits dans le <xref:System.Globalization.DateTimeFormatInfo> rubrique.</span><span class="sxs-lookup"><span data-stu-id="4a36e-986">The `value` argument must contain the representation of a date and time in one of the formats described in the <xref:System.Globalization.DateTimeFormatInfo> topic.</span></span> <span data-ttu-id="4a36e-987">Si `value` est `null`, la méthode retourne <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-987">If `value` is `null`, the method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4a36e-988">Cette méthode essaie d’analyser `value` complètement et éviter de lever un <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-988">This method tries to parse `value` completely and avoid throwing a <xref:System.FormatException>.</span></span> <span data-ttu-id="4a36e-989">Il termine manquant informations de mois, jour et année avec la date actuelle.</span><span class="sxs-lookup"><span data-stu-id="4a36e-989">It completes missing month, day, and year information with the current date.</span></span> <span data-ttu-id="4a36e-990">Si `value` contient uniquement une date et aucune heure, cette méthode suppose que minuit.</span><span class="sxs-lookup"><span data-stu-id="4a36e-990">If `value` contains only a date and no time, this method assumes a time of midnight.</span></span> <span data-ttu-id="4a36e-991">Tout début, internes ou les caractères d’espace blanc dans `value` sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="4a36e-991">Any leading, inner, or trailing white-space characters in `value` are ignored.</span></span>  
  
 <span data-ttu-id="4a36e-992">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-992">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-993">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-993">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-994">L’exemple suivant utilise le <xref:System.Convert.ToDateTime%2A> méthode pour convertir des représentations de chaîne des dates et heures à <xref:System.DateTime> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-994">The following example uses the <xref:System.Convert.ToDateTime%2A> method to convert various string representations of dates and times to <xref:System.DateTime> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime2.cs#2)]
 [!code-vb[System.Convert.ToDateTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-995">
            <paramref name="value" /> n’est pas une chaîne de date et heure au format correct.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-995">
              <paramref name="value" /> is not a properly formatted date and time string.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md">
          <span data-ttu-id="4a36e-996">Analyse des chaînes de date et d'heure dans .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-996">Parsing Date and Time Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As UShort) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint16 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-997">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-997">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-998">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-998">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-999">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-999">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1000">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1000">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1001">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1001">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As UInteger) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint32 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1002">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1002">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1003">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1003">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1004">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1004">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1005">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1005">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1006">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1006">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As ULong) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : uint64 -&gt; DateTime" Usage="System.Convert.ToDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1007">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1007">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1008">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1008">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1009">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1009">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1010">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1010">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1011">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1011">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As Object, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : obj * IFormatProvider -&gt; DateTime" Usage="System.Convert.ToDateTime (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1012">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1012">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1013">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1013">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1014">Convertit la valeur de l'objet spécifié en objet <see cref="T:System.DateTime" /> à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1014">Converts the value of the specified object to a <see cref="T:System.DateTime" /> object, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1015">Équivalent de date et heure de la valeur de <paramref name="value" /> ou équivalent de date et heure de <see cref="F:System.DateTime.MinValue" /> si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1015">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1016">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1016">The return value is the result of invoking the <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="4a36e-1017">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1017">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-1018">Par exemple, si `value` est un <xref:System.String> qui représente une date, `provider` peut fournir des informations spécifiques à la culture concernant la notation utilisée pour représenter cette date.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1018">For example, if `value` is a <xref:System.String> that represents a date, `provider` could supply culture-specific information about the notation used to represent that date.</span></span> <span data-ttu-id="4a36e-1019">`provider` est impliqué dans la conversion de `value` si l’exécution du type de `value` est un <xref:System.String>, ou si `value` est défini par l’utilisateur dont la propriété type de <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> implémentation utilise `provider`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1019">`provider` is involved in the conversion of `value` if the runtime type of `value` is a <xref:System.String>, or if `value` is a user-defined type whose <xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType> implementation makes use of `provider`.</span></span> <span data-ttu-id="4a36e-1020">Si l’exécution du type de `value` est <xref:System.String> et `provider` est `null`, le <xref:System.Globalization.CultureInfo> objet qui représente la culture du thread actuel est utilisé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1020">If the runtime type of `value` is <xref:System.String> and `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that represents the current thread culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1021">L’exemple suivant définit un fournisseur de format personnalisé, `CustomProvider`, dont <xref:System.IFormatProvider.GetFormat%2A> (méthode), un message à la console qui a été appelée, elle retourne ensuite le <xref:System.Globalization.DateTimeFormatInfo> objet de la culture dont le nom a été passé en tant que paramètre à sa classe constructeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1021">The following example defines a custom format provider, `CustomProvider`, whose <xref:System.IFormatProvider.GetFormat%2A> method outputs a message to the console that it has been invoked, and then returns the <xref:System.Globalization.DateTimeFormatInfo> object of the culture whose name was passed as a parameter to its class constructor.</span></span> <span data-ttu-id="4a36e-1022">Chacune de ces `CustomProvider` objets est utilisé pour convertir les éléments dans un tableau d’objets de valeurs de date et d’heure.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1022">Each of these `CustomProvider` objects is used to convert the elements in an object array to date and time values.</span></span> <span data-ttu-id="4a36e-1023">La sortie indique que le `CustomProvider` objet est utilisé dans la conversion uniquement lorsque le type de la `value` paramètre est un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1023">The output indicates that the `CustomProvider` object is used in the conversion only when the type of the `value` parameter is a <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/todatetime4.cs#4)]
 [!code-vb[System.Convert.ToDateTime#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/todatetime4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1024">
            <paramref name="value" /> n’est pas une valeur date et heure valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1024">
              <paramref name="value" /> is not a valid date and time value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1025">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1025">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-1026">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1026">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1027">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1027">The conversion is not supported.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md">
          <span data-ttu-id="4a36e-1028">Analyse des chaînes de date et d'heure dans .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1028">Parsing Date and Time Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (value As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string * IFormatProvider -&gt; DateTime" Usage="System.Convert.ToDateTime (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1029">Chaîne contenant une date et une heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1029">A string that contains a date and time to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1030">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1030">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1031">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en valeur équivalente de date et heure à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1031">Converts the specified string representation of a number to an equivalent date and time, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1032">Équivalent de date et heure de la valeur de <paramref name="value" /> ou équivalent de date et heure de <see cref="F:System.DateTime.MinValue" /> si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1032">The date and time equivalent of the value of <paramref name="value" />, or the date and time equivalent of <see cref="F:System.DateTime.MinValue" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1033">La valeur de retour est le résultat de l’appel de la <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> méthode sur `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1033">The return value is the result of invoking the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="4a36e-1034">`provider` est un <xref:System.IFormatProvider> instance qui obtient un <xref:System.Globalization.DateTimeFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1034">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="4a36e-1035">Le <xref:System.Globalization.DateTimeFormatInfo> objet fournit des informations spécifiques à la culture concernant le format de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1035">The <xref:System.Globalization.DateTimeFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a36e-1036">Si `provider` est `null`, le <xref:System.Globalization.DateTimeFormatInfo> pour la culture actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1036">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-1037">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1037">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1038">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1038">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1039">L’exemple suivant convertit les représentations sous forme de chaîne de valeurs de date avec la `ToDateTime` (méthode), à l’aide un <xref:System.IFormatProvider> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1039">The following example converts string representations of date values with the `ToDateTime` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-csharp[System.Convert.ToDateTime#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDateTime/cs/ToDateTime3.cs#3)]
 [!code-vb[System.Convert.ToDateTime#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDateTime/vb/ToDateTime3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1040">
            <paramref name="value" /> n’est pas une chaîne de date et heure au format correct.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1040">
              <paramref name="value" /> is not a properly formatted date and time string.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md">
          <span data-ttu-id="4a36e-1041">Analyse des chaînes de date et d'heure dans .NET Framework</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1041">Parsing Date and Time Strings in the .NET Framework</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDecimal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-1042">Convertit une valeur spécifiée en nombre décimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1042">Converts a specified value to a decimal number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Boolean) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : bool -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1043">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1043">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1044">Convertit la valeur booléenne spécifiée en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1044">Converts the specified Boolean value to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1045">Chiffre 1, si <paramref name="value" /> est <see langword="true" /> ; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1045">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1046">L’exemple suivant illustre la conversion de <xref:System.Boolean> à <xref:System.Decimal> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1046">The following example illustrates the conversion of <xref:System.Boolean> to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#1)]
 [!code-vb[System.Convert.ToDecimal2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : byte -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1047">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1047">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1048">Convertit la valeur de l'entier non signé 8 bits spécifié en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1048">Converts the value of the specified 8-bit unsigned integer to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1049">Nombre décimal qui est équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1049">The decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1050">L’exemple suivant convertit un <xref:System.Byte> valeur un <xref:System.Decimal> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1050">The following example converts a <xref:System.Byte> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#18)]
 [!code-csharp[System.Convert Snippets#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#18)]
 [!code-vb[System.Convert Snippets#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(char value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : char -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1051">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1051">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1052">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1052">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1053">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1053">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1054">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1054">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1055">L’exemple suivant tente de convertir un <xref:System.Char> valeur <xref:System.Decimal>et lève <xref:System.InvalidCastException> en cas d’échec.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1055">The following example attempts to convert a <xref:System.Char> value to <xref:System.Decimal>, and throws <xref:System.InvalidCastException> upon failure.</span></span>  
  
 [!code-cpp[System.Convert Snippets#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#17)]
 [!code-csharp[System.Convert Snippets#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#17)]
 [!code-vb[System.Convert Snippets#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1056">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1056">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As DateTime) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : DateTime -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1057">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1057">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1058">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1058">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1059">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1059">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1060">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1060">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1061">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1061">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : decimal -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1062">Nombre décimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1062">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1063">Retourne le nombre décimal spécifié. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1063">Returns the specified decimal number; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1064">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1064">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(double value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : double -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1065">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1065">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1066">Convertit la valeur du nombre à virgule flottante double précision spécifié en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1066">Converts the value of the specified double-precision floating-point number to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1067">Nombre décimal équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1067">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1068">Le <xref:System.Decimal> valeur retournée par cette méthode contient un maximum de 15 chiffres significatifs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1068">The <xref:System.Decimal> value returned by this method contains a maximum of 15 significant digits.</span></span> <span data-ttu-id="4a36e-1069">Si le `value` paramètre contient plus de 15 chiffres significatifs, il est arrondi au plus près.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1069">If the `value` parameter contains more than 15 significant digits, it is rounded using rounding to nearest.</span></span> <span data-ttu-id="4a36e-1070">L’exemple suivant illustre comment la <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> méthode utilise l’arrondi au plus proche de retour un <xref:System.Decimal> valeur avec 15 chiffres significatifs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1070">The following example illustrates how the <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> method uses rounding to nearest to return a <xref:System.Decimal> value with 15 significant digits.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDecimal/cs/ToDecimal1.cs#2)]
 [!code-vb[System.Convert.ToDecimal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDecimal/vb/ToDecimal1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1071">L’exemple suivant convertit un <xref:System.Double> valeur un <xref:System.Decimal> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1071">The following example converts a <xref:System.Double> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#5)]
 [!code-csharp[System.Convert Snippets#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#5)]
 [!code-vb[System.Convert Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1072">
            <paramref name="value" /> est supérieur à <see cref="F:System.Decimal.MaxValue" /> ou inférieur à <see cref="F:System.Decimal.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1072">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(short value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int16 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1073">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1073">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1074">Convertit la valeur de l'entier signé 16 bits spécifié en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1074">Converts the value of the specified 16-bit signed integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1075">Nombre décimal équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1075">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1076">L’exemple suivant convertit un tableau d’entiers signés 16 bits <xref:System.Decimal> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1076">The following example converts an array of 16-bit signed integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#2)]
 [!code-vb[System.Convert.ToDecimal2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(int value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1077">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1077">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1078">Convertit la valeur de l'entier signé 32 bits spécifié en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1078">Converts the value of the specified 32-bit signed integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1079">Nombre décimal équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1079">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1080">L’exemple suivant convertit un tableau d’entiers signés à <xref:System.Decimal> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1080">The following example converts an array of signed integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#3)]
 [!code-vb[System.Convert.ToDecimal2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(long value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : int64 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1081">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1081">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1082">Convertit la valeur de l'entier signé 64 bits spécifié en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1082">Converts the value of the specified 64-bit signed integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1083">Nombre décimal équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1083">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1084">L’exemple suivant convertit un <xref:System.Int64> valeur un <xref:System.Decimal> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1084">The following example converts an <xref:System.Int64> value to a <xref:System.Decimal> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#10)]
 [!code-csharp[System.Convert Snippets#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#10)]
 [!code-vb[System.Convert Snippets#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Object) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : obj -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1085">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1085">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1086">Convertit la valeur de l'objet spécifié en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1086">Converts the value of the specified object to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1087">Nombre décimal qui est équivalent à <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1087">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1088">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1088">The return value is the result of invoking the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1089">L’exemple suivant tente de convertir chaque élément dans un tableau d’objets pour un <xref:System.Decimal> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1089">The following example tries to convert each element in an object array to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#4)]
 [!code-vb[System.Convert.ToDecimal2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1090">
            <paramref name="value" /> n’a pas un format approprié pour un type <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1090">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1091">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1091">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-1092">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1092">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1093">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1093">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1094">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Decimal.MinValue" /> ou supérieur à <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1094">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : sbyte -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1095">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1095">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1096">Convertit la valeur de l'entier signé 8 bits spécifié en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1096">Converts the value of the specified 8-bit signed integer to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1097">Nombre décimal équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1097">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1098">L’exemple suivant convertit chaque élément dans un tableau d’octets signés un <xref:System.Decimal> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1098">The following example converts each element in an array of signed bytes to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#5)]
 [!code-vb[System.Convert.ToDecimal2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(float value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : single -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1099">Nombre à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1099">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1100">Convertit la valeur du nombre à virgule flottante simple précision spécifié en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1100">Converts the value of the specified single-precision floating-point number to the equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1101">Nombre décimal équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1101">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1102">Le <xref:System.Decimal> valeur retournée par cette méthode contient un maximum de sept chiffres significatifs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1102">The <xref:System.Decimal> value returned by this method contains a maximum of seven significant digits.</span></span> <span data-ttu-id="4a36e-1103">Si le `value` paramètre contient plus de sept chiffres significatifs, il est arrondi au plus près.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1103">If the `value` parameter contains more than seven significant digits, it is rounded using rounding to nearest.</span></span> <span data-ttu-id="4a36e-1104">L’exemple suivant illustre comment la <xref:System.Convert.ToDecimal%28System.Single%29> méthode utilise l’arrondi au plus proche de retour un <xref:System.Decimal> valeur avec sept chiffres significatifs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1104">The following example illustrates how the <xref:System.Convert.ToDecimal%28System.Single%29> method uses rounding to nearest to return a <xref:System.Decimal> value with seven significant digits.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToDecimal/cs/ToDecimal1.cs#1)]
 [!code-vb[System.Convert.ToDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToDecimal/vb/ToDecimal1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1105">L’exemple suivant tente de convertir chaque élément dans un tableau de <xref:System.Single> valeurs à un <xref:System.Decimal> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1105">The following example tries to convert each element in an array of <xref:System.Single> values to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#6)]
 [!code-vb[System.Convert.ToDecimal2#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1106">
            <paramref name="value" /> est supérieur à <see cref="F:System.Decimal.MaxValue" /> ou inférieur à <see cref="F:System.Decimal.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1106">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : string -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1107">Chaîne contenant un nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1107">A string that contains a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1108">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1108">Converts the specified string representation of a number to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1109">Nombre décimal qui est équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1109">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1110">À l’aide de la <xref:System.Convert.ToDecimal%28System.String%29> méthode équivaut à passer `value` à la <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1110">Using the <xref:System.Convert.ToDecimal%28System.String%29> method is equivalent to passing `value` to the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a36e-1111">`value` est interprétée à l'aide des conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1111">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="4a36e-1112">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1112">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1113">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1113">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1114">L’exemple suivant illustre l’utilisation de `ToDecimal`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1114">The following example illustrates the use of `ToDecimal`.</span></span> <span data-ttu-id="4a36e-1115">Il essaie de convertir un <xref:System.String> à un <xref:System.Decimal>et lève les exceptions qui peuvent survenir lors de la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1115">It attempts to convert a <xref:System.String> to a <xref:System.Decimal>, and throws the possible exceptions that may arise during the conversion.</span></span>  
  
 [!code-cpp[System.Convert Snippets#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#15)]
 [!code-csharp[System.Convert Snippets#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#15)]
 [!code-vb[System.Convert Snippets#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1116">
            <paramref name="value" /> n’est pas un nombre exprimé dans un format valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1116">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1117">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Decimal.MinValue" /> ou supérieur à <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1117">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint16 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1118">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1118">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1119">Convertit la valeur de l'entier non signé 16 bits spécifié en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1119">Converts the value of the specified 16-bit unsigned integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1120">Nombre décimal qui est équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1120">The decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1121">L’exemple suivant convertit un tableau d’entiers non signés 16 bits à <xref:System.Decimal> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1121">The following example converts an array of 16-bit unsigned integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#7)]
 [!code-vb[System.Convert.ToDecimal2#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint32 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1122">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1122">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1123">Convertit la valeur de l'entier non signé 32 bits spécifié en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1123">Converts the value of the specified 32-bit unsigned integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1124">Nombre décimal équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1124">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1125">L’exemple suivant convertit un tableau d’entiers non signés à <xref:System.Decimal> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1125">The following example converts an array of unsigned integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#8)]
 [!code-vb[System.Convert.ToDecimal2#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : uint64 -&gt; decimal" Usage="System.Convert.ToDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1126">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1126">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1127">Convertit la valeur de l'entier non signé 64 bits spécifié en nombre décimal équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1127">Converts the value of the specified 64-bit unsigned integer to an equivalent decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1128">Nombre décimal équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1128">A decimal number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1129">L’exemple suivant convertit un tableau d’entiers longs non signés à <xref:System.Decimal> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1129">The following example converts an array of unsigned long integers to <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal1.cs#9)]
 [!code-vb[System.Convert.ToDecimal2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As Object, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : obj * IFormatProvider -&gt; decimal" Usage="System.Convert.ToDecimal (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1130">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1130">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1131">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1131">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1132">Convertit la valeur de l'objet spécifié en nombre décimal équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1132">Converts the value of the specified object to an equivalent decimal number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1133">Nombre décimal qui est équivalent à <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1133">A decimal number that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1134">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1134">The return value is the result of invoking the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="4a36e-1135">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1135">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-1136">Ignorent les types de base `provider`; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1136">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1137">L'exemple suivant définit une classe `Temperature` qui implémente l'interface <xref:System.IConvertible> .</span><span class="sxs-lookup"><span data-stu-id="4a36e-1137">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal2.cs#10)]
 [!code-vb[System.Convert.ToDecimal2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal2.vb#10)]  
  
 <span data-ttu-id="4a36e-1138">L’exemple suivant montre que quand un `Temperature` objet est passé en tant que paramètre à la <xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29> (méthode), le <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> implémentation de la `Temperature` classe est appelée pour effectuer la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1138">The following example shows that when a `Temperature` object is passed as a parameter to the <xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29> method, the <xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType> implementation of the `Temperature` class is called to perform the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal2.cs#11)]
 [!code-vb[System.Convert.ToDecimal2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal2.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1139">
            <paramref name="value" /> n’a pas un format approprié pour un type <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1139">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Decimal" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1140">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1140">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-1141">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1141">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1142">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1142">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1143">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Decimal.MinValue" /> ou supérieur à <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1143">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (value As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : string * IFormatProvider -&gt; decimal" Usage="System.Convert.ToDecimal (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1144">Chaîne contenant un nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1144">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1145">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1145">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1146">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en nombre décimal équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1146">Converts the specified string representation of a number to an equivalent decimal number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1147">Nombre décimal qui est équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1147">A decimal number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1148">La valeur de retour est le résultat de l’appel de la <xref:System.Decimal.Parse%2A?displayProperty=nameWithType> méthode sur `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1148">The return value is the result of invoking the <xref:System.Decimal.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="4a36e-1149">`provider` est un <xref:System.IFormatProvider> instance qui obtient un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1149">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-1150">Le <xref:System.Globalization.NumberFormatInfo> objet fournit des informations spécifiques à la culture concernant le format de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1150">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a36e-1151">Si `provider` est `null`, le <xref:System.Globalization.NumberFormatInfo> pour la culture actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1151">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-1152">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1152">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Decimal.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1153">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1153">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1154">L’exemple suivant tente de convertir un tableau de chaînes à <xref:System.Decimal> valeurs à l’aide de <xref:System.Globalization.NumberFormatInfo> objets qui représentent deux cultures différentes.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1154">The following example attempts to convert an array of strings to <xref:System.Decimal> values by using <xref:System.Globalization.NumberFormatInfo> objects that represent two different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToDecimal2#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todecimal2/cs/todecimal3.cs#12)]
 [!code-vb[System.Convert.ToDecimal2#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todecimal2/vb/todecimal3.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1155">
            <paramref name="value" /> n’est pas un nombre exprimé dans un format valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1155">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1156">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Decimal.MinValue" /> ou supérieur à <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1156">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDouble">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-1157">Convertit une valeur spécifiée en nombre à virgule flottante double précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1157">Converts a specified value to a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(bool value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : bool -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1158">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1158">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1159">Convertit la valeur booléenne spécifiée en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1159">Converts the specified Boolean value to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1160">Chiffre 1, si <paramref name="value" /> est <see langword="true" /> ; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1160">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1161">L’exemple suivant convertit un <xref:System.Boolean> valeur un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1161">The following example converts a <xref:System.Boolean> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#1)]
 [!code-csharp[System.Convert Snippets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#1)]
 [!code-vb[System.Convert Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Byte) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : byte -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1162">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1162">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1163">Convertit la valeur de l'entier non signé 8 bits spécifié en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1163">Converts the value of the specified 8-bit unsigned integer to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1164">Nombre à virgule flottante double précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1164">The double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1165">L’exemple suivant convertit un <xref:System.Byte> valeur un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1165">The following example converts a <xref:System.Byte> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#2)]
 [!code-csharp[System.Convert Snippets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#2)]
 [!code-vb[System.Convert Snippets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(char value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : char -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1166">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1166">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1167">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1167">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1168">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1168">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1169">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1169">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1170">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1170">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As DateTime) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : DateTime -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1171">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1171">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1172">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1172">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1173">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1173">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1174">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1174">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1175">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1175">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : decimal -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1176">Nombre décimal à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1176">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1177">Convertit la valeur du nombre décimal spécifié en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1177">Converts the value of the specified decimal number to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1178">Nombre à virgule flottante double précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1178">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1179">L’exemple suivant convertit un <xref:System.Decimal> valeur un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1179">The following example converts a <xref:System.Decimal> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#5)]
 [!code-csharp[System.Convert Snippets#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#5)]
 [!code-vb[System.Convert Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(double value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : double -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1180">Nombre à virgule flottante double précision à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1180">The double-precision floating-point number to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1181">Retourne le nombre à virgule flottante double précision spécifié. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1181">Returns the specified double-precision floating-point number; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1182">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1182">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Short) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(short value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int16 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1183">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1183">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1184">Convertit la valeur de l'entier signé 16 bits spécifié en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1184">Converts the value of the specified 16-bit signed integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1185">Nombre à virgule flottante double précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1185">A double-precision floating-point number equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1186">L’exemple suivant convertit chaque élément dans un tableau d’entiers signés 16 bits à un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1186">The following example converts each element in an array of 16-bit signed integers to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#1)]
 [!code-vb[System.Convert.ToDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(int value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1187">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1187">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1188">Convertit la valeur de l'entier signé 32 bits spécifié en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1188">Converts the value of the specified 32-bit signed integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1189">Nombre à virgule flottante double précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1189">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1190">L’exemple suivant convertit un <xref:System.Int32> valeur un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1190">The following example converts an <xref:System.Int32> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#3)]
 [!code-csharp[System.Convert Snippets#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#3)]
 [!code-vb[System.Convert Snippets#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Long) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(long value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : int64 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1191">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1191">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1192">Convertit la valeur de l'entier signé 64 bits spécifié en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1192">Converts the value of the specified 64-bit signed integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1193">Nombre à virgule flottante double précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1193">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1194">L’exemple suivant convertit chaque élément dans un tableau d’entiers longs signés à un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1194">The following example converts each element in an array of signed long integers to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#2)]
 [!code-vb[System.Convert.ToDouble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : obj -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1195">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1195">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1196">Convertit la valeur de l'objet spécifié en nombre à virgule flottante double précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1196">Converts the value of the specified object to a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1197">Nombre à virgule flottante double précision qui est équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1197">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1198">Si `value` n’est pas `null`, cette méthode encapsule un appel à la <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> implémentation du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1198">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1199">L’exemple suivant essaie de convertir chaque valeur dans un tableau d’objets à un <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1199">The following example attempts to convert each value in an object array to a <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#3)]
 [!code-vb[System.Convert.ToDouble#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1200">
            <paramref name="value" /> n’a pas un format approprié pour un type <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1200">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1201">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1201">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-1202">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1202">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1203">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1203">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1204">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1204">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As SByte) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : sbyte -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1205">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1205">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1206">Convertit la valeur de l'entier signé 8 bits spécifié en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1206">Converts the value of the specified 8-bit signed integer to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1207">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1207">The 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1208">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.SByte> valeurs à un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1208">The following example converts each element in an array of <xref:System.SByte> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#4)]
 [!code-vb[System.Convert.ToDouble#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Single) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(float value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : single -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1209">Nombre à virgule flottante simple précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1209">The single-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1210">Convertit la valeur du nombre à virgule flottante simple précision spécifié en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1210">Converts the value of the specified single-precision floating-point number to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1211">Nombre à virgule flottante double précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1211">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1212">L’exemple suivant convertit un <xref:System.Single> valeur un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1212">The following example converts a <xref:System.Single> value to a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Convert Snippets#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#6)]
 [!code-csharp[System.Convert Snippets#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#6)]
 [!code-vb[System.Convert Snippets#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : string -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1213">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1213">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1214">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1214">Converts the specified string representation of a number to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1215">Nombre à virgule flottante double précision qui est équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1215">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1216">À l’aide de la <xref:System.Convert.ToDouble%28System.String%29> méthode équivaut à passer `value` à la <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1216">Using the <xref:System.Convert.ToDouble%28System.String%29> method is equivalent to passing `value` to the <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a36e-1217">`value` est interprétée à l'aide des conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1217">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="4a36e-1218">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Double.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1218">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1219">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1219">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1220">L’exemple suivant essaie de convertir chaque élément dans un tableau de chaînes numériques en un <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1220">The following example attempts to convert each element in an array of numeric strings to a <xref:System.Double>.</span></span> <span data-ttu-id="4a36e-1221">Sortie de cet exemple provient d’un système dont la culture actuelle est en-US.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1221">The example's output is from a system whose current culture is en-US.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/example8.cs#8)]
 [!code-vb[System.Convert.ToDouble#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/example8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1222">
            <paramref name="value" /> n’est pas un nombre exprimé dans un format valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1222">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1223">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1223">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As UShort) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint16 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1224">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1224">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1225">Convertit la valeur de l'entier non signé 16 bits spécifié en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1225">Converts the value of the specified 16-bit unsigned integer to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1226">Nombre à virgule flottante double précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1226">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1227">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.UInt16> valeurs à un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1227">The following example converts each element in an array of <xref:System.UInt16> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#5)]
 [!code-vb[System.Convert.ToDouble#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As UInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint32 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1228">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1228">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1229">Convertit la valeur de l'entier non signé 32 bits spécifié en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1229">Converts the value of the specified 32-bit unsigned integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1230">Nombre à virgule flottante double précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1230">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1231">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.UInt32> valeurs à un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1231">The following example converts each element in an array of <xref:System.UInt32> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#6)]
 [!code-vb[System.Convert.ToDouble#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As ULong) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : uint64 -&gt; double" Usage="System.Convert.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1232">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1232">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1233">Convertit la valeur de l'entier non signé 64 bits spécifié en nombre à virgule flottante double précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1233">Converts the value of the specified 64-bit unsigned integer to an equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1234">Nombre à virgule flottante double précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1234">A double-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1235">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.UInt64> valeurs à un <xref:System.Double> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1235">The following example converts each element in an array of <xref:System.UInt64> values to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Convert.ToDouble#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.todouble/cs/todouble1.cs#7)]
 [!code-vb[System.Convert.ToDouble#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.todouble/vb/todouble1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Object, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDouble : obj * IFormatProvider -&gt; double" Usage="System.Convert.ToDouble (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1236">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1236">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1237">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1237">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1238">Convertit la valeur de l'objet spécifié en nombre à virgule flottante double précision à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1238">Converts the value of the specified object to an double-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1239">Nombre à virgule flottante double précision qui est équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1239">A double-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1240">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1240">The return value is the result of invoking the <xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="4a36e-1241">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1241">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-1242">Par exemple, si `value` est un <xref:System.String> qui représente un nombre, `provider` peut fournir des informations spécifiques à la culture concernant la notation utilisée pour représenter ce nombre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1242">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="4a36e-1243">Ignorent les types de base `provider`; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1243">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1244">L’exemple suivant définit une classe qui implémente <xref:System.IConvertible> et une classe qui implémente <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1244">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a36e-1245">Objets de la classe qui implémente <xref:System.IConvertible> contiennent un tableau de <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1245">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="4a36e-1246">Un objet de chaque classe est passé à la `ToDouble` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1246">An object of each class is passed to the `ToDouble` method.</span></span> <span data-ttu-id="4a36e-1247">Cette méthode retourne une moyenne du tableau de <xref:System.Double> valeurs, à l’aide de l’objet qui implémente <xref:System.IFormatProvider> pour déterminer comment calculer la moyenne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1247">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1248">
            <paramref name="value" /> n’a pas un format approprié pour un type <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1248">
              <paramref name="value" /> is not in an appropriate format for a <see cref="T:System.Double" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1249">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1249">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1250">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1250">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToDouble(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As String, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToDouble : string * IFormatProvider -&gt; double" Usage="System.Convert.ToDouble (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1251">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1251">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1252">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1252">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1253">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en nombre à virgule flottante double précision équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1253">Converts the specified string representation of a number to an equivalent double-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1254">Nombre à virgule flottante double précision qui est équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1254">A double-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1255">La valeur de retour est le résultat de l’appel de la <xref:System.Double.Parse%2A?displayProperty=nameWithType> méthode sur `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1255">The return value is the result of invoking the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="4a36e-1256">`provider` est un <xref:System.IFormatProvider> instance qui obtient un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1256">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-1257">Le <xref:System.Globalization.NumberFormatInfo> objet fournit des informations spécifiques à la culture concernant le format de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1257">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a36e-1258">Si `provider` est `null`, le <xref:System.Globalization.NumberFormatInfo> pour la culture actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1258">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-1259">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Double.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1259">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1260">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1260">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1261">L’exemple suivant convertit les représentations sous forme de chaîne de <xref:System.Double> valeurs avec le `ToDouble` (méthode), à l’aide un <xref:System.IFormatProvider> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1261">The following example converts string representations of <xref:System.Double> values with the `ToDouble` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-csharp[System.Convert.ToReals_String#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToReals_String/CS/todouble.cs#2)]
 [!code-vb[System.Convert.ToReals_String#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToReals_String/VB/todouble.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1262">
            <paramref name="value" /> n’est pas un nombre exprimé dans un format valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1262">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1263">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1263">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-1264">Convertit une valeur spécifiée en entier signé 16 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1264">Converts a specified value to a 16-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Boolean) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : bool -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1265">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1265">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1266">Convertit la valeur booléenne spécifiée en entier signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1266">Converts the specified Boolean value to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1267">Chiffre 1, si <paramref name="value" /> est <see langword="true" /> ; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1267">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1268">L’exemple suivant convertit les valeurs booléennes `true` et `false` à <xref:System.Int16> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1268">The following example converts the Boolean values `true` and `false` to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Convert.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Byte) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : byte -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1269">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1269">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1270">Convertit la valeur de l'entier non signé 8 bits spécifié en entier signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1270">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1271">Entier signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1271">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1272">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.Byte> valeurs en un entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1272">The following example converts each element in an array of <xref:System.Byte> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#2)]
 [!code-vb[System.Convert.ToInt16#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Char) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : char -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1273">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1273">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1274">Convertit la valeur du caractère Unicode spécifié en entier signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1274">Converts the value of the specified Unicode character to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1275">Entier signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1275">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1276">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Char> valeurs en un entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1276">The following example attempts to convert each element in an array of <xref:System.Char> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#3)]
 [!code-vb[System.Convert.ToInt16#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1277">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1277">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As DateTime) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : DateTime -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1278">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1278">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1279">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1279">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1280">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1280">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1281">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1281">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1282">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1282">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : decimal -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1283">Nombre décimal à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1283">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1284">Convertit la valeur du nombre décimal spécifié en entier signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1284">Converts the value of the specified decimal number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1285">
            <paramref name="value" />, arrondi à l’entier signé 16 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1285">
              <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          </span>
          <span data-ttu-id="4a36e-1286">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1286">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1287">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Decimal> valeurs en un entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1287">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a 16-bit signed integer.</span></span> <span data-ttu-id="4a36e-1288">L’exemple illustre que toute partie fractionnaire d’un <xref:System.Decimal> sont arrondis lors de la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1288">The example illustrates that any fractional part of a <xref:System.Decimal> value is rounded when performing the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#4)]
 [!code-vb[System.Convert.ToInt16#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1289">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int16.MaxValue" /> ou inférieur à <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1289">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Double) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : double -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1290">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1290">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1291">Convertit la valeur du nombre à virgule flottante double précision spécifié en entier signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1291">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1292">
            <paramref name="value" />, arrondi à l’entier signé 16 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1292">
              <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          </span>
          <span data-ttu-id="4a36e-1293">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1293">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1294">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.Double> valeurs en un entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1294">The following example converts each element in an array of <xref:System.Double> values to a 16-bit signed integer.</span></span> <span data-ttu-id="4a36e-1295">L’exemple illustre que toute partie fractionnaire d’un <xref:System.Double> valeur est arrondie avant d’effectuer la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1295">The example illustrates that any fractional part of a <xref:System.Double> value is rounded before performing the conversion.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#5)]
 [!code-vb[System.Convert.ToInt16#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1296">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int16.MaxValue" /> ou inférieur à <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1296">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int16 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1297">Entier signé 16 bits à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1297">The 16-bit signed integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1298">Retourne l'entier signé 16 bits spécifié. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1298">Returns the specified 16-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1299">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1299">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1300">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1300">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1301">Convertit la valeur de l'entier 32 bits signé spécifié en un entier 16 bits signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1301">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1302">Entier signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1302">The 16-bit signed integer equivalent of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1303">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers en un entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1303">The following example attempts to convert each element in an array of integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#6)]
 [!code-vb[System.Convert.ToInt16#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1304">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int16.MaxValue" /> ou inférieur à <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1304">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Long) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : int64 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1305">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1305">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1306">Convertit la valeur de l'entier 64 bits signé spécifié en un entier 16 bits signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1306">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1307">Entier signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1307">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1308">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers longs en un entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1308">The following example attempts to convert each element in an array of long integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#7)]
 [!code-vb[System.Convert.ToInt16#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1309">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int16.MaxValue" /> ou inférieur à <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1309">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : obj -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1310">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1310">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1311">Convertit la valeur de l'objet spécifié en entier signé 16 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1311">Converts the value of the specified object to a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1312">Entier signé 16 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1312">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1313">Si `value` n’est pas `null`, cette méthode encapsule un appel à la <xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType> implémentation du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1313">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1314">L’exemple suivant tente de convertir chaque élément dans un tableau d’objets en un entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1314">The following example attempts to convert each element in an object array to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#8)]
 [!code-vb[System.Convert.ToInt16#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1315">
            <paramref name="value" /> n’a pas un format approprié pour un type <see cref="T:System.Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1315">
              <paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1316">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1316">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-1317">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1317">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1318">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1318">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1319">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int16.MinValue" /> ou supérieur à <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1319">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As SByte) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : sbyte -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1320">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1320">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1321">Convertit la valeur de l'entier signé 8 bits spécifié en entier signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1321">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1322">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1322">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1323">L’exemple suivant convertit chaque élément dans un tableau d’octets signés en entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1323">The following example converts each element in an array of signed bytes to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#9)]
 [!code-vb[System.Convert.ToInt16#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Single) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : single -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1324">Nombre à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1324">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1325">Convertit la valeur du nombre à virgule flottante simple précision spécifié en entier signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1325">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1326">
            <paramref name="value" />, arrondi à l’entier signé 16 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1326">
              <paramref name="value" />, rounded to the nearest 16-bit signed integer.</span>
          </span>
          <span data-ttu-id="4a36e-1327">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1327">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1328">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Single> valeurs en un entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1328">The following example attempts to convert each element in an array of <xref:System.Single> values to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#10)]
 [!code-vb[System.Convert.ToInt16#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1329">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int16.MaxValue" /> ou inférieur à <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1329">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1330">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1330">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1331">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1331">Converts the specified string representation of a number to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1332">Entier signé 16 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1332">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1333">À l’aide de la <xref:System.Convert.ToInt16%28System.String%29> méthode équivaut à passer `value` à la <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1333">Using the <xref:System.Convert.ToInt16%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a36e-1334">`value` est interprétée à l'aide des conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1334">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="4a36e-1335">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1335">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1336">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1336">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1337">L’exemple suivant convertit les représentations sous forme de chaîne d’entiers 16 bits avec la `ToInt16` méthode, à l’aide de la mise en forme par défaut.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1337">The following example converts string representations of 16-bit integers with the `ToInt16` method, using default formatting.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/toint16.cpp#3)]
 [!code-csharp[System.Convert.ToSInts_String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/toint16.cs#3)]
 [!code-vb[System.Convert.ToSInts_String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/toint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1338">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1338">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1339">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int16.MinValue" /> ou supérieur à <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1339">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As UShort) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint16 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1340">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1340">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1341">Convertit la valeur de l'entier non signé 16 bits spécifié en entier signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1341">Converts the value of the specified 16-bit unsigned integer to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1342">Entier signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1342">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1343">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers non signés 16 bits à un entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1343">The following example attempts to convert each element in an array of unsigned 16-bit integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#11)]
 [!code-vb[System.Convert.ToInt16#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1344">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1344">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As UInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint32 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1345">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1345">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1346">Convertit la valeur de l'entier non signé 32 bits spécifié en entier signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1346">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1347">Entier signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1347">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1348">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers non signés à un entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1348">The following example attempts to convert each element in an array of unsigned integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#12)]
 [!code-vb[System.Convert.ToInt16#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1349">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1349">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As ULong) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : uint64 -&gt; int16" Usage="System.Convert.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1350">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1350">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1351">Convertit la valeur de l'entier non signé 64 bits spécifié en entier signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1351">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1352">Entier signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1352">A 16-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1353">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers longs non signés en entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1353">The following example attempts to convert each element in an array of unsigned long integers to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_1.cs#13)]
 [!code-vb[System.Convert.ToInt16#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1354">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1354">
              <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Object, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : obj * IFormatProvider -&gt; int16" Usage="System.Convert.ToInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1355">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1355">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1356">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1356">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1357">Convertit la valeur de l'objet spécifié en entier signé 16 bits à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1357">Converts the value of the specified object to a 16-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1358">Entier signé 16 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1358">A 16-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1359">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1359">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-1360">Par exemple, si `value` est un <xref:System.String> qui représente un nombre, `provider` peut fournir des informations spécifiques à la culture concernant la notation utilisée pour représenter ce nombre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1360">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="4a36e-1361">Ignorent les types de base `provider`; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1361">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1362">L’exemple suivant définit une classe qui implémente <xref:System.IConvertible> et une classe qui implémente <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1362">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a36e-1363">Objets de la classe qui implémente <xref:System.IConvertible> contiennent un tableau de <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1363">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="4a36e-1364">Un objet de chaque classe est passé à la `ToInt16` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1364">An object of each class is passed to the `ToInt16` method.</span></span> <span data-ttu-id="4a36e-1365">Cette méthode retourne une moyenne du tableau de <xref:System.Double> valeurs, à l’aide de l’objet qui implémente <xref:System.IFormatProvider> pour déterminer comment calculer la moyenne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1365">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1366">
            <paramref name="value" /> n’a pas un format approprié pour un type <see cref="T:System.Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1366">
              <paramref name="value" /> is not in an appropriate format for an <see cref="T:System.Int16" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1367">
            <paramref name="value" /> n’implémente pas <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1367">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1368">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int16.MinValue" /> ou supérieur à <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1368">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string * IFormatProvider -&gt; int16" Usage="System.Convert.ToInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1369">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1369">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1370">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1370">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1371">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier signé 16 bits équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1371">Converts the specified string representation of a number to an equivalent 16-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1372">Entier signé 16 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1372">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1373">`provider` est un <xref:System.IFormatProvider> instance qui obtient un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1373">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-1374">Le <xref:System.Globalization.NumberFormatInfo> objet fournit des informations spécifiques à la culture concernant le format de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1374">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a36e-1375">Si `provider` est `null`, le <xref:System.Globalization.NumberFormatInfo> pour la culture actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1375">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-1376">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1376">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1377">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1377">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1378">L’exemple suivant convertit les représentations sous forme de chaîne d’entiers 16 bits avec le `ToInt16` (méthode), à l’aide un <xref:System.IFormatProvider> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1378">The following example converts string representations of 16-bit integers with the `ToInt16` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/toint16.cpp#3)]
 [!code-csharp[System.Convert.ToSInts_String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/toint16.cs#3)]
 [!code-vb[System.Convert.ToSInts_String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/toint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1379">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1379">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1380">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int16.MinValue" /> ou supérieur à <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1380">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt16(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As String, fromBase As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string * int -&gt; int16" Usage="System.Convert.ToInt16 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1381">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1381">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="4a36e-1382">Base du nombre figurant dans <c>value</c>, qui doit correspondre à 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1382">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1383">Convertit la représentation sous forme de chaîne d'un nombre dans une base spécifiée en entier signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1383">Converts the string representation of a number in a specified base to an equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1384">Entier signé 16 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1384">A 16-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1385">Si `fromBase` est 16, vous pouvez faire précéder le nombre spécifié par le `value` paramètre avec « 0 x » ou « 0 X ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-1385">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="4a36e-1386">Étant donné que le signe négatif n’est pas pris en charge pour les 10 numériques représentations de base, le <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> méthode part du principe que les nombres négatifs utilisent la représentation de complément à deux.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1386">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two’s complement representation.</span></span> <span data-ttu-id="4a36e-1387">En d’autres termes, la méthode interprète toujours le bit binaire d’ordre le plus élevé d’un entier (bit 15) comme son bit de signe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1387">In other words, the method always interprets the highest-order binary bit of an integer (bit 15) as its sign bit.</span></span> <span data-ttu-id="4a36e-1388">Par conséquent, il est possible d’écrire du code dans lequel un 10 de base autre numéro qui est en dehors des limites de la <xref:System.Int16> type de données est converti en un <xref:System.Int16> valeur sans la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1388">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int16> data type is converted to an <xref:System.Int16> value without the method throwing an exception.</span></span> <span data-ttu-id="4a36e-1389">L’exemple suivant incrémente <xref:System.Int16.MaxValue?displayProperty=nameWithType> d’une unité, convertit le nombre résultant en sa représentation sous forme de chaîne hexadécimale, puis appelle le <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1389">The following example increments <xref:System.Int16.MaxValue?displayProperty=nameWithType> by one, converts the resulting number to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="4a36e-1390">Au lieu de lever une exception, la méthode affiche le message « 0 x 8000 est convertie en -32768 ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-1390">Instead of throwing an exception, the method displays the message, "0x8000 converts to -32768."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#5)]
 [!code-vb[System.Convert.BaseConversion#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#5)]  
  
 <span data-ttu-id="4a36e-1391">Lorsque vous effectuez des opérations binaires ou conversions numériques, il incombe toujours au développeur de vérifier qu’une méthode utilise la représentation numérique appropriée pour interpréter une valeur particulière.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1391">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="4a36e-1392">Comme l’illustre l’exemple suivant, vous pouvez vous assurer que la méthode gère correctement les dépassements de capacité en extrayant d’abord le signe de la valeur numérique avant de le convertir en sa représentation de chaîne hexadécimale.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1392">As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="4a36e-1393">Lève une exception si la valeur d’origine a été positive, mais la conversion en un entier donne une valeur négative.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1393">Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#6)]
 [!code-vb[System.Convert.BaseConversion#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#6)]  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1394">L’exemple suivant essaie d’interpréter chaque élément dans un tableau de chaînes sous forme de chaîne hexadécimale et convertissez-le en un entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1394">The following example attempts to interpret each element in a string array as a hexadecimal string and to convert it to a 16-bit signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt16#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint16/cs/toint16_2.cs#14)]
 [!code-vb[System.Convert.ToInt16#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint16/vb/toint16_2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-1395">
            <paramref name="fromBase" /> n’a pas la valeur 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1395">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="4a36e-1396">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1396">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1397">
            <paramref name="value" />, qui représente un nombre signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1397">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-1398">
            <paramref name="value" /> a la valeur <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1398">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1399">
            <paramref name="value" /> contient un caractère qui n’est pas un chiffre valide dans la base spécifiée par <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1399">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="4a36e-1400">Le message d’exception indique qu’il n’y a pas de chiffres à convertir si le premier caractère dans <paramref name="value" /> n’est pas valide ; sinon, le message indique que <paramref name="value" /> contient des caractères de fin non valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1400">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1401">
            <paramref name="value" />, qui représente un nombre signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1401">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="4a36e-1402">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1402">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1403">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int16.MinValue" /> ou supérieur à <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1403">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-1404">Convertit une valeur spécifiée en entier signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1404">Converts a specified value to a 32-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : bool -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1405">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1405">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1406">Convertit la valeur booléenne spécifiée en entier signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1406">Converts the specified Boolean value to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1407">Chiffre 1, si <paramref name="value" /> est <see langword="true" /> ; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1407">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1408">L’exemple suivant convertit le <xref:System.Boolean> valeurs `true` et `false` à des entiers.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1408">The following example converts the <xref:System.Boolean> values `true` and `false` to integers.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#1)]
 [!code-vb[System.Convert.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : byte -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1409">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1409">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1410">Convertit la valeur de l'entier non signé 8 bits spécifié en entier signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1410">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1411">Entier signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1411">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1412">L’exemple suivant convertit chaque élément dans un tableau d’octets en un entier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1412">The following example converts each element in an array of bytes to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#2)]
 [!code-vb[System.Convert.ToInt32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : char -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1413">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1413">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1414">Convertit la valeur du caractère Unicode spécifié en entier signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1414">Converts the value of the specified Unicode character to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1415">Entier signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1415">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1416">Le <xref:System.Convert.ToInt32%28System.Char%29> méthode retourne un entier signé 32 bits qui représente l’unité de code encodé UTF-16 de la `value` argument.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1416">The <xref:System.Convert.ToInt32%28System.Char%29> method returns a 32-bit signed integer that represents the UTF-16 encoded code unit of the `value` argument.</span></span> <span data-ttu-id="4a36e-1417">Si `value` n’est pas un substitut faible ou un substitut, cette valeur de retour représente également le point de code Unicode de valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1417">If `value` is not a low surrogate or a high surrogate, this return value also represents the Unicode code point of value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1418">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.Char> valeurs vers un entier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1418">The following example converts each element in an array of <xref:System.Char> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#3)]
 [!code-vb[System.Convert.ToInt32#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : DateTime -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1419">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1419">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1420">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1420">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1421">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1421">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1422">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1422">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1423">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1423">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : decimal -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1424">Nombre décimal à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1424">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1425">Convertit la valeur du nombre décimal spécifié en entier signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1425">Converts the value of the specified decimal number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1426">
            <paramref name="value" />, arrondi à l’entier signé 32 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1426">
              <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          </span>
          <span data-ttu-id="4a36e-1427">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1427">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1428">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Decimal> valeurs vers un entier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1428">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]
 [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1429">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int32.MaxValue" /> ou inférieur à <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1429">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : double -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1430">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1430">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1431">Convertit la valeur du nombre à virgule flottante double précision spécifié en entier signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1431">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1432">
            <paramref name="value" />, arrondi à l’entier signé 32 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1432">
              <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          </span>
          <span data-ttu-id="4a36e-1433">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1433">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1434">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Double> valeurs à aninteger.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1434">The following example attempts to convert each element in an array of <xref:System.Double> values to aninteger.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#5)]
 [!code-vb[System.Convert.ToInt32#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1435">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int32.MaxValue" /> ou inférieur à <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1435">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int16 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1436">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1436">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1437">Convertit la valeur de l'entier 16 bits signé spécifié en un entier 32 bits signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1437">Converts the value of the specified 16-bit signed integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1438">Entier signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1438">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1439">L’exemple suivant convertit chaque élément dans un tableau d’entiers signés 16 bits en entier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1439">The following example converts each element in an array of 16-bit signed integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#6)]
 [!code-vb[System.Convert.ToInt32#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1440">Entier signé 32 bits à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1440">The 32-bit signed integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1441">Retourne l'entier signé 32 bits spécifié. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1441">Returns the specified 32-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1442">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1442">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : int64 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1443">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1443">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1444">Convertit la valeur de l'entier 64 bits signé spécifié en un entier 32 bits signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1444">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1445">Entier signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1445">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1446">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers longs en entier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1446">The following example attempts to convert each element in an array of long integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#7)]
 [!code-vb[System.Convert.ToInt32#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1447">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int32.MaxValue" /> ou inférieur à <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1447">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : obj -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1448">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1448">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1449">Convertit la valeur de l'objet spécifié en entier signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1449">Converts the value of the specified object to a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1450">Entier signé 32 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1450">A 32-bit signed integer equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1451">Si`value` n’est pas `null`, cette méthode encapsule un appel à la <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> implémentation du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1451">If`value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1452">L’exemple suivant tente de convertir chaque élément dans un tableau d’objets en un entier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1452">The following example attempts to convert each element in an object array to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#8)]
 [!code-vb[System.Convert.ToInt32#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1453">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1453">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1454">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1454">
              <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-1455">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1455">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1456">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1456">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1457">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1457">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : sbyte -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1458">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1458">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1459">Convertit la valeur de l'entier signé 8 bits spécifié en entier signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1459">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1460">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1460">A 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1461">L’exemple suivant convertit chaque élément dans un tableau d’octets signés en entier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1461">The following example converts each element in an array of signed bytes to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#9)]
 [!code-vb[System.Convert.ToInt32#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : single -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1462">Nombre à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1462">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1463">Convertit la valeur du nombre à virgule flottante simple précision spécifié en entier signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1463">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1464">
            <paramref name="value" />, arrondi à l’entier signé 32 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1464">
              <paramref name="value" />, rounded to the nearest 32-bit signed integer.</span>
          </span>
          <span data-ttu-id="4a36e-1465">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1465">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1466">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Single> valeurs vers un entier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1466">The following example attempts to convert each element in an array of <xref:System.Single> values to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#10)]
 [!code-vb[System.Convert.ToInt32#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1467">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int32.MaxValue" /> ou inférieur à <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1467">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" /> or less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1468">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1468">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1469">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1469">Converts the specified string representation of a number to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1470">Entier signé 32 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1470">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1471">À l’aide de la <xref:System.Convert.ToInt32%28System.String%29> méthode équivaut à passer `value` à la <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> (méthode).`value`</span><span class="sxs-lookup"><span data-stu-id="4a36e-1471">Using the <xref:System.Convert.ToInt32%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.`value`</span></span> <span data-ttu-id="4a36e-1472">est interprétée en utilisant les conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1472">is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="4a36e-1473">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1473">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1474">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1474">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1475">L’exemple suivant tente de convertir chaque élément dans un tableau de chaînes numériques en un entier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1475">The following example attempts to convert each element in a numeric string array to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#11)]
 [!code-vb[System.Convert.ToInt32#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1476">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1476">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1477">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1477">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint16 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1478">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1478">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1479">Convertit la valeur de l'entier non signé 16 bits spécifié en entier signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1479">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1480">Entier signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1480">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1481">L’exemple suivant convertit chaque élément dans un tableau d’entiers non signés 16 bits en entier.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1481">The following example converts each element in an array of 16-bit unsigned integers to an integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#12)]
 [!code-vb[System.Convert.ToInt32#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint32 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1482">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1482">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1483">Convertit la valeur de l'entier non signé 32 bits spécifié en entier signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1483">Converts the value of the specified 32-bit unsigned integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1484">Entier signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1484">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1485">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers non signés à un entier signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1485">The following example attempts to convert each element in an array of unsigned integers to a signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#13)]
 [!code-vb[System.Convert.ToInt32#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1486">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1486">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : uint64 -&gt; int" Usage="System.Convert.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1487">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1487">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1488">Convertit la valeur de l'entier non signé 64 bits spécifié en entier signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1488">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1489">Entier signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1489">A 32-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1490">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers longs non signés en entier signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1490">The following example attempts to convert each element in an array of unsigned long integers to a signed integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#14)]
 [!code-vb[System.Convert.ToInt32#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1491">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1491">
              <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Object, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : obj * IFormatProvider -&gt; int" Usage="System.Convert.ToInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1492">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1492">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1493">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1493">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1494">Convertit la valeur de l'objet spécifié en entier signé 32 bits à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1494">Converts the value of the specified object to a 32-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1495">Entier signé 32 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1495">A 32-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1496">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1496">The return value is the result of invoking the <xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="4a36e-1497">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1497">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-1498">Par exemple, si `value` est un <xref:System.String> qui représente un nombre, `provider` peut fournir des informations spécifiques à la culture concernant la notation utilisée pour représenter ce nombre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1498">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="4a36e-1499">Ignorent les types de base `provider`; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1499">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1500">L’exemple suivant définit une classe qui implémente <xref:System.IConvertible> et une classe qui implémente <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1500">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a36e-1501">Objets de la classe qui implémente <xref:System.IConvertible> contiennent un tableau de <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1501">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="4a36e-1502">Un objet de chaque classe est passé à la `ToInt32` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1502">An object of each class is passed to the `ToInt32` method.</span></span> <span data-ttu-id="4a36e-1503">Cette méthode retourne une moyenne du tableau de <xref:System.Double> valeurs, à l’aide de l’objet qui implémente <xref:System.IFormatProvider> pour déterminer comment calculer la moyenne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1503">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1504">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1504">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1505">
            <paramref name="value" /> n’implémente pas <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1505">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1506">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1506">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string * IFormatProvider -&gt; int" Usage="System.Convert.ToInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1507">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1507">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1508">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1508">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1509">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier signé 32 bits équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1509">Converts the specified string representation of a number to an equivalent 32-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1510">Entier signé 32 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1510">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1511">La valeur de retour est le résultat de l’appel de la <xref:System.Int32.Parse%2A?displayProperty=nameWithType> méthode sur `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1511">The return value is the result of invoking the <xref:System.Int32.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="4a36e-1512">`provider` est un <xref:System.IFormatProvider> instance qui obtient un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1512">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-1513">Le <xref:System.Globalization.NumberFormatInfo> objet fournit des informations spécifiques à la culture concernant le format de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1513">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a36e-1514">Si `provider` est `null`, le <xref:System.Globalization.NumberFormatInfo> pour la culture actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1514">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-1515">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1515">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1516">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1516">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1517">L’exemple suivant définit un personnalisé <xref:System.Globalization.NumberFormatInfo> objet qui reconnaît la chaîne « pos » comme signe positif et la chaîne « neg » comme signe négatif.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1517">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="4a36e-1518">Il essaie de convertir chaque élément d’un tableau de chaînes numériques en un entier à l’aide de ces deux ce fournisseur et le <xref:System.Globalization.NumberFormatInfo> fournisseur pour la culture dite indifférente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1518">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToInt32#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_2.cs#15)]
 [!code-vb[System.Convert.ToInt32#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1519">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1519">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1520">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1520">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As String, fromBase As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string * int -&gt; int" Usage="System.Convert.ToInt32 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1521">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1521">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="4a36e-1522">Base du nombre figurant dans <c>value</c>, qui doit correspondre à 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1522">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1523">Convertit la représentation sous forme de chaîne d'un nombre dans une base spécifiée en entier signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1523">Converts the string representation of a number in a specified base to an equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1524">Entier signé 32 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1524">A 32-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1525">Si `fromBase` est 16, vous pouvez faire précéder le nombre spécifié par le `value` paramètre avec « 0 x » ou « 0 X ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-1525">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="4a36e-1526">Étant donné que le signe négatif n’est pas pris en charge pour les 10 numériques représentations de base, le <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> méthode part du principe que les nombres négatifs utilisent la représentation de complément à deux.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1526">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two’s complement representation.</span></span> <span data-ttu-id="4a36e-1527">En d’autres termes, la méthode interprète toujours le bit binaire d’ordre le plus élevé d’un entier (bit 31) comme son bit de signe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1527">In other words, the method always interprets the highest-order binary bit of an integer (bit 31) as its sign bit.</span></span> <span data-ttu-id="4a36e-1528">Par conséquent, il est possible d’écrire du code dans lequel un 10 de base autre numéro qui est en dehors des limites de la <xref:System.Int32> type de données est converti en un <xref:System.Int32> valeur sans la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1528">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int32> data type is converted to an <xref:System.Int32> value without the method throwing an exception.</span></span> <span data-ttu-id="4a36e-1529">L’exemple suivant incrémente <xref:System.Int32.MaxValue?displayProperty=nameWithType> d’une unité, convertit le nombre résultant en sa représentation sous forme de chaîne hexadécimale, puis appelle le <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1529">The following example increments <xref:System.Int32.MaxValue?displayProperty=nameWithType> by one, converts the resulting number to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="4a36e-1530">Au lieu de lever une exception, la méthode affiche le message « 0 x 80000000 est convertie en -2147483648 ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-1530">Instead of throwing an exception, the method displays the message, "0x80000000 converts to -2147483648."</span></span>  
  
 [!code-cpp[System.Convert.BaseConversion#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cpp/toint_str_int32.cpp#1)]
 [!code-csharp[System.Convert.BaseConversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#1)]
 [!code-vb[System.Convert.BaseConversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#1)]  
  
 <span data-ttu-id="4a36e-1531">Lorsque vous effectuez des opérations binaires ou conversions numériques, il incombe toujours au développeur de vérifier qu’une méthode utilise la représentation numérique appropriée pour interpréter une valeur particulière.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1531">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="4a36e-1532">Comme l’illustre l’exemple suivant, vous pouvez vous assurer que la méthode gère correctement les dépassements de capacité en extrayant d’abord le signe de la valeur numérique avant de le convertir en sa représentation de chaîne hexadécimale.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1532">As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="4a36e-1533">Lève une exception si la valeur d’origine a été positive, mais la conversion en un entier donne une valeur négative.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1533">Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</span></span>  
  
 [!code-cpp[System.Convert.BaseConversion#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cpp/toint_str_int32.cpp#2)]
 [!code-csharp[System.Convert.BaseConversion#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#2)]
 [!code-vb[System.Convert.BaseConversion#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-1534">
            <paramref name="fromBase" /> n’a pas la valeur 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1534">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="4a36e-1535">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1535">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1536">
            <paramref name="value" />, qui représente un nombre signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1536">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-1537">
            <paramref name="value" /> a la valeur <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1537">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1538">
            <paramref name="value" /> contient un caractère qui n’est pas un chiffre valide dans la base spécifiée par <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1538">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="4a36e-1539">Le message d’exception indique qu’il n’y a pas de chiffres à convertir si le premier caractère dans <paramref name="value" /> n’est pas valide ; sinon, le message indique que <paramref name="value" /> contient des caractères de fin non valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1539">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1540">
            <paramref name="value" />, qui représente un nombre signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1540">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="4a36e-1541">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1541">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1542">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1542">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-1543">Convertit une valeur spécifiée en entier signé 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1543">Converts a specified value to a 64-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Boolean) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(bool value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : bool -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1544">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1544">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1545">Convertit la valeur booléenne spécifiée en entier signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1545">Converts the specified Boolean value to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1546">Chiffre 1, si <paramref name="value" /> est <see langword="true" /> ; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1546">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1547">L’exemple suivant convertit le <xref:System.Boolean> valeurs `true` et `false` entiers longs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1547">The following example converts the <xref:System.Boolean> values `true` and `false` to long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Convert.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Byte) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : byte -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1548">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1548">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1549">Convertit la valeur de l'entier non signé 8 bits spécifié en entier signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1549">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1550">Entier signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1550">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1551">L’exemple suivant convertit chaque élément dans un tableau d’octets en un entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1551">The following example converts each element in an array of bytes to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#2)]
 [!code-vb[System.Convert.ToInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Char) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(char value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : char -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1552">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1552">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1553">Convertit la valeur du caractère Unicode spécifié en entier signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1553">Converts the value of the specified Unicode character to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1554">Entier signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1554">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1555">L’exemple suivant convertit chaque élément dans un <xref:System.Char> tableau vers un entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1555">The following example converts each element in a <xref:System.Char> array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#3)]
 [!code-vb[System.Convert.ToInt64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As DateTime) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : DateTime -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1556">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1556">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1557">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1557">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1558">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1558">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1559">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1559">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1560">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1560">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : decimal -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1561">Nombre décimal à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1561">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1562">Convertit la valeur du nombre décimal spécifié en entier signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1562">Converts the value of the specified decimal number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1563">
            <paramref name="value" />, arrondi à l’entier signé 64 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1563">
              <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          </span>
          <span data-ttu-id="4a36e-1564">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1564">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1565">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Decimal> valeurs vers un entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1565">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#4)]
 [!code-vb[System.Convert.ToInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1566">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int64.MaxValue" /> ou inférieur à <see cref="F:System.Int64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1566">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Double) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(double value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : double -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1567">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1567">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1568">Convertit la valeur du nombre à virgule flottante double précision spécifié en entier signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1568">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1569">
            <paramref name="value" />, arrondi à l’entier signé 64 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1569">
              <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          </span>
          <span data-ttu-id="4a36e-1570">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1570">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1571">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Double> valeurs vers un entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1571">The following example attempts to convert each element in an array of <xref:System.Double> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#5)]
 [!code-vb[System.Convert.ToInt64#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1572">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int64.MaxValue" /> ou inférieur à <see cref="F:System.Int64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1572">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Short) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(short value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int16 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1573">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1573">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1574">Convertit la valeur de l'entier 16 bits signé spécifié en un entier 64 bits signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1574">Converts the value of the specified 16-bit signed integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1575">Entier signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1575">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1576">L’exemple suivant convertit chaque élément dans un tableau d’entiers 16 bits vers un entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1576">The following example converts each element in an array of 16-bit integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#6)]
 [!code-vb[System.Convert.ToInt64#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(int value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1577">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1577">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1578">Convertit la valeur de l'entier 32 bits signé spécifié en un entier 64 bits signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1578">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1579">Entier signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1579">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(long value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : int64 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1580">Entier signé 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1580">A 64-bit signed integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1581">Retourne l'entier signé 64 bits spécifié. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1581">Returns the specified 64-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1582">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1582">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1583">L’exemple suivant convertit chaque élément dans un tableau d’entiers en entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1583">The following example converts each element in an array of integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#7)]
 [!code-vb[System.Convert.ToInt64#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Object) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : obj -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1584">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1584">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1585">Convertit la valeur de l'objet spécifié en entier signé 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1585">Converts the value of the specified object to a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1586">Entier signé 64 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1586">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1587">Si `value` n’est pas `null`, cette méthode encapsule un appel à la <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> implémentation du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1587">If `value` is not `null`, this method wraps a call to the <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> implementation of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1588">L’exemple suivant tente de convertir chaque élément dans un tableau d’objets vers un entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1588">The following example attempts to convert each element in an object array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#8)]
 [!code-vb[System.Convert.ToInt64#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1589">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1589">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1590">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1590">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-1591">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1591">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1592">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1592">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1593">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int64.MinValue" /> ou supérieur à <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1593">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As SByte) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : sbyte -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1594">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1594">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1595">Convertit la valeur de l'entier signé 8 bits spécifié en entier signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1595">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1596">Entier signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1596">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1597">L’exemple suivant convertit chaque élément dans un tableau d’octets signés vers un entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1597">The following example converts each element in a signed byte array to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#9)]
 [!code-vb[System.Convert.ToInt64#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Single) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(float value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : single -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1598">Nombre à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1598">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1599">Convertit la valeur du nombre à virgule flottante simple précision spécifié en entier signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1599">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1600">
            <paramref name="value" />, arrondi à l’entier signé 64 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1600">
              <paramref name="value" />, rounded to the nearest 64-bit signed integer.</span>
          </span>
          <span data-ttu-id="4a36e-1601">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1601">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1602">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Single> valeurs vers un entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1602">The following example attempts to convert each element in an array of <xref:System.Single> values to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#10)]
 [!code-vb[System.Convert.ToInt64#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1603">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int64.MaxValue" /> ou inférieur à <see cref="F:System.Int64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1603">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" /> or less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1604">Chaîne contenant un nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1604">A string that contains a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1605">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1605">Converts the specified string representation of a number to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1606">Entier signé 64 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1606">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1607">À l’aide de la <xref:System.Convert.ToInt64%28System.String%29> méthode équivaut à passer `value` à la <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1607">Using the <xref:System.Convert.ToInt64%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a36e-1608">`value` est interprétée à l'aide des conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1608">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="4a36e-1609">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1609">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1610">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1610">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1611">L’exemple suivant tente de convertir chaque élément dans un tableau de chaînes numériques en un entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1611">The following example attempts to convert each element in an array of numeric strings to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#11)]
 [!code-vb[System.Convert.ToInt64#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1612">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1612">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1613">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int64.MinValue" /> ou supérieur à <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1613">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As UShort) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint16 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1614">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1614">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1615">Convertit la valeur de l'entier non signé 16 bits spécifié en entier signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1615">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1616">Entier signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1616">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1617">L’exemple suivant convertit chaque élément dans un tableau d’entiers non signés 16 bits vers un entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1617">The following example converts each element in an array of 16-bit unsigned integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#12)]
 [!code-vb[System.Convert.ToInt64#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As UInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint32 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1618">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1618">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1619">Convertit la valeur de l'entier non signé 32 bits spécifié en entier signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1619">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1620">Entier signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1620">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1621">L’exemple suivant convertit chaque élément dans un tableau d’entiers non signés à un entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1621">The following example converts each element in an array of unsigned integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#13)]
 [!code-vb[System.Convert.ToInt64#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As ULong) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : uint64 -&gt; int64" Usage="System.Convert.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1622">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1622">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1623">Convertit la valeur de l'entier non signé 64 bits spécifié en entier signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1623">Converts the value of the specified 64-bit unsigned integer to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1624">Entier signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1624">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1625">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers longs non signés en entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1625">The following example attempts to convert each element in an array of unsigned long integers to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#14)]
 [!code-vb[System.Convert.ToInt64#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1626">
            <paramref name="value" /> est supérieur à <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1626">
              <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Object, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : obj * IFormatProvider -&gt; int64" Usage="System.Convert.ToInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1627">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1627">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1628">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1628">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1629">Convertit la valeur de l'objet spécifié en entier signé 64 bits à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1629">Converts the value of the specified object to a 64-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1630">Entier signé 64 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1630">A 64-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1631">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1631">The return value is the result of invoking the <xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="4a36e-1632">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1632">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-1633">Par exemple, si `value` est un <xref:System.String> qui représente un nombre, `provider` peut fournir des informations spécifiques à la culture concernant la notation utilisée pour représenter ce nombre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1633">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="4a36e-1634">Ignorent les types de base `provider`; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1634">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1635">L’exemple suivant définit une classe qui implémente <xref:System.IConvertible> et une classe qui implémente <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1635">The following example defines a class that implements <xref:System.IConvertible> and a class that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a36e-1636">Objets de la classe qui implémente <xref:System.IConvertible> contiennent un tableau de <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1636">Objects of the class that implements <xref:System.IConvertible> hold an array of <xref:System.Double> values.</span></span> <span data-ttu-id="4a36e-1637">Un objet de chaque classe est passé à la `ToInt64` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1637">An object of each class is passed to the `ToInt64` method.</span></span> <span data-ttu-id="4a36e-1638">Cette méthode retourne une moyenne du tableau de <xref:System.Double> valeurs, à l’aide de l’objet qui implémente <xref:System.IFormatProvider> pour déterminer comment calculer la moyenne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1638">This method returns an average of the array of <xref:System.Double> values, using the object that implements <xref:System.IFormatProvider> to determine how to calculate the average.</span></span>  
  
 [!code-cpp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CPP/objectifp.cpp#1)]
 [!code-csharp[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/CS/objectifp.cs#1)]
 [!code-vb[System.Convert.ToXXX_Object_IFP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToXXX_Object_IFP/VB/objectifp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1639">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1639">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1640">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1640">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-1641">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1641">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1642">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1642">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1643">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int64.MinValue" /> ou supérieur à <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1643">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string * IFormatProvider -&gt; int64" Usage="System.Convert.ToInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1644">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1644">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1645">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1645">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1646">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier signé 64 bits équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1646">Converts the specified string representation of a number to an equivalent 64-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1647">Entier signé 64 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1647">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1648">La valeur de retour est le résultat de l’appel de la <xref:System.Int64.Parse%2A?displayProperty=nameWithType> méthode sur `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1648">The return value is the result of invoking the <xref:System.Int64.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="4a36e-1649">`provider` est un `IFormatProvider` instance qui obtient un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1649">`provider` is an `IFormatProvider` instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-1650">Le `NumberFormatInfo` objet fournit des informations spécifiques à la culture concernant le format de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1650">The `NumberFormatInfo` object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a36e-1651">Si `provider` est `null`, le `NumberFormatInfo` pour la culture actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1651">If `provider` is `null`, the `NumberFormatInfo` for the current culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-1652">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1652">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Int64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1653">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1653">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1654">L’exemple suivant définit un personnalisé <xref:System.Globalization.NumberFormatInfo> objet qui reconnaît la chaîne « pos » comme signe positif et la chaîne « neg » comme signe négatif.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1654">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="4a36e-1655">Il essaie de convertir chaque élément d’un tableau de chaînes numériques en un entier à l’aide de ces deux ce fournisseur et le <xref:System.Globalization.NumberFormatInfo> fournisseur pour la culture dite indifférente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1655">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_3.cs#16)]
 [!code-vb[System.Convert.ToInt64#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1656">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1656">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1657">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int64.MinValue" /> ou supérieur à <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1657">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToInt64(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As String, fromBase As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string * int -&gt; int64" Usage="System.Convert.ToInt64 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1658">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1658">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="4a36e-1659">Base du nombre figurant dans <c>value</c>, qui doit correspondre à 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1659">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1660">Convertit la représentation sous forme de chaîne d'un nombre dans une base spécifiée en entier signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1660">Converts the string representation of a number in a specified base to an equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1661">Entier signé 64 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1661">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1662">Si `fromBase` est 16, vous pouvez faire précéder le nombre spécifié par le `value` paramètre avec « 0 x » ou « 0 X ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-1662">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="4a36e-1663">Étant donné que le signe négatif n’est pas pris en charge pour les 10 numériques représentations de base, le <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> méthode part du principe que les nombres négatifs utilisent la représentation de complément à deux.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1663">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two’s complement representation.</span></span> <span data-ttu-id="4a36e-1664">En d’autres termes, la méthode interprète toujours le bit binaire d’ordre le plus élevé d’un entier long (bit 63) comme son bit de signe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1664">In other words, the method always interprets the highest-order binary bit of a long integer (bit 63) as its sign bit.</span></span> <span data-ttu-id="4a36e-1665">Par conséquent, il est possible d’écrire du code dans lequel un 10 de base autre numéro qui est en dehors des limites de la <xref:System.Int64> type de données est converti en un <xref:System.Int64> valeur sans la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1665">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.Int64> data type is converted to an <xref:System.Int64> value without the method throwing an exception.</span></span> <span data-ttu-id="4a36e-1666">L’exemple suivant convertit <xref:System.UInt64.MaxValue> à sa représentation sous forme de chaîne hexadécimale, puis appelle le <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1666">The following example converts <xref:System.UInt64.MaxValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="4a36e-1667">Au lieu de lever une exception, la méthode affiche le message « 0xFFFFFFFFFFFFFFFF est convertie en -1 ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-1667">Instead of throwing an exception, the method displays the message, "0xFFFFFFFFFFFFFFFF converts to -1."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#7)]
 [!code-vb[System.Convert.BaseConversion#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#7)]  
  
 <span data-ttu-id="4a36e-1668">Lorsque vous effectuez des opérations binaires ou conversions numériques, il incombe toujours au développeur de vérifier qu’une méthode utilise la représentation numérique appropriée pour interpréter une valeur particulière.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1668">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="4a36e-1669">Comme l’illustre l’exemple suivant, vous pouvez vous assurer que la méthode gère correctement les dépassements de capacité en déterminant d’abord si une valeur représente un type signé ou lors de sa conversion en sa représentation sous forme de chaîne hexadécimale.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1669">As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="4a36e-1670">Lève une exception si la valeur d’origine était un type non signé, mais la conversion en un entier génère une valeur dont le bit de signe est activé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1670">Throw an exception if the original value was an unsigned type but the conversion back to an integer yields a value whose sign bit is on.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#8)]
 [!code-vb[System.Convert.BaseConversion#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#8)]  
  
 <span data-ttu-id="4a36e-1671">L’exemple suivant tente d’interpréter chaque élément dans un tableau de chaînes sous forme de chaîne hexadécimale et la convertir en un entier long.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1671">The following example attempts to interpret each element in a string array as a hexadecimal string and convert it to a long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToInt64#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_2.cs#15)]
 [!code-vb[System.Convert.ToInt64#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-1672">
            <paramref name="fromBase" /> n’a pas la valeur 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1672">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="4a36e-1673">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1673">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1674">
            <paramref name="value" />, qui représente un nombre signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1674">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-1675">
            <paramref name="value" /> a la valeur <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1675">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1676">
            <paramref name="value" /> contient un caractère qui n’est pas un chiffre valide dans la base spécifiée par <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1676">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="4a36e-1677">Le message d’exception indique qu’il n’y a pas de chiffres à convertir si le premier caractère dans <paramref name="value" /> n’est pas valide ; sinon, le message indique que <paramref name="value" /> contient des caractères de fin non valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1677">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1678">
            <paramref name="value" />, qui représente un nombre signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1678">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="4a36e-1679">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1679">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1680">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Int64.MinValue" /> ou supérieur à <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1680">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-1681">Convertit une valeur spécifiée en entier signé 8 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1681">Converts a specified value to an 8-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Boolean) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(bool value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : bool -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1682">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1682">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1683">Convertit la valeur booléenne spécifiée en entier signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1683">Converts the specified Boolean value to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1684">Chiffre 1, si <paramref name="value" /> est <see langword="true" /> ; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1684">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1685">L’exemple suivant convertit les valeurs booléennes `true` et `false` à des valeurs d’octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1685">The following example converts the Boolean values `true` and `false` to signed byte values.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Convert.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Byte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : byte -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1686">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1686">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1687">Convertit la valeur de l'entier non signé 8 bits spécifié en entier signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1687">Converts the value of the specified 8-bit unsigned integer to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1688">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1688">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1689">L’exemple suivant tente de convertir chaque élément dans un tableau d’octets en octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1689">The following example attempts to convert each element in a byte array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#2)]
 [!code-vb[System.Convert.ToSByte#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1690">
            <paramref name="value" /> est supérieur à <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1690">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Char) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(char value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : char -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1691">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1691">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1692">Convertit la valeur du caractère Unicode spécifié en entier signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1692">Converts the value of the specified Unicode character to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1693">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1693">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1694">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Char> valeurs à un octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1694">The following example attempts to convert each element in an array of <xref:System.Char> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#3)]
 [!code-vb[System.Convert.ToSByte#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1695">
            <paramref name="value" /> est supérieur à <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1695">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As DateTime) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : DateTime -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1696">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1696">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1697">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1697">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1698">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1698">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1699">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1699">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1700">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1700">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : decimal -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1701">Nombre décimal à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1701">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1702">Convertit la valeur du nombre décimal spécifié en entier signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1702">Converts the value of the specified decimal number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1703">
            <paramref name="value" />, arrondi à l’entier signé 8 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1703">
              <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="4a36e-1704">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1704">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1705">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Decimal> valeurs à un octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1705">The following example attempts to convert each element in an array of <xref:System.Decimal> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#4)]
 [!code-vb[System.Convert.ToSByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1706">
            <paramref name="value" /> est supérieur à <see cref="F:System.SByte.MaxValue" /> ou inférieur à <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1706">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Double) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(double value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : double -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1707">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1707">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1708">Convertit la valeur du nombre à virgule flottante double précision spécifié en entier signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1708">Converts the value of the specified double-precision floating-point number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1709">
            <paramref name="value" />, arrondi à l’entier signé 8 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1709">
              <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="4a36e-1710">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1710">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1711">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Double> valeurs à un octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1711">The following example attempts to convert each element in an array of <xref:System.Double> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#5)]
 [!code-vb[System.Convert.ToSByte#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1712">
            <paramref name="value" /> est supérieur à <see cref="F:System.SByte.MaxValue" /> ou inférieur à <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1712">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Short) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(short value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int16 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1713">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1713">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1714">Convertit la valeur de l'entier signé 16 bits spécifié en entier signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1714">Converts the value of the specified 16-bit signed integer to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1715">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1715">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1716">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers 16 bits signés en octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1716">The following example attempts to convert each element in an array of signed 16-bit integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#6)]
 [!code-vb[System.Convert.ToSByte#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1717">
            <paramref name="value" /> est supérieur à <see cref="F:System.SByte.MaxValue" /> ou inférieur à <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1717">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(int value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1718">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1718">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1719">Convertit la valeur de l'entier 32 bits signé spécifié en un entier 8 bits signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1719">Converts the value of the specified 32-bit signed integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1720">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1720">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1721">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers signés en octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1721">The following example attempts to convert each element in an array of signed integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#7)]
 [!code-vb[System.Convert.ToSByte#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1722">
            <paramref name="value" /> est supérieur à <see cref="F:System.SByte.MaxValue" /> ou inférieur à <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1722">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Long) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(long value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : int64 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1723">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1723">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1724">Convertit la valeur de l'entier 64 bits signé spécifié en un entier 8 bits signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1724">Converts the value of the specified 64-bit signed integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1725">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1725">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1726">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers longs en octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1726">The following example attempts to convert each element in an array of long integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#8)]
 [!code-vb[System.Convert.ToSByte#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1727">
            <paramref name="value" /> est supérieur à <see cref="F:System.SByte.MaxValue" /> ou inférieur à <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1727">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Object) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : obj -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1728">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1728">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1729">Convertit la valeur de l'objet spécifié en entier signé 8 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1729">Converts the value of the specified object to an 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1730">Entier signé 8 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1730">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1731">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1731">The return value is the result of invoking the <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1732">L’exemple suivant tente de convertir chaque élément dans un tableau d’objets à un octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1732">The following example attempts to convert each element in an object array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#9)]
 [!code-vb[System.Convert.ToSByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1733">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1733">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1734">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1734">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-1735">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1735">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1736">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1736">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1737">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1737">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : sbyte -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1738">Entier signé 8 bits à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1738">The 8-bit signed integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1739">Retourne l'entier signé 8 bits spécifié. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1739">Returns the specified 8-bit signed integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1740">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1740">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Single) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(float value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : single -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1741">Nombre à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1741">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1742">Convertit la valeur du nombre à virgule flottante simple précision spécifié en entier signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1742">Converts the value of the specified single-precision floating-point number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1743">
            <paramref name="value" />, arrondi à l’entier signé 8 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1743">
              <paramref name="value" />, rounded to the nearest 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="4a36e-1744">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1744">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1745">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Single> valeurs à un octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1745">The following example attempts to convert each element in an array of <xref:System.Single> values to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#9)]
 [!code-vb[System.Convert.ToSByte#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1746">
            <paramref name="value" /> est supérieur à <see cref="F:System.SByte.MaxValue" /> ou inférieur à <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1746">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1747">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1747">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1748">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1748">Converts the specified string representation of a number to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1749">Entier signé 8 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si value est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1749">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1750">À l’aide de la <xref:System.Convert.ToSByte%28System.String%29> méthode équivaut à passer `value` à la <xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1750">Using the <xref:System.Convert.ToSByte%28System.String%29> method is equivalent to passing `value` to the <xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a36e-1751">`value` est interprétée à l'aide des conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1751">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="4a36e-1752">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1752">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1753">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1753">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1754">L’exemple suivant convertit les représentations sous forme de chaîne de <xref:System.SByte> valeurs avec le `ToSByte` méthode, à l’aide de la mise en forme par défaut.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1754">The following example converts string representations of <xref:System.SByte> values with the `ToSByte` method, using default formatting.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/tosbyte.cpp#4)]
 [!code-csharp[System.Convert.ToSInts_String#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/tosbyte.cs#4)]
 [!code-vb[System.Convert.ToSInts_String#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/tosbyte.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1755">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1755">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1756">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1756">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.SByte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As UShort) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint16 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1757">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1757">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1758">Convertit la valeur de l'entier non signé 16 bits spécifié en entier signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1758">Converts the value of the specified 16-bit unsigned integer to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1759">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1759">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1760">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers 16 bits non signés à un octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1760">The following example attempts to convert each element in an array of unsigned 16-bit integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#11)]
 [!code-vb[System.Convert.ToSByte#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1761">
            <paramref name="value" /> est supérieur à <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1761">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As UInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint32 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1762">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1762">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1763">Convertit la valeur de l'entier non signé 32 bits spécifié en entier signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1763">Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1764">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1764">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1765">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers en octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1765">The following example attempts to convert each element in an integer array to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#12)]
 [!code-vb[System.Convert.ToSByte#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1766">
            <paramref name="value" /> est supérieur à <see cref="F:System.SByte.MaxValue" /> ou inférieur à <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1766">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As ULong) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : uint64 -&gt; sbyte" Usage="System.Convert.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1767">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1767">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1768">Convertit la valeur de l'entier non signé 64 bits spécifié en entier signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1768">Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1769">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1769">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1770">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers longs en octet signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1770">The following example attempts to convert each element in an array of long integers to a signed byte.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte1.cs#13)]
 [!code-vb[System.Convert.ToSByte#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1771">
            <paramref name="value" /> est supérieur à <see cref="F:System.SByte.MaxValue" /> ou inférieur à <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1771">
              <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Object, provider As IFormatProvider) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSByte : obj * IFormatProvider -&gt; sbyte" Usage="System.Convert.ToSByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1772">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1772">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1773">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1773">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1774">Convertit la valeur de l'objet spécifié en entier signé 8 bits à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1774">Converts the value of the specified object to an 8-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1775">Entier signé 8 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1775">An 8-bit signed integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1776">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1776">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-1777">Par exemple, si `value` est un <xref:System.String> qui représente un nombre, `provider` peut fournir des informations spécifiques à la culture concernant la notation utilisée pour représenter ce nombre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1777">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="4a36e-1778">Ignorent les types de base `provider`; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1778">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1779">L’exemple suivant définit un `ByteString` classe qui stocke les deux signés et octets en tant que chaînes hexadécimales avec un champ qui indique le signe de l’octet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1779">The following example defines a `ByteString` class that stores both signed and unsigned bytes as hexadecimal strings along with a field that indicates the sign of the byte.</span></span> <span data-ttu-id="4a36e-1780">La classe `ByteString` implémente l'interface <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1780">The `ByteString` class implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4a36e-1781">Son <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> les appels de méthode le <xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29> méthode pour effectuer la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1781">Its <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> method calls the <xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29> method to perform the conversion.</span></span> <span data-ttu-id="4a36e-1782">Si elle échoue, elle lève une <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1782">If it fails, it throws an <xref:System.OverflowException>.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte2.cs#14)]
 [!code-vb[System.Convert.ToSByte#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte2.vb#14)]  
  
 <span data-ttu-id="4a36e-1783">L’exemple suivant montre comment la <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> implémentation de la `ByteString` classe est appelée par le <xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1783">The following example shows how the <xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType> implementation of the `ByteString` class is called by the <xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte2.cs#15)]
 [!code-vb[System.Convert.ToSByte#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1784">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1784">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1785">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1785">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-1786">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1786">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1787">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1787">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1788">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1788">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String, provider As IFormatProvider) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string * IFormatProvider -&gt; sbyte" Usage="System.Convert.ToSByte (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1789">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1789">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1790">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1790">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1791">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier signé 8 bits équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1791">Converts the specified string representation of a number to an equivalent 8-bit signed integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1792">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1792">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1793">`provider` est un <xref:System.IFormatProvider> instance qui obtient un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1793">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-1794">Le <xref:System.Globalization.NumberFormatInfo> objet fournit des informations spécifiques à la culture concernant le format de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1794">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a36e-1795">Si `provider` est `null`, le <xref:System.Globalization.NumberFormatInfo> pour la culture actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1795">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-1796">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1796">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.SByte.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1797">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1797">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1798">L’exemple suivant convertit les représentations sous forme de chaîne de <xref:System.SByte> valeurs avec le `ToSByte` (méthode), à l’aide un <xref:System.IFormatProvider> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1798">The following example converts string representations of <xref:System.SByte> values with the `ToSByte` method, using an <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToSInts_String#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CPP/tosbyte.cpp#4)]
 [!code-csharp[System.Convert.ToSInts_String#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToSInts_String/CS/tosbyte.cs#4)]
 [!code-vb[System.Convert.ToSInts_String#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToSInts_String/VB/tosbyte.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a36e-1799">
            <paramref name="value" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1799">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1800">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1800">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1801">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1801">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.SByte.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSByte(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As String, fromBase As Integer) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string * int -&gt; sbyte" Usage="System.Convert.ToSByte (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1802">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1802">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="4a36e-1803">Base du nombre figurant dans <c>value</c>, qui doit correspondre à 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1803">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1804">Convertit la représentation sous forme de chaîne d'un nombre dans une base spécifiée en entier signé 8 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1804">Converts the string representation of a number in a specified base to an equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1805">Entier signé 8 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1805">An 8-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1806">Si `fromBase` est 16, vous pouvez faire précéder le nombre spécifié par le `value` paramètre avec « 0 x » ou « 0 X ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-1806">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="4a36e-1807">Étant donné que le signe négatif n’est pas pris en charge pour les 10 numériques représentations de base, le <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> méthode part du principe que les nombres négatifs utilisent la représentation de complément à deux.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1807">Because the negative sign is not supported for non-base 10 numeric representations, the <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> method assumes that negative numbers use two’s complement representation.</span></span> <span data-ttu-id="4a36e-1808">En d’autres termes, la méthode interprète toujours le bit de poids fort d’un octet (7 bits) en tant que son bit de signe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1808">In other words, the method always interprets the high-order bit of a byte (bit 7) as its sign bit.</span></span> <span data-ttu-id="4a36e-1809">Par conséquent, il est possible d’écrire du code dans lequel un 10 de base autre numéro qui est en dehors des limites de la <xref:System.SByte> type de données est converti en un <xref:System.SByte> valeur sans la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1809">As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <xref:System.SByte> data type is converted to an <xref:System.SByte> value without the method throwing an exception.</span></span> <span data-ttu-id="4a36e-1810">L’exemple suivant convertit <xref:System.Byte.MaxValue> à sa représentation sous forme de chaîne hexadécimale, puis appelle le <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1810">The following example converts <xref:System.Byte.MaxValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="4a36e-1811">Au lieu de lever une exception, la méthode affiche le message « 0xff est convertie en -1 ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-1811">Instead of throwing an exception, the method displays the message, "0xff converts to -1."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#9)]
 [!code-vb[System.Convert.BaseConversion#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#9)]  
  
 <span data-ttu-id="4a36e-1812">Lorsque vous effectuez des opérations binaires ou conversions numériques, il incombe toujours au développeur de vérifier qu’une méthode utilise la représentation numérique appropriée pour interpréter une valeur particulière.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1812">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="4a36e-1813">Comme l’illustre l’exemple suivant, vous pouvez vous assurer que la méthode gère correctement les dépassements de capacité en déterminant d’abord si une valeur représente un type signé ou lors de sa conversion en sa représentation sous forme de chaîne hexadécimale.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1813">As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</span></span> <span data-ttu-id="4a36e-1814">Lève une exception si la valeur d’origine était un type non signé, mais la conversion en octet signé donne une valeur dont le bit de signe est activé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1814">Throw an exception if the original value was an unsigned type but the conversion back to a signed byte yields a value whose sign bit is on.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#10)]
 [!code-vb[System.Convert.BaseConversion#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#10)]  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1815">L’exemple suivant tente d’interpréter les éléments dans un tableau de chaînes en tant que le fichier binaire, octal et la représentation hexadécimale de valeurs numériques pour les convertir en octets non signés.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1815">The following example attempts to interpret the elements in a string array as the binary, octal, and hexadecimal representation of numeric values in order to convert them to unsigned bytes.</span></span>  
  
 [!code-csharp[System.Convert.ToSByte#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosbyte/cs/tosbyte3.cs#16)]
 [!code-vb[System.Convert.ToSByte#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosbyte/vb/tosbyte3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-1816">
            <paramref name="fromBase" /> n’a pas la valeur 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1816">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="4a36e-1817">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1817">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1818">
            <paramref name="value" />, qui représente un nombre signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1818">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-1819">
            <paramref name="value" /> a la valeur <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1819">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1820">
            <paramref name="value" /> contient un caractère qui n’est pas un chiffre valide dans la base spécifiée par <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1820">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="4a36e-1821">Le message d’exception indique qu’il n’y a pas de chiffres à convertir si le premier caractère dans <paramref name="value" /> n’est pas valide ; sinon, le message indique que <paramref name="value" /> contient des caractères de fin non valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1821">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1822">
            <paramref name="value" />, qui représente un nombre signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1822">
              <paramref name="value" />, which represents a non-base 10 signed number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="4a36e-1823">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1823">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1824">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1824">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSingle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-1825">Convertit une valeur spécifiée en nombre à virgule flottante simple précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1825">Converts a specified value to a single-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Boolean) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(bool value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : bool -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1826">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1826">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1827">Convertit la valeur booléenne spécifiée en nombre à virgule flottante simple précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1827">Converts the specified Boolean value to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1828">Chiffre 1, si <paramref name="value" /> est <see langword="true" /> ; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1828">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1829">L’exemple suivant convertit les valeurs booléennes `true` et `false` à <xref:System.Single> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1829">The following example converts the Boolean values `true` and `false` to <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#1)]
 [!code-vb[System.Convert.ToSingle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Byte) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : byte -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1830">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1830">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1831">Convertit la valeur de l'entier non signé 8 bits spécifié en nombre à virgule flottante simple précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1831">Converts the value of the specified 8-bit unsigned integer to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1832">Nombre à virgule flottante simple précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1832">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1833">L’exemple suivant convertit chaque élément dans un tableau de valeurs d’octets à un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1833">The following example converts each element in an array of byte values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#2)]
 [!code-vb[System.Convert.ToSingle#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Char) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(char value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : char -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1834">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1834">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1835">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1835">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1836">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1836">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1837">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1837">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1838">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1838">This conversion is not supported.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As DateTime) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : DateTime -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1839">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1839">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1840">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1840">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1841">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1841">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-1842">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1842">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1843">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1843">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : decimal -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1844">Nombre décimal à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1844">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1845">Convertit la valeur du nombre décimal spécifié en nombre à virgule flottante simple précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1845">Converts the value of the specified decimal number to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1846">Nombre à virgule flottante simple précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1846">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4a36e-1847">
            <paramref name="value" /> est arrondi selon le principe d’arrondi au plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1847">
              <paramref name="value" /> is rounded using rounding to nearest.</span>
          </span>
          <span data-ttu-id="4a36e-1848">Par exemple, lorsqu'elle est arrondie à deux décimales, la valeur 2,345 devient 2,34 et la valeur 2,355 devient 2,36.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1848">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1849">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.Decimal> valeurs à un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1849">The following example converts each element in an array of <xref:System.Decimal> values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#3)]
 [!code-vb[System.Convert.ToSingle#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Double) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(double value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : double -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1850">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1850">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1851">Convertit la valeur du nombre à virgule flottante double précision spécifié en nombre à virgule flottante simple précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1851">Converts the value of the specified double-precision floating-point number to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1852">Nombre à virgule flottante simple précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1852">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="4a36e-1853">
            <paramref name="value" /> est arrondi selon le principe d’arrondi au plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1853">
              <paramref name="value" /> is rounded using rounding to nearest.</span>
          </span>
          <span data-ttu-id="4a36e-1854">Par exemple, lorsqu'elle est arrondie à deux décimales, la valeur 2,345 devient 2,34 et la valeur 2,355 devient 2,36.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1854">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1855">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.Double> valeurs à un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1855">The following example converts each element in an array of <xref:System.Double> values to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#4)]
 [!code-vb[System.Convert.ToSingle#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Short) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(short value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int16 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1856">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1856">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1857">Convertit la valeur de l'entier signé 16 bits spécifié en nombre à virgule flottante simple précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1857">Converts the value of the specified 16-bit signed integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1858">Nombre à virgule flottante simple précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1858">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1859">L’exemple suivant convertit chaque élément dans un tableau d’entiers 16 bits à un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1859">The following example converts each element in an array of 16-bit integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#5)]
 [!code-vb[System.Convert.ToSingle#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(int value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1860">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1860">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1861">Convertit la valeur de l'entier signé 32 bits spécifié en nombre à virgule flottante simple précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1861">Converts the value of the specified 32-bit signed integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1862">Nombre à virgule flottante simple précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1862">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1863">L’exemple suivant convertit chaque élément dans un tableau d’entiers à une <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1863">The following example converts each element in an integer array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#6)]
 [!code-vb[System.Convert.ToSingle#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Long) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(long value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : int64 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1864">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1864">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1865">Convertit la valeur de l'entier signé 64 bits spécifié en nombre à virgule flottante simple précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1865">Converts the value of the specified 64-bit signed integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1866">Nombre à virgule flottante simple précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1866">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1867">L’exemple suivant convertit chaque élément dans un tableau d’entiers longs un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1867">The following example converts each element in an array of long integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#7)]
 [!code-vb[System.Convert.ToSingle#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Object) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : obj -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1868">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1868">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1869">Convertit la valeur de l'objet spécifié en nombre à virgule flottante simple précision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1869">Converts the value of the specified object to a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1870">Nombre à virgule flottante simple précision qui est équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1870">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1871">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1871">The return value is the result of invoking the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1872">L’exemple suivant essaie de convertir chaque élément dans un tableau d’objets à un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1872">The following example attempts to convert each element in an object array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#8)]
 [!code-vb[System.Convert.ToSingle#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1873">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1873">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1874">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1874">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-1875">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1875">-or-</span>
          </span>
          <span data-ttu-id="4a36e-1876">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1876">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1877">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Single.MinValue" /> ou supérieur à <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1877">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As SByte) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : sbyte -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1878">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1878">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1879">Convertit la valeur de l'entier signé 8 bits spécifié en nombre à virgule flottante simple précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1879">Converts the value of the specified 8-bit signed integer to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1880">Entier signé 8 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1880">An 8-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1881">L’exemple suivant convertit chaque élément dans un tableau d’octets signés un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1881">The following example converts each element in a signed byte array to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#9)]
 [!code-vb[System.Convert.ToSingle#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(float value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : single -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1882">Nombre à virgule flottante simple précision à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1882">The single-precision floating-point number to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1883">Retourne le nombre à virgule flottante simple précision spécifié. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1883">Returns the specified single-precision floating-point number; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1884">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1884">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : string -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1885">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1885">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1886">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en nombre à virgule flottante simple précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1886">Converts the specified string representation of a number to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1887">Nombre à virgule flottante simple précision qui est équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1887">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1888">À l’aide de la <xref:System.Convert.ToSingle%28System.String%29> méthode équivaut à passer `value` à la <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1888">Using the <xref:System.Convert.ToSingle%28System.String%29> method is equivalent to passing `value` to the <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a36e-1889">`value` est interprétée à l'aide des conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1889">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="4a36e-1890">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Single.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1890">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1891">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1891">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1892">L’exemple suivant essaie de convertir chaque élément dans un tableau de chaînes numériques en un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1892">The following example attempts to convert each element in an array of numeric strings to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#10)]
 [!code-vb[System.Convert.ToSingle#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1893">
            <paramref name="value" /> n’est pas un nombre exprimé dans un format valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1893">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1894">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Single.MinValue" /> ou supérieur à <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1894">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As UShort) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint16 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1895">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1895">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1896">Convertit la valeur de l'entier non signé 16 bits spécifié en nombre à virgule flottante simple précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1896">Converts the value of the specified 16-bit unsigned integer to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1897">Nombre à virgule flottante simple précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1897">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1898">L’exemple suivant convertit chaque élément dans un tableau d’entiers 16 bits non signés à un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1898">The following example converts each element in an array of unsigned 16-bit integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#11)]
 [!code-vb[System.Convert.ToSingle#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As UInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint32 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1899">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1899">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1900">Convertit la valeur de l'entier non signé 32 bits spécifié en nombre à virgule flottante simple précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1900">Converts the value of the specified 32-bit unsigned integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1901">Nombre à virgule flottante simple précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1901">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1902">L’exemple suivant convertit chaque élément dans un tableau d’entiers non signés à un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1902">The following example converts each element in an array of unsigned integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#12)]
 [!code-vb[System.Convert.ToSingle#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As ULong) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : uint64 -&gt; single" Usage="System.Convert.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1903">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1903">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1904">Convertit la valeur de l'entier non signé 64 bits spécifié en nombre à virgule flottante simple précision équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1904">Converts the value of the specified 64-bit unsigned integer to an equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1905">Nombre à virgule flottante simple précision équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1905">A single-precision floating-point number that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-1906">L’exemple suivant convertit chaque élément dans un tableau d’entiers longs non signés à un <xref:System.Single> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1906">The following example converts each element in an array of unsigned long integers to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle1.cs#13)]
 [!code-vb[System.Convert.ToSingle#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Object, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSingle : obj * IFormatProvider -&gt; single" Usage="System.Convert.ToSingle (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1907">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1907">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1908">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1908">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1909">Convertit la valeur de l'objet spécifié en nombre à virgule flottante simple précision à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1909">Converts the value of the specified object to an single-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1910">Nombre à virgule flottante simple précision qui est équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1910">A single-precision floating-point number that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1911">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1911">The return value is the result of invoking the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="4a36e-1912">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1912">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-1913">Par exemple, si `value` est un <xref:System.String> qui représente un nombre, `provider` peut fournir des informations spécifiques à la culture concernant la notation utilisée pour représenter ce nombre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1913">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="4a36e-1914">Ignorent les types de base `provider`; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1914">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1915">L'exemple suivant définit une classe `Temperature` qui implémente l'interface <xref:System.IConvertible> .</span><span class="sxs-lookup"><span data-stu-id="4a36e-1915">The following example defines a `Temperature` class that implements the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4a36e-1916">Son implémentation de la <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> méthode retourne la valeur interne de privé <xref:System.Single> variable qui représente la température.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1916">Its implementation of the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> method returns the internal value of a private <xref:System.Single> variable that represents the temperature.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle2.cs#14)]
 [!code-vb[System.Convert.ToSingle#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle2.vb#14)]  
  
 <span data-ttu-id="4a36e-1917">L’exemple suivant illustre comment un appel à la <xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> (méthode), à son tour, appelle le <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> implémentation de la `Temperature` classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1917">The following example illustrates how a call to the <xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method, in turn, calls the <xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType> implementation of the `Temperature` class.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle2.cs#15)]
 [!code-vb[System.Convert.ToSingle#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1918">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1918">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-1919">
            <paramref name="value" /> n’implémente pas <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1919">
              <paramref name="value" /> does not implement <see cref="T:System.IConvertible" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1920">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Single.MinValue" /> ou supérieur à <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1920">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToSingle(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As String, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToSingle : string * IFormatProvider -&gt; single" Usage="System.Convert.ToSingle (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1921">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1921">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-1922">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1922">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1923">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en nombre à virgule flottante simple précision équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1923">Converts the specified string representation of a number to an equivalent single-precision floating-point number, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1924">Nombre à virgule flottante simple précision qui est équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1924">A single-precision floating-point number that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1925">La valeur de retour est le résultat de l’appel de la <xref:System.Single.Parse%2A?displayProperty=nameWithType> méthode sur `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1925">The return value is the result of invoking the <xref:System.Single.Parse%2A?displayProperty=nameWithType> method on `value`.</span></span>  
  
 <span data-ttu-id="4a36e-1926">`provider` est un <xref:System.IFormatProvider> instance qui obtient un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1926">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-1927">Le <xref:System.Globalization.NumberFormatInfo> objet fournit des informations spécifiques à la culture concernant le format de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1927">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a36e-1928">Si `provider` est `null`, le <xref:System.Globalization.NumberFormatInfo> pour la culture actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1928">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-1929">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.Single.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1929">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-1930">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1930">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1931">L’exemple suivant utilise <xref:System.IFormatProvider> objets qui représentent les cultures en-US et fr-FR lorsqu’il convertit les éléments dans un tableau de chaînes numériques <xref:System.Single> valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1931">The following example uses <xref:System.IFormatProvider> objects that represent the en-US and fr-FR cultures when it converts the elements in an array of numeric strings to <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Convert.ToSingle#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tosingle/cs/tosingle3.cs#16)]
 [!code-vb[System.Convert.ToSingle#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tosingle/vb/tosingle3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-1932">
            <paramref name="value" /> n’est pas un nombre exprimé dans un format valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1932">
              <paramref name="value" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-1933">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.Single.MinValue" /> ou supérieur à <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1933">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-1934">Convertit la valeur spécifiée en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1934">Converts the specified value to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value);" />
      <MemberSignature Language="F#" Value="static member ToString : bool -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1935">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1935">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1936">Convertit la valeur booléenne spécifiée en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1936">Converts the specified Boolean value to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1937">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1937">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1938">Cette implémentation est identique à <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1938">This implementation is identical to <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a36e-1939">Elle retourne <xref:System.Boolean.TrueString?displayProperty=nameWithType> pour `true` valeurs et <xref:System.Boolean.FalseString?displayProperty=nameWithType> pour `false` valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1939">It returns <xref:System.Boolean.TrueString?displayProperty=nameWithType> for `true` values and <xref:System.Boolean.FalseString?displayProperty=nameWithType> for `false` values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1940">L’exemple suivant illustre la conversion d’un <xref:System.Boolean> à un <xref:System.String>, à l’aide `ToString`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1940">The following example illustrates the conversion of a <xref:System.Boolean> to a <xref:System.String>, using `ToString`.</span></span> <span data-ttu-id="4a36e-1941">Il illustre également que la chaîne retournée par la conversion est égale à <xref:System.Boolean.TrueString?displayProperty=nameWithType> ou <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1941">It also illustrates that the string returned by the conversion equals either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Convert.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/ToString_Bool1.cs#1)]
 [!code-vb[System.Convert.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/ToString_Bool1.vb#1)]  
 [!code-fsharp[System.Convert.ToString#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.Convert.ToString/fs/ToString_Bool1.fs#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToString : byte -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1942">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1942">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1943">Convertit la valeur de l'entier non signé 8 bits spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1943">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1944">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1944">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1945">Cette implémentation est identique à <xref:System.Byte.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1945">This implementation is identical to <xref:System.Byte.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1946">L’exemple suivant convertit chaque valeur dans un <xref:System.Byte> tableau vers une chaîne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1946">The following example converts each value in a <xref:System.Byte> array to a string.</span></span>  
  
 [!code-csharp[System.Convert.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/ToString.Byte1.cs#3)]
 [!code-vb[System.Convert.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/ToString.Byte1.vb#3)]
 [!code-fsharp[System.Convert.ToString#3](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.Convert.ToString/fs/ToString_Byte1.fs#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1947">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1947">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1948">Convertit la valeur du caractère Unicode spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1948">Converts the value of the specified Unicode character to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1949">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1949">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1950">Cette implémentation est identique à <xref:System.Char.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1950">This implementation is identical to <xref:System.Char.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1951">L’exemple suivant convertit un <xref:System.Char> à un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1951">The following example converts a <xref:System.Char> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#14)]
 [!code-csharp[System.Convert Snippets#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#14)]
 [!code-vb[System.Convert Snippets#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1952">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1952">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1953">Convertit la valeur du <see cref="T:System.DateTime" /> spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1953">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1954">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1954">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1955">Cette implémentation est identique à <xref:System.DateTime.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1955">This implementation is identical to <xref:System.DateTime.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a36e-1956">Il utilise les conventions de mise en forme de la culture actuelle et le spécificateur de format « G » pour convertir un <xref:System.DateTime> valeur à sa représentation sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1956">It uses the formatting conventions of the current culture and the "G" format specifier to convert a <xref:System.DateTime> value to its string representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1957">L’exemple suivant convertit chaque élément dans un tableau d’un <xref:System.DateTime> valeur un <xref:System.String> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1957">The following example converts each element in an array of a <xref:System.DateTime> value to a <xref:System.String> value.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#1)]
 [!code-vb[System.Convert.ToString2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToString : decimal -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1958">Nombre décimal à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1958">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1959">Convertit la valeur du nombre décimal spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1959">Converts the value of the specified decimal number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1960">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1960">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1961">Cette implémentation est identique à <xref:System.Decimal.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1961">This implementation is identical to <xref:System.Decimal.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1962">L’exemple suivant convertit un <xref:System.Decimal> à un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1962">The following example converts a <xref:System.Decimal> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#15)]
 [!code-csharp[System.Convert Snippets#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#15)]
 [!code-vb[System.Convert Snippets#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value);" />
      <MemberSignature Language="F#" Value="static member ToString : double -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1963">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1963">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1964">Convertit la valeur du nombre à virgule flottante double précision spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1964">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1965">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1965">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1966">Cette implémentation est identique à <xref:System.Double.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1966">This implementation is identical to <xref:System.Double.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1967">L’exemple suivant convertit un <xref:System.Double> à un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1967">The following example converts a <xref:System.Double> to a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Convert Snippets#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert Snippets/CPP/system.convert snippet.cpp#7)]
 [!code-csharp[System.Convert Snippets#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert Snippets/CS/system.convert snippet.cs#7)]
 [!code-vb[System.Convert Snippets#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert Snippets/VB/system.convert snippet.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1968">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1968">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1969">Convertit la valeur de l'entier signé 16 bits spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1969">Converts the value of the specified 16-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1970">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1970">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1971">Cette implémentation est identique à <xref:System.Int16.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1971">This implementation is identical to <xref:System.Int16.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1972">L’exemple suivant convertit chaque élément dans un tableau d’entiers 16 bits en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1972">The following example converts each element in an array of 16-bit integers to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#2)]
 [!code-vb[System.Convert.ToString2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value);" />
      <MemberSignature Language="F#" Value="static member ToString : int -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1973">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1973">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1974">Convertit la valeur de l'entier signé 32 bits spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1974">Converts the value of the specified 32-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1975">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1975">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1976">Cette implémentation est identique à <xref:System.Int32.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1976">This implementation is identical to <xref:System.Int32.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a36e-1977">Il met en forme `value` en utilisant les conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1977">It formats `value` by using the formatting conventions of the current thread culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1978">L’exemple suivant compare le <xref:System.Convert.ToString%28System.Int32%29> méthode avec le <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-1978">The following example compares the <xref:System.Convert.ToString%28System.Int32%29> method with the <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="4a36e-1979">Il définit un personnalisé <xref:System.Globalization.NumberFormatInfo> objet qui utilise la chaîne « moins » pour représenter le signe négatif.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1979">It defines a custom <xref:System.Globalization.NumberFormatInfo> object that uses the sting "minus" to represent the negative sign.</span></span> <span data-ttu-id="4a36e-1980">Il convertit chaque élément dans un tableau d’entiers en sa représentation sous forme de chaîne équivalente à l’aide de la mise en forme de valeur par défaut (les conventions de mise en forme de la culture actuelle) et le fournisseur de format personnalisé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1980">It converts each element in an integer array to its equivalent string representation using default formatting (the formatting conventions of the current culture) and the custom format provider.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring7.cs#27)]
 [!code-vb[System.Convert.ToString2#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring7.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1981">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1981">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1982">Convertit la valeur de l'entier signé 64 bits spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1982">Converts the value of the specified 64-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1983">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1983">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1984">Cette implémentation est identique à <xref:System.Int64.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1984">This implementation is identical to <xref:System.Int64.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1985">L’exemple suivant convertit chaque élément dans un tableau d’entiers longs en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1985">The following example converts each element in a long integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring6.cs#28)]
 [!code-vb[System.Convert.ToString2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring6.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : obj -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1986">Objet qui fournit la valeur à convertir, ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1986">An object that supplies the value to convert, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1987">Convertit la valeur de l'objet spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1987">Converts the value of the specified object to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1988">Représentation sous forme de chaîne de <paramref name="value" /> ou <see cref="F:System.String.Empty" /> si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1988">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1989">Pour convertir `value` à sa représentation sous forme de chaîne, la méthode tente d’appeler le <xref:System.IConvertible.ToString%2A?displayProperty=nameWithType> implémentation de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1989">To convert `value` to its string representation, the method tries to call the <xref:System.IConvertible.ToString%2A?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="4a36e-1990">Si `value` n’implémente pas le <xref:System.IConvertible> interface, la méthode tente d’appeler le <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implémentation de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1990">If `value` does not implement the <xref:System.IConvertible> interface, the method tries to call the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="4a36e-1991">Si la valeur n’implémente pas le <xref:System.IFormattable> interface, les appels de méthode le `ToString` méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1991">If value does not implement the <xref:System.IFormattable> interface, the method calls the `ToString` method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1992">L’exemple suivant convertit chaque élément dans un tableau d’objets en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1992">The following example converts each element in an object array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#3)]
 [!code-vb[System.Convert.ToString2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToString : sbyte -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1993">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1993">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1994">Convertit la valeur de l'entier signé 8 bits spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1994">Converts the value of the specified 8-bit signed integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-1995">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1995">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-1996">Cette implémentation est identique à <xref:System.SByte.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1996">This implementation is identical to <xref:System.SByte.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-1997">L’exemple suivant convertit chaque élément dans un tableau d’octets signés en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-1997">The following example converts each element in a signed byte array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#4)]
 [!code-vb[System.Convert.ToString2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value);" />
      <MemberSignature Language="F#" Value="static member ToString : single -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-1998">Nombre à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1998">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-1999">Convertit la valeur du nombre à virgule flottante simple précision spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-1999">Converts the value of the specified single-precision floating-point number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2000">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2000">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2001">Cette implémentation est identique à <xref:System.Single.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2001">This implementation is identical to <xref:System.Single.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2002">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.Single> valeurs à sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2002">The following example converts each element in an array of <xref:System.Single> values to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#5)]
 [!code-vb[System.Convert.ToString2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : string -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2003">Chaîne à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2003">The string to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2004">Retourne l'instance de chaîne spécifiée. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2004">Returns the specified string instance; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2005">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2005">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2006">L’exemple suivant passe une chaîne à la <xref:System.Convert.ToString%28System.String%29> méthode et appelle le <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> méthode pour vérifier que la méthode retourne la chaîne d’origine.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2006">The following example passes a string to the <xref:System.Convert.ToString%28System.String%29> method and calls the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to confirm that the method returns the original string.</span></span> <span data-ttu-id="4a36e-2007">L’exemple appelle également la <xref:System.String.IsInterned%2A?displayProperty=nameWithType> méthode pour vous assurer que les deux chaînes ne sont pas identiques, car la chaîne d’origine est dans le pool interne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2007">The example also calls the <xref:System.String.IsInterned%2A?displayProperty=nameWithType> method to ensure that the two strings are not identical because the original string is interned.</span></span>  
  
 [!code-csharp[System.Convert.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString/cs/tostring_string1.cs#2)]
 [!code-vb[System.Convert.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString/vb/tostring_string1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint16 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2008">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2008">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2009">Convertit la valeur de l'entier non signé 16 bits spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2009">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2010">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2010">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2011">Cette implémentation est identique à <xref:System.UInt16.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2011">This implementation is identical to <xref:System.UInt16.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2012">L’exemple suivant convertit chaque élément dans un tableau de valeurs de l’entier non signé de 16 bits en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2012">The following example converts each element in an array of unsigned 16-bit integer values to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#6)]
 [!code-vb[System.Convert.ToString2#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint32 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2013">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2013">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2014">Convertit la valeur de l'entier non signé 32 bits spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2014">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2015">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2015">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2016">Cette implémentation est identique à <xref:System.UInt32.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2016">This implementation is identical to <xref:System.UInt32.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2017">L’exemple suivant convertit chaque élément dans un tableau d’entiers non signés en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2017">The following example converts each element in an unsigned integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#7)]
 [!code-vb[System.Convert.ToString2#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint64 -&gt; string" Usage="System.Convert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2018">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2018">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2019">Convertit la valeur de l'entier non signé 64 bits spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2019">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2020">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2020">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2021">Cette implémentation est identique à <xref:System.UInt64.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2021">This implementation is identical to <xref:System.UInt64.ToString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2022">L’exemple suivant convertit chaque élément dans un tableau entier long non signé en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2022">The following example converts each element in an unsigned long integer array to its equivalent string representation.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring1.cs#8)]
 [!code-vb[System.Convert.ToString2#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : bool * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2023">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2023">The Boolean value to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2024">Instance d'un objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2024">An instance of an object.</span>
          </span>
          <span data-ttu-id="4a36e-2025">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2025">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2026">Convertit la valeur booléenne spécifiée en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2026">Converts the specified Boolean value to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2027">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2027">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2028">Cette implémentation est identique à <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2028">This implementation is identical to <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a36e-2029">Elle retourne <xref:System.Boolean.TrueString?displayProperty=nameWithType> pour `true` valeurs et <xref:System.Boolean.FalseString?displayProperty=nameWithType> pour `false` valeurs.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2029">It returns <xref:System.Boolean.TrueString?displayProperty=nameWithType> for `true` values and <xref:System.Boolean.FalseString?displayProperty=nameWithType> for `false` values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2030">L’exemple suivant convertit un <xref:System.Boolean> valeur un <xref:System.String> avec la `ToString` (méthode), à l’aide un <xref:System.IFormatProvider> objet qui affiche le type du fournisseur de format pour lequel il est appelé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2030">The following example converts a <xref:System.Boolean> value to a <xref:System.String> with the `ToString` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="4a36e-2031">L’exemple montre que le <xref:System.IFormatProvider> objet n’est pas référencé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2031">The example shows that the <xref:System.IFormatProvider> object is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : byte * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2032">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2032">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2033">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2033">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2034">Convertit la valeur de l'entier non signé 8 bits spécifié en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2034">Converts the value of the specified 8-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2035">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2035">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2036">Cette implémentation est identique à <xref:System.Byte.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2036">This implementation is identical to <xref:System.Byte.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2037">L’exemple suivant convertit chaque élément dans un tableau d’octets non signés en sa représentation sous forme de chaîne équivalente à l’aide des conventions de mise en forme des cultures en-US et fr-FR.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2037">The following example converts each element in an unsigned byte array to its equivalent string representation using the formatting conventions of the en-US and fr-FR cultures.</span></span> <span data-ttu-id="4a36e-2038">Étant donné que le spécificateur « G » par défaut génère uniquement des chiffres décimaux dans la représentation sous forme de chaîne d’une valeur d’octet, le `provider` paramètre n’affecte pas la mise en forme de la chaîne retournée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2038">Because the "G" specifier by default outputs only decimal digits in a byte value's string representation, the `provider` parameter does not affect the formatting of the returned string.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#16)]
 [!code-vb[System.Convert.ToString2#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Byte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : byte * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2039">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2039">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="4a36e-2040">Base de la valeur de retour, qui doit être 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2040">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2041">Convertit la valeur d'un entier non signé 8 bits en sa représentation sous forme de chaîne équivalente dans une base spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2041">Converts the value of an 8-bit unsigned integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2042">Représentation sous forme de chaîne de <paramref name="value" /> en base <paramref name="toBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2042">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2043">Si `toBase` n’est pas égale 10, la chaîne retournée par la <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType> méthode représente `value` par sa grandeur uniquement.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2043">If `toBase` does not equal 10, the string that is returned by the <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType> method represents `value` by its magnitude only.</span></span> <span data-ttu-id="4a36e-2044">Si la méthode est appelée pour créer une chaîne qui sera plus tard être reconvertie en un nombre, une méthode correspondante qui suppose une représentation numérique de grandeur uniquement doit être appelée pour effectuer la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2044">If the method is called to create a string that will later be converted back to a number, a corresponding method that assumes a magnitude-only numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="4a36e-2045">Ces méthodes incluent <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> ou <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2045">Such methods include <xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2046">L’exemple suivant convertit chaque élément dans un tableau d’octets en ses représentations sous forme de chaîne binaire, hexadécimale, décimal et hexadécimal équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2046">The following example converts each element in a byte array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#9)]
 [!code-vb[System.Convert.ToString2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#9)]
 [!code-fsharp[System.Convert.ToString2#9](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-2047">
            <paramref name="toBase" /> n’a pas la valeur 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2047">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Char,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : char * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2048">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2048">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2049">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2049">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="4a36e-2050">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2050">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2051">Convertit la valeur du caractère Unicode spécifié en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2051">Converts the value of the specified Unicode character to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2052">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2052">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2053">Cette implémentation est identique à <xref:System.Char.ToString?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2053">This implementation is identical to <xref:System.Char.ToString?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a36e-2054">Le `provider` paramètre est ignoré.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2054">The `provider` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2055">L’exemple suivant convertit un <xref:System.Char> valeur un <xref:System.String> avec la `ToString` (méthode), à l’aide un <xref:System.IFormatProvider> objet qui affiche le type du fournisseur de format pour lequel il est appelé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2055">The following example converts a <xref:System.Char> value to a <xref:System.String> with the `ToString` method, using an <xref:System.IFormatProvider> object that displays the type of the format provider for which it is called.</span></span> <span data-ttu-id="4a36e-2056">L’exemple montre que le <xref:System.IFormatProvider> objet n’est pas référencé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2056">The example shows that the <xref:System.IFormatProvider> object is not referenced.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2057">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2057">The date and time value to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2058">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2058">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2059">Convertit la valeur du <see cref="T:System.DateTime" /> spécifié en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2059">Converts the value of the specified <see cref="T:System.DateTime" /> to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2060">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2060">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2061">Cette implémentation est identique à <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2061">This implementation is identical to <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2062">L’exemple suivant convertit un <xref:System.DateTime> valeur à sa représentation sous forme de chaîne équivalente dans huit cultures différentes.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2062">The following example converts a <xref:System.DateTime> value to its equivalent string representation in eight different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#13)]
 [!code-vb[System.Convert.ToString2#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : decimal * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2063">Nombre décimal à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2063">The decimal number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2064">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2064">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2065">Convertit la valeur du nombre décimal spécifié en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2065">Converts the value of the specified decimal number to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2066">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2066">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2067">Cette implémentation est identique à <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2067">This implementation is identical to <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2068">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.Decimal> valeurs à sa représentation sous forme de chaîne équivalente dans quatre cultures différentes.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2068">The following example converts each element in an array of <xref:System.Decimal> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#14)]
 [!code-vb[System.Convert.ToString2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Double,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : double * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2069">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2069">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2070">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2070">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2071">Convertit la valeur du nombre à virgule flottante double précision spécifié en sa représentation sous forme de chaîne équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2071">Converts the value of the specified double-precision floating-point number to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2072">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2072">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2073">Cette implémentation est identique à <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4a36e-2073">This implementation is identical to <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2074">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.Double> valeurs à sa représentation sous forme de chaîne équivalente dans quatre cultures différentes.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2074">The following example converts each element in an array of <xref:System.Double> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#15)]
 [!code-vb[System.Convert.ToString2#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2075">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2075">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2076">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2076">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2077">Convertit la valeur de l'entier signé 16 bits spécifié en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2077">Converts the value of the specified 16-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2078">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2078">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2079">Cette implémentation est identique à <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2079">This implementation is identical to <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2080">L’exemple suivant définit un personnalisé <xref:System.Globalization.NumberFormatInfo> classe qui définit son signe négatif en tant que la chaîne « ~ « et son signe positif en tant que la chaîne » ! ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-2080">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="4a36e-2081">Il appelle ensuite la <xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29> méthode pour convertir chaque élément dans un tableau d’entiers 16 bits en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2081">It then calls the <xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29> method to convert each element in an array of 16-bit integers to its equivalent string representation.</span></span> <span data-ttu-id="4a36e-2082">La conversion utilise la culture dite indifférente, ainsi que le custom <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2082">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#19)]
 [!code-vb[System.Convert.ToString2#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2083">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2083">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="4a36e-2084">Base de la valeur de retour, qui doit être 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2084">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2085">Convertit la valeur d'un entier signé 16 bits en sa représentation sous forme de chaîne équivalente dans une base spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2085">Converts the value of a 16-bit signed integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2086">Représentation sous forme de chaîne de <paramref name="value" /> en base <paramref name="toBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2086">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2087">Si `value` est un nombre positif et `toBase` est 2, 8 ou 16, la chaîne retournée utilise la représentation sous forme de signe et magnitude.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2087">If `value` is positive and `toBase` is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="4a36e-2088">Si `value` est négatif et `toBase` est 2, 8 ou 16, la chaîne retournée utilise la représentation de complément à deux.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2088">If `value` is negative and `toBase` is 2, 8, or 16, the returned string uses two's complement representation.</span></span> <span data-ttu-id="4a36e-2089">Cela signifie que le bit de poids fort de l’octet de poids fort (bit 15) est interprété comme le bit de signe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2089">This means that the high-order bit of the high-order byte (bit 15) is interpreted as the sign bit.</span></span> <span data-ttu-id="4a36e-2090">Si le <xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> méthode est appelée pour créer une chaîne qui sera plus tard être reconvertie en un nombre, une méthode correspondante qui suppose une représentation numérique semblable doit être appelée pour effectuer la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2090">If the <xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="4a36e-2091">Ces méthodes incluent <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> et <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2091">Such methods include <xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2092">L’exemple suivant convertit chaque élément dans un tableau d’entiers signés 16 bits en ses représentations sous forme de chaîne binaire, octal, décimal et hexadécimal équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2092">The following example converts each element in an array of 16-bit signed integers to its equivalent binary, octal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#10)]
 [!code-vb[System.Convert.ToString2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#10)]
 [!code-fsharp[System.Convert.ToString2#10](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-2093">
            <paramref name="toBase" /> n’a pas la valeur 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2093">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2094">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2094">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2095">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2095">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2096">Convertit la valeur de l'entier signé 32 bits spécifié en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2096">Converts the value of the specified 32-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2097">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2097">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2098">Cette implémentation est identique à <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2098">This implementation is identical to <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2099">L’exemple suivant définit un personnalisé <xref:System.Globalization.NumberFormatInfo> classe qui définit son signe négatif en tant que la chaîne « ~ « et son signe positif en tant que la chaîne » ! ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-2099">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="4a36e-2100">Il appelle ensuite la <xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29> méthode pour convertir chaque élément dans un tableau d’entiers en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2100">It then calls the <xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29> method to convert each element in an array of integers to its equivalent string representation.</span></span> <span data-ttu-id="4a36e-2101">La conversion utilise la culture dite indifférente, ainsi que le custom <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2101">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#20)]
 [!code-vb[System.Convert.ToString2#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2102">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2102">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="4a36e-2103">Base de la valeur de retour, qui doit être 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2103">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2104">Convertit la valeur d'un entier signé 32 bits en sa représentation sous forme de chaîne équivalente dans une base spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2104">Converts the value of a 32-bit signed integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2105">Représentation sous forme de chaîne de <paramref name="value" /> en base <paramref name="toBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2105">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2106">Si `value` est un nombre positif et `toBase` est 2, 8 ou 16, la chaîne retournée utilise la représentation sous forme de signe et magnitude.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2106">If `value` is positive and `toBase` is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="4a36e-2107">Si `value` est négatif et `toBase` est 2, 8 ou 16, la chaîne retournée utilise la représentation de complément à deux.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2107">If `value` is negative and `toBase` is 2, 8, or 16, the returned string uses two's complement representation.</span></span> <span data-ttu-id="4a36e-2108">Cela signifie que le bit de poids fort de l’octet de poids le plus élevé (bit 31) est interprété comme le bit de signe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2108">This means that the high-order bit of the highest-order byte (bit 31) is interpreted as the sign bit.</span></span> <span data-ttu-id="4a36e-2109">Si le <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> méthode est appelée pour créer une chaîne qui sera plus tard être reconvertie en un nombre, une méthode correspondante qui suppose une représentation numérique semblable doit être appelée pour effectuer la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2109">If the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="4a36e-2110">Ces méthodes incluent <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> et <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2110">Such methods include <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2111">L’exemple suivant convertit chaque élément dans un tableau d’entiers en ses représentations sous forme de chaîne binaire, hexadécimale, décimal et hexadécimal équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2111">The following example converts each element in an integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#11)]
 [!code-vb[System.Convert.ToString2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#11)]
 [!code-fsharp[System.Convert.ToString2#11](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-2112">
            <paramref name="toBase" /> n’a pas la valeur 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2112">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2113">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2113">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2114">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2114">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2115">Convertit la valeur de l'entier signé 64 bits spécifié en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2115">Converts the value of the specified 64-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2116">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2116">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2117">Cette implémentation est identique à <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2117">This implementation is identical to <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2118">L’exemple suivant définit un personnalisé <xref:System.Globalization.NumberFormatInfo> classe qui définit son signe négatif en tant que la chaîne « ~ « et son signe positif en tant que la chaîne » ! ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-2118">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="4a36e-2119">Il appelle ensuite la <xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29> méthode pour convertir chaque élément dans un tableau d’entiers longs en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2119">It then calls the <xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29> method to convert each element in a long integer array to its equivalent string representation.</span></span> <span data-ttu-id="4a36e-2120">La conversion utilise la culture dite indifférente, ainsi que le custom <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2120">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#21)]
 [!code-vb[System.Convert.ToString2#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value, int toBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value, int32 toBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long, toBase As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value, int toBase);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 * int -&gt; string" Usage="System.Convert.ToString (value, toBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="toBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2121">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2121">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="toBase">
          <span data-ttu-id="4a36e-2122">Base de la valeur de retour, qui doit être 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2122">The base of the return value, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2123">Convertit la valeur d'un entier signé 64 bits en sa représentation sous forme de chaîne équivalente dans une base spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2123">Converts the value of a 64-bit signed integer to its equivalent string representation in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2124">Représentation sous forme de chaîne de <paramref name="value" /> en base <paramref name="toBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2124">The string representation of <paramref name="value" /> in base <paramref name="toBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2125">Si `value` est un nombre positif et `toBase` n’est pas 10, la chaîne retournée utilise la représentation sous forme de signe et magnitude.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2125">If `value` is positive and `toBase` is not 10, the returned string uses sign-and-magnitude representation.</span></span> <span data-ttu-id="4a36e-2126">Si `value` est négatif et `toBase` n’est pas 10, la chaîne retournée utilise la représentation de complément à deux.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2126">If `value` is negative and `toBase` is not 10, the returned string uses two's complement representation.</span></span> <span data-ttu-id="4a36e-2127">Cela signifie que le bit de poids fort de l’octet de poids le plus élevé (bit 63) est interprété comme le bit de signe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2127">This means that the high-order bit of the highest-order byte (bit 63) is interpreted as the sign bit.</span></span> <span data-ttu-id="4a36e-2128">Si le <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> méthode est appelée pour créer une chaîne qui sera plus tard être reconvertie en un nombre, une méthode correspondante qui suppose une représentation numérique semblable doit être appelée pour effectuer la conversion.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2128">If the <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</span></span> <span data-ttu-id="4a36e-2129">Ces méthodes incluent <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> et <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2129">Such methods include <xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> and <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2130">L’exemple suivant convertit chaque élément dans un tableau d’entiers longs en ses représentations sous forme de chaîne binaire, hexadécimale, décimal et hexadécimal équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2130">The following example converts each element in a long integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring2.cs#12)]
 [!code-vb[System.Convert.ToString2#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring2.vb#12)]  
 [!code-fsharp[System.Convert.ToString2#12](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.convert.tostring2/fs/tostring2.fs#12)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-2131">
            <paramref name="toBase" /> n’a pas la valeur 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2131">
              <paramref name="toBase" /> is not 2, 8, 10, or 16.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Object, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : obj * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2132">Objet qui fournit la valeur à convertir, ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2132">An object that supplies the value to convert, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2133">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2133">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2134">Convertit la valeur de l'objet spécifié en représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2134">Converts the value of the specified object to its equivalent string representation using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2135">La représentation sous forme de chaîne de <paramref name="value" />, ou <see cref="F:System.String.Empty" /> si la valeur <paramref name="value" /> est un objet dont la valeur est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2135">The string representation of <paramref name="value" />, or <see cref="F:System.String.Empty" /> if <paramref name="value" /> is an object whose value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4a36e-2136">Si <paramref name="value" /> est <see langword="null" />, la méthode retourne <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2136">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2137">Si le `value` paramètre implémente la <xref:System.IConvertible> interface, les appels de méthode le <xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> implémentation de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2137">If the `value` parameter implements the <xref:System.IConvertible> interface, the method calls the <xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> implementation of `value`.</span></span> <span data-ttu-id="4a36e-2138">Sinon, si le `value` paramètre implémente la <xref:System.IFormattable> interface, les appels de méthode son <xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2138">Otherwise, if the `value` parameter implements the <xref:System.IFormattable> interface, the method calls its <xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="4a36e-2139">Si `value` n’implémente aucune interface, les appels de méthode le `value` du paramètre `ToString()` (méthode) et le `provider` paramètre est ignoré.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2139">If `value` implements neither interface, the method calls the `value` parameter's `ToString()` method, and the `provider` parameter is ignored.</span></span>  
  
 <span data-ttu-id="4a36e-2140">Le `provider` paramètre est utilisé si le `value` paramètre implémente la <xref:System.IConvertible> ou <xref:System.IFormattable> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2140">The `provider` parameter is used if the `value` parameter implements the <xref:System.IConvertible> or <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="4a36e-2141">L’utilisation la plus courante de la `provider` paramètre consiste à spécifier des informations spécifiques à la culture utilisées dans la conversion de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2141">The most common use of the `provider` parameter is to specify culture-specific information used in the conversion of `value`.</span></span> <span data-ttu-id="4a36e-2142">Par exemple, si le `value` paramètre est un nombre décimal négatif, le `provider` paramètre peut fournir des informations spécifiques à la culture concernant la notation utilisée pour le signe négatif et le séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2142">For example, if the `value` parameter is a negative decimal number, the `provider` parameter can supply culture-specific information about the notation used for the negative sign and decimal separator.</span></span> <span data-ttu-id="4a36e-2143">Le deuxième exemple dans la section suivante illustre un fournisseur de format qui ne fournit pas les informations de mise en forme dépendante de la culture.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2143">The second example in the next section illustrates a format provider that does not supply culture-sensitive formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2144">L’exemple suivant définit un `Temperature` classe qui remplace le <xref:System.Object.ToString%2A?displayProperty=nameWithType> méthode mais n’implémente pas le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2144">The following example defines a `Temperature` class that overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method but does not implement the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4a36e-2145">L’exemple illustre comment les appels à la <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> à son tour, appel de méthode, le `Temperature.ToString` (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-2145">The example illustrates how calls to the <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method, in turn, call the `Temperature.ToString` method.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring5.cs#26)]
 [!code-vb[System.Convert.ToString2#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring5.vb#26)]  
  
 <span data-ttu-id="4a36e-2146">L’exemple suivant définit un `Temperature` classe qui implémente le <xref:System.IFormattable> interface mais n’implémente pas le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2146">The following example defines a `Temperature` class that implements the <xref:System.IFormattable> interface but does not implement the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4a36e-2147">Son <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implémentation représente le `Temperature` valeur en degrés Celsius, Fahrenheit ou Kelvin, en fonction de la chaîne de format.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2147">Its <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation represents the `Temperature` value in Celsius, Fahrenheit, or Kelvin, depending on the format  string.</span></span> <span data-ttu-id="4a36e-2148">L’exemple définit également un `TemperatureProvider` classe qui implémente <xref:System.IFormatProvider> et fournit une chaîne de format généré de manière aléatoire qui est utilisée par le <xref:System.IFormattable> implémentation de la `Temperature` classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2148">The example also defines a `TemperatureProvider` class that implements <xref:System.IFormatProvider> and provides a randomly generated format string that is used by the <xref:System.IFormattable> implementation of the `Temperature` class.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring_obj30.cs#30)]
 [!code-vb[System.Convert.ToString2#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring_obj30.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.SByte,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : sbyte * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2149">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2149">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2150">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2150">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2151">Convertit la valeur de l'entier signé 8 bits spécifié en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2151">Converts the value of the specified 8-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2152">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2152">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2153">Cette implémentation est identique à <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2153">This implementation is identical to <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2154">L’exemple suivant définit un personnalisé <xref:System.Globalization.NumberFormatInfo> classe qui définit son signe négatif en tant que la chaîne « ~ « et son signe positif en tant que la chaîne » ! ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-2154">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="4a36e-2155">Il appelle ensuite la <xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType> méthode pour convertir chaque élément dans un tableau d’octets signés en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2155">It then calls the <xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method to convert each element in signed byte array to its equivalent string representation.</span></span> <span data-ttu-id="4a36e-2156">La conversion utilise la culture dite indifférente, ainsi que le custom <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2156">The conversion uses the invariant culture as well as the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#17)]
 [!code-vb[System.Convert.ToString2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.Single,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : single * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2157">Nombre à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2157">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2158">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2158">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2159">Convertit la valeur du nombre à virgule flottante simple précision spécifié en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2159">Converts the value of the specified single-precision floating-point number to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2160">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2160">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2161">Cette implémentation est identique à <xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2161">This implementation is identical to <xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2162">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.Single> valeurs à sa représentation sous forme de chaîne équivalente dans quatre cultures différentes.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2162">The following example converts each element in an array of <xref:System.Single> values to its equivalent string representation in four different cultures.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#18)]
 [!code-vb[System.Convert.ToString2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : string * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2163">Chaîne à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2163">The string to return.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2164">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2164">An object that supplies culture-specific formatting information.</span>
          </span>
          <span data-ttu-id="4a36e-2165">Ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2165">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2166">Retourne l'instance de chaîne spécifiée. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2166">Returns the specified string instance; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2167">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2167">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2168">L’exemple suivant appelle la `ToString` méthode avec un <xref:System.String> paramètre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2168">The following example calls the `ToString` method with a <xref:System.String> parameter.</span></span> <span data-ttu-id="4a36e-2169">La méthode retourne non modifiée <xref:System.String> sans faire référence à la <xref:System.IFormatProvider> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2169">The method returns the unmodified <xref:System.String> without referencing the <xref:System.IFormatProvider> object.</span></span>  
  
 [!code-cpp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CPP/nonnumeric.cpp#2)]
 [!code-csharp[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/CS/nonnumeric.cs#2)]
 [!code-vb[System.Convert.ToString.IFormatProvider#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.ToString.IFormatProvider/VB/nonnumeric.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint16 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2170">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2170">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2171">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2171">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2172">Convertit la valeur de l'entier non signé 16 bits spécifié en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2172">Converts the value of the specified 16-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2173">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2173">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2174">Cette implémentation est identique à <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2174">This implementation is identical to <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2175">L’exemple suivant définit un personnalisé <xref:System.Globalization.NumberFormatInfo> classe qui définit son signe négatif en tant que la chaîne « ~ « et son signe positif en tant que la chaîne » ! ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-2175">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="4a36e-2176">Il appelle ensuite la <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> méthode pour convertir une valeur d’entier non signé 16 bits en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2176">It then calls the <xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29> method to convert a 16-bit unsigned integer value to its equivalent string representation.</span></span> <span data-ttu-id="4a36e-2177">La conversion utilise la culture dite indifférente et personnalisé <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2177">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-2178">La sortie indique que ces informations de mise en forme ne sont pas utilisées, car par défaut, le spécificateur de format « G » n’inclut pas de signe positif avec les valeurs positives.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2178">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#22)]
 [!code-vb[System.Convert.ToString2#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint32 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2179">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2179">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2180">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2180">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2181">Convertit la valeur de l'entier non signé 32 bits spécifié en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2181">Converts the value of the specified 32-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2182">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2182">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2183">Cette implémentation est identique à <xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2183">This implementation is identical to <xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2184">L’exemple suivant définit un personnalisé <xref:System.Globalization.NumberFormatInfo> classe qui définit son signe négatif en tant que la chaîne « ~ « et son signe positif en tant que la chaîne » ! ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-2184">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="4a36e-2185">Il appelle ensuite la <xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29> méthode pour convertir une valeur d’entier non signé en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2185">It then calls the <xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29> method to convert an unsigned integer value to its equivalent string representation.</span></span> <span data-ttu-id="4a36e-2186">La conversion utilise la culture dite indifférente et personnalisé <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2186">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-2187">La sortie indique que ces informations de mise en forme ne sont pas utilisées, car par défaut, le spécificateur de format « G » n’inclut pas de signe positif avec les valeurs positives.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2187">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#23)]
 [!code-vb[System.Convert.ToString2#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToString : uint64 * IFormatProvider -&gt; string" Usage="System.Convert.ToString (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2188">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2188">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2189">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2189">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2190">Convertit la valeur de l'entier non signé 64 bits spécifié en sa représentation sous forme de chaîne équivalente à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2190">Converts the value of the specified 64-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2191">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2191">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2192">Cette implémentation est identique à <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2192">This implementation is identical to <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2193">L’exemple suivant définit un personnalisé <xref:System.Globalization.NumberFormatInfo> classe qui définit son signe négatif en tant que la chaîne « ~ « et son signe positif en tant que la chaîne » ! ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-2193">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> class that defines its negative sign as the string "~" and its positive sign as the string "!".</span></span> <span data-ttu-id="4a36e-2194">Il appelle ensuite la <xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29> méthode pour convertir une valeur d’entier long non signé en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2194">It then calls the <xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29> method to convert an unsigned long integer value to its equivalent string representation.</span></span> <span data-ttu-id="4a36e-2195">La conversion utilise la culture dite indifférente et personnalisé <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2195">The conversion uses both the invariant culture and the custom <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-2196">La sortie indique que ces informations de mise en forme ne sont pas utilisées, car par défaut, le spécificateur de format « G » n’inclut pas de signe positif avec les valeurs positives.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2196">The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</span></span>  
  
 [!code-csharp[System.Convert.ToString2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tostring2/cs/tostring3.cs#24)]
 [!code-vb[System.Convert.ToString2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tostring2/vb/tostring3.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-2197">Convertit une valeur spécifiée en entier non signé 16 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2197">Converts a specified value to a 16-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Boolean) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : bool -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2198">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2198">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2199">Convertit la valeur booléenne spécifiée en entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2199">Converts the specified Boolean value to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2200">Chiffre 1, si <paramref name="value" /> est <see langword="true" /> ; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2200">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2201">L’exemple suivant convertit les valeurs booléennes `true` et `false` à des entiers 16 bits non signés.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2201">The following example converts the Boolean values `true` and `false` to unsigned 16-bit integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Convert.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Byte) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : byte -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2202">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2202">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2203">Convertit la valeur de l'entier non signé 8 bits spécifié en l'entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2203">Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2204">Entier non signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2204">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2205">L’exemple suivant convertit chaque élément dans un tableau d’octets en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2205">The following example converts each element in a byte array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#2)]
 [!code-vb[System.Convert.ToUInt16#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Char) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : char -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2206">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2206">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2207">Convertit la valeur du caractère Unicode spécifié en entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2207">Converts the value of the specified Unicode character to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2208">Entier non signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2208">The 16-bit unsigned integer equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2209">L’exemple suivant convertit chaque élément dans un tableau de caractères en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2209">The following example converts each element in a character array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#3)]
 [!code-vb[System.Convert.ToUInt16#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As DateTime) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : DateTime -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2210">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2210">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2211">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2211">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2212">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2212">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-2213">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2213">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-2214">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2214">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : decimal -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2215">Nombre décimal à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2215">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2216">Convertit la valeur du nombre décimal spécifié en entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2216">Converts the value of the specified decimal number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2217">
            <paramref name="value" />, arrondi à l’entier non signé 16 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2217">
              <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="4a36e-2218">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2218">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2219">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.Decimal> valeurs en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2219">The following example converts each element in an array of <xref:System.Decimal> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#4)]
 [!code-vb[System.Convert.ToUInt16#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2220">
            <paramref name="value" /> est inférieur à 0 ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2220">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Double) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : double -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2221">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2221">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2222">Convertit la valeur du nombre à virgule flottante double précision spécifié en entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2222">Converts the value of the specified double-precision floating-point number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2223">
            <paramref name="value" />, arrondi à l’entier non signé 16 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2223">
              <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="4a36e-2224">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2224">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2225">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.Double> valeurs en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2225">The following example converts each element in an array of <xref:System.Double> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#5)]
 [!code-vb[System.Convert.ToUInt16#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2226">
            <paramref name="value" /> est inférieur à 0 ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2226">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Short) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int16 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2227">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2227">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2228">Convertit la valeur de l'entier signé 16 bits spécifié en entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2228">Converts the value of the specified 16-bit signed integer to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2229">Entier non signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2229">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2230">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers de 16 bits en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2230">The following example attempts to convert each element in a 16-bit integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#6)]
 [!code-vb[System.Convert.ToUInt16#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2231">
            <paramref name="value" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2231">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2232">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2232">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2233">Convertit la valeur de l'entier signé 32 bits spécifié en entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2233">Converts the value of the specified 32-bit signed integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2234">Entier non signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2234">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2235">L’exemple suivant convertit chaque élément dans un tableau d’entiers en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2235">The following example converts each element in an integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#7)]
 [!code-vb[System.Convert.ToUInt16#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2236">
            <paramref name="value" /> est inférieur à 0 ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2236">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Long) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : int64 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2237">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2237">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2238">Convertit la valeur de l'entier signé 64 bits spécifié en entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2238">Converts the value of the specified 64-bit signed integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2239">Entier non signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2239">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2240">L’exemple suivant convertit chaque élément dans un tableau d’entiers longs en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2240">The following example converts each element in a long integer array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#8)]
 [!code-vb[System.Convert.ToUInt16#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2241">
            <paramref name="value" /> est inférieur à 0 ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2241">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Object) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : obj -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2242">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2242">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2243">Convertit la valeur de l'objet spécifié en entier non signé 16 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2243">Converts the value of the specified object to a 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2244">Entier non signé 16 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2244">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2245">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2245">The return value is the result of invoking the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2246">L’exemple suivant tente de convertir chaque élément dans un tableau d’objets en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2246">The following example attempts to convert each element in an object array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#9)]
 [!code-vb[System.Convert.ToUInt16#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2247">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2247">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-2248">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2248">
              <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-2249">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2249">-or-</span>
          </span>
          <span data-ttu-id="4a36e-2250">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2250">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2251">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt16.MinValue" /> ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2251">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As SByte) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : sbyte -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2252">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2252">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2253">Convertit la valeur de l'entier signé 8 bits spécifié en entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2253">Converts the value of the specified 8-bit signed integer to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2254">Entier non signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2254">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2255">L’exemple suivant convertit chaque élément dans un tableau d’octets signé en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2255">The following example converts each element in a signed byte array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#10)]
 [!code-vb[System.Convert.ToUInt16#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2256">
            <paramref name="value" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2256">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Single) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : single -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2257">Nombre à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2257">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2258">Convertit la valeur du nombre à virgule flottante simple précision spécifié en entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2258">Converts the value of the specified single-precision floating-point number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2259">
            <paramref name="value" />, arrondi à l’entier non signé 16 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2259">
              <paramref name="value" />, rounded to the nearest 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="4a36e-2260">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2260">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2261">L’exemple suivant convertit chaque élément dans un tableau de <xref:System.String> valeurs en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2261">The following example converts each element in an array of <xref:System.String> values to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#11)]
 [!code-vb[System.Convert.ToUInt16#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2262">
            <paramref name="value" /> est inférieur à 0 ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2262">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2263">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2263">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2264">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2264">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2265">Entier non signé 16 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2265">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2266">À l’aide de la <xref:System.Convert.ToUInt16%28System.String%29> méthode équivaut à passer `value` à la <xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-2266">Using the <xref:System.Convert.ToUInt16%28System.String%29> method is equivalent to passing `value` to the <xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a36e-2267">`value` est interprétée à l'aide des conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2267">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="4a36e-2268">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2268">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-2269">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2269">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2270">L’exemple suivant tente de convertir chaque élément dans un tableau de chaînes numériques en un entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2270">The following example attempts to convert each element in a numeric string array to a 16-bit unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#12)]
 [!code-vb[System.Convert.ToUInt16#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2271">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2271">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2272">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt16.MinValue" /> ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2272">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint16 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2273">Entier non signé 16 bits à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2273">The 16-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2274">Retourne l'entier non signé 16 bits spécifié. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2274">Returns the specified 16-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2275">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2275">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As UInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint32 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2276">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2276">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2277">Convertit la valeur de l'entier 32 bits non signé spécifié en un entier 16 bits non signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2277">Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2278">Entier non signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2278">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2279">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers non signés en entier 16 bits non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2279">The following example attempts to convert each element in an array of unsigned integers to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#13)]
 [!code-vb[System.Convert.ToUInt16#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2280">
            <paramref name="value" /> est supérieur à <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2280">
              <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As ULong) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : uint64 -&gt; uint16" Usage="System.Convert.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2281">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2281">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2282">Convertit la valeur de l'entier non signé 64 bits spécifié en un entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2282">Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2283">Entier non signé 16 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2283">A 16-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2284">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers longs non signés en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2284">The following example attempts to convert each element in an array of unsigned long integers to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_1.cs#14)]
 [!code-vb[System.Convert.ToUInt16#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2285">
            <paramref name="value" /> est supérieur à <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2285">
              <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Object, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : obj * IFormatProvider -&gt; uint16" Usage="System.Convert.ToUInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2286">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2286">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2287">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2287">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2288">Convertit la valeur de l'objet spécifié en entier non signé 16 bits à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2288">Converts the value of the specified object to a 16-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2289">Entier non signé 16 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2289">A 16-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2290">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2290">The return value is the result of invoking the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="4a36e-2291">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2291">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-2292">Par exemple, si `value` est un <xref:System.String> qui représente un nombre, `provider` peut fournir des informations spécifiques à la culture concernant la notation utilisée pour représenter ce nombre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2292">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="4a36e-2293">Ignorent les types de base `provider`; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2293">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2294">L’exemple suivant définit un `HexString` classe qui implémente le <xref:System.IConvertible> interface et qui est conçu pour contenir la représentation sous forme de chaîne de valeurs 16 bits signés et 16 bits non signés.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2294">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 16-bit signed and 16-bit unsigned values.</span></span> <span data-ttu-id="4a36e-2295">La classe inclut un `Sign` propriété qui indique le signe de sa valeur hexadécimale.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2295">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_3.cs#16)]
 [!code-vb[System.Convert.ToUInt16#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_3.vb#16)]  
  
 <span data-ttu-id="4a36e-2296">L’exemple suivant qui montre un appel à la <xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29> méthode passe un `HexString` objet en tant que paramètre, à son tour, appelle le <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> implémentation de la `HexString` classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2296">The following example shows that a call to the <xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_3.cs#17)]
 [!code-vb[System.Convert.ToUInt16#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_3.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2297">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2297">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-2298">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2298">
              <paramref name="value" /> does not implement the  <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-2299">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2299">-or-</span>
          </span>
          <span data-ttu-id="4a36e-2300">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2300">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2301">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt16.MinValue" /> ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2301">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string * IFormatProvider -&gt; uint16" Usage="System.Convert.ToUInt16 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2302">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2302">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2303">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2303">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2304">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier non signé 16 bits équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2304">Converts the specified string representation of a number to an equivalent 16-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2305">Entier non signé 16 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2305">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2306">La valeur de retour est le résultat de l’appel <xref:System.UInt16.Parse%2A?displayProperty=nameWithType> sur `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2306">The return value is the result of invoking <xref:System.UInt16.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="4a36e-2307">`provider` est un <xref:System.IFormatProvider> instance qui obtient un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2307">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-2308">Le <xref:System.Globalization.NumberFormatInfo> objet fournit des informations spécifiques à la culture concernant le format de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2308">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a36e-2309">Si `provider` est `null`, le <xref:System.Globalization.NumberFormatInfo> pour la culture actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2309">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-2310">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2310">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt16.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-2311">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2311">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2312">L’exemple suivant définit un personnalisé <xref:System.Globalization.NumberFormatInfo> objet qui reconnaît la chaîne « pos » comme signe positif et la chaîne « neg » comme signe négatif.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2312">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="4a36e-2313">Il essaie de convertir chaque élément d’un tableau de chaînes numériques en un entier à l’aide de ces deux ce fournisseur et le <xref:System.Globalization.NumberFormatInfo> fournisseur pour la culture dite indifférente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2313">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_4.cs#18)]
 [!code-vb[System.Convert.ToUInt16#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2314">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2314">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2315">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt16.MinValue" /> ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2315">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt16(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As String, fromBase As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string * int -&gt; uint16" Usage="System.Convert.ToUInt16 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2316">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2316">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="4a36e-2317">Base du nombre figurant dans <c>value</c>, qui doit correspondre à 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2317">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2318">Convertit la représentation sous forme de chaîne d'un nombre dans une base spécifiée en entier non signé 16 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2318">Converts the string representation of a number in a specified base to an equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2319">Entier non signé 16 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2319">A 16-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2320">Si `fromBase` est 16, vous pouvez faire précéder le nombre spécifié par le `value` paramètre avec « 0 x » ou « 0 X ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-2320">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="4a36e-2321">Étant donné que le <xref:System.UInt16> type de données prend en charge les valeurs non signées uniquement, le <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> méthode suppose que `value` est exprimé à l’aide de la représentation binaire non signée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2321">Because the <xref:System.UInt16> data type supports unsigned values only, the <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="4a36e-2322">En d’autres termes, toutes les 16 bits sont utilisés pour représenter la valeur numérique, et un bit de signe est absent.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2322">In other words, all 16 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="4a36e-2323">Par conséquent, il est possible d’écrire du code dans lequel un valeur d’entier signée est en dehors des limites de la <xref:System.UInt16> type de données est converti en un <xref:System.UInt16> valeur sans la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2323">As a result, it is possible to write code in which a signed integer value that is out of the range of the <xref:System.UInt16> data type is converted to a <xref:System.UInt16> value without the method throwing an exception.</span></span> <span data-ttu-id="4a36e-2324">L’exemple suivant convertit <xref:System.Int16.MinValue?displayProperty=nameWithType> à sa représentation sous forme de chaîne hexadécimale, puis appelle le <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-2324">The following example converts <xref:System.Int16.MinValue?displayProperty=nameWithType> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="4a36e-2325">Au lieu de lever une exception, la méthode affiche le message « 0 x 8000 convertit à 32768. »</span><span class="sxs-lookup"><span data-stu-id="4a36e-2325">Instead of throwing an exception, the method displays the message, "0x8000 converts to 32768."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#11)]
 [!code-vb[System.Convert.BaseConversion#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#11)]  
  
 <span data-ttu-id="4a36e-2326">Lorsque vous effectuez des opérations binaires ou conversions numériques, il incombe toujours au développeur de vérifier qu’une méthode ou un opérateur utilise la représentation numérique appropriée pour interpréter une valeur particulière.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2326">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="4a36e-2327">L’exemple suivant illustre une technique permettant de s’assurer que la méthode n’utilise pas à tort une représentation binaire pour interpréter une valeur qui utilise la représentation de complément à deux lors de la conversion d’une chaîne hexadécimale à un <xref:System.UInt16> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2327">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="4a36e-2328">L’exemple détermine si une valeur représente un signé ou un entier non signé pendant la conversation de cette valeur en sa représentation de chaîne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2328">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="4a36e-2329">Lorsque l’exemple convertit la valeur en un <xref:System.UInt16> valeur, vérifie si la valeur d’origine était un entier signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2329">When the example converts the value to a <xref:System.UInt16> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="4a36e-2330">Cas dans ce, et si son bit de poids fort est défini (ce qui indique que la valeur d’origine était négative), la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2330">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#12)]
 [!code-vb[System.Convert.BaseConversion#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#12)]  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2331">L’exemple suivant tente d’interpréter chaque élément dans un tableau de chaînes numériques comme valeur hexadécimale et afin de les convertir en entier non signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2331">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt16#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint16/cs/touint16_2.cs#15)]
 [!code-vb[System.Convert.ToUInt16#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint16/vb/touint16_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-2332">
            <paramref name="fromBase" /> n’a pas la valeur 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2332">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="4a36e-2333">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2333">-or-</span>
          </span>
          <span data-ttu-id="4a36e-2334">
            <paramref name="value" />, qui représente un nombre non signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2334">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-2335">
            <paramref name="value" /> a la valeur <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2335">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2336">
            <paramref name="value" /> contient un caractère qui n’est pas un chiffre valide dans la base spécifiée par <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2336">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="4a36e-2337">Le message d’exception indique qu’il n’y a pas de chiffres à convertir si le premier caractère dans <paramref name="value" /> n’est pas valide ; sinon, le message indique que <paramref name="value" /> contient des caractères de fin non valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2337">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2338">
            <paramref name="value" />, qui représente un nombre non signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2338">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="4a36e-2339">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2339">-or-</span>
          </span>
          <span data-ttu-id="4a36e-2340">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt16.MinValue" /> ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2340">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-2341">Convertit une valeur spécifiée en entier non signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2341">Converts a specified value to a 32-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Boolean) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : bool -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2342">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2342">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2343">Convertit la valeur booléenne spécifiée en entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2343">Converts the specified Boolean value to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2344">Chiffre 1, si <paramref name="value" /> est <see langword="true" /> ; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2344">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2345">L’exemple suivant convertit les valeurs booléennes `true` et `false` entiers non signés.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2345">The following example converts the Boolean values `true` and `false` to unsigned integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Convert.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Byte) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : byte -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2346">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2346">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2347">Convertit la valeur de l'entier non signé 8 bits spécifié en l'entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2347">Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2348">Entier non signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2348">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2349">L’exemple suivant convertit chaque élément dans un tableau d’octets en un entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2349">The following example converts each element in a byte array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#2)]
 [!code-vb[System.Convert.ToUInt32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Char) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : char -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2350">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2350">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2351">Convertit la valeur du caractère Unicode spécifié en entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2351">Converts the value of the specified Unicode character to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2352">Entier non signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2352">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2353">L’exemple suivant convertit chaque élément dans un tableau de caractères en entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2353">The following example converts each element in a character array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#3)]
 [!code-vb[System.Convert.ToUInt32#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As DateTime) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : DateTime -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2354">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2354">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2355">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2355">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2356">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2356">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-2357">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2357">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-2358">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2358">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : decimal -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2359">Nombre décimal à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2359">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2360">Convertit la valeur du nombre décimal spécifié en entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2360">Converts the value of the specified decimal number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2361">
            <paramref name="value" />, arrondi à l’entier non signé 32 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2361">
              <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="4a36e-2362">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2362">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2363">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Decimal> valeurs en entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2363">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#4)]
 [!code-vb[System.Convert.ToUInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2364">
            <paramref name="value" /> est inférieur à 0 ou supérieur à <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2364">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Double) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : double -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2365">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2365">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2366">Convertit la valeur du nombre à virgule flottante double précision spécifié en entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2366">Converts the value of the specified double-precision floating-point number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2367">
            <paramref name="value" />, arrondi à l’entier non signé 32 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2367">
              <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="4a36e-2368">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2368">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2369">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Double> valeurs en entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2369">The following example attempts to convert each element in an array of <xref:System.Double> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#5)]
 [!code-vb[System.Convert.ToUInt32#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2370">
            <paramref name="value" /> est inférieur à 0 ou supérieur à <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2370">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Short) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int16 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2371">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2371">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2372">Convertit la valeur de l'entier signé 16 bits spécifié en entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2372">Converts the value of the specified 16-bit signed integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2373">Entier non signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2373">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2374">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers de 16 bits en entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2374">The following example attempts to convert each element in a 16-bit integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#6)]
 [!code-vb[System.Convert.ToUInt32#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2375">
            <paramref name="value" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2375">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2376">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2376">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2377">Convertit la valeur de l'entier signé 32 bits spécifié en entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2377">Converts the value of the specified 32-bit signed integer to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2378">Entier non signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2378">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2379">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers en entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2379">The following example attempts to convert each element in an integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#7)]
 [!code-vb[System.Convert.ToUInt32#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2380">
            <paramref name="value" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2380">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Long) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : int64 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2381">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2381">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2382">Convertit la valeur de l'entier signé 64 bits spécifié en entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2382">Converts the value of the specified 64-bit signed integer to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2383">Entier non signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2383">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2384">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers longs en entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2384">The following example attempts to convert each element in a long integer array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#8)]
 [!code-vb[System.Convert.ToUInt32#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2385">
            <paramref name="value" /> est inférieur à 0 ou supérieur à <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2385">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Object) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : obj -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2386">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2386">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2387">Convertit la valeur de l'objet spécifié en entier non signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2387">Converts the value of the specified object to a 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2388">Entier non signé 32 bits équivalent à <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2388">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2389">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2389">The return value is the result of invoking the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2390">L’exemple suivant tente de convertir chaque élément dans un tableau d’objets en entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2390">The following example attempts to convert each element in an object array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#9)]
 [!code-vb[System.Convert.ToUInt32#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2391">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2391">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-2392">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2392">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-2393">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2393">-or-</span>
          </span>
          <span data-ttu-id="4a36e-2394">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2394">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2395">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt32.MinValue" /> ou supérieur à <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2395">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As SByte) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : sbyte -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2396">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2396">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2397">Convertit la valeur de l'entier signé 8 bits spécifié en entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2397">Converts the value of the specified 8-bit signed integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2398">Entier non signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2398">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2399">L’exemple suivant tente de convertir chaque élément dans un tableau d’octets signé en entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2399">The following example attempts to convert each element in a signed byte array to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#10)]
 [!code-vb[System.Convert.ToUInt32#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2400">
            <paramref name="value" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2400">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Single) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : single -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2401">Nombre à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2401">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2402">Convertit la valeur du nombre à virgule flottante simple précision spécifié en entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2402">Converts the value of the specified single-precision floating-point number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2403">
            <paramref name="value" />, arrondi à l’entier non signé 32 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2403">
              <paramref name="value" />, rounded to the nearest 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="4a36e-2404">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2404">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2405">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Single> valeurs en entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2405">The following example attempts to convert each element in an array of <xref:System.Single> values to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#11)]
 [!code-vb[System.Convert.ToUInt32#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2406">
            <paramref name="value" /> est inférieur à 0 ou supérieur à <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2406">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2407">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2407">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2408">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2408">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2409">Entier non signé 32 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2409">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2410">À l’aide de la <xref:System.Convert.ToUInt32%28System.String%29> méthode équivaut à passer `value` à la <xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-2410">Using the <xref:System.Convert.ToUInt32%28System.String%29> method is equivalent to passing `value` to the <xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a36e-2411">`value` est interprétée à l'aide des conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2411">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="4a36e-2412">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2412">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-2413">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2413">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2414">L’exemple suivant interprète les éléments dans un tableau de chaînes sous forme de chaînes numériques et tente de les convertir en entiers non signés.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2414">The following example interprets the elements in a string array as numeric strings and attempts to convert them to unsigned integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#12)]
 [!code-vb[System.Convert.ToUInt32#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2415">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2415">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2416">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt32.MinValue" /> ou supérieur à <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2416">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As UShort) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint16 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2417">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2417">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2418">Convertit la valeur de l'entier non signé 16 bits spécifié en l'entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2418">Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2419">Entier non signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2419">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2420">L’exemple suivant convertit chaque élément dans un tableau d’entiers 16 bits non signé en valeur entière non signée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2420">The following example converts each element in an unsigned 16-bit integer array to an unsigned integer value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#13)]
 [!code-vb[System.Convert.ToUInt32#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint32 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2421">Entier non signé 32 bits à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2421">The 32-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2422">Retourne l'entier non signé 32 bits spécifié. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2422">Returns the specified 32-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2423">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2423">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As ULong) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : uint64 -&gt; uint32" Usage="System.Convert.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2424">Entier non signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2424">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2425">Convertit la valeur de l'entier non signé 64 bits spécifié en un entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2425">Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2426">Entier non signé 32 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2426">A 32-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2427">L’exemple suivant tente de convertir chaque élément dans un tableau entier long non signé en valeur entière non signée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2427">The following example attempts to convert each element in an unsigned long integer array to an unsigned integer value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_1.cs#14)]
 [!code-vb[System.Convert.ToUInt32#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2428">
            <paramref name="value" /> est supérieur à <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2428">
              <paramref name="value" /> is greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Object, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : obj * IFormatProvider -&gt; uint32" Usage="System.Convert.ToUInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2429">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2429">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2430">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2430">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2431">Convertit la valeur de l'objet spécifié en entier non signé 32 bits à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2431">Converts the value of the specified object to a 32-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2432">Entier non signé 32 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2432">A 32-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2433">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2433">The return value is the result of invoking the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="4a36e-2434">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2434">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-2435">Par exemple, si `value` est un <xref:System.String> qui représente un nombre, `provider` peut fournir des informations spécifiques à la culture concernant la notation utilisée pour représenter ce nombre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2435">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="4a36e-2436">Ignorent les types de base `provider`; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2436">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2437">L’exemple suivant définit un `HexString` classe qui implémente le <xref:System.IConvertible> interface et qui est conçu pour contenir la représentation sous forme de chaîne des valeurs 32 bits signés et 32 bits non signés.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2437">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 32-bit signed and 32-bit unsigned values.</span></span> <span data-ttu-id="4a36e-2438">La classe inclut un `Sign` propriété qui indique le signe de sa valeur hexadécimale.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2438">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_4.cs#17)]
 [!code-vb[System.Convert.ToUInt32#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_4.vb#17)]  
  
 <span data-ttu-id="4a36e-2439">L’exemple suivant qui montre un appel à la <xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29> méthode passe un `HexString` objet en tant que paramètre, à son tour, appelle le <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> implémentation de la `HexString` classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2439">The following example shows that a call to the <xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_4.cs#18)]
 [!code-vb[System.Convert.ToUInt32#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2440">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2440">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-2441">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2441">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-2442">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2442">-or-</span>
          </span>
          <span data-ttu-id="4a36e-2443">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2443">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2444">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt32.MinValue" /> ou supérieur à <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2444">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string * IFormatProvider -&gt; uint32" Usage="System.Convert.ToUInt32 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2445">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2445">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2446">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2446">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2447">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier non signé 32 bits équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2447">Converts the specified string representation of a number to an equivalent 32-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2448">Entier non signé 32 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2448">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2449">La valeur de retour est le résultat de l’appel <xref:System.UInt32.Parse%2A?displayProperty=nameWithType> sur `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2449">The return value is the result of invoking <xref:System.UInt32.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="4a36e-2450">`provider` est un <xref:System.IFormatProvider> instance qui obtient un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2450">`provider` is an <xref:System.IFormatProvider> instance that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-2451">Le <xref:System.Globalization.NumberFormatInfo> objet fournit des informations spécifiques à la culture concernant le format de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2451">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a36e-2452">Si `provider` est `null`, le <xref:System.Globalization.NumberFormatInfo> pour la culture actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2452">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-2453">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2453">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt32.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-2454">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2454">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2455">L’exemple suivant définit un personnalisé <xref:System.Globalization.NumberFormatInfo> objet qui reconnaît la chaîne « pos » comme signe positif et la chaîne « neg » comme signe négatif.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2455">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="4a36e-2456">Il essaie de convertir chaque élément d’un tableau de chaînes numériques en un entier à l’aide de ces deux ce fournisseur et le <xref:System.Globalization.NumberFormatInfo> fournisseur pour la culture dite indifférente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2456">It then attempts to convert each element of a numeric string array to an integer using both this provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_2.cs#15)]
 [!code-vb[System.Convert.ToUInt32#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2457">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2457">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2458">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt32.MinValue" /> ou supérieur à <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2458">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As String, fromBase As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string * int -&gt; uint32" Usage="System.Convert.ToUInt32 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2459">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2459">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="4a36e-2460">Base du nombre figurant dans <c>value</c>, qui doit correspondre à 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2460">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2461">Convertit la représentation sous forme de chaîne d'un nombre dans une base spécifiée en entier non signé 32 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2461">Converts the string representation of a number in a specified base to an equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2462">Entier non signé 32 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2462">A 32-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2463">Si `fromBase` est 16, vous pouvez faire précéder le nombre spécifié par le `value` paramètre avec « 0 x » ou « 0 X ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-2463">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="4a36e-2464">Étant donné que le <xref:System.UInt32> type de données prend en charge les valeurs non signées uniquement, le <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> méthode suppose que `value` est exprimé à l’aide de la représentation binaire non signée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2464">Because the <xref:System.UInt32> data type supports unsigned values only, the <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="4a36e-2465">En d’autres termes, les 32 bits sont utilisés pour représenter la valeur numérique, et un bit de signe est absent.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2465">In other words, all 32 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="4a36e-2466">Par conséquent, il est possible d’écrire du code dans lequel un valeur d’entier signée est en dehors des limites de la <xref:System.UInt32> type de données est converti en un <xref:System.UInt32> valeur sans la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2466">As a result, it is possible to write code in which a signed integer value that is out of the range of the <xref:System.UInt32> data type is converted to a <xref:System.UInt32> value without the method throwing an exception.</span></span> <span data-ttu-id="4a36e-2467">L’exemple suivant convertit <xref:System.Int32.MinValue> à sa représentation sous forme de chaîne hexadécimale, puis appelle le <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-2467">The following example converts <xref:System.Int32.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="4a36e-2468">Au lieu de lever une exception, la méthode affiche le message « 0 x 80000000 convertit à 2147483648. »</span><span class="sxs-lookup"><span data-stu-id="4a36e-2468">Instead of throwing an exception, the method displays the message, "0x80000000 converts to 2147483648."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#13)]
 [!code-vb[System.Convert.BaseConversion#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#13)]  
  
 <span data-ttu-id="4a36e-2469">Lorsque vous effectuez des opérations binaires ou conversions numériques, il incombe toujours au développeur de vérifier qu’une méthode ou un opérateur utilise la représentation numérique appropriée pour interpréter une valeur particulière.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2469">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="4a36e-2470">L’exemple suivant illustre une technique permettant de s’assurer que la méthode n’utilise pas à tort une représentation binaire pour interpréter une valeur qui utilise la représentation de complément à deux lors de la conversion d’une chaîne hexadécimale à un <xref:System.UInt32> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2470">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt32> value.</span></span> <span data-ttu-id="4a36e-2471">L’exemple détermine si une valeur représente un signé ou un entier non signé pendant la conversation de cette valeur en sa représentation de chaîne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2471">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="4a36e-2472">Lorsque l’exemple convertit la valeur en un <xref:System.UInt32> valeur, vérifie si la valeur d’origine était un entier signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2472">When the example converts the value to a <xref:System.UInt32> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="4a36e-2473">Cas dans ce, et si son bit de poids fort est défini (ce qui indique que la valeur d’origine était négative), la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2473">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#14)]
 [!code-vb[System.Convert.BaseConversion#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#14)]  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2474">L’exemple suivant essaie d’interpréter chaque élément dans un tableau de chaînes numériques comme valeur hexadécimale et convertissez-le en un entier non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2474">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt32#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint32/cs/touint32_3.cs#16)]
 [!code-vb[System.Convert.ToUInt32#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint32/vb/touint32_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-2475">
            <paramref name="fromBase" /> n’a pas la valeur 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2475">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="4a36e-2476">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2476">-or-</span>
          </span>
          <span data-ttu-id="4a36e-2477">
            <paramref name="value" />, qui représente un nombre non signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2477">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-2478">
            <paramref name="value" /> a la valeur <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2478">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2479">
            <paramref name="value" /> contient un caractère qui n’est pas un chiffre valide dans la base spécifiée par <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2479">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="4a36e-2480">Le message d’exception indique qu’il n’y a pas de chiffres à convertir si le premier caractère dans <paramref name="value" /> n’est pas valide ; sinon, le message indique que <paramref name="value" /> contient des caractères de fin non valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2480">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2481">
            <paramref name="value" />, qui représente un nombre non signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2481">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="4a36e-2482">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2482">-or-</span>
          </span>
          <span data-ttu-id="4a36e-2483">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt32.MinValue" /> ou supérieur à <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2483">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a36e-2484">Convertit une valeur spécifiée en entier non signé 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2484">Converts a specified value to a 64-bit unsigned integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Boolean) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(bool value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : bool -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2485">Valeur booléenne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2485">The Boolean value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2486">Convertit la valeur booléenne spécifiée en entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2486">Converts the specified Boolean value to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2487">Chiffre 1, si <paramref name="value" /> est <see langword="true" /> ; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2487">The number 1 if <paramref name="value" /> is <see langword="true" />; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2488">L’exemple suivant convertit la valeur booléenne `true` et `false` valeurs entiers longs non signés.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2488">The following example converts Boolean `true` and `false` values to unsigned long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Convert.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Byte) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : byte -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2489">Entier non signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2489">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2490">Convertit la valeur de l'entier non signé 8 bits spécifié en l'entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2490">Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2491">Entier signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2491">A 64-bit signed integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2492">L’exemple suivant convertit chaque élément dans un tableau d’octets en un entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2492">The following example converts each element in a byte array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#2)]
 [!code-vb[System.Convert.ToUInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Char) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(char value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : char -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2493">Caractère Unicode à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2493">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2494">Convertit la valeur du caractère Unicode spécifié en entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2494">Converts the value of the specified Unicode character to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2495">Entier non signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2495">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2496">L’exemple suivant convertit chaque élément dans un tableau de caractères en entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2496">The following example converts each element in a character array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#3)]
 [!code-vb[System.Convert.ToUInt64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As DateTime) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : DateTime -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2497">Valeur de date et heure à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2497">The date and time value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2498">L'appel de cette méthode lève toujours <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2498">Calling this method always throws <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2499">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2499">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="4a36e-2500">Aucune valeur n'est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2500">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-2501">Cette conversion n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2501">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : decimal -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2502">Nombre décimal à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2502">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2503">Convertit la valeur du nombre décimal spécifié en entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2503">Converts the value of the specified decimal number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2504">
            <paramref name="value" />, arrondi à l’entier non signé 64 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2504">
              <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="4a36e-2505">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2505">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2506">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Decimal> valeurs vers un entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2506">The following example attempts to convert each element in an array of <xref:System.Decimal> values to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#4)]
 [!code-vb[System.Convert.ToUInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2507">
            <paramref name="value" /> est inférieur à 0 ou supérieur à <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2507">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Double) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(double value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : double -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2508">Nombre à virgule flottante double précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2508">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2509">Convertit la valeur du nombre à virgule flottante double précision spécifié en entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2509">Converts the value of the specified double-precision floating-point number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2510">
            <paramref name="value" />, arrondi à l’entier non signé 64 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2510">
              <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="4a36e-2511">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2511">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2512">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Double> valeurs vers un entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2512">The following example attempts to convert each element in an array of <xref:System.Double> values to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#5)]
 [!code-vb[System.Convert.ToUInt64#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2513">
            <paramref name="value" /> est inférieur à 0 ou supérieur à <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2513">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Short) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(short value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int16 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2514">Entier signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2514">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2515">Convertit la valeur de l'entier signé 16 bits spécifié en entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2515">Converts the value of the specified 16-bit signed integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2516">Entier non signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2516">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2517">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers 16 bits en entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2517">The following example attempts to convert each element in an array of 16-bit integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#6)]
 [!code-vb[System.Convert.ToUInt64#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2518">
            <paramref name="value" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2518">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(int value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2519">Entier signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2519">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2520">Convertit la valeur de l'entier signé 32 bits spécifié en entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2520">Converts the value of the specified 32-bit signed integer to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2521">Entier non signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2521">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2522">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers en entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2522">The following example attempts to convert each element in an array of integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#7)]
 [!code-vb[System.Convert.ToUInt64#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2523">
            <paramref name="value" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2523">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Long) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(long value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : int64 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2524">Entier signé 64 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2524">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2525">Convertit la valeur de l'entier signé 64 bits spécifié en entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2525">Converts the value of the specified 64-bit signed integer to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2526">Entier non signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2526">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2527">L’exemple suivant tente de convertir chaque élément dans un tableau d’entiers longs en entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2527">The following example attempts to convert each element in an array of long integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#8)]
 [!code-vb[System.Convert.ToUInt64#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2528">
            <paramref name="value" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2528">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Object) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : obj -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2529">Objet qui implémente l'interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2529">An object that implements the <see cref="T:System.IConvertible" /> interface, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2530">Convertit la valeur de l'objet spécifié en entier non signé 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2530">Converts the value of the specified object to a 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2531">Entier non signé 64 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2531">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2532">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2532">The return value is the result of invoking the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2533">L’exemple suivant tente de convertir chaque élément dans un tableau d’objets en entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2533">The following example attempts to convert each element in an object array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#9)]
 [!code-vb[System.Convert.ToUInt64#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2534">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2534">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-2535">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2535">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-2536">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2536">-or-</span>
          </span>
          <span data-ttu-id="4a36e-2537">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2537">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2538">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt64.MinValue" /> ou supérieur à <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2538">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As SByte) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : sbyte -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2539">Entier signé 8 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2539">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2540">Convertit la valeur de l'entier signé 8 bits spécifié en entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2540">Converts the value of the specified 8-bit signed integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2541">Entier non signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2541">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2542">L’exemple suivant tente de convertir chaque élément dans un tableau d’octets signé en entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2542">The following example attempts to convert each element in a signed byte array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#10)]
 [!code-vb[System.Convert.ToUInt64#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2543">
            <paramref name="value" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2543">
              <paramref name="value" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Single) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(float value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : single -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2544">Nombre à virgule flottante simple précision à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2544">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2545">Convertit la valeur du nombre à virgule flottante simple précision spécifié en entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2545">Converts the value of the specified single-precision floating-point number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2546">
            <paramref name="value" />, arrondi à l’entier non signé 64 bits le plus proche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2546">
              <paramref name="value" />, rounded to the nearest 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="4a36e-2547">Si <paramref name="value" /> se trouve entre deux nombres entiers, le nombre pair est retourné (par exemple, 4,5 est converti en 4 et 5,5 en 6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2547">If <paramref name="value" /> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2548">L’exemple suivant essaie de convertir chaque élément dans un tableau de <xref:System.Single> valeurs vers un entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2548">The following example attempts to convert each element in an array of <xref:System.Single> values to an unsigned long integer.</span></span> <span data-ttu-id="4a36e-2549">La sortie indique que les valeurs fractionnaires sont arrondies avant la conversion est effectuée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2549">The output shows that fractional values are rounded before the conversion is performed.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#11)]
 [!code-vb[System.Convert.ToUInt64#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2550">
            <paramref name="value" /> est inférieur à 0 ou supérieur à <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2550">
              <paramref name="value" /> is less than zero or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
        <altmember cref="Overload:System.Math.Round" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2551">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2551">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2552">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2552">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2553">Entier signé 64 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2553">A 64-bit signed integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2554">À l’aide de la <xref:System.Convert.ToInt64%28System.String%29> méthode équivaut à passer `value` à la <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-2554">Using the <xref:System.Convert.ToInt64%28System.String%29> method is equivalent to passing `value` to the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a36e-2555">`value` est interprétée à l'aide des conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2555">`value` is interpreted by using the formatting conventions of the current thread culture.</span></span>  
  
 <span data-ttu-id="4a36e-2556">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2556">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-2557">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2557">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2558">L’exemple suivant interprète les éléments d’un tableau de chaînes sous forme de chaînes numériques et tente de les convertir en entiers longs non signés.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2558">The following example interprets the elements of a string array as numeric strings and attempts to convert them to unsigned long integers.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#12)]
 [!code-vb[System.Convert.ToUInt64#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2559">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2559">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2560">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt64.MinValue" /> ou supérieur à <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2560">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As UShort) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint16 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2561">Entier non signé 16 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2561">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2562">Convertit la valeur de l'entier non signé 16 bits spécifié en l'entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2562">Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2563">Entier non signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2563">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2564">L’exemple suivant convertit chaque élément dans un tableau d’entiers 16 bits non signés en entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2564">The following example converts each element in an array of unsigned 16-bit integers to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#13)]
 [!code-vb[System.Convert.ToUInt64#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As UInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint32 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2565">Entier non signé 32 bits à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2565">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2566">Convertit la valeur de l'entier 32 bits non signé spécifié en un entier 64 bits non signé équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2566">Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2567">Entier non signé 64 bits équivalent à <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2567">A 64-bit unsigned integer that is equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a36e-2568">L’exemple suivant convertit chaque élément dans un tableau d’entiers non signés en entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2568">The following example converts each element in an unsigned integer array to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_1.cs#14)]
 [!code-vb[System.Convert.ToUInt64#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : uint64 -&gt; uint64" Usage="System.Convert.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2569">Entier non signé 64 bits à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2569">The 64-bit unsigned integer to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2570">Retourne l'entier non signé 64 bits spécifié. Aucune conversion n'est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2570">Returns the specified 64-bit unsigned integer; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2571">
            <paramref name="value" /> est retourné sans modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2571">
              <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (object value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(object value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Object, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Object ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : obj * IFormatProvider -&gt; uint64" Usage="System.Convert.ToUInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2572">Objet qui implémente l'interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2572">An object that implements the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2573">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2573">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2574">Convertit la valeur de l'objet spécifié en entier non signé 64 bits à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2574">Converts the value of the specified object to a 64-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2575">Entier non signé 64 bits équivalent à <paramref name="value" />, ou zéro si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2575">A 64-bit unsigned integer that is equivalent to <paramref name="value" />, or zero if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2576">La valeur de retour est le résultat de l’appel de la <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> méthode du type sous-jacent de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2576">The return value is the result of invoking the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> method of the underlying type of `value`.</span></span>  
  
 <span data-ttu-id="4a36e-2577">`provider` permet à l’utilisateur à spécifier des informations spécifiques à la culture sur le contenu de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2577">`provider` enables the user to specify culture-specific conversion information about the contents of `value`.</span></span> <span data-ttu-id="4a36e-2578">Par exemple, si `value` est un <xref:System.String> qui représente un nombre, `provider` peut fournir des informations spécifiques à la culture concernant la notation utilisée pour représenter ce nombre.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2578">For example, if `value` is a <xref:System.String> that represents a number, `provider` could supply culture-specific information about the notation used to represent that number.</span></span>  
  
 <span data-ttu-id="4a36e-2579">Ignorent les types de base `provider`; Toutefois, le paramètre peut être utilisé si `value` est un type défini par l’utilisateur qui implémente le <xref:System.IConvertible> interface.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2579">The base types ignore `provider`; however, the parameter may be used if `value` is a user-defined type that implements the <xref:System.IConvertible> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2580">L’exemple suivant définit un `HexString` classe qui implémente le <xref:System.IConvertible> interface et qui est conçu pour contenir la représentation sous forme de chaîne des valeurs 64 bits signés et 64 bits non signés.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2580">The following example defines a `HexString` class that implements the <xref:System.IConvertible> interface and that is designed to hold the string representation of both 64-bit signed and 64-bit unsigned values.</span></span> <span data-ttu-id="4a36e-2581">La classe inclut un `Sign` propriété qui indique le signe de sa valeur hexadécimale.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2581">The class includes a `Sign` property that indicates the sign of its hexadecimal value.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_4.cs#17)]
 [!code-vb[System.Convert.ToUInt64#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_4.vb#17)]  
  
 <span data-ttu-id="4a36e-2582">L’exemple suivant qui montre un appel à la <xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29> méthode passe un `HexString` objet en tant que paramètre, à son tour, appelle le <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> implémentation de la `HexString` classe.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2582">The following example shows that a call to the <xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29> method that passes a `HexString` object as a parameter, in turn, calls the <xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType> implementation of the `HexString` class.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_4.cs#18)]
 [!code-vb[System.Convert.ToUInt64#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_4.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2583">
            <paramref name="value" /> n’a pas un format approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2583">
              <paramref name="value" /> is not in an appropriate format.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4a36e-2584">
            <paramref name="value" /> n’implémente pas l’interface <see cref="T:System.IConvertible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2584">
              <paramref name="value" /> does not implement the <see cref="T:System.IConvertible" /> interface.</span>
          </span>
          <span data-ttu-id="4a36e-2585">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2585">-or-</span>
          </span>
          <span data-ttu-id="4a36e-2586">La conversion n’est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2586">The conversion is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2587">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt64.MinValue" /> ou supérieur à <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2587">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string * IFormatProvider -&gt; uint64" Usage="System.Convert.ToUInt64 (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2588">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2588">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="4a36e-2589">Objet qui fournit des informations de mise en forme propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2589">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2590">Convertit la représentation sous forme de chaîne spécifiée d'un nombre en entier non signé 64 bits équivalent à l'aide des informations de mise en forme spécifiées propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2590">Converts the specified string representation of a number to an equivalent 64-bit unsigned integer, using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2591">Entier non signé 64 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2591">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2592">La valeur de retour est le résultat de l’appel <xref:System.UInt64.Parse%2A?displayProperty=nameWithType> sur `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2592">The return value is the result of invoking <xref:System.UInt64.Parse%2A?displayProperty=nameWithType> on `value`.</span></span>  
  
 <span data-ttu-id="4a36e-2593">`provider` est un <xref:System.IFormatProvider> implémentation qui obtient un <xref:System.Globalization.NumberFormatInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2593">`provider` is an <xref:System.IFormatProvider> implementation that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4a36e-2594">Le <xref:System.Globalization.NumberFormatInfo> objet fournit des informations spécifiques à la culture concernant le format de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2594">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a36e-2595">Si `provider` est `null`, le <xref:System.Globalization.NumberFormatInfo> de l’objet pour la culture actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2595">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="4a36e-2596">Si vous préférez ne pas gérer une exception si la conversion échoue, vous pouvez appeler la <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2596">If you prefer not to handle an exception if the conversion fails, you can call the <xref:System.UInt64.TryParse%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a36e-2597">Elle retourne un <xref:System.Boolean> valeur qui indique si la conversion a réussi ou échoué.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2597">It returns a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2598">L’exemple suivant définit un personnalisé <xref:System.Globalization.NumberFormatInfo> objet qui reconnaît la chaîne « pos » comme signe positif et la chaîne « neg » comme signe négatif.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2598">The following example defines a custom <xref:System.Globalization.NumberFormatInfo> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</span></span> <span data-ttu-id="4a36e-2599">Ensuite, il tente de convertir chaque élément d’un tableau de chaînes numériques en entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2599">It then attempts to convert each element of a numeric string array to an unsigned long integer.</span></span> <span data-ttu-id="4a36e-2600">La conversion utilise à la fois le fournisseur personnalisé et le <xref:System.Globalization.NumberFormatInfo> fournisseur pour la culture dite indifférente.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2600">The conversion uses both the custom provider and the <xref:System.Globalization.NumberFormatInfo> provider for the invariant culture.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_2.cs#15)]
 [!code-vb[System.Convert.ToUInt64#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_2.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2601">
            <paramref name="value" /> n’est pas constitué d’un signe facultatif suivi d’une séquence de chiffres (de 0 à 9).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2601">
              <paramref name="value" /> does not consist of an optional sign followed by a sequence of digits (0 through 9).</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2602">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt64.MinValue" /> ou supérieur à <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2602">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string value, int fromBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string value, int32 fromBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.ToUInt64(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As String, fromBase As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ value, int fromBase);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string * int -&gt; uint64" Usage="System.Convert.ToUInt64 (value, fromBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromBase" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a36e-2603">Chaîne contenant le nombre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2603">A string that contains the number to convert.</span>
          </span>
        </param>
        <param name="fromBase">
          <span data-ttu-id="4a36e-2604">Base du nombre figurant dans <c>value</c>, qui doit correspondre à 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2604">The base of the number in <c>value</c>, which must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a36e-2605">Convertit la représentation sous forme de chaîne d'un nombre dans une base spécifiée en entier non signé 64 bits équivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2605">Converts the string representation of a number in a specified base to an equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a36e-2606">Entier non signé 64 bits équivalent au nombre dans <paramref name="value" />, ou 0 (zéro) si <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2606">A 64-bit unsigned integer that is equivalent to the number in <paramref name="value" />, or 0 (zero) if <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a36e-2607">Si `fromBase` est 16, vous pouvez faire précéder le nombre spécifié par le `value` paramètre avec « 0 x » ou « 0 X ».</span><span class="sxs-lookup"><span data-stu-id="4a36e-2607">If `fromBase` is 16, you can prefix the number specified by the `value` parameter with "0x" or "0X".</span></span>  
  
 <span data-ttu-id="4a36e-2608">Étant donné que le <xref:System.UInt64> type de données prend en charge les valeurs non signées uniquement, le <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> méthode suppose que `value` est exprimé à l’aide de la représentation binaire non signée.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2608">Because the <xref:System.UInt64> data type supports unsigned values only, the <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> method assumes that `value` is expressed using unsigned binary representation.</span></span> <span data-ttu-id="4a36e-2609">En d’autres termes, les 64 bits sont utilisés pour représenter la valeur numérique, et un bit de signe est absent.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2609">In other words, all 64 bits are used to represent the numeric value, and a sign bit is absent.</span></span> <span data-ttu-id="4a36e-2610">Par conséquent, il est possible d’écrire du code dans lequel la valeur d’un entier long signé qui est en dehors des limites de la <xref:System.UInt64> type de données est converti en un <xref:System.UInt64> valeur sans la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2610">As a result, it is possible to write code in which a signed long integer value that is out of the range of the <xref:System.UInt64> data type is converted to a <xref:System.UInt64> value without the method throwing an exception.</span></span> <span data-ttu-id="4a36e-2611">L’exemple suivant convertit <xref:System.Int64.MinValue> à sa représentation sous forme de chaîne hexadécimale, puis appelle le <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="4a36e-2611">The following example converts <xref:System.Int64.MinValue> to its hexadecimal string representation, and then calls the <xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="4a36e-2612">Au lieu de lever une exception, la méthode affiche le message « 0 x 8000000000000000 convertit to 9223372036854775808. »</span><span class="sxs-lookup"><span data-stu-id="4a36e-2612">Instead of throwing an exception, the method displays the message, "0x8000000000000000 converts to 9223372036854775808."</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#15)]
 [!code-vb[System.Convert.BaseConversion#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#15)]  
  
 <span data-ttu-id="4a36e-2613">Lorsque vous effectuez des opérations binaires ou conversions numériques, il incombe toujours au développeur de vérifier qu’une méthode ou un opérateur utilise la représentation numérique appropriée pour interpréter une valeur particulière.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2613">When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</span></span> <span data-ttu-id="4a36e-2614">L’exemple suivant illustre une technique permettant de s’assurer que la méthode n’utilise pas à tort une représentation binaire pour interpréter une valeur qui utilise la représentation de complément à deux lors de la conversion d’une chaîne hexadécimale à un <xref:System.UInt64> valeur.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2614">The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="4a36e-2615">L’exemple détermine si une valeur représente un signé ou un entier non signé pendant la conversation de cette valeur en sa représentation de chaîne.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2615">The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</span></span> <span data-ttu-id="4a36e-2616">Lorsque l’exemple convertit la valeur en un <xref:System.UInt64> valeur, vérifie si la valeur d’origine était un entier signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2616">When the example converts the value to a <xref:System.UInt64> value, it checks whether the original value was a signed integer.</span></span> <span data-ttu-id="4a36e-2617">Cas dans ce, et si son bit de poids fort est défini (ce qui indique que la valeur d’origine était négative), la méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2617">If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</span></span>  
  
 [!code-csharp[System.Convert.BaseConversion#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Convert.BaseConversion/cs/Conversion.cs#16)]
 [!code-vb[System.Convert.BaseConversion#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Convert.BaseConversion/vb/Conversion.vb#16)]  
  
   
  
## Examples  
 <span data-ttu-id="4a36e-2618">L’exemple suivant essaie d’interpréter chaque élément dans un tableau de chaînes numériques en tant que valeur hexadécimale et convertir en entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="4a36e-2618">The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned long integer.</span></span>  
  
 [!code-csharp[System.Convert.ToUInt64#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.touint64/cs/touint64_3.cs#16)]
 [!code-vb[System.Convert.ToUInt64#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.touint64/vb/touint64_3.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a36e-2619">
            <paramref name="fromBase" /> n’a pas la valeur 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2619">
              <paramref name="fromBase" /> is not 2, 8, 10, or 16.</span>
          </span>
          <span data-ttu-id="4a36e-2620">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2620">-or-</span>
          </span>
          <span data-ttu-id="4a36e-2621">
            <paramref name="value" />, qui représente un nombre non signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2621">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a36e-2622">
            <paramref name="value" /> a la valeur <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2622">
              <paramref name="value" /> is <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4a36e-2623">
            <paramref name="value" /> contient un caractère qui n’est pas un chiffre valide dans la base spécifiée par <paramref name="fromBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2623">
              <paramref name="value" /> contains a character that is not a valid digit in the base specified by <paramref name="fromBase" />.</span>
          </span>
          <span data-ttu-id="4a36e-2624">Le message d’exception indique qu’il n’y a pas de chiffres à convertir si le premier caractère dans <paramref name="value" /> n’est pas valide ; sinon, le message indique que <paramref name="value" /> contient des caractères de fin non valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2624">The exception message indicates that there are no digits to convert if the first character in <paramref name="value" /> is invalid; otherwise, the message indicates that <paramref name="value" /> contains invalid trailing characters.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4a36e-2625">
            <paramref name="value" />, qui représente un nombre non signé autre qu’en base 10, est préfixé avec un signe négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2625">
              <paramref name="value" />, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</span>
          </span>
          <span data-ttu-id="4a36e-2626">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2626">-or-</span>
          </span>
          <span data-ttu-id="4a36e-2627">
            <paramref name="value" /> représente un nombre qui est inférieur à <see cref="F:System.UInt64.MinValue" /> ou supérieur à <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a36e-2627">
              <paramref name="value" /> represents a number that is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryFromBase64Chars">
      <MemberSignature Language="C#" Value="public static bool TryFromBase64Chars (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFromBase64Chars(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryFromBase64Chars(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFromBase64Chars (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryFromBase64Chars(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member TryFromBase64Chars : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; *  -&gt; bool" Usage="System.Convert.TryFromBase64Chars (chars, bytes, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFromBase64String">
      <MemberSignature Language="C#" Value="public static bool TryFromBase64String (string s, Span&lt;byte&gt; bytes, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFromBase64String(string s, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryFromBase64String(System.String,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFromBase64String (s As String, bytes As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryFromBase64String(System::String ^ s, Span&lt;System::Byte&gt; bytes, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member TryFromBase64String : string * Span&lt;byte&gt; *  -&gt; bool" Usage="System.Convert.TryFromBase64String (s, bytes, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryToBase64Chars">
      <MemberSignature Language="C#" Value="public static bool TryToBase64Chars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, out int charsWritten, Base64FormattingOptions options = System.Base64FormattingOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryToBase64Chars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, [out] int32&amp; charsWritten, valuetype System.Base64FormattingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Convert.TryToBase64Chars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Base64FormattingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryToBase64Chars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), ByRef charsWritten As Integer, Optional options As Base64FormattingOptions = System.Base64FormattingOptions.None) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryToBase64Chars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; *  * Base64FormattingOptions -&gt; bool" Usage="System.Convert.TryToBase64Chars (bytes, chars, charsWritten, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="options" Type="System.Base64FormattingOptions" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>