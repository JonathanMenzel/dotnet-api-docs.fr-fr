<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventHandler.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53058760c0eb1545e669ee6bd61bb90901585ac3e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3058760c0eb1545e669ee6bd61bb90901585ac3e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.EventHandler">
          <source>The source of the event.</source>
          <target state="translated">Source de l'événement.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.EventHandler">
          <source>An object that contains no event data.</source>
          <target state="translated">Objet qui ne contient aucune donnée d’événement.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.EventHandler">
          <source>Represents the method that will handle an event that has no event data.</source>
          <target state="translated">Représente la méthode qui gérera un événement ne comportant aucune donnée d'événement.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The event model in the .NET Framework is based on having an event delegate that connects an event with its handler.</source>
          <target state="translated">Le modèle d’événement dans le .NET Framework est basé sur la présence d’un délégué d’événement qui connecte un événement avec son gestionnaire.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>To raise an event, two elements are needed:</source>
          <target state="translated">Pour déclencher un événement, deux éléments sont nécessaires :</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>A delegate that identifies the method that provides the response to the event.</source>
          <target state="translated">Délégué qui identifie la méthode qui fournit la réponse à l’événement.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>Optionally, a class that holds the event data, if the event provides data.</source>
          <target state="translated">Si vous le souhaitez, une classe qui contient les données d’événement, si l’événement fournit des données.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The delegate is a type that defines a signature, that is, the return value type and parameter list types for a method.</source>
          <target state="translated">Le délégué est un type qui définit une signature, autrement dit, le type de valeur de retour et les types de liste de paramètres pour une méthode.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>You can use the delegate type to declare a variable that can refer to any method with the same signature as the delegate.</source>
          <target state="translated">Vous pouvez utiliser le type délégué pour déclarer une variable qui peut faire référence à n’importe quelle méthode avec la même signature que le délégué.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The standard signature of an event handler delegate defines a method that does not return a value.</source>
          <target state="translated">La signature standard d’un délégué de gestionnaire d’événements définit une méthode qui ne retourne pas de valeur.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>This method's first parameter is of type <ph id="ph1">&lt;xref:System.Object&gt;</ph> and refers to the instance that raises the event.</source>
          <target state="translated">Premier paramètre de la méthode est de type <ph id="ph1">&lt;xref:System.Object&gt;</ph> et fait référence à l’instance qui déclenche l’événement.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>Its second parameter is derived from type <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> and holds the event data.</source>
          <target state="translated">Son deuxième paramètre est dérivé de type <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> et contient les données d’événement.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>If the event does not generate event data, the second parameter is simply the value of the <ph id="ph1">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">Si l’événement ne génère pas de données d’événement, le deuxième paramètre est simplement la valeur de la <ph id="ph1">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>Otherwise, the second parameter is a type derived from <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> and supplies any fields or properties needed to hold the event data.</source>
          <target state="translated">Dans le cas contraire, le deuxième paramètre est un type dérivé <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> et fournit tous les champs ou propriétés nécessaires pour conserver les données d’événement.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> delegate is a predefined delegate that specifically represents an event handler method for an event that does not generate data.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> délégué est un délégué prédéfini qui représente spécifiquement une méthode de gestionnaire d’événements pour un événement qui ne génère pas de données.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>If your event does generate data, you must use the generic <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> delegate class.</source>
          <target state="translated">Si votre événement génère des données, vous devez utiliser le type générique <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> classe déléguée.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>To associate the event with the method that will handle the event, add an instance of the delegate to the event.</source>
          <target state="translated">Pour associer l’événement à la méthode qui gérera l’événement, ajoutez une instance du délégué à l’événement.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">Le gestionnaire d'événements est appelé chaque fois qu'un événement se produit, sauf si vous supprimez le délégué.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>For more information about event handler delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les délégués de gestionnaires d’événements, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The following example shows an event named <ph id="ph1">`ThresholdReached`</ph> that is associated with an <ph id="ph2">&lt;xref:System.EventHandler&gt;</ph> delegate.</source>
          <target state="translated">L’exemple suivant montre un événement nommé <ph id="ph1">`ThresholdReached`</ph> qui est associé à un <ph id="ph2">&lt;xref:System.EventHandler&gt;</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The method assigned to the <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> delegate is called in the <ph id="ph2">`OnThresholdReached`</ph> method.</source>
          <target state="translated">La méthode attribuée à la <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> délégué est appelé le <ph id="ph2">`OnThresholdReached`</ph> (méthode).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>