<Type Name="EventHandler" FullName="System.EventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1e57cf81b4af273f805df2fba7c7b656bc7af7b7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39943090" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventHandler = delegate of obj * EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Source de l'événement.</param>
    <param name="e">Objet qui ne contient aucune donnée d’événement.</param>
    <summary>Représente la méthode qui gérera un événement ne comportant aucune donnée d'événement.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le modèle d’événement dans le .NET Framework est basé sur la présence d’un délégué d’événement qui connecte un événement avec son gestionnaire. Pour déclencher un événement, deux éléments sont nécessaires :  
  
-   Un délégué qui identifie la méthode qui fournit la réponse à l’événement.  
  
-   Si vous le souhaitez, une classe qui contient les données d’événement, si l’événement fournit des données.  
  
 Le délégué est un type qui définit une signature, autrement dit, le type de valeur de retour et les types de liste de paramètres pour une méthode. Vous pouvez utiliser le type délégué pour déclarer une variable qui peut faire référence à toute méthode avec la même signature que le délégué.  
  
 La signature standard d’un délégué de gestionnaire d’événements définit une méthode qui ne retourne pas de valeur. Ce premier paramètre de la méthode est de type <xref:System.Object> et fait référence à l’instance qui déclenche l’événement. Son deuxième paramètre est dérivé de type <xref:System.EventArgs> et contient les données d’événement. Si l’événement ne génère pas de données d’événement, le deuxième paramètre est simplement la valeur de la <xref:System.EventArgs.Empty?displayProperty=nameWithType> champ. Sinon, le deuxième paramètre est un type dérivé <xref:System.EventArgs> et fournit tous les champs ou propriétés nécessaires pour conserver les données d’événement.  
  
 Le <xref:System.EventHandler> délégué est un délégué prédéfini qui représente spécifiquement une méthode de gestionnaire d’événements pour un événement qui ne génère pas de données. Si votre événement génère des données, vous devez utiliser le modèle générique <xref:System.EventHandler%601> classe déléguée.  
  
 Pour associer l’événement à la méthode qui gérera l’événement, ajoutez une instance du délégué à l’événement. Le gestionnaire d'événements est appelé chaque fois qu'un événement se produit, sauf si vous supprimez le délégué.  
  
 Pour plus d’informations sur les délégués de gestionnaire d’événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple suivant montre un événement nommé `ThresholdReached` qui est associé un <xref:System.EventHandler> déléguer. La méthode attribuée à la <xref:System.EventHandler> délégué est appelé le `OnThresholdReached` (méthode).  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>