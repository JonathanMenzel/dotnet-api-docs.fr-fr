<Type Name="Action&lt;T1,T2,T3,T4,T5,T6&gt;" FullName="System.Action&lt;T1,T2,T3,T4,T5,T6&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b6378846a8a5fcad725d709430242d7512ef4d7" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58731306" /></Metadata><TypeSignature Language="C#" Value="public delegate void Action&lt;in T1,in T2,in T3,in T4,in T5,in T6&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`6&lt;- T1, - T2, - T3, - T4, - T5, - T6&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`6" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T1, In T2, In T3, In T4, In T5, In T6)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;public delegate void Action(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);" />
  <TypeSignature Language="F#" Value="type Action&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T6">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
    <Parameter Name="arg6" Type="T6" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">Type du premier paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T2">Type du deuxième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T3">Type du troisième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T4">Type du quatrième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T5">Type du cinquième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <typeparam name="T6">Type du sixième paramètre de la méthode encapsulée par ce délégué.</typeparam>
    <param name="arg1">Premier paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg2">Deuxième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg3">Troisième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg4">Quatrième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg5">Cinquième paramètre de la méthode encapsulée par ce délégué.</param>
    <param name="arg6">Sixième paramètre de la méthode encapsulée par ce délégué.</param>
    <summary>Encapsule une méthode ayant six paramètres et ne retournant aucune valeur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser le <xref:System.Action%606> délégué à passer à une méthode en tant que paramètre sans déclarer explicitement un délégué personnalisé. La méthode encapsulée doit correspondre à la signature de méthode définie par ce délégué. Cela signifie que la méthode encapsulée doit avoir six paramètres qui sont passés par valeur, et il ne doit pas retourner une valeur. (En c#, la méthode doit retourner `void`. En Visual Basic, il doit être défini par le `Sub`...`End Sub` construction. Il peut également être une méthode qui retourne une valeur qui est ignorée.) En règle générale, une telle méthode est utilisée pour effectuer une opération.  
  
> [!NOTE]
>  Pour référencer une méthode ayant six paramètres et retourne une valeur, utilisez le modèle générique <xref:System.Func%607> déléguer à la place.  
  
 Vous pouvez également utiliser le <xref:System.Action%606> délégué avec les méthodes anonymes et expressions lambda.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`7" />
  </Docs>
</Type>