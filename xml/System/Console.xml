<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Console.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5493e36b1a7f90051fb8a40e338875db53b19f390.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">493e36b1a7f90051fb8a40e338875db53b19f390</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Represents the standard input, output, and error streams for console applications.</source>
          <target state="translated">Représente les flux standard d'entrée, de sortie et d'erreur pour les applications console.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The console is an operating system window where users interact with the operating system or with a text-based console application by entering text input through the computer keyboard, and by reading text output from the computer terminal.</source>
          <target state="translated">La console est une fenêtre de système d’exploitation où les utilisateurs interagissent avec le système d’exploitation ou une application de console basée sur le texte en entrant l’entrée de texte via le clavier de l’ordinateur et en lisant la sortie de texte à partir de l’ordinateur terminal.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example, in the Windows operating system, the console is called the Command Prompt window and accepts MS-DOS commands.</source>
          <target state="translated">Par exemple, dans le système d’exploitation Windows, la console est appelée à la fenêtre d’invite de commandes et accepte les commandes MS-DOS.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console&gt;</ph> class provides basic support for applications that read characters from, and write characters to, the console.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Console&gt;</ph> classe fournit un support de base pour les applications qui lisent et écrivent des caractères dans la console.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For information about developing with the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class, see the following sections:</source>
          <target state="translated">Pour plus d’informations sur le développement avec le <ph id="ph1">&lt;xref:System.Console&gt;</ph> de classe, consultez les sections suivantes :</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>Console I/O Streams<ept id="p1">](#Streams)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Flux d’e/s de console<ept id="p1">](#Streams)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>Screen Buffer and Console Window<ept id="p1">](#Buffer)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Mémoire tampon d’écran et la fenêtre de Console<ept id="p1">](#Buffer)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>Unicode Support for the Console<ept id="p1">](#Unicode)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Prise en charge Unicode pour la Console<ept id="p1">](#Unicode)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>Common Operations<ept id="p1">](#Operations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Opérations courantes<ept id="p1">](#Operations)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>.NET Core Notes<ept id="p1">](#Core)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>.NET core Notes<ept id="p1">](#Core)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Console I/O Streams</source>
          <target state="translated">Flux d’e/s de console</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>When a console application starts, the operating system automatically associates three I/O streams with the console: standard input stream, standard output stream, and standard error output stream.</source>
          <target state="translated">Lorsqu’une application de console démarre, le système d’exploitation associe automatiquement trois flux d’e/s à la console : standard d’entrée de flux, les flux de sortie standard et les flux de sortie d’erreur standard.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Your application can read user input from the standard input stream; write normal data to the standard output stream; and write error data to the standard error output stream.</source>
          <target state="translated">Votre application peut lire l’entrée d’utilisateur à partir du flux d’entrée standard ; écrire des données normales dans le flux de sortie standard ; et écrire des données de l’erreur dans le flux de sortie d’erreur standard.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>These streams are presented to your application as the values of the <ph id="ph1">&lt;xref:System.Console.In%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">Ces flux sont présentés à votre application en tant que les valeurs de la <ph id="ph1">&lt;xref:System.Console.In%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph>, et <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>By default, the value of the <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> property is a <ph id="ph2">&lt;xref:System.IO.TextReader?displayProperty=nameWithType&gt;</ph> object that represents the keyboard, and the values of the <ph id="ph3">&lt;xref:System.Console.Out%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Error%2A&gt;</ph> properties are <ph id="ph5">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> objects that represent a console window.</source>
          <target state="translated">Par défaut, la valeur de la <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> propriété est un <ph id="ph2">&lt;xref:System.IO.TextReader?displayProperty=nameWithType&gt;</ph> objet qui représente le clavier et les valeurs de la <ph id="ph3">&lt;xref:System.Console.Out%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Console.Error%2A&gt;</ph> propriétés sont <ph id="ph5">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> objets qui représentent une fenêtre de console.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, you can set these properties to streams that do not represent the console window or keyboard; for example, you can set these properties to streams that represent files.</source>
          <target state="translated">Toutefois, vous pouvez définir ces propriétés dans des flux qui ne représentent pas la fenêtre de console ou le clavier ; par exemple, vous pouvez définir ces propriétés dans les flux qui représentent des fichiers.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To redirect the standard input, standard output, or standard error stream, call the <ph id="ph1">&lt;xref:System.Console.SetIn%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.SetOut%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Console.SetError%2A?displayProperty=nameWithType&gt;</ph> method, respectively.</source>
          <target state="translated">Pour rediriger l’entrée standard, la sortie standard ou le flux d’erreur standard, appelez le <ph id="ph1">&lt;xref:System.Console.SetIn%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.SetOut%2A?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Console.SetError%2A?displayProperty=nameWithType&gt;</ph> (méthode), respectivement.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>I/O operations that use these streams are synchronized, which means that multiple threads can read from, or write to, the streams.</source>
          <target state="translated">Les opérations d’e/s qui utilisent ces flux sont synchronisées, ce qui signifie que plusieurs threads peuvent lire ou écrire dans le flux de données.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>This means that methods that are ordinarily asynchronous, such as <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph>, execute synchronously if the object represents a console stream.</source>
          <target state="translated">Cela signifie que les méthodes qui sont habituellement asynchrones, telles que <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph>, s’exécutent de façon synchrone, si l’objet représente un flux de la console.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Do not use the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class to display output in unattended applications, such as server applications.</source>
          <target state="translated">N’utilisez pas la <ph id="ph1">&lt;xref:System.Console&gt;</ph> classe pour afficher la sortie dans les applications sans assistance, telles que les applications de serveur.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Calls to methods such as <ph id="ph1">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> have no effect in GUI applications.</source>
          <target state="translated">Appels aux méthodes telles que <ph id="ph1">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> n’ont aucun effet dans les applications d’interface utilisateur graphique.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><ph id="ph1">&lt;xref:System.Console&gt;</ph> class members that work normally when the underlying stream is directed to a console might throw an exception if the stream is redirected, for example, to a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console&gt;</ph> membres de classe qui fonctionnent normalement lorsque le flux sous-jacent est dirigé vers une console peuvent lever une exception si le flux est redirigé, par exemple, dans un fichier.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Program your application to catch <ph id="ph1">&lt;xref:System.IO.IOException?displayProperty=nameWithType&gt;</ph> exceptions if you redirect a standard stream.</source>
          <target state="translated">Votre application pour intercepter <ph id="ph1">&lt;xref:System.IO.IOException?displayProperty=nameWithType&gt;</ph> exceptions si vous redirigez un flux standard.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.IsInputRedirected%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Console.IsErrorRedirected%2A&gt;</ph> properties to determine whether a standard stream is redirected before performing an operation that throws an <ph id="ph4">&lt;xref:System.IO.IOException?displayProperty=nameWithType&gt;</ph> exception.</source>
          <target state="translated">Vous pouvez également utiliser le <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.IsInputRedirected%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Console.IsErrorRedirected%2A&gt;</ph> propriétés afin de déterminer si un flux de données standard est redirigée avant d’effectuer une opération qui lève une <ph id="ph4">&lt;xref:System.IO.IOException?displayProperty=nameWithType&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>It is sometimes useful to explicitly call the members of the stream objects represented by the <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Console.Error%2A&gt;</ph> properties.</source>
          <target state="translated">Il est parfois utile d’appeler explicitement les membres des objets de flux de données représentés par la <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Console.Error%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example, by default, the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A?displayProperty=nameWithType&gt;</ph> method reads input from the standard input stream.</source>
          <target state="translated">Par exemple, par défaut, le <ph id="ph1">&lt;xref:System.Console.ReadLine%2A?displayProperty=nameWithType&gt;</ph> méthode lit l’entrée à partir du flux d’entrée standard.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Similarly, the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method writes data to the standard output stream, and the data is followed by the default line termination string, which is  a carriage return and line feed ("\r\n").</source>
          <target state="translated">De même, la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> méthode écrit des données dans le flux de sortie standard et les données sont suivies de la chaîne de terminaison de ligne par défaut, c'est-à-dire un retour chariot et saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class does not provide a corresponding method to write data to the standard error output stream, or a property to change the line termination string for data written to that stream.</source>
          <target state="translated">Toutefois, la <ph id="ph1">&lt;xref:System.Console&gt;</ph> classe ne fournit pas de méthode correspondante pour écrire des données dans le flux de sortie d’erreur standard, ou une propriété pour modifier la chaîne de terminaison de ligne des données écrites dans ce flux de données.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>You can solve this problem by setting the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Console.Error%2A&gt;</ph> property to another line termination string.</source>
          <target state="translated">Vous pouvez résoudre ce problème en définissant le <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> propriété de la <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Console.Error%2A&gt;</ph> propriété à une autre chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example, the following C# statement sets the line termination string for the standard error output stream to two carriage return and line feed sequences:</source>
          <target state="translated">Par exemple, l’instruction c# suivante définit la chaîne de terminaison de ligne pour le flux de sortie d’erreur standard à deux retour chariot et les séquences de saut de ligne :</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>You can then explicitly call the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method of the error output stream object, as in the following C# statement:</source>
          <target state="translated">Vous pouvez ensuite appeler explicitement la <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de l’objet erreur de flux de sortie, comme dans l’instruction c# suivante :</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Screen Buffer and Console Window</source>
          <target state="translated">Mémoire tampon d’écran et la fenêtre de Console</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Two closely related features of the console are the screen buffer and the console window.</source>
          <target state="translated">Deux fonctionnalités étroitement liées de la console sont la mémoire tampon d’écran et la fenêtre de console.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Text is actually read from or written to streams owned by the console, but appear to be read from or written to an area owned by the console called the screen buffer.</source>
          <target state="translated">Texte est réellement lues ou écrite dans les flux appartenant à la console, mais semble être lues ou écrites dans une zone détenue par la console de la mémoire tampon d’écran.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The screen buffer is an attribute of the console, and is organized as a rectangular grid of rows and columns where each grid intersection, or character cell, can contain a character.</source>
          <target state="translated">La mémoire tampon d’écran est un attribut de la console et organisée dans une grille rectangulaire de lignes et colonnes où chaque intersection de la grille ou une cellule de caractère, peut contenir un caractère.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Each character has its own foreground color, and each character cell has its own background color.</source>
          <target state="translated">Chaque caractère possède sa propre couleur de premier plan et chaque cellule de caractère possède sa propre couleur d’arrière-plan.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The screen buffer is viewed through a rectangular region called the console window.</source>
          <target state="translated">La mémoire tampon d’écran est affichée via une zone rectangulaire appelée fenêtre de console.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The console window is another attribute of the console; it is not the console itself, which is an operating system window.</source>
          <target state="translated">La fenêtre de console est un autre attribut de la console ; Il n’est pas la console, qui est une fenêtre de système d’exploitation.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The console window is arranged in rows and columns, is less than or equal to the size of the screen buffer, and can be moved to view different areas of the underlying screen buffer.</source>
          <target state="translated">La fenêtre de console est organisée en lignes et colonnes est inférieur ou égal à la taille de la mémoire tampon d’écran et peut être déplacée pour afficher les différentes zones de la mémoire tampon d’écran sous-jacent.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If the screen buffer is larger than the console window, the console automatically displays scroll bars so the console window can be repositioned over the screen buffer area.</source>
          <target state="translated">Si la mémoire tampon d’écran est supérieure à la fenêtre de console, la console affiche automatiquement les barres de défilement pour la fenêtre de console peut être repositionnée sur la zone de mémoire tampon d’écran.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>A cursor indicates the screen buffer position where text is currently read or written.</source>
          <target state="translated">Un curseur indique la position de mémoire tampon écran où texte est actuellement lue ou écrite.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The cursor can be hidden or made visible, and its height can be changed.</source>
          <target state="translated">Le curseur peut être masqué ou visibles, et sa hauteur peut être modifiée.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If the cursor is visible, the console window position is moved automatically so the cursor is always in view.</source>
          <target state="translated">Si le curseur est visible, la position de la fenêtre de console est déplacée automatiquement pour le curseur se trouve toujours dans la vue.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The origin for character cell coordinates in the screen buffer is the upper left corner, and the positions of the cursor and the console window are measured relative to that origin.</source>
          <target state="translated">L’origine des coordonnées de cellule de caractère dans la mémoire tampon d’écran est l’angle supérieur gauche, et les positions du curseur et de la fenêtre de console sont mesurées par rapport à cette origine.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Use zero-based indexes to specify positions; that is, specify the topmost row as row 0, and the leftmost column as column 0.</source>
          <target state="translated">Index de base zéro permet de spécifier les positions ; Autrement dit, spécifiez la ligne supérieure comme ligne 0 et la colonne la plus à gauche en tant que colonne 0.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The maximum value for the row and column indexes is <ph id="ph1">&lt;xref:System.Int16.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La valeur maximale pour les index de ligne et de colonne est <ph id="ph1">&lt;xref:System.Int16.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Unicode Support for the Console</source>
          <target state="translated">Prise en charge Unicode pour la Console</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>In general, the console reads input and writes output by using the current console code page, which the system locale defines by default.</source>
          <target state="translated">En règle générale, la console lit l’entrée et écrit la sortie à l’aide de la page de codes de console en cours, ce qui définit des paramètres régionaux du système par défaut.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>A code page can handle only a subset of available Unicode characters, so if you try to display characters that are not mapped by a particular code page, the console won't be able to display all characters or represent them accurately.</source>
          <target state="translated">Une page de codes peut gérer uniquement un sous-ensemble des caractères Unicode disponible, donc si vous tentez d’afficher les caractères qui ne sont pas mappées à une page de codes spécifique, la console ne pourra plus être afficher tous les caractères ou les représenter précisément.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example illustrates this problem.</source>
          <target state="translated">L'exemple de code suivant illustre ce problème.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>It tries to display the characters of the Cyrillic alphabet from U+0410 to U+044F to the console.</source>
          <target state="translated">Il essaie d’afficher les caractères de l’alphabet cyrillique de U + 0410 à U + 044F dans la console.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If you run the example on a system that uses console code page 437, each character is replaced by a question mark (?), because Cyrillic characters do not map to the characters in code page 437.</source>
          <target state="translated">Si vous exécutez l’exemple sur un système qui utilise la page de codes 437, chaque caractère est remplacé par un point d’interrogation ( ?), étant donné que les caractères cyrilliques ne correspondent pas aux caractères dans la page de codes 437.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>In addition to supporting code pages, the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class supports UTF-8 encoding with the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> class.</source>
          <target state="translated">Prise en charge des pages de codes, les <ph id="ph1">&lt;xref:System.Console&gt;</ph> classe prend en charge le codage UTF-8 la <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Beginning with the .NET Framework 4.5, the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class also supports UTF-16 encoding with the <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> class.</source>
          <target state="translated">À partir de .NET Framework 4.5, le <ph id="ph1">&lt;xref:System.Console&gt;</ph> classe prend également en charge le codage UTF-16 le <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To display Unicode characters to the console.</source>
          <target state="translated">Pour afficher les caractères Unicode dans la console.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>you set the <ph id="ph1">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> property to either <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> or  <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>.</source>
          <target state="translated">vous définissez la <ph id="ph1">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> propriété <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> ou <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Support for Unicode characters requires the encoder to recognize a particular Unicode character, and also requires a font that has the glyphs needed to render that character.</source>
          <target state="translated">Prise en charge des caractères Unicode requiert l’encodeur de reconnaître un caractère Unicode particulier, ainsi qu’une police qui a les glyphes nécessaires au rendu de ce caractère.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To successfully display Unicode characters to the console, the console font must be set to a non-raster or TrueType font such as Consolas or Lucida Console.</source>
          <target state="translated">Pour afficher correctement les caractères Unicode dans la console, la police de la console doit être définie à une non-raster ou une police TrueType comme Consolas ou Lucida Console.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example shows how you can programmatically change the font from a raster font to Lucida Console.</source>
          <target state="translated">L’exemple suivant montre comment vous pouvez modifier par programmation la police à partir d’une police raster Lucida Console.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, TrueType fonts can display only a subset of glyphs.</source>
          <target state="translated">Toutefois, les polices TrueType peuvent afficher uniquement un sous-ensemble de glyphes.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example, the Lucida Console font displays only 643 of the approximately 64,000 available characters from U+0021 to U+FB02.</source>
          <target state="translated">Par exemple, la police Lucida Console affiche uniquement les 643 64 000 caractères disponible à partir de U + 0021 à U + FB02.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To see which characters a particular font supports, open the <bpt id="p1">**</bpt>Fonts<ept id="p1">**</ept> applet in Control Panel, choose the <bpt id="p2">**</bpt>Find a character<ept id="p2">**</ept> option, and choose the font whose character set you'd like to examine in the <bpt id="p3">**</bpt>Font<ept id="p3">**</ept> list of the <bpt id="p4">**</bpt>Character Map<ept id="p4">**</ept> window.</source>
          <target state="translated">Pour voir une police particulière de caractères qui prend en charge, ouvrez le <bpt id="p1">**</bpt>polices<ept id="p1">**</ept> applet du Panneau de configuration, choisissez la <bpt id="p2">**</bpt>rechercher un caractère<ept id="p2">**</ept> option et choisir la police des jeux de caractère dont vous souhaitez examiner dans le <bpt id="p3">**</bpt> Police<ept id="p3">**</ept> liste de la <bpt id="p4">**</bpt>table des caractères<ept id="p4">**</ept> fenêtre.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Windows uses font linking to display glyphs that are not available in a particular font.</source>
          <target state="translated">Windows utilise la liaison de polices pour afficher des glyphes qui ne sont pas disponibles dans une police particulière.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For information about font linking to display additional character sets, see <bpt id="p1">[</bpt>Globalization Step-by-Step: Fonts<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=229111)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la police de liaison pour afficher les jeux de caractères supplémentaires, consultez <bpt id="p1">[</bpt>globalisation pas à pas : polices<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=229111)</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Linked fonts are defined in the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink subkey of the registry.</source>
          <target state="translated">Polices liés sont définis dans la sous-clé HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink du Registre.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Each entry associated with this subkey corresponds to the name of a base font, and its value is a string array that defines the font files and the fonts that are linked to the base font.</source>
          <target state="translated">Chaque écriture associée à cette sous-clé correspond au nom d’une police de base, et sa valeur est un tableau de chaînes qui définit les fichiers de polices et les polices qui sont liées à la police de base.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Each member of the array defines a linked font and takes the form <bpt id="p1">*</bpt>font-file-name<ept id="p1">*</ept>,<bpt id="p2">*</bpt>font-name<ept id="p2">*</ept>.</source>
          <target state="translated">Chaque membre du tableau définit une police liée et prend la forme <bpt id="p1">*</bpt>nom de fichier de police<ept id="p1">*</ept>,<bpt id="p2">*</bpt>-nom de la police<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example illustrates how you can programmatically define a linked font named SimSun found in a font file named simsun.ttc that displays Simplified Han characters.</source>
          <target state="translated">L’exemple suivant illustre comment vous pouvez définir par programme une police liée nommée SimSun trouvé dans un fichier de polices nommé simsun.ttc qui affiche les caractères simplifié de Han.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Unicode support for the console has the following limitations:</source>
          <target state="translated">Prise en charge Unicode pour la console présente les limitations suivantes :</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>UTF-32 encoding is not supported.</source>
          <target state="translated">Encodage UTF-32 n’est pas pris en charge.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The only supported Unicode encodings are UTF-8 and UTF-16, which are represented by the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> classes, respectively.</source>
          <target state="translated">La seule prise en charge d’Unicode UTF-8 et UTF-16, qui sont représentées par les encodages sont la <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> et <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> des classes, respectivement.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Bidirectional output is not supported.</source>
          <target state="translated">Sortie de bidirectionnelle n’est pas pris en charge.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Display of characters outside the Basic Multilingual Plane (that is, of surrogate pairs) is not supported, even if they are defined in a linked font file.</source>
          <target state="translated">Affichage des caractères en dehors du Basic Multilingual Plane (autrement dit, des paires de substitution) n’est pas compatible, même si elles sont définies dans un fichier de polices lié.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Display of characters in complex scripts is not supported.</source>
          <target state="translated">Affichage des caractères dans les scripts complexes n’est pas pris en charge.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Combining character sequences (that is, characters that consist of a base character and one or more combining characters) are displayed as separate characters.</source>
          <target state="translated">Combinaison des séquences de caractères (autrement dit, les caractères qui se composent d’un caractère de base et un ou plusieurs caractères de non-espacement) sont affichés en tant que caractères distincts.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To work around this limitation, you can normalize the string to be displayed by calling the <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> method before sending output to the console.</source>
          <target state="translated">Pour contourner cette limitation, vous pouvez normaliser la chaîne à afficher en appelant le <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> méthode avant d’envoyer la sortie à la console.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>In the following example, a string that contains the combining character sequence U+0061 U+0308 is displayed to the console as two characters before the output string is normalized, and as a single character after the <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated">Dans l’exemple suivant, une chaîne qui contient le caractère de la combinaison de séquence de U + 0061 U + 0308 est affichée dans la console, comme deux caractères avant la chaîne de sortie est normalisée et comme un seul caractère après le <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> méthode est appelée.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Note that normalization is a viable solution only if the Unicode standard for the character includes a pre-composed form that corresponds to a particular combining character sequence.</source>
          <target state="translated">Notez que la normalisation est une solution viable uniquement si la séquence de caractères Unicode standard pour le caractère inclut un formulaire préalable composé qui correspond à un particulier combining.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If a font provides a glyph for a code point in the private use area, that glyph will be displayed.</source>
          <target state="translated">Si une police fournit un glyphe pour un point de code dans la zone d’utilisation privée, ce glyphe s’affichera.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, because characters in the private use area are application-specific, this may not be the expected glyph.</source>
          <target state="translated">Toutefois, étant donné que les caractères de la zone d’utilisation privée sont spécifiques à l’application, cela peut être pas le glyphe attendu.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example displays a range of Unicode characters to the console.</source>
          <target state="translated">L’exemple suivant affiche une plage de caractères Unicode dans la console.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The example accepts three command-line parameters: the start of the range to display, the end of the range to display, and whether to use the current console encoding (<ph id="ph1">`false`</ph>) or UTF-16 encoding (<ph id="ph2">`true`</ph>).</source>
          <target state="translated">L’exemple accepte trois paramètres de ligne de commande : le début de la plage à afficher, à la fin de la plage à afficher et s’il faut utiliser l’encodage de console en cours (<ph id="ph1">`false`</ph>) ou de l’encodage UTF-16 (<ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>It assumes that the console is using a TrueType font.</source>
          <target state="translated">Il suppose que la console utilise une police TrueType.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Common Operations</source>
          <target state="translated">Opérations courantes</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console&gt;</ph> class contains the following methods for reading console input and writing console output:</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Console&gt;</ph> classe contient les méthodes suivantes pour lire l’entrée de la console et l’écriture de la sortie de console :</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method read an individual character.</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthode lire un caractère individuel.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method reads an entire line of input.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> méthode lit une ligne entière de l’entrée.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.Write%2A&gt;</ph> method overloads convert an instance of a value type, an array of characters, or a set of objects to a formatted or unformatted string, and then write that string to the console.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.Write%2A&gt;</ph> surcharges de méthode convertir une instance d’un type valeur, un tableau de caractères ou un ensemble d’objets en une chaîne formatée ou non et ensuite écrire cette chaîne dans la console.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>A parallel set of <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method overloads output the same string as the <ph id="ph2">&lt;xref:System.Console.Write%2A&gt;</ph> overloads but also add a line termination string.</source>
          <target state="translated">Une représentation parallèle de jeu de <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> sortie de la même chaîne en tant que les surcharges de méthode le <ph id="ph2">&lt;xref:System.Console.Write%2A&gt;</ph> surcharges mais également ajouter une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console&gt;</ph> class also contains methods and properties to perform the following operations:</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Console&gt;</ph> classe contient également des méthodes et propriétés pour effectuer les opérations suivantes :</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the size of the screen buffer.</source>
          <target state="translated">Obtient ou définit la taille de la mémoire tampon d’écran.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties let you get or set the buffer height and width, respectively, and the <ph id="ph3">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph> method lets you set the buffer size in a single method call.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> propriétés vous permettent d’obtenir ou définir la mémoire tampon hauteur et largeur, respectivement et le <ph id="ph3">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph> méthode vous permet de définir la taille de mémoire tampon dans un seul appel de méthode.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the size of the console window.</source>
          <target state="translated">Obtient ou définit la taille de la fenêtre de console.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties let you get or set the window height and width, respectively, and the <ph id="ph3">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> method lets you set the window size in a single method call.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> propriétés vous permettent d’obtenir ou définir respectivement, de la hauteur de la fenêtre et la largeur et la <ph id="ph3">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> méthode vous permet de définir la taille de fenêtre dans un seul appel de méthode.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the size of the cursor.</source>
          <target state="translated">Obtient ou définit la taille du curseur.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.CursorSize%2A&gt;</ph> property specifies the height of the cursor in a character cell.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.CursorSize%2A&gt;</ph> propriété spécifie la hauteur du curseur dans une cellule de caractère.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the position of the console window relative to the screen buffer.</source>
          <target state="translated">Obtient ou définit la position de la fenêtre de console par rapport à la mémoire tampon d’écran.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> properties let you get or set the top row and leftmost column of the screen buffer that appears in the console window, and the <ph id="ph3">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> method lets you set these values in a single method call.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> propriétés vous permettent d’obtenir ou définir la première ligne et la colonne de gauche de la mémoire tampon d’écran qui s’affiche dans la fenêtre de console, et le <ph id="ph3">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> méthode vous permet de définir ces valeurs dans un seul appel de méthode.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the position of the cursor by getting or setting the <ph id="ph1">&lt;xref:System.Console.CursorTop%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> properties, or set the position of the cursor by calling the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> method.</source>
          <target state="translated">Obtient ou définit la position du curseur à obtenir ou définir le <ph id="ph1">&lt;xref:System.Console.CursorTop%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> propriétés, ou un ensemble de la position du curseur en appelant le <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Move or clear data in the screen buffer by calling the <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Console.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Déplacer ou effacer les données dans la mémoire tampon d’écran en appelant le <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Console.Clear%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the foreground and background colors by using the <ph id="ph1">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> properties, or reset the background and foreground to their default colors by calling the <ph id="ph3">&lt;xref:System.Console.ResetColor%2A&gt;</ph> method.</source>
          <target state="translated">Obtenir ou définir les couleurs de premier plan et d’arrière-plan à l’aide de la <ph id="ph1">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> propriétés, ou de réinitialiser l’arrière-plan et premier plan pour les couleurs par défaut en appelant le <ph id="ph3">&lt;xref:System.Console.ResetColor%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Play the sound of a beep through the console speaker by calling the <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method.</source>
          <target state="translated">Lire le son d’un signal sonore via le haut-parleur de la console en appelant le <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> Notes</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> Notes</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>In the .NET Framework on the desktop, the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class uses the encoding returned by <ph id="ph2">`GetConsoleCP`</ph> and <ph id="ph3">`GetConsoleOutputCP`</ph>, which typically is a code page encoding.</source>
          <target state="translated">Dans le .NET Framework sur le bureau, le <ph id="ph1">&lt;xref:System.Console&gt;</ph> classe utilise l’encodage retourné par <ph id="ph2">`GetConsoleCP`</ph> et <ph id="ph3">`GetConsoleOutputCP`</ph>, qui en général, est une page de codes d’encodage.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example code, on systems whose culture is English (United States), code page 437 is the encoding that is used by default.</source>
          <target state="translated">Par exemple le code, sur les systèmes dont la culture anglais (États-Unis), page de codes 437 est l’encodage utilisé par défaut.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, <ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> may make only a limited subset of these encodings available.</source>
          <target state="translated">Toutefois, <ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> peut effectuer uniquement un sous-ensemble de ces encodages disponibles.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Where this is the case, <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> is used as the default encoding for the console.</source>
          <target state="translated">Dans ce cas, <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> est utilisé comme le codage par défaut pour la console.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If your app depends on specific code page encodings, you can still make them available by doing the following <bpt id="p1">*</bpt>before<ept id="p1">*</ept> you call any <ph id="ph1">&lt;xref:System.Console&gt;</ph> methods:</source>
          <target state="translated">Si votre application dépend des codages de pages de code spécifique, vous pouvez toujours les rendre disponibles en procédant comme suit <bpt id="p1">*</bpt>avant<ept id="p1">*</ept> vous appeler les <ph id="ph1">&lt;xref:System.Console&gt;</ph> méthodes :</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</source>
          <target state="translated">Ajoutez une référence à l’assembly System.Text.Encoding.CodePages.dll à votre projet.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Retrieve the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object from the <ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Récupérer le <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> de l’objet à partir de la <ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> method to make the additional encodings supported by the encoding provider available.</source>
          <target state="translated">Passez le <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> de l’objet à la <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> méthode pour rendre les encodages supplémentaires pris en charge par le fournisseur d’encodage disponible.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console&gt;</ph> class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any <ph id="ph2">&lt;xref:System.Console&gt;</ph> output methods.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console&gt;</ph> classe puis utiliseront automatiquement le codage du système par défaut plutôt que UTF8, sous réserve que vous avez enregistré le fournisseur d’encodage avant d’appeler une <ph id="ph2">&lt;xref:System.Console&gt;</ph> méthodes de sortie.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example demonstrates how to read data from, and write data to, the standard input and output streams.</source>
          <target state="translated">L’exemple suivant montre comment lire des données à partir d’et écrire des données, l’entrée standard et le flux de sortie.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Note that these streams can be redirected by using the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.SetOut%2A&gt;</ph> methods.</source>
          <target state="translated">Notez que ces flux peut être redirigés à l’aide de la <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.SetOut%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>This type is thread safe.</source>
          <target state="translated">Ce type est thread-safe.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Console.BackgroundColor">
          <source>Gets or sets the background color of the console.</source>
          <target state="translated">Obtient ou définit la couleur d'arrière-plan de la console.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>A value that specifies the background color of the console; that is, the color that appears behind each character.</source>
          <target state="translated">Valeur qui spécifie la couleur d'arrière-plan de la console, c'est-à-dire la couleur affichée derrière chaque caractère.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>The default is black.</source>
          <target state="translated">La valeur par défaut est noir.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>A change to the <ph id="ph1">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> property affects only output that is written to individual character cells after the background color is changed.</source>
          <target state="translated">Une modification apportée à la <ph id="ph1">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> propriété n'affecte que la sortie qui est écrit dans les cellules de caractères après la modification de la couleur d’arrière-plan.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>To change the background color of the console window as a whole, set the <ph id="ph1">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> property and call the <ph id="ph2">&lt;xref:System.Console.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Pour modifier la couleur d’arrière-plan de la fenêtre de console dans son ensemble, définissez le <ph id="ph1">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> propriété et appelez le <ph id="ph2">&lt;xref:System.Console.Clear%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>The following example provides an illustration.</source>
          <target state="translated">L'exemple suivant illustre cette situation.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>A get operation for a Windows-based application, in which a console does not exist, returns <ph id="ph1">&lt;xref:System.ConsoleColor.Black?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Une opération get pour une application Windows, dans lequel une console n’existe pas, renvoie <ph id="ph1">&lt;xref:System.ConsoleColor.Black?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>The following example saves the values of the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration to an array and stores the current values of the <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> properties to variables.</source>
          <target state="translated">L’exemple suivant enregistre les valeurs de la <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> énumération dans un tableau et stocke les valeurs actuelles de la <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> propriétés à des variables.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>It then changes the foreground color to each color in the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current background, and it changes the background color to each color in the <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current foreground.</source>
          <target state="translated">Il modifie ensuite la couleur de premier plan à chaque couleur de la <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> énumération à l’exception de la couleur qui correspond à l’arrière-plan en cours, et il modifie la couleur d’arrière-plan pour chaque couleur de la <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> énumération à l’exception de la couleur qui correspond à la au premier plan actuels.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> method to restore the original console colors.</source>
          <target state="translated">(Si la couleur de premier plan est identique à la couleur d’arrière-plan, le texte n’est pas visible.) Enfin, il appelle la <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> méthode pour restaurer les couleurs d’origine de la console.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Console.BackgroundColor">
          <source>The color specified in a set operation is not a valid member of <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>.</source>
          <target state="translated">La couleur spécifiée dans une opération set n’est pas un membre valide de <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Console.BackgroundColor">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Console.BackgroundColor">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Plays the sound of a beep through the console speaker.</source>
          <target state="translated">Lit le son d'un signal sonore via le haut-parleur de la console.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Console.Beep">
          <source>Plays the sound of a beep through the console speaker.</source>
          <target state="translated">Lit le son d'un signal sonore via le haut-parleur de la console.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>By default, the beep plays at a frequency of 800 hertz for a duration of 200 milliseconds.</source>
          <target state="translated">Par défaut, le signal sonore est lu à une fréquence de 800 hertz pour une durée de 200 millisecondes.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>The <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> méthode n’est pas prise en charge sur les éditions 64 bits de Windows Vista et Windows XP.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> wraps a call to the Windows <bpt id="p1">[</bpt>Beep function<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> encapsule un appel à Windows <bpt id="p1">[</bpt>émettre un signal sonore fonction<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>Whether <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> génère un son sur les versions de Windows avant que Windows 7 dépend de la présence d’une puce de minuterie d’intervalle programmable de 8254.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>Starting with Windows 7, it depends on the default sound device.</source>
          <target state="translated">À compter de Windows 7, il dépend du périphérique audio par défaut.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>The example accepts a number from 1 through 9 as a command line argument, and plays the beep that number of times.</source>
          <target state="translated">L’exemple accepte un nombre compris entre 1 et 9 comme argument de ligne de commande et lit le signal sonore ce nombre de fois.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Console.Beep">
          <source>This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</source>
          <target state="translated">Cette méthode a été exécutée sur un serveur, tel que SQL Server, qui n’autorise pas l’accès à l’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>The frequency of the beep, ranging from 37 to 32767 hertz.</source>
          <target state="translated">Fréquence du signal sonore, comprise entre 37 et 32 767 hertz.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>The duration of the beep measured in milliseconds.</source>
          <target state="translated">Durée du signal sonore mesurée en millisecondes.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>Plays the sound of a beep of a specified frequency and duration through the console speaker.</source>
          <target state="translated">Lit le son d'un signal sonore à la fréquence et pendant la durée spécifiées, via le haut-parleur de la console.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> wraps a call to the Windows <bpt id="p1">[</bpt>Beep function<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> encapsule un appel à Windows <bpt id="p1">[</bpt>émettre un signal sonore fonction<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>Whether <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> génère un son sur les versions de Windows avant que Windows 7 dépend de la présence d’une puce de minuterie d’intervalle programmable de 8254.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>Starting with Windows 7, it depends on the default sound device.</source>
          <target state="translated">À compter de Windows 7, il dépend du périphérique audio par défaut.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> méthode n’est pas prise en charge sur les éditions 64 bits de Windows Vista et Windows XP.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method by playing the first few notes of a song through the console speaker.</source>
          <target state="translated">Cet exemple illustre la <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> méthode en lisant les premières notes d’une chanson via le haut-parleur de la console.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="frequency" /&gt;</ph> is less than 37 or more than 32767 hertz.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="frequency" /&gt;</ph> est inférieur à 37 ou supérieur à 32 767 hertz.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="duration" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="duration" /&gt;</ph> est inférieur ou égal à zéro.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>This method was executed on a server, such as SQL Server, that does not permit access to the console.</source>
          <target state="translated">Cette méthode a été exécutée sur un serveur, tel que SQL Server, qui n’autorise pas l’accès à la console.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>Gets or sets the height of the buffer area.</source>
          <target state="translated">Obtient ou définit la hauteur de la zone de mémoire tampon.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>The current height, in rows, of the buffer area.</source>
          <target state="translated">Hauteur, en lignes, de la zone de mémoire tampon.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>This property defines the number of rows (or lines) stored in the buffer that is accessed by a console mode window.</source>
          <target state="translated">Cette propriété définit le nombre de lignes (ou lignes) stockées dans la mémoire tampon qui est accessible par une fenêtre du mode console.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> property defines the number of rows that are actually displayed in the console window at any particular time.</source>
          <target state="translated">En revanche, le <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> propriété définit le nombre de lignes réellement affichées dans la fenêtre de console à un moment donné.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>If the number of rows actually written to the buffer exceeds the number of rows defined by the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> property, the window can be scrolled vertically so that it displays a contiguous number of rows that are equal to the <ph id="ph2">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> property and are located anywhere in the buffer.</source>
          <target state="translated">Si le nombre de lignes réellement écrites dans la mémoire tampon dépasse le nombre de lignes défini par le <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> propriété, la fenêtre peut défiler verticalement afin qu’elle affiche un nombre contigu de lignes qui correspondent à la <ph id="ph2">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> et propriété localisées n’importe où dans la mémoire tampon.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>If a set operation decreases the value of the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> property, the uppermost lines are removed.</source>
          <target state="translated">Si une opération ensembliste réduit la valeur de la <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> propriété, les lignes supérieure sont supprimées.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>For example, if the number of lines is reduced from 300 to 250, lines 0 through 49 are removed, and the existing lines 50 through 299 become lines 0 through 249.</source>
          <target state="translated">Par exemple, si le nombre de lignes est réduit de 300 à 250, entre 0 et 49 les lignes sont supprimées et 50 et 299 deviennent des lignes existantes lignes 249 à 0.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties.</source>
          <target state="translated">Cet exemple illustre la <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</source>
          <target state="translated">L’exemple rapporte les dimensions d’une fenêtre de système d’exploitation défini sur une taille de mémoire tampon de 300 lignes et 85 colonnes.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>The value in a set operation is less than or equal to zero.</source>
          <target state="translated">La valeur incluse dans une opération ensembliste est inférieure ou égale à zéro.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>The value in a set operation is greater than or equal to <ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La valeur incluse dans une opération ensembliste est supérieure ou égale à <ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>The value in a set operation is less than <ph id="ph1">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>.</source>
          <target state="translated">La valeur incluse dans une opération ensembliste est inférieure à <ph id="ph1">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>Gets or sets the width of the buffer area.</source>
          <target state="translated">Obtient ou définit la largeur de la zone de mémoire tampon.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>The current width, in columns, of the buffer area.</source>
          <target state="translated">Largeur, en colonnes, de la zone de mémoire tampon.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>If a set operation decreases the value of the <ph id="ph1">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> property, the rightmost columns are removed.</source>
          <target state="translated">Si une opération ensembliste réduit la valeur de la <ph id="ph1">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> propriété, les colonnes plus à droite sont supprimés.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>For example, if the number of columns is reduced from 80 to 60, columns 60 through 79 of each row are removed.</source>
          <target state="translated">Par exemple, si le nombre de colonnes est réduit de 80 à 60, colonnes 60 et 79 de chaque ligne sont supprimés.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties.</source>
          <target state="translated">Cet exemple illustre la <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</source>
          <target state="translated">L’exemple rapporte les dimensions d’une fenêtre de système d’exploitation défini sur une taille de mémoire tampon de 300 lignes et 85 colonnes.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>The value in a set operation is less than or equal to zero.</source>
          <target state="translated">La valeur incluse dans une opération ensembliste est inférieure ou égale à zéro.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>The value in a set operation is greater than or equal to <ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La valeur incluse dans une opération ensembliste est supérieure ou égale à <ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>The value in a set operation is less than <ph id="ph1">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>.</source>
          <target state="translated">La valeur incluse dans une opération ensembliste est inférieure à <ph id="ph1">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="E:System.Console.CancelKeyPress">
          <source>Occurs when the <ph id="ph1">&lt;see cref="F:System.ConsoleModifiers.Control" /&gt;</ph> modifier key (Ctrl) and either the <ph id="ph2">&lt;see cref="F:System.ConsoleKey.C" /&gt;</ph> console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).</source>
          <target state="translated">Se produit quand la touche de modification (Ctrl) <ph id="ph1">&lt;see cref="F:System.ConsoleModifiers.Control" /&gt;</ph> et la touche de console (C) <ph id="ph2">&lt;see cref="F:System.ConsoleKey.C" /&gt;</ph> ou la touche d'arrêt sont utilisées simultanément (Ctrl+C ou Ctrl+Pause).</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>This event is used in conjunction with <ph id="ph1">&lt;xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cet événement est utilisé conjointement avec <ph id="ph1">&lt;xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>The <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> event enables a console application to intercept the Ctrl+C signal so the event handler can decide whether to continue executing or terminate.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> événement permet d’intercepter le signal Ctrl + C pour le Gestionnaire d’événements peut décider de poursuivre l’exécution ou de mettre fin à une application console.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>When the user presses either Ctrl+C or Ctrl+Break, the <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> event is fired and the application's <ph id="ph2">&lt;xref:System.ConsoleCancelEventHandler&gt;</ph> event handler is executed.</source>
          <target state="translated">Lorsque l’utilisateur appuie sur Ctrl + C ou Ctrl + Pause, le <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> événement est déclenché et l’application <ph id="ph2">&lt;xref:System.ConsoleCancelEventHandler&gt;</ph> Gestionnaire d’événements est exécuté.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>The event handler is passed a <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs&gt;</ph> object that has two useful properties:</source>
          <target state="translated">Le Gestionnaire d’événements est passé un <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs&gt;</ph> objet qui a deux propriétés utiles :</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source><ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.SpecialKey%2A&gt;</ph>, which allows you to determine whether the handler was invoked as a result of the user pressing Ctrl+C (the property value is <ph id="ph2">&lt;xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType&gt;</ph>) or Ctrl+Break (the property value is <ph id="ph3">&lt;xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.SpecialKey%2A&gt;</ph>, qui vous permet de déterminer si le gestionnaire a été appelé à la suite de l’utilisateur en appuyant sur Ctrl + C (la valeur de propriété est <ph id="ph2">&lt;xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType&gt;</ph>) ou Ctrl + Pause (la valeur de propriété est <ph id="ph3">&lt;xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source><ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph>, which allows you to determine how to your application should respond to the user pressing Ctrl+C or Ctrl+Break.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph>, qui vous permet de déterminer comment votre application doit répondre à l’utilisateur en appuyant sur Ctrl + C ou Ctrl + Pause.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>By default, the <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, which causes program execution to terminate when the event handler exits.</source>
          <target state="translated">Par défaut, le <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph> propriété <ph id="ph2">`false`</ph>, qui se termine lorsque le Gestionnaire d’événements s’arrête l’exécution du programme causes.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>Changing its property to <ph id="ph1">`true`</ph> specifies that the application should continue to execute.</source>
          <target state="translated">La modification à sa propriété <ph id="ph1">`true`</ph> indique que l’application doit continuer à exécuter.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>If your application has simple requirements, you can use the <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> property instead of this event.</source>
          <target state="translated">Si votre application présente des exigences simples, vous pouvez utiliser le <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> propriété au lieu de cet événement.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>By setting this property to <ph id="ph1">`false`</ph>, you can ensure that your application always exits if the user presses Ctrl+C.</source>
          <target state="translated">En définissant cette propriété sur <ph id="ph1">`false`</ph>, vous pouvez vous assurer que votre application est toujours se termine si l’utilisateur appuie sur Ctrl + C.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>By setting it to <ph id="ph1">`true`</ph>, you can ensure that pressing Ctrl+C will not terminate the application.</source>
          <target state="translated">En lui affectant <ph id="ph1">`true`</ph>, vous pouvez vous assurer qu’en appuyant sur Ctrl + C ne terminera pas l’application.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>The event handler for this event is executed on a thread pool thread.</source>
          <target state="translated">Le Gestionnaire d’événements pour cet événement est exécuté sur un thread de pool de threads.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> event is used.</source>
          <target state="translated">L’exemple suivant montre comment la <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> des événements est utilisé.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>When you press Ctrl+C, the read operation is interrupted and the <ph id="ph1">`myHandler`</ph> event handler is invoked.</source>
          <target state="translated">Lorsque vous appuyez sur Ctrl + C, l’opération de lecture est interrompue et la <ph id="ph1">`myHandler`</ph> Gestionnaire d’événements est appelé.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>Upon entry to the event handler, the <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, which means that the current process will terminate when the event handler terminates.</source>
          <target state="translated">Lors de l’entrée au gestionnaire d’événements, le <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> propriété est <ph id="ph2">`false`</ph>, ce qui signifie que le processus en cours va se terminer lorsque le Gestionnaire d’événements s’arrête.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>However, the event handler sets the <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph>, which means that the process will not terminate and the read operation will resume.</source>
          <target state="translated">Toutefois, le Gestionnaire d’événements définit la <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> propriété <ph id="ph2">`true`</ph>, ce qui signifie que le processus ne se terminera pas et reprend l’opération de lecture.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Console.CapsLock">
          <source>Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.</source>
          <target state="translated">Obtient une valeur indiquant si la bascule de la touche VERR. MAJ est activée ou désactivée.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CapsLock">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if CAPS LOCK is turned on; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if CAPS LOCK is turned off.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si VERR. MAJ est activé ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si VERR. MAJ est désactivé.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Console.Clear">
          <source>Clears the console buffer and corresponding console window of display information.</source>
          <target state="translated">Efface la mémoire tampon et la fenêtre correspondante de la console contenant les informations d'affichage.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>Using the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method is equivalent invoking the MS-DOS <ph id="ph2">`cls`</ph> command in the command prompt window.</source>
          <target state="translated">À l’aide de la <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> méthode est équivalente à l’appel MS-DOS <ph id="ph2">`cls`</ph> commande dans la fenêtre d’invite de commandes.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>When the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method is called, the cursor automatically scrolls to the top-left corner of the window and the contents of the screen buffer are set to blanks using the current foreground background colors.</source>
          <target state="translated">Lorsque la <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> méthode est appelée, le curseur se place automatiquement à l’angle supérieur gauche de la fenêtre et le contenu de la mémoire tampon d’écran est défini avec des espaces à l’aide des couleurs d’arrière-plan de premier plan actuelle.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>Attempting to call the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method when a console application's output is redirected to a file throws a <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">Essayez d’appeler le <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> méthode lors de la sortie d’une application console est redirigée vers un fichier lève un <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>To prevent this, always wrap a call to the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method in a <ph id="ph2">`try`</ph>…<ph id="ph3">`catch`</ph></source>
          <target state="translated">Pour éviter ce problème, encapsulez toujours un appel à la <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> méthode dans un <ph id="ph2">`try`</ph>...<ph id="ph3">`catch`</ph></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>block.</source>
          <target state="translated">bloc.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method to clear the console before it executes a loop, prompts the user to select a foreground and background color and to enter a string to display.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> méthode pour effacer la console avant d’exécuter une boucle, invite l’utilisateur pour sélectionner une couleur de premier plan et arrière-plan et entrez une chaîne à afficher.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>If the user chooses not to exit the program, the console's original foreground and background colors are restored and the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method is called again before re-executing the loop.</source>
          <target state="translated">Si l’utilisateur choisit de ne pas quitter le programme, les couleurs de premier plan et arrière-plan d’origine de la console sont restaurées et le <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> méthode est appelée avant l’exécution de nouveau la boucle.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>The example relies on a <ph id="ph1">`GetKeyPress`</ph> method to validate the user's selection of a foreground and background color.</source>
          <target state="translated">L’exemple s’appuie sur une <ph id="ph1">`GetKeyPress`</ph> méthode pour valider la sélection de l’utilisateur d’une couleur de premier plan et d’arrière-plan.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> properties, and the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> methods.</source>
          <target state="translated">Cet exemple illustre la <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> propriétés et le <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&amp;#124;", and "-" strings.</source>
          <target state="translated">L’exemple positionne le curseur, qui détermine l’emplacement de l’écriture suivante, pour dessiner un rectangle de 5 caractères à l’aide d’une combinaison de 5 « + », «&amp;#124;», et «- » des chaînes.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>Note that the rectangle could be drawn with fewer steps using a combination of other strings.</source>
          <target state="translated">Notez que le rectangle pourrait être dessiné avec moins d’étapes à l’aide d’une autre combinaison de chaînes.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Console.Clear">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>Gets or sets the column position of the cursor within the buffer area.</source>
          <target state="translated">Obtient ou définit la position de colonne du curseur dans la zone de mémoire tampon.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>The current position, in columns, of the cursor.</source>
          <target state="translated">Position actuelle, en colonnes, du curseur.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> properties, and the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> methods.</source>
          <target state="translated">Cet exemple illustre la <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> propriétés et le <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&amp;#124;", and "-" strings.</source>
          <target state="translated">L’exemple positionne le curseur, qui détermine l’emplacement de l’écriture suivante, pour dessiner un rectangle de 5 caractères à l’aide d’une combinaison de 5 « + », «&amp;#124;», et «- » des chaînes.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>Note that the rectangle could be drawn with fewer steps using a combination of other strings.</source>
          <target state="translated">Notez que le rectangle pourrait être dessiné avec moins d’étapes à l’aide d’une autre combinaison de chaînes.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>The value in a set operation is less than zero.</source>
          <target state="translated">La valeur d’une opération ensembliste est inférieure à zéro.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>The value in a set operation is greater than or equal to <ph id="ph1">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated">La valeur d’une opération ensembliste est supérieure ou égale à <ph id="ph1">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Console.CursorSize">
          <source>Gets or sets the height of the cursor within a character cell.</source>
          <target state="translated">Obtient ou définit la hauteur du curseur dans une cellule de caractère.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>The size of the cursor expressed as a percentage of the height of a character cell.</source>
          <target state="translated">Taille du curseur exprimée en pourcentage de la hauteur d'une cellule de caractère.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>The property value ranges from 1 to 100.</source>
          <target state="translated">La valeur de la propriété est comprise entre 1 et 100.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>The cursor appearance varies, ranging from a horizontal line at the bottom of the cell when the property value is 1, to completely filling the cell when the property value is 100.</source>
          <target state="translated">L’apparence du curseur varie, allant d’une ligne horizontale au bas de la cellule lorsque la valeur de propriété est 1, pour remplir complètement la cellule lorsque la valeur de propriété est 100.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorSize%2A&gt;</ph> property.</source>
          <target state="translated">Cet exemple illustre le <ph id="ph1">&lt;xref:System.Console.CursorSize%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>The example increases the size of the cursor each time any console key is pressed, then restores the cursor to its original size before terminating.</source>
          <target state="translated">L’exemple augmente la taille du curseur chaque fois qu’une touche de console est enfoncée, puis restaure le curseur à sa taille d’origine avant de mettre fin.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="P:System.Console.CursorSize">
          <source>The value specified in a set operation is less than 1 or greater than 100.</source>
          <target state="translated">La valeur spécifiée dans une opération ensembliste est inférieure à 1 ou supérieure à 100.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Console.CursorSize">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Console.CursorSize">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>Gets or sets the row position of the cursor within the buffer area.</source>
          <target state="translated">Obtient ou définit la position de ligne du curseur dans la zone de mémoire tampon.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>The current position, in rows, of the cursor.</source>
          <target state="translated">Position actuelle, en lignes, du curseur.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> properties, and the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> methods.</source>
          <target state="translated">Cet exemple illustre la <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> propriétés et le <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&amp;#124;", and "-" strings.</source>
          <target state="translated">L’exemple positionne le curseur, qui détermine l’emplacement de l’écriture suivante, pour dessiner un rectangle de 5 caractères à l’aide d’une combinaison de 5 « + », «&amp;#124;», et «- » des chaînes.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>Note that the rectangle could be drawn with fewer steps using a combination of other strings.</source>
          <target state="translated">Notez que le rectangle pourrait être dessiné avec moins d’étapes à l’aide d’une autre combinaison de chaînes.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>The value in a set operation is less than zero.</source>
          <target state="translated">La valeur d’une opération ensembliste est inférieure à zéro.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>The value in a set operation is greater than or equal to <ph id="ph1">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated">La valeur d’une opération ensembliste est supérieure ou égale à <ph id="ph1">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="P:System.Console.CursorVisible">
          <source>Gets or sets a value indicating whether the cursor is visible.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si le curseur est visible.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the cursor is visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le curseur est visible ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> property.</source>
          <target state="translated">Cet exemple illustre le <ph id="ph1">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source>The example makes the cursor visible if the first column of input is a '+' character or invisible if the input is a '-' character.</source>
          <target state="translated">L’exemple rend le curseur visible si la première colonne d’entrée est un caractère « + » ou invisible si l’entrée est un '-' caractères.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="P:System.Console.CursorVisible">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="P:System.Console.CursorVisible">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="P:System.Console.Error">
          <source>Gets the standard error output stream.</source>
          <target state="translated">Obtient le flux de sortie d'erreur standard.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that represents the standard error output stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> qui représente le flux de sortie d'erreur standard.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>This standard error stream is set to the console by default.</source>
          <target state="translated">Par défaut, ce flux d’erreur standard est défini sur la console.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>It can be set to another stream with the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method.</source>
          <target state="translated">Elle peut être définie dans un autre flux avec le <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>After the standard error stream is redirected, it can be reacquired by calling the <ph id="ph1">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> method.</source>
          <target state="translated">Une fois que le flux d’erreur standard est redirigé, il peut être acquis à nouveau en appelant le <ph id="ph1">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>In console applications whose informational output is often redirected to a file, the standard error stream available through the <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> property can be used to display information to the console even if output is redirected.</source>
          <target state="translated">Dans les applications console dont la sortie d’information est souvent redirigée vers un fichier, l’erreur standard de flux disponibles via le <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> propriété peut être utilisée pour afficher des informations sur la console même si la sortie est redirigée.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>The following example displays product tables for 10 numbers at a time starting with 1.</source>
          <target state="translated">L’exemple suivant affiche les tables de produit de 10 numéros à la fois en commençant par 1.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>After every set of 10 numbers, the <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> property is used to ask the user whether to display the next set.</source>
          <target state="translated">Après chaque ensemble de 10 chiffres, le <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> propriété est utilisée pour demander à l’utilisateur s’il faut afficher l’ensemble suivant.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>If the standard output is redirected to a file, the user is still asked whether the routine should generate the next set of products.</source>
          <target state="translated">Si la sortie standard est redirigée vers un fichier, l’utilisateur est toujours invité à indiquer si la routine doit générer l’ensemble suivant de produits.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>The following example is a command line utility named ExpandTabs that replaces tab characters in a text file with four spaces, the value defined by the <ph id="ph1">`tabSize`</ph> variable.</source>
          <target state="translated">L’exemple suivant est un utilitaire de ligne de commande nommé ExpandTabs qui remplace les caractères de tabulation dans un fichier texte avec quatre espaces, la valeur définie par le <ph id="ph1">`tabSize`</ph> variable.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>It redirects the standard input and output streams to files, but uses the <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> property to write the standard error stream to the console.</source>
          <target state="translated">Il redirige l’entrée standard et diffuse en continu sur les fichiers de sortie, mais utilise le <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> propriété à écrire le flux d’erreur standard dans la console.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>It can be launched from the command line by supplying the name of the file that contains tab characters and the name of the output file.</source>
          <target state="translated">Il peut être lancé depuis la ligne de commande, vous devez fournir le nom du fichier qui contient des caractères de tabulation et le nom du fichier de sortie.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>The following example is a simple text file viewer that displays the contents of one or more text files to the console.</source>
          <target state="translated">L’exemple suivant est une visionneuse du fichier texte simple qui affiche le contenu d’un ou plusieurs fichiers de texte dans la console.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method to redirect error information to a file, calls the <ph id="ph2">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</source>
          <target state="translated">Si aucun argument de ligne de commande, ou si tous les fichiers passés comme arguments de ligne de commande n’existent pas, l’exemple appelle la <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> appels de méthode pour rediriger les informations d’erreur dans un fichier, le <ph id="ph2">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> en train de redemander l’erreur standard (méthode) flux et indique que les informations d’erreur a été écrite dans un fichier.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>Note that the <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> property is set to <ph id="ph2">`true`</ph> before reacquiring the error stream.</source>
          <target state="translated">Notez que la <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> est définie sur <ph id="ph2">`true`</ph> avant de redemander le flux d’erreur.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>This ensures that output will be sent to the console immediately rather than buffered.</source>
          <target state="translated">Cela garantit que sortie est envoyée à la console immédiatement plutôt que mis en mémoire tampon.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="P:System.Console.ForegroundColor">
          <source>Gets or sets the foreground color of the console.</source>
          <target state="translated">Obtient ou définit la couleur de premier plan de la console.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph> that specifies the foreground color of the console; that is, the color of each character that is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph> qui spécifie la couleur de premier plan de la console, c'est-à-dire la couleur de chaque caractère affiché.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>The default is gray.</source>
          <target state="translated">La valeur par défaut est gris.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>A get operation for a Windows-based application, in which a console does not exist, returns <ph id="ph1">&lt;xref:System.ConsoleColor.Gray&gt;</ph>.</source>
          <target state="translated">Une opération get pour une application Windows, dans lequel une console n’existe pas, renvoie <ph id="ph1">&lt;xref:System.ConsoleColor.Gray&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>The following example checks whether the console's background color is black and, if it is, it changes the background color to red and the foreground color to black.</source>
          <target state="translated">L’exemple suivant vérifie si couleur d’arrière-plan de la console est noir et, s’il s’agit, il modifie la couleur d’arrière-plan rouge et noir la couleur de premier plan.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>The following example saves the values of the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration to an array and stores the current values of the <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> properties to variables.</source>
          <target state="translated">L’exemple suivant enregistre les valeurs de la <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> énumération dans un tableau et stocke les valeurs actuelles de la <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> propriétés à des variables.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>It then changes the foreground color to each color in the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current background, and it changes the background color to each color in the <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current foreground.</source>
          <target state="translated">Il modifie ensuite la couleur de premier plan à chaque couleur de la <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> énumération à l’exception de la couleur qui correspond à l’arrière-plan en cours, et il modifie la couleur d’arrière-plan pour chaque couleur de la <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> énumération à l’exception de la couleur qui correspond à la au premier plan actuels.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> method to restore the original console colors.</source>
          <target state="translated">(Si la couleur de premier plan est identique à la couleur d’arrière-plan, le texte n’est pas visible.) Enfin, il appelle la <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> méthode pour restaurer les couleurs d’origine de la console.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="P:System.Console.ForegroundColor">
          <source>The color specified in a set operation is not a valid member of <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>.</source>
          <target state="translated">La couleur spécifiée dans une opération set n’est pas un membre valide de <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="P:System.Console.ForegroundColor">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="P:System.Console.ForegroundColor">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="P:System.Console.In">
          <source>Gets the standard input stream.</source>
          <target state="translated">Obtient le flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that represents the standard input stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> qui représente le flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>This property is set to the standard input stream by default.</source>
          <target state="translated">Par défaut, cette propriété est définie dans le flux d’entrée standard.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>This property can be set to another stream with the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">Cette propriété peut être définie dans un autre flux avec le <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>Read operations on the standard input stream execute synchronously.</source>
          <target state="translated">Les opérations de lecture sur le flux d’entrée standard s’exécutent de façon synchrone.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>That is, they block until the specified read operation has completed.</source>
          <target state="translated">Autrement dit, ils bloquent jusqu'à ce que l’opération de lecture spécifiée est terminée.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>This is true even if an asynchronous method, such as <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A&gt;</ph>, is called on the <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Console.In%2A&gt;</ph> property.</source>
          <target state="translated">Cela est vrai même si une méthode asynchrone, tel que <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A&gt;</ph>, est appelée sur le <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> objet retourné par la <ph id="ph3">&lt;xref:System.Console.In%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>The following sample illustrates the use of the <ph id="ph1">`In`</ph> property.</source>
          <target state="translated">L’exemple suivant illustre l’utilisation de la <ph id="ph1">`In`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="P:System.Console.InputEncoding">
          <source>Gets or sets the encoding the console uses to read input.</source>
          <target state="translated">Obtient ou définit l'encodage que la console utilise pour lire l'entrée.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>The encoding used to read console input.</source>
          <target state="translated">Encodage utilisé pour lire l'entrée de la console.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>The console uses the input encoding to translate keyboard input into a corresponding character.</source>
          <target state="translated">La console utilise l’encodage d’entrée pour traduire l’entrée au clavier en un caractère correspondant.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>The input encoding incorporates a code page that maps 256 keyboard character codes to individual characters.</source>
          <target state="translated">L’encodage d’entrée incorpore une page de codes qui mappe les 256 codes de caractère de clavier à des caractères individuels.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>Different code pages include different special characters, typically customized for a language or a group of languages.</source>
          <target state="translated">Les différentes pages de code incluent des caractères spéciaux différents, généralement personnalisés pour une langue ou un groupe de langues.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, a property get operation may return a cached value instead of the console's current input encoding.</source>
          <target state="translated">En commençant par le <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, une opération get de propriété peut retourner une valeur mise en cache au lieu de l’encodage d’entrée actuel de la console.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>This can occur if the value of the <ph id="ph1">&lt;xref:System.Console.InputEncoding%2A&gt;</ph> property is modified by some means other than an assignment to the <ph id="ph2">&lt;xref:System.Console.InputEncoding%2A&gt;</ph> property, such as calling the Windows <ph id="ph3">`SetConsoleCP`</ph> function or using the <ph id="ph4">`chcp`</ph> command from a PowerShell script.</source>
          <target state="translated">Cela peut se produire si la valeur de la <ph id="ph1">&lt;xref:System.Console.InputEncoding%2A&gt;</ph> propriété est modifiée par un moyen autre que d’une assignation à la <ph id="ph2">&lt;xref:System.Console.InputEncoding%2A&gt;</ph> propriété, telles que les fenêtres de l’appel <ph id="ph3">`SetConsoleCP`</ph> fonction ou à l’aide de la <ph id="ph4">`chcp`</ph> commande à partir d’un script PowerShell.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.Console.InputEncoding">
          <source>The property value in a set operation is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur de propriété dans une opération set est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Console.InputEncoding">
          <source>An error occurred during the execution of this operation.</source>
          <target state="translated">Une erreur s’est produite lors de l’exécution de cette opération.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Console.InputEncoding">
          <source>Your application does not have permission to perform this operation.</source>
          <target state="translated">Votre application n’est pas autorisée à effectuer cette opération.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>for reading and writing to top-level windows and subwindows.</source>
          <target state="translated">pour lire et écrire sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="P:System.Console.IsErrorRedirected">
          <source>Gets a value that indicates whether the error output stream has been redirected from the standard error stream.</source>
          <target state="translated">Obtient une valeur qui indique si le flux de sortie d'erreur a été redirigé à partir du flux d'erreur standard.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.IsErrorRedirected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if error output is redirected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la sortie d'erreur est redirigée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="P:System.Console.IsInputRedirected">
          <source>Gets a value that indicates whether input has been redirected from the standard input stream.</source>
          <target state="translated">Obtient une valeur qui indique si l'entrée a été redirigée à partir du flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.IsInputRedirected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if input is redirected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'entrée est redirigée ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="P:System.Console.IsOutputRedirected">
          <source>Gets a value that indicates whether output has been redirected from the standard output stream.</source>
          <target state="translated">Obtient une valeur qui indique si la sortie a été redirigée à partir du flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.IsOutputRedirected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if output is redirected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la sortie est redirigée ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="P:System.Console.KeyAvailable">
          <source>Gets a value indicating whether a key press is available in the input stream.</source>
          <target state="translated">Obtient une valeur indiquant si l'appui sur une touche est disponible dans le flux d'entrée.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.KeyAvailable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a key press is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'appui sur une touche est disponible, sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.KeyAvailable">
          <source>The property value is returned immediately; that is, the <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property does not block input until a key press is available.</source>
          <target state="translated">La valeur de propriété est retournée immédiatement ; Autrement dit, le <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> propriété ne bloque pas l’entrée jusqu'à ce qu’une touche est disponible.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.KeyAvailable">
          <source>Use the <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property in conjunction with only the <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method, not the <ph id="ph3">&lt;xref:System.Console.Read%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Console.ReadLine%2A&gt;</ph> methods.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> propriété conjointement avec uniquement le <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> (méthode), pas le <ph id="ph3">&lt;xref:System.Console.Read%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Console.ReadLine%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.KeyAvailable">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property to create a loop that runs until a key is pressed.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> propriété pour créer une boucle qui s’exécute jusqu'à ce qu’une touche est enfoncée.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="P:System.Console.KeyAvailable">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="P:System.Console.KeyAvailable">
          <source>Standard input is redirected to a file instead of the keyboard.</source>
          <target state="translated">L’entrée standard est redirigée vers un fichier au lieu du clavier.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="P:System.Console.LargestWindowHeight">
          <source>Gets the largest possible number of console window rows, based on the current font and screen resolution.</source>
          <target state="translated">Obtient le plus grand nombre possible de lignes de fenêtre de console, selon la police et la résolution d’écran actuelles.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.LargestWindowHeight">
          <source>The height of the largest possible console window measured in rows.</source>
          <target state="translated">Hauteur de la plus grande fenêtre de console possible mesurée en lignes.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Console.LargestWindowWidth">
          <source>Gets the largest possible number of console window columns, based on the current font and screen resolution.</source>
          <target state="translated">Obtient le plus grand nombre possible de colonnes de fenêtre de console, selon la police et la résolution d’écran actuelles.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.LargestWindowWidth">
          <source>The width of the largest possible console window measured in columns.</source>
          <target state="translated">Largeur de la plus grande fenêtre de console possible mesurée en colonnes.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Copies a specified source area of the screen buffer to a specified destination area.</source>
          <target state="translated">Copie une zone source spécifiée de la mémoire tampon d'écran dans une zone de destination spécifiée.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The leftmost column of the source area.</source>
          <target state="translated">Colonne la plus à gauche de la zone source.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The topmost row of the source area.</source>
          <target state="translated">Ligne supérieure de la zone source.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The number of columns in the source area.</source>
          <target state="translated">Nombre de colonnes de la zone source.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The number of rows in the source area.</source>
          <target state="translated">Nombre de lignes de la zone source.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The leftmost column of the destination area.</source>
          <target state="translated">Colonne la plus à gauche de la zone de destination.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The topmost row of the destination area.</source>
          <target state="translated">Ligne supérieure de la zone de destination.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Copies a specified source area of the screen buffer to a specified destination area.</source>
          <target state="translated">Copie une zone source spécifiée de la mémoire tampon d'écran dans une zone de destination spécifiée.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the destination and source parameters specify a position located outside the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</source>
          <target state="translated">Si les paramètres source et de destination spécifient une position située en dehors des limites de la mémoire tampon d’écran actuelle, seule la partie de la zone source qui tient dans la zone de destination est copiée.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>That is, the source area is clipped to fit the current screen buffer.</source>
          <target state="translated">Autrement dit, la zone source est détourée pour s’ajuster à la mémoire tampon d’écran en cours.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> method copies the source area to the destination area.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> méthode copie la zone source vers la zone de destination.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the destination area does not intersect the source area, the source area is filled with blanks using the current foreground and background colors.</source>
          <target state="translated">Si la zone de destination ne croise pas la zone source, la zone source est remplie avec des espaces à l’aide de couleurs de premier plan et arrière-plan actuelles.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Otherwise, the intersected portion of the source area is not filled.</source>
          <target state="translated">Sinon, la partie croisée de la zone source n’est pas remplie.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>One or more of the parameters is less than zero.</source>
          <target state="translated">Un ou plusieurs paramètres sont inférieurs à zéro.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph> or <ph id="ph2">&lt;paramref name="targetLeft" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="targetLeft" /&gt;</ph> est supérieur ou égal à <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph> or <ph id="ph2">&lt;paramref name="targetTop" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="targetTop" /&gt;</ph> est supérieur ou égal à <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceHeight" /&gt;</ph> is greater than or equal to <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceHeight" /&gt;</ph> est supérieur ou égal à <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceWidth" /&gt;</ph> is greater than or equal to <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceWidth" /&gt;</ph> est supérieur ou égal à <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The leftmost column of the source area.</source>
          <target state="translated">Colonne la plus à gauche de la zone source.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The topmost row of the source area.</source>
          <target state="translated">Ligne supérieure de la zone source.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The number of columns in the source area.</source>
          <target state="translated">Nombre de colonnes de la zone source.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The number of rows in the source area.</source>
          <target state="translated">Nombre de lignes de la zone source.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The leftmost column of the destination area.</source>
          <target state="translated">Colonne la plus à gauche de la zone de destination.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The topmost row of the destination area.</source>
          <target state="translated">Ligne supérieure de la zone de destination.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The character used to fill the source area.</source>
          <target state="translated">Caractère utilisé pour remplir la zone source.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The foreground color used to fill the source area.</source>
          <target state="translated">Couleur de premier plan utilisée pour remplir la zone source.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The background color used to fill the source area.</source>
          <target state="translated">Couleur d'arrière-plan utilisée pour remplir la zone source.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>Copies a specified source area of the screen buffer to a specified destination area.</source>
          <target state="translated">Copie une zone source spécifiée de la mémoire tampon d'écran dans une zone de destination spécifiée.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>If the destination and source parameters specify a position located beyond the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</source>
          <target state="translated">Si les paramètres source et de destination spécifient une position située au-delà des limites de la mémoire tampon d’écran actuelle, seule la partie de la zone source qui tient dans la zone de destination est copiée.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>That is, the source area is clipped to fit the current screen buffer.</source>
          <target state="translated">Autrement dit, la zone source est détourée pour s’ajuster à la mémoire tampon d’écran en cours.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> method copies the source area to the destination area.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> méthode copie la zone source vers la zone de destination.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>If the destination area does not intersect the source area, the source area is filled with the character specified by <ph id="ph1">`sourceChar`</ph>, using the colors specified by <ph id="ph2">`sourceForeColor`</ph> and <ph id="ph3">`sourceBackColor`</ph>.</source>
          <target state="translated">Si la zone de destination ne croise pas la zone source, la zone source est remplie avec le caractère spécifié par <ph id="ph1">`sourceChar`</ph>, à l’aide des couleurs spécifiées par <ph id="ph2">`sourceForeColor`</ph> et <ph id="ph3">`sourceBackColor`</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>Otherwise, the intersected portion of the source area is not filled.</source>
          <target state="translated">Sinon, la partie croisée de la zone source n’est pas remplie.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> method performs no operation if <ph id="ph2">`sourceWidth`</ph> or <ph id="ph3">`sourceHeight`</ph> is zero.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> méthode n’effectue aucune opération si <ph id="ph2">`sourceWidth`</ph> ou <ph id="ph3">`sourceHeight`</ph> est égal à zéro.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>One or more of the parameters is less than zero.</source>
          <target state="translated">Un ou plusieurs paramètres sont inférieurs à zéro.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph> or <ph id="ph2">&lt;paramref name="targetLeft" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="targetLeft" /&gt;</ph> est supérieur ou égal à <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph> or <ph id="ph2">&lt;paramref name="targetTop" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="targetTop" /&gt;</ph> est supérieur ou égal à <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceHeight" /&gt;</ph> is greater than or equal to <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceHeight" /&gt;</ph> est supérieur ou égal à <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceWidth" /&gt;</ph> is greater than or equal to <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceWidth" /&gt;</ph> est supérieur ou égal à <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>One or both of the color parameters is not a member of the <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph> enumeration.</source>
          <target state="translated">Au moins l’un des deux paramètres n’est pas un membre de l’énumération <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="P:System.Console.NumberLock">
          <source>Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.</source>
          <target state="translated">Obtient une valeur indiquant si la bascule de la touche VERR. NUM est activée ou désactivée.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.NumberLock">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if NUM LOCK is turned on; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if NUM LOCK is turned off.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si VERR. NUM est activé, <ph id="ph2">&lt;see langword="false" /&gt;</ph> si VERR. NUM est désactivé.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Acquires the standard error stream.</source>
          <target state="translated">Acquiert le flux d'erreur standard.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError">
          <source>Acquires the standard error stream.</source>
          <target state="translated">Acquiert le flux d'erreur standard.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError">
          <source>The standard error stream.</source>
          <target state="translated">Flux d'erreur standard.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>This method can be used to reacquire the standard error stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode peut être utilisée pour acquérir à nouveau le flux d’erreur standard lorsqu’il a été modifié par le <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>The following example is a simple text file viewer that displays the contents of one or more text files to the console.</source>
          <target state="translated">L’exemple suivant est une visionneuse du fichier texte simple qui affiche le contenu d’un ou plusieurs fichiers de texte dans la console.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method to redirect error information to a file, calls the <ph id="ph2">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</source>
          <target state="translated">Si aucun argument de ligne de commande, ou si tous les fichiers passés comme arguments de ligne de commande n’existent pas, l’exemple appelle la <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> appels de méthode pour rediriger les informations d’erreur dans un fichier, le <ph id="ph2">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> en train de redemander l’erreur standard (méthode) flux et indique que les informations d’erreur a été écrite dans un fichier.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>Note that the <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> property is set to <ph id="ph2">`true`</ph> before reacquiring the error stream.</source>
          <target state="translated">Notez que la <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> est définie sur <ph id="ph2">`true`</ph> avant de redemander le flux d’erreur.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>This ensures that output will be sent to the console immediately rather than buffered.</source>
          <target state="translated">Cela garantit que sortie est envoyée à la console immédiatement plutôt que mis en mémoire tampon.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source>The internal stream buffer size.</source>
          <target state="translated">Taille de la mémoire tampon du flux interne.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source>Acquires the standard error stream, which is set to a specified buffer size.</source>
          <target state="translated">Acquiert le flux d'erreur standard, défini sur une taille de mémoire tampon spécifiée.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source>The standard error stream.</source>
          <target state="translated">Flux d'erreur standard.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source>This method can be used to reacquire the standard error stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode peut être utilisée pour acquérir à nouveau le flux d’erreur standard lorsqu’il a été modifié par le <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> est inférieur ou égal à zéro.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Acquires the standard input stream.</source>
          <target state="translated">Acquiert le flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput">
          <source>Acquires the standard input stream.</source>
          <target state="translated">Acquiert le flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput">
          <source>The standard input stream.</source>
          <target state="translated">Flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardInput">
          <source>This method can be used to reacquire the standard input stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode peut être utilisée pour acquérir à nouveau le flux d’entrée standard lorsqu’il a été modifié par le <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardInput">
          <source>The following example illustrates the use of the <ph id="ph1">`OpenStandardInput`</ph> property.</source>
          <target state="translated">L’exemple suivant illustre l’utilisation de la <ph id="ph1">`OpenStandardInput`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>The internal stream buffer size.</source>
          <target state="translated">Taille de la mémoire tampon du flux interne.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>Acquires the standard input stream, which is set to a specified buffer size.</source>
          <target state="translated">Acquiert le flux d'entrée standard, défini sur une taille de mémoire tampon spécifiée.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>The standard input stream.</source>
          <target state="translated">Flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>This method can be used to reacquire the standard output stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode peut être utilisée pour acquérir à nouveau le flux de sortie standard lorsqu’il a été modifié par le <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>The following example illustrates the use of the <ph id="ph1">`OpenStandardInput`</ph> property.</source>
          <target state="translated">L’exemple suivant illustre l’utilisation de la <ph id="ph1">`OpenStandardInput`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> est inférieur ou égal à zéro.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Acquires the standard output stream.</source>
          <target state="translated">Acquiert le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput">
          <source>Acquires the standard output stream.</source>
          <target state="translated">Acquiert le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput">
          <source>The standard output stream.</source>
          <target state="translated">Flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>This method can be used to reacquire the standard output stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode peut être utilisée pour acquérir à nouveau le flux de sortie standard lorsqu’il a été modifié par le <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.OpenStandardOutput%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">&lt;xref:System.Console.OpenStandardOutput%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>It replaces four consecutive space characters in a string with a tab character.</source>
          <target state="translated">Remplace quatre espaces consécutifs d'une chaîne par une tabulation.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>To run it, you must supply two command-line arguments.</source>
          <target state="translated">Pour l’exécuter, vous devez fournir deux arguments de ligne de commande.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>The first is the name of an existing text file to redirect the standard input stream to.</source>
          <target state="translated">Le premier est le nom d'un fichier texte existant vers lequel rediriger le flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>The second is the name of a file to redirect the standard output stream to.</source>
          <target state="translated">Le deuxième est le nom du fichier vers lequel rediriger le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>This file need not exist.</source>
          <target state="translated">Ce fichier n'a pas besoin d'exister.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>If it does, its contents will be overwritten.</source>
          <target state="translated">Si tel est le cas, son contenu est remplacé.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The internal stream buffer size.</source>
          <target state="translated">Taille de la mémoire tampon du flux interne.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>Acquires the standard output stream, which is set to a specified buffer size.</source>
          <target state="translated">Acquiert le flux de sortie standard, défini sur une taille de mémoire tampon spécifiée.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The standard output stream.</source>
          <target state="translated">Flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>This method can be used to reacquire the standard output stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode peut être utilisée pour acquérir à nouveau le flux de sortie standard lorsqu’il a été modifié par le <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.OpenStandardOutput%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">&lt;xref:System.Console.OpenStandardOutput%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>It replaces four consecutive space characters in a string with a tab character.</source>
          <target state="translated">Remplace quatre espaces consécutifs d'une chaîne par une tabulation.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>To run it, you must supply two command line arguments.</source>
          <target state="translated">Pour l’exécuter, vous devez fournir deux arguments de ligne de commande.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The first is the name of an existing text file to redirect the standard input stream to.</source>
          <target state="translated">Le premier est le nom d'un fichier texte existant vers lequel rediriger le flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The second is the name of a file to redirect the standard output stream to.</source>
          <target state="translated">Le deuxième est le nom du fichier vers lequel rediriger le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>This file need not exist.</source>
          <target state="translated">Ce fichier n'a pas besoin d'exister.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>If it does, its contents will be overwritten.</source>
          <target state="translated">Si tel est le cas, son contenu est remplacé.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> est inférieur ou égal à zéro.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="P:System.Console.Out">
          <source>Gets the standard output stream.</source>
          <target state="translated">Obtient le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that represents the standard output stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> qui représente le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>This property is set to the standard output stream by default.</source>
          <target state="translated">Par défaut, cette propriété est définie dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>This property can be set to another stream with the <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> method.</source>
          <target state="translated">Cette propriété peut être définie dans un autre flux avec le <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>Note that calls to <ph id="ph1">`Console.Out.WriteLine`</ph> methods are equivalent to calls to the corresponding <ph id="ph2">&lt;xref:System.Console.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">Notez que les appels à <ph id="ph1">`Console.Out.WriteLine`</ph> méthodes sont équivalentes aux appels correspondant <ph id="ph2">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.Out%2A&gt;</ph> property to display an array containing the names of files in the application's current directory to the standard output device.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Console.Out%2A&gt;</ph> propriété pour afficher un tableau contenant les noms de fichiers dans le répertoire actuel de l’application sur le périphérique de sortie standard.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>It then sets the standard output to a file named Files.txt and lists the array elements to the file.</source>
          <target state="translated">Ensuite, il définit la sortie standard vers un fichier nommé Files.txt et répertorie les éléments du tableau dans le fichier.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>Finally, it sets the output to the standard output stream and again displays the array elements to the standard output device.</source>
          <target state="translated">Enfin, il définit la sortie au flux de sortie standard et affiche à nouveau les éléments du tableau au périphérique de sortie standard.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="P:System.Console.OutputEncoding">
          <source>Gets or sets the encoding the console uses to write output.</source>
          <target state="translated">Obtient ou définit l'encodage que la console utilise pour écrire la sortie.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The encoding used to write console output.</source>
          <target state="translated">Encodage utilisé pour écrire la sortie de la console.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The console uses the output encoding to translate characters written by an application into corresponding console display characters.</source>
          <target state="translated">La console utilise l’encodage de sortie pour traduire les caractères écrits par une application dans les caractères d’affichage de console correspondants.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The default code page that the console uses is determined by the system locale.</source>
          <target state="translated">La page de codes par défaut utilisé par la console est déterminée par les paramètres régionaux système.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, a property get operation may return a cached value instead of the console's current output encoding.</source>
          <target state="translated">En commençant par le <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, une opération get de propriété peut retourner une valeur mise en cache au lieu de l’encodage de sortie actuel de la console.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>This can occur if the value of the <ph id="ph1">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> property is modified by some means other than an assignment to the <ph id="ph2">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> property, such as calling the Windows <ph id="ph3">`SetConsoleOutputCP`</ph> function.</source>
          <target state="translated">Cela peut se produire si la valeur de la <ph id="ph1">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> propriété est modifiée par un moyen autre que d’une assignation à la <ph id="ph2">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> propriété, telles que les fenêtres de l’appel <ph id="ph3">`SetConsoleOutputCP`</ph> (fonction).</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="P:System.Console.OutputEncoding">
          <source>The property value in a set operation is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur de propriété dans une opération set est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Console.OutputEncoding">
          <source>An error occurred during the execution of this operation.</source>
          <target state="translated">Une erreur s’est produite lors de l’exécution de cette opération.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="P:System.Console.OutputEncoding">
          <source>Your application does not have permission to perform this operation.</source>
          <target state="translated">Votre application n’est pas autorisée à effectuer cette opération.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>for reading and writing to top-level windows and subwindows.</source>
          <target state="translated">pour lire et écrire sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Of the Unicode encodings, the <ph id="ph1">&lt;see cref="T:System.Console" /&gt;</ph> class supports UTF-8 encoding with the <ph id="ph2">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> class and, starting with the <ph id="ph3">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, it supports UTF-16 encoding with the <ph id="ph4">&lt;see cref="T:System.Text.UnicodeEncoding" /&gt;</ph> class.</source>
          <target state="translated">Des encodages Unicode, le <ph id="ph1">&lt;see cref="T:System.Console" /&gt;</ph> classe prend en charge le codage UTF-8 le <ph id="ph2">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> classe et, en commençant par le <ph id="ph3">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, il prend en charge avec l’encodage UTF-16 le <ph id="ph4">&lt;see cref="T:System.Text.UnicodeEncoding" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>UTF-32 encoding with the <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> class is not supported.</source>
          <target state="translated">Encodage UTF-32 avec la <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> classe n’est pas pris en charge.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Attempting to set the output encoding to UTF-32 throws an <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph>.</source>
          <target state="translated">Tentative de définition de l’encodage de sortie au format UTF-32 lève une <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Note that successfully displaying Unicode characters to the console requires the following:</source>
          <target state="translated">Notez qu’afficher correctement les caractères Unicode dans la console nécessite les éléments suivants :</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The console must use a TrueType font, such as Lucida Console or Consolas, to display characters.</source>
          <target state="translated">La console doit utiliser une police TrueType, comme Lucida Console ou Consolas, pour afficher les caractères.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>A font used by the console must define the particular glyph or glyphs to be displayed.</source>
          <target state="translated">Une police utilisée par la console doit définir les glyphes particulier ou les glyphes à afficher.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The console can take advantage of font linking to display glyphs from linked fonts if the base font does not contain a definition for that glyph.</source>
          <target state="translated">La console peut tirer parti de la liaison pour afficher des glyphes de polices liés si la police de base ne contient pas de définition pour ce glyphe de la police.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>For more information about support for Unicode encoding by the console, see the "Unicode Support for the Console" section in the <ph id="ph1">&lt;see cref="T:System.Console" /&gt;</ph> class.</source>
          <target state="translated">Pour plus d’informations sur la prise en charge Unicode encodage par la console, consultez la section « Unicode prend en charge pour la Console » dans la <ph id="ph1">&lt;see cref="T:System.Console" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Console.Read">
          <source>Reads the next character from the standard input stream.</source>
          <target state="translated">Lit le caractère suivant du flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Console.Read">
          <source>The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</source>
          <target state="translated">Caractère suivant du flux d'entrée, ou caractère négatif (-1) s'il n'y a pas d'autres caractères à lire.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>The <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> method blocks its return while you type input characters; it terminates when you press the <ph id="ph2">&lt;xref:System.ConsoleKey.Enter&gt;</ph> key.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> méthode bloque son retour pendant que vous tapez des caractères d’entrée ; elle se termine lorsque vous appuyez sur la <ph id="ph2">&lt;xref:System.ConsoleKey.Enter&gt;</ph> clé.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Pressing Enter appends a platform-dependent line termination sequence to your input (for example, Windows appends a carriage return-linefeed sequence).</source>
          <target state="translated">En appuyant sur entrée ajoute une séquence de fin de ligne dépendante de la plateforme à votre entrée (par exemple, Windows ajoute une séquence de retour-saut de ligne de transport).</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Subsequent calls to the <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> method retrieve your input one character at a time.</source>
          <target state="translated">Les appels suivants à la <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> méthode récupérer votre un caractère d’entrée à la fois.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>After the final character is retrieved, <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> blocks its return again and the cycle repeats.</source>
          <target state="translated">Après le dernier caractère est récupéré, <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> bloque son retour à nouveau et le cycle se répète.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method, or the <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property and <ph id="ph3">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method are preferable to using the <ph id="ph4">&lt;xref:System.Console.Read%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> (méthode), ou le <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> propriété et <ph id="ph3">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthode est préférable à l’utilisation de la <ph id="ph4">&lt;xref:System.Console.Read%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Note that the method does not return -1 unless you perform one of the following actions:</source>
          <target state="translated">Notez que la méthode ne retourne pas -1, sauf si vous effectuez l’une des actions suivantes :</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Simultaneously press the <ph id="ph1">&lt;xref:System.ConsoleModifiers.Control&gt;</ph> modifier key and <ph id="ph2">&lt;xref:System.ConsoleKey.Z&gt;</ph> console key (Ctrl+Z), which signals the end-of-file condition.</source>
          <target state="translated">Appuyer simultanément sur le <ph id="ph1">&lt;xref:System.ConsoleModifiers.Control&gt;</ph> touche de modification et <ph id="ph2">&lt;xref:System.ConsoleKey.Z&gt;</ph> touche de console (Ctrl + Z), qui signale la condition de fin de fichier.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Press an equivalent key that signals the end-of-file condition, such as the F6 function key in Windows.</source>
          <target state="translated">Appuyez sur une touche équivalente qui signale la condition de fin de fichier, telles que la touche de fonction F6 dans Windows.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Redirect the input stream to a source, such as a text file, that has an actual end-of-file character.</source>
          <target state="translated">Rediriger le flux d’entrée à une source, tel qu’un fichier texte, qui a un caractère de fin de fichier réel.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Console.Read">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Obtains the next character or function key pressed by the user.</source>
          <target state="translated">Obtient le caractère suivant ou la touche de fonction sur laquelle l'utilisateur a appuyé.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>Obtains the next character or function key pressed by the user.</source>
          <target state="translated">Obtient le caractère suivant ou la touche de fonction sur laquelle l'utilisateur a appuyé.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>The pressed key is displayed in the console window.</source>
          <target state="translated">La touche enfoncée s'affiche dans la fenêtre de console.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>An object that describes the <ph id="ph1">&lt;see cref="T:System.ConsoleKey" /&gt;</ph> constant and Unicode character, if any, that correspond to the pressed console key.</source>
          <target state="translated">Objet qui décrit la constante <ph id="ph1">&lt;see cref="T:System.ConsoleKey" /&gt;</ph> et, le cas échéant, le caractère Unicode qui correspond à la touche de console enfoncée.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>The <ph id="ph1">&lt;see cref="T:System.ConsoleKeyInfo" /&gt;</ph> object also describes, in a bitwise combination of <ph id="ph2">&lt;see cref="T:System.ConsoleModifiers" /&gt;</ph> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.ConsoleKeyInfo" /&gt;</ph> décrit également, dans une combinaison d'opérations de bits de valeurs <ph id="ph2">&lt;see cref="T:System.ConsoleModifiers" /&gt;</ph>, si une ou plusieurs touches de modification MAJ, ALT ou CTRL ont été enfoncées en même temps que la touche de console.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method waits, that is, blocks on the thread issuing the <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method, until a character or function key is pressed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthode attend, autrement dit, des blocs sur le thread émettant le <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> (méthode), jusqu'à ce qu’une touche de caractère ou une fonction est activée.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</source>
          <target state="translated">Une touche de fonction ou de caractère peut enfoncée en association avec un ou plusieurs touches de modification MAJ, Ctrl ou Alt.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>However, pressing a modifier key by itself will not cause the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method to return.</source>
          <target state="translated">Toutefois, en appuyant sur une touche de modification par lui-même n’entraîne pas la <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> retour de méthode.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>Depending on your application, you might want to use the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method in conjunction with the <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property.</source>
          <target state="translated">Selon votre application, vous souhaiterez peut-être utiliser le <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthode conjointement avec le <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method reads from the keyboard even if the standard input is redirected to a file with the <ph id="ph2">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthode lit à partir du clavier, même si l’entrée standard est redirigée vers un fichier avec le <ph id="ph2">&lt;xref:System.Console.SetIn%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>One of the most common uses of the <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</source>
          <target state="translated">Le plus souvent utilisé pour la <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> méthode consiste à arrêter l’exécution du programme jusqu'à ce que l’utilisateur appuie sur une clé et l’application se termine ou affiche une fenêtre supplémentaire d’informations.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>The following example uses the  <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> method to wait for the user to press the Enter key before terminating the app.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> méthode pour attendre que l’utilisateur appuie sur la touche entrée avant de mettre fin à l’application.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>Note that this overload of the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method by default echoes any displayable keys that the user presses to the console.</source>
          <target state="translated">Notez que cette surcharge de la <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthode par défaut renvoie les clés peut être affichées que l’utilisateur appuie sur la console.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>To suppress them, call the  <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method with an <ph id="ph2">`intercept`</ph> argument of <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Pour les supprimer, appelez le <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthode avec un <ph id="ph2">`intercept`</ph> argument de <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> method to display information about which key the user pressed..</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> méthode pour afficher des informations sur les clés de l’utilisateur a appuyé sur...</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>The <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> property is redirected from some stream other than the console.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> est redirigée à partir d’un flux autre que la console.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>Determines whether to display the pressed key in the console window.</source>
          <target state="translated">Détermine s'il faut afficher ou non la touche enfoncée dans la fenêtre de la console.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to not display the pressed key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour ne pas afficher la touche enfoncée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>Obtains the next character or function key pressed by the user.</source>
          <target state="translated">Obtient le caractère suivant ou la touche de fonction sur laquelle l'utilisateur a appuyé.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The pressed key is optionally displayed in the console window.</source>
          <target state="translated">La touche enfoncée s'affiche éventuellement dans la fenêtre de console.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>An object that describes the <ph id="ph1">&lt;see cref="T:System.ConsoleKey" /&gt;</ph> constant and Unicode character, if any, that correspond to the pressed console key.</source>
          <target state="translated">Objet qui décrit la constante <ph id="ph1">&lt;see cref="T:System.ConsoleKey" /&gt;</ph> et, le cas échéant, le caractère Unicode qui correspond à la touche de console enfoncée.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ConsoleKeyInfo" /&gt;</ph> object also describes, in a bitwise combination of <ph id="ph2">&lt;see cref="T:System.ConsoleModifiers" /&gt;</ph> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.ConsoleKeyInfo" /&gt;</ph> décrit également, dans une combinaison d'opérations de bits de valeurs <ph id="ph2">&lt;see cref="T:System.ConsoleModifiers" /&gt;</ph>, si une ou plusieurs touches de modification MAJ, ALT ou CTRL ont été enfoncées en même temps que la touche de console.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method waits, that is, blocks on the thread issuing the <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method, until a character or function key is pressed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthode attend, autrement dit, des blocs sur le thread émettant le <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> (méthode), jusqu'à ce qu’une touche de caractère ou une fonction est activée.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</source>
          <target state="translated">Une touche de fonction ou de caractère peut enfoncée en association avec un ou plusieurs touches de modification MAJ, Ctrl ou Alt.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>However, pressing a modifier key by itself will not cause the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method to return.</source>
          <target state="translated">Toutefois, en appuyant sur une touche de modification par lui-même n’entraîne pas la <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> retour de méthode.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>If the <ph id="ph1">`intercept`</ph> parameter is <ph id="ph2">`true`</ph>, the pressed key is intercepted and not displayed in the console window; otherwise, the pressed key is displayed.</source>
          <target state="translated">Si le <ph id="ph1">`intercept`</ph> paramètre est <ph id="ph2">`true`</ph>, la touche enfoncée est interceptée et pas affichée dans la fenêtre de console ; sinon, la touche enfoncée s’affiche.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>Depending on your application, you might want to use the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method in conjunction with the <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property.</source>
          <target state="translated">Selon votre application, vous souhaiterez peut-être utiliser le <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthode conjointement avec le <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method reads from the keyboard even if the standard input is redirected to a file with the <ph id="ph2">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthode lit à partir du clavier, même si l’entrée standard est redirigée vers un fichier avec le <ph id="ph2">&lt;xref:System.Console.SetIn%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>One of the most common uses of the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</source>
          <target state="translated">Le plus souvent utilisé pour la <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthode consiste à arrêter l’exécution du programme jusqu'à ce que l’utilisateur appuie sur une clé et l’application se termine ou affiche une fenêtre supplémentaire d’informations.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The following example uses the  <ph id="ph1">&lt;xref:System.Console.ReadKey%28System.Boolean%29&gt;</ph> method to wait for the user to press the Enter key before terminating the app.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Console.ReadKey%28System.Boolean%29&gt;</ph> méthode pour attendre que l’utilisateur appuie sur la touche entrée avant de mettre fin à l’application.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>Note that, if the user presses any other key, it is not echoed to the console.</source>
          <target state="translated">Notez que, si l’utilisateur appuie sur une autre clé, il n'est pas répercutée dans la console.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.ReadKey%28System.Boolean%29&gt;</ph> method to display information about the key pressed by a user without echoing that key to the console.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Console.ReadKey%28System.Boolean%29&gt;</ph> méthode pour afficher plus d’informations sur la touche pressée par un utilisateur sans afficher cette clé dans la console.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> property is redirected from some stream other than the console.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> est redirigée à partir d’un flux autre que la console.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>Reads the next line of characters from the standard input stream.</source>
          <target state="translated">Lit la ligne de caractères suivante du flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>The next line of characters from the input stream, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no more lines are available.</source>
          <target state="translated">Ligne de caractères suivante du flux d'entrée, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> s'il n'y a plus de lignes disponibles.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method reads a line from the standard input stream.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> méthode lit une ligne dans le flux d’entrée standard.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>(For the definition of a line, see the paragraph after the following list.) This means that:</source>
          <target state="translated">(Pour la définition d’une ligne, consultez le paragraphe après la liste suivante.) Cela signifie que :</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If the standard input device is the keyboard, the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method blocks until the user presses the <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept> key.</source>
          <target state="translated">Si le périphérique d’entrée standard est le clavier, le <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> méthode s’interrompt jusqu'à ce que l’utilisateur appuie sur le <bpt id="p1">**</bpt>entrée<ept id="p1">**</ept> clé.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>One of the most common uses of the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method is to pause program execution before clearing the console and displaying new information to it, or to prompt the user to press the Enter key before terminating the application.</source>
          <target state="translated">Le plus souvent utilisé pour la <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> méthode est de suspendre l’exécution du programme avant l’effacement de la console et d’afficher les nouvelles informations lui ou pour inviter l’utilisateur à appuyer sur la touche entrée avant de mettre fin à l’application.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The following example illustrates this.</source>
          <target state="translated">L'exemple suivant illustre ce comportement.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If standard input is redirected to a file, the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method reads a line of text from a file.</source>
          <target state="translated">Si l’entrée standard est redirigée vers un fichier, le <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> méthode lit une ligne de texte à partir d’un fichier.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>For example, the following is a text file named ReadLine1.txt:</source>
          <target state="translated">Par exemple, le texte suivant est un fichier texte nommé ReadLine1.txt :</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method to read input that is redirected from a file.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> méthode pour lire l’entrée est redirigée à partir d’un fichier.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The read operation terminates when the  method returns <ph id="ph1">`null`</ph>, which indicates that no lines remain to be read.</source>
          <target state="translated">L’opération de lecture s’arrête lorsque la méthode retourne <ph id="ph1">`null`</ph>, ce qui signifie qu’aucune ligne ne reste en lecture.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>After compiling the example to an executable named ReadLine1.exe, you can run it from the command line with the syntax</source>
          <target state="translated">Après la compilation de l’exemple dans un exécutable ReadLine1.exe nommée, vous pouvez l’exécuter à partir de la ligne de commande avec la syntaxe</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>to read the contents of the file and display them to the console.</source>
          <target state="translated">pour lire le contenu du fichier et les afficher dans la console.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>A line is defined as a sequence of characters followed by a carriage return (hexadecimal 0x000d), a line feed (hexadecimal 0x000a), or the value of the <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Une ligne est définie comme une séquence de caractères suivi d’un retour chariot (0x000d hexadécimal), un saut de ligne (0x000a hexadécimal) ou la valeur de la <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The returned string does not contain the terminating character(s).</source>
          <target state="translated">La chaîne retournée ne contient pas de caractère de fin.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>By default, the method reads input from a 256-character input buffer.</source>
          <target state="translated">Par défaut, la méthode lit l’entrée d’une mémoire tampon d’entrée de 256 caractères.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>Because this includes the <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> character(s), the method can read lines that contain up to 254 characters.</source>
          <target state="translated">Étant donné que cela inclut la <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> un ou plusieurs caractères, la méthode peut lire les lignes qui contiennent jusqu'à 254 caractères.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>To read longer lines, call the <ph id="ph1">&lt;xref:System.Console.OpenStandardInput%28System.Int32%29&gt;</ph> method.</source>
          <target state="translated">Pour lire des lignes plus longues, appelez le <ph id="ph1">&lt;xref:System.Console.OpenStandardInput%28System.Int32%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method executes synchronously.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> méthode s’exécute de façon synchrone.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>That is, it blocks until a line is read or the Ctrl+Z keyboard combination is pressed.</source>
          <target state="translated">Autrement dit, elle demeure bloquée jusqu'à ce qu’une ligne est en lecture ou la combinaison de touches Ctrl + Z est enfoncée.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> object that represents the standard input stream and that has both a synchronous <ph id="ph3">&lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph> method and an asynchronous <ph id="ph4">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> propriété retourne un <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> objet qui représente le flux d’entrée standard et qui contient les deux synchrone <ph id="ph3">&lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph> méthode et asynchrone <ph id="ph4">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>However, when used as the console's standard input stream, the <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> executes synchronously rather than asynchronously and returns a <ph id="ph2">`Task&lt;String&gt;`</ph> only after the read operation has completed.</source>
          <target state="translated">Toutefois, lorsqu’il est utilisé en tant que flux d’entrée standard de la console, le <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> s’exécute de façon synchrone plutôt qu’en mode asynchrone et retourne un <ph id="ph2">`Task&lt;String&gt;`</ph> uniquement une fois l’opération de lecture est terminée.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If this method throws an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, the reader's position in the underlying <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <ph id="ph3">&lt;xref:System.Console.ReadLine%2A&gt;</ph> buffer are discarded.</source>
          <target state="translated">Si cette méthode lève un <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, la position du lecteur dans sous-jacent <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> objet est avancé par le nombre de caractères que la méthode a été en mesure de lire, mais les caractères déjà lues interne <ph id="ph3">&lt;xref:System.Console.ReadLine%2A&gt;</ph> sont de la mémoire tampon ignoré.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>Since the position of the reader in the stream cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">Étant donné que la position du lecteur dans le flux ne peut pas être modifiée, les caractères déjà lus sont irrécupérables et sont accessibles uniquement en réinitialisant le <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If the initial position within the stream is unknown or the stream does not support seeking, the underlying <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> also needs to be reinitialized.</source>
          <target state="translated">Si la position initiale dans le flux est inconnue ou le flux ne prend pas en charge la recherche sous-jacent <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> doit également être réinitialisé.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>To avoid such a situation and to produce robust code, you should use the <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method and store the read characters in a pre-allocated buffer.</source>
          <target state="translated">Pour éviter une telle situation et produire du code robuste, vous devez utiliser le <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> propriété et <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthode et magasin les caractères lus dans une mémoire tampon allouée au préalable.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If the Ctrl+Z character is pressed when the method is reading input from the console, the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si le caractère de Ctrl + Z est activé lorsque la méthode lit l’entrée de la console, la méthode retourne <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>This enables the user to prevent further keyboard input when the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method is called in a loop.</source>
          <target state="translated">Cela permet l’utilisateur afin d’éviter de clavier supplémentaires d’entrée lorsque le <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> méthode est appelée dans une boucle.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The following example illustrates this scenario.</source>
          <target state="translated">L’exemple suivant illustre ce scénario.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The following example requires two command line arguments: the name of an existing text file, and the name of a file to write the output to.</source>
          <target state="translated">L’exemple suivant requiert deux arguments de ligne de commande : le nom d’un fichier texte existant et le nom d’un fichier à écrire la sortie.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>It opens the existing text file and redirects the standard input from the keyboard to that file.</source>
          <target state="translated">Il ouvre le fichier texte existant et redirige l’entrée standard à partir du clavier à ce fichier.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>It also redirects the standard output from the console to the output file.</source>
          <target state="translated">Il redirige également la sortie standard à partir de la console dans le fichier de sortie.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>It then uses the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A?displayProperty=nameWithType&gt;</ph> method to read each line in the file, replaces every sequence of four spaces with a tab character, and uses the <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method to write the result to the output file.</source>
          <target state="translated">Il utilise ensuite la <ph id="ph1">&lt;xref:System.Console.ReadLine%2A?displayProperty=nameWithType&gt;</ph> méthode pour lire chaque ligne dans le fichier, remplace chaque séquence de quatre espaces par un caractère de tabulation et utilise le <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> méthode pour écrire le résultat dans le fichier de sortie.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>There is insufficient memory to allocate a buffer for the returned string.</source>
          <target state="translated">La mémoire est insuffisante pour allouer une mémoire tampon à la chaîne retournée.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>The number of characters in the next line of characters is greater than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Le nombre de caractères dans la ligne de caractères suivante est supérieur à <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Console.ResetColor">
          <source>Sets the foreground and background console colors to their defaults.</source>
          <target state="translated">Définit les couleurs de premier plan et d'arrière-plan de la console sur leurs valeurs par défaut.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>The foreground and background colors are restored to the colors that existed when the current process began.</source>
          <target state="translated">Les couleurs de premier plan et d’arrière-plan sont restaurées avec les couleurs qui existaient au début du processus en cours.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> properties.</source>
          <target state="translated">Pour plus d’informations, consultez la <ph id="ph1">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>The following example saves the values of the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration to an array and stores the current values of the <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> properties to variables.</source>
          <target state="translated">L’exemple suivant enregistre les valeurs de la <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> énumération dans un tableau et stocke les valeurs actuelles de la <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> propriétés à des variables.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>It then changes the foreground color to each color in the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current background, and it changes the background color to each color in the <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current foreground.</source>
          <target state="translated">Il modifie ensuite la couleur de premier plan à chaque couleur de la <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> énumération à l’exception de la couleur qui correspond à l’arrière-plan en cours, et il modifie la couleur d’arrière-plan pour chaque couleur de la <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> énumération à l’exception de la couleur qui correspond à la au premier plan actuels.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> method to restore the original console colors.</source>
          <target state="translated">(Si la couleur de premier plan est identique à la couleur d’arrière-plan, le texte n’est pas visible.) Enfin, il appelle la <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> méthode pour restaurer les couleurs d’origine de la console.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Console.ResetColor">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Console.ResetColor">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The width of the buffer area measured in columns.</source>
          <target state="translated">Largeur de la zone de mémoire tampon mesurée en colonnes.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The height of the buffer area measured in rows.</source>
          <target state="translated">Hauteur de la zone de mémoire tampon mesurée en lignes.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>Sets the height and width of the screen buffer area to the specified values.</source>
          <target state="translated">Définit la hauteur et la largeur de la zone de mémoire tampon d'écran sur les valeurs spécifiées.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> properties; and the <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> methods.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, et <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> propriétés ; et le <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, et <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The example draws a grid pattern in the screen buffer based on the screen buffer width.</source>
          <target state="translated">L’exemple dessine un motif de grille dans la mémoire tampon d’écran en fonction de la largeur de la mémoire tampon écran.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</source>
          <target state="translated">L’exemple déplace ensuite la fenêtre de console dans la réponse de la flèche haut, bas, gauche ou droite touche de console enfoncée.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The grid pattern helps you see the movement of the console window relative to the screen buffer.</source>
          <target state="translated">Le modèle de grille vous permet de visualiser le déplacement de la fenêtre de console par rapport à la mémoire tampon d’écran.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="height" /&gt;</ph> or <ph id="ph2">&lt;paramref name="width" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="height" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="width" /&gt;</ph> est inférieur ou égal à zéro.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="height" /&gt;</ph> or <ph id="ph2">&lt;paramref name="width" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="height" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="width" /&gt;</ph> est supérieur ou égal à <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> est inférieur à <ph id="ph2">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="height" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="height" /&gt;</ph> est inférieur à <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The column position of the cursor.</source>
          <target state="translated">Position de colonne du curseur.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Columns are numbered from left to right starting at 0.</source>
          <target state="translated">Les colonnes sont numérotées de gauche à droite à partir de 0.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The row position of the cursor.</source>
          <target state="translated">Position de ligne du curseur.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Rows are numbered from top to bottom starting at 0.</source>
          <target state="translated">Les lignes sont numérotées de haut en bas à partir de 0.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Sets the position of the cursor.</source>
          <target state="translated">Définit la position du curseur.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> method to specify where the next write operation in the console window is to begin.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> méthode pour spécifier où doit commencer la prochaine opération d’écriture dans la fenêtre de console.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>If the specified cursor position is outside the area that is currently visible in the console window, the window origin changes automatically to make the cursor visible.</source>
          <target state="translated">Si la position du curseur spécifiée est en dehors de la zone qui est actuellement visible dans la fenêtre de console, l’origine de la fenêtre change automatiquement pour afficher le curseur.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The cursor automatically moves to the next character position each time a character is written to the console window.</source>
          <target state="translated">Le curseur se déplace automatiquement vers la position de caractère suivante chaque fois qu’un caractère est écrit dans la fenêtre de console.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>If the cursor is at the bottom right character position of the console window, the next write operation causes the console window to scroll so the cursor remains visible.</source>
          <target state="translated">Si le curseur se trouve à la position de caractère de droite en bas de la fenêtre de console, la prochaine écriture opération provoque la fenêtre de console pour faire défiler le curseur reste visible.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>If you want to write a character to the bottom right character position without causing the console window to scroll, use the <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> method to move a character to that position.</source>
          <target state="translated">Si vous souhaitez écrire un caractère en bas à droite sans provoquer de la fenêtre de console faire défiler, utilisez la <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> méthode pour déplacer un caractère à sa position.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> properties, and the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> methods.</source>
          <target state="translated">Cet exemple illustre la <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> propriétés et le <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&amp;#124;", and "-" strings.</source>
          <target state="translated">L’exemple positionne le curseur, qui détermine l’emplacement de l’écriture suivante, pour dessiner un rectangle de 5 caractères à l’aide d’une combinaison de 5 « + », «&amp;#124;», et «- » des chaînes.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Note that the rectangle could be drawn with fewer steps using a combination of other strings.</source>
          <target state="translated">Notez que le rectangle pourrait être dessiné avec moins d’étapes à l’aide d’une autre combinaison de chaînes.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="top" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="top" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> is greater than or equal to <ph id="ph2">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> est supérieur ou égal à <ph id="ph2">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="top" /&gt;</ph> is greater than or equal to <ph id="ph2">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="top" /&gt;</ph> est supérieur ou égal à <ph id="ph2">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>A stream that is the new standard error output.</source>
          <target state="translated">Flux représentant la nouvelle sortie d'erreur standard.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Console.Error" /&gt;</ph> property to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">Définit la propriété <ph id="ph1">&lt;see cref="P:System.Console.Error" /&gt;</ph> avec l'objet <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> property is set to the standard error output stream.</source>
          <target state="translated">Par défaut, le <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> est définie sur le flux de sortie d’erreur standard.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> that encapsulates a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> can be used to send error messages to a file.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> qui encapsule un <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> peut être utilisé pour envoyer des messages d’erreur dans un fichier.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>The following example shows how to redirect the standard error stream to a file.</source>
          <target state="translated">L’exemple suivant montre comment rediriger le flux d’erreur standard vers un fichier.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="newError" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newError" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>for calling unmanaged code.</source>
          <target state="translated">pour appeler du code non managé.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>A stream that is the new standard input.</source>
          <target state="translated">Flux représentant la nouvelle entrée standard.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> property to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object.</source>
          <target state="translated">Définit la propriété <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> avec l'objet <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> property is set to the standard input stream.</source>
          <target state="translated">Par défaut, le <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> est définie sur le flux d’entrée standard.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>A <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> that encapsulates a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> can be used to receive input from a file.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> qui encapsule un <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> peut être utilisé pour recevoir une entrée à partir d’un fichier.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>It replaces four consecutive space characters in a string with a tab character.</source>
          <target state="translated">Remplace quatre espaces consécutifs d'une chaîne par une tabulation.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>To run it, you must supply two command line arguments.</source>
          <target state="translated">Pour l’exécuter, vous devez fournir deux arguments de ligne de commande.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>The first is the name of an existing text file to redirect the standard input stream to.</source>
          <target state="translated">Le premier est le nom d'un fichier texte existant vers lequel rediriger le flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>The second is the name of a file to redirect the standard output stream to.</source>
          <target state="translated">Le deuxième est le nom du fichier vers lequel rediriger le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>This file need not exist.</source>
          <target state="translated">Ce fichier n'a pas besoin d'exister.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>If it does, its contents will be overwritten.</source>
          <target state="translated">Si tel est le cas, son contenu est remplacé.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source><ph id="ph1">&lt;paramref name="newIn" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newIn" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>for calling unmanaged code.</source>
          <target state="translated">pour appeler du code non managé.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>A stream that is the new standard output.</source>
          <target state="translated">Flux représentant la nouvelle sortie standard.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Console.Out" /&gt;</ph> property to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">Définit la propriété <ph id="ph1">&lt;see cref="P:System.Console.Out" /&gt;</ph> avec l'objet <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Console.Out%2A&gt;</ph> property is set to the standard output stream.</source>
          <target state="translated">Par défaut, le <ph id="ph1">&lt;xref:System.Console.Out%2A&gt;</ph> est définie sur le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> that encapsulates a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> can be used to send output to a file.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> qui encapsule un <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> peut être utilisé pour envoyer la sortie vers un fichier.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>For example:</source>
          <target state="translated">Exemple :</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>It replaces four consecutive space characters in a string with a tab character.</source>
          <target state="translated">Remplace quatre espaces consécutifs d'une chaîne par une tabulation.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>To run it, you must supply two command line arguments.</source>
          <target state="translated">Pour l’exécuter, vous devez fournir deux arguments de ligne de commande.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>The first is the name of an existing text file to redirect the standard input stream to.</source>
          <target state="translated">Le premier est le nom d'un fichier texte existant vers lequel rediriger le flux d'entrée standard.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>The second is the name of a file to redirect the standard output stream to.</source>
          <target state="translated">Le deuxième est le nom du fichier vers lequel rediriger le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>This file need not exist.</source>
          <target state="translated">Ce fichier n'a pas besoin d'exister.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>If it does, its contents will be overwritten.</source>
          <target state="translated">Si tel est le cas, son contenu est remplacé.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="newOut" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newOut" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">L'appelant n'a pas l'autorisation requise.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>for calling unmanaged code.</source>
          <target state="translated">pour appeler du code non managé.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The column position of the upper left  corner of the console window.</source>
          <target state="translated">Position de colonne de l'angle supérieur gauche de la fenêtre de console.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The row position of the upper left corner of the console window.</source>
          <target state="translated">Position de ligne de l'angle supérieur gauche de la fenêtre de console.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>Sets the position of the console window relative to the screen buffer.</source>
          <target state="translated">Définit la position de la fenêtre de console par rapport à la mémoire tampon d'écran.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The operating system window displays the console window, and the console window displays a portion of the screen buffer.</source>
          <target state="translated">La fenêtre du système d’exploitation affiche la fenêtre de console, et la fenêtre de console affiche une partie de la mémoire tampon d’écran.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> method affects the position of the console window relative to the screen buffer, but does not affect the position of the operating system window relative to the desktop.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> méthode affectent la position de la fenêtre de console par rapport à la mémoire tampon d’écran, mais n’affecte pas la position de la fenêtre du système d’exploitation par rapport au bureau.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The console and operating system windows generally do not affect each other.</source>
          <target state="translated">Les fenêtres de console et de système d’exploitation généralement n’affectent pas l’autre.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>However, if the screen buffer cannot be displayed in the current boundaries of the console window, the operating system automatically appends scroll bars to the operating system window.</source>
          <target state="translated">Toutefois, si la mémoire tampon d’écran ne peut pas être affiché dans les limites actuelles de la fenêtre de console, le système d’exploitation ajoute automatiquement les barres de défilement dans la fenêtre de système d’exploitation.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>In that case, moving the operating system window scroll bars affects the position of the console window, and moving the console window with the <ph id="ph1">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> method affects the position of the operating system window scroll bars.</source>
          <target state="translated">Dans ce cas, déplacer les barres de défilement de fenêtre de système d’exploitation affecte la position de la fenêtre de console, et le déplacement de la fenêtre de console avec la <ph id="ph1">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> méthode affecte la position des barres de défilement de fenêtre de système d’exploitation.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> properties; and the <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> methods.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, et <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> propriétés ; et le <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, et <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The example draws a grid pattern in the screen buffer based on the screen buffer width.</source>
          <target state="translated">L’exemple dessine un motif de grille dans la mémoire tampon d’écran en fonction de la largeur de la mémoire tampon écran.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</source>
          <target state="translated">L’exemple déplace ensuite la fenêtre de console dans la réponse de la flèche haut, bas, gauche ou droite touche de console enfoncée.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The grid pattern helps you see the movement of the console window relative to the screen buffer.</source>
          <target state="translated">Le modèle de grille vous permet de visualiser le déplacement de la fenêtre de console par rapport à la mémoire tampon d’écran.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="top" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="top" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> is greater than <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> est supérieur à <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="top" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> is greater than <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="top" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> est supérieur à <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>The width of the console window measured in columns.</source>
          <target state="translated">Largeur de la fenêtre de console mesurée en colonnes.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>The height of the console window measured in rows.</source>
          <target state="translated">Hauteur de la fenêtre de console mesurée en lignes.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>Sets the height and width of the console window to the specified values.</source>
          <target state="translated">Définit la hauteur et la largeur de la fenêtre de console sur les valeurs spécifiées.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> method, and the <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> properties.</source>
          <target state="translated">Cet exemple illustre la <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>You must run the example to see the full effect of changing the console window size.</source>
          <target state="translated">Vous devez exécuter l’exemple pour voir l’effet de la modification de la taille de fenêtre de console.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key to be pressed.</source>
          <target state="translated">L’exemple rapporte les dimensions d’une fenêtre de console définie avec 85 colonnes et 43 lignes, puis attend que l’utilisateur appuie sur une clé.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</source>
          <target state="translated">Lorsqu’une touche est enfoncée, les dimensions de la fenêtre de console sont divisés par deux, les nouvelles dimensions sont signalées et l’exemple attend une autre touche.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>Finally, when any key is pressed, the console window is restored to its original dimensions and the example terminates.</source>
          <target state="translated">Enfin, lorsqu’une touche est enfoncée, la fenêtre de console est restaurée à ses dimensions d’origine et l’exemple se termine.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> or <ph id="ph2">&lt;paramref name="height" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="height" /&gt;</ph> est inférieur ou égal à zéro.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph> or <ph id="ph3">&lt;paramref name="height" /&gt;</ph> plus <ph id="ph4">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> is greater than or equal to <ph id="ph5">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph> ou <ph id="ph3">&lt;paramref name="height" /&gt;</ph> plus <ph id="ph4">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> est supérieur ou égal à <ph id="ph5">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> or <ph id="ph2">&lt;paramref name="height" /&gt;</ph> is greater than the largest possible window width or height for the current screen resolution and console font.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="height" /&gt;</ph> est supérieur à la plus grande largeur ou hauteur de fenêtre possible compte tenu de la police de la console et de la résolution d’écran actuellement définies.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">L’utilisateur n’est pas autorisé à effectuer cette action.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>Gets or sets the title to display in the console title bar.</source>
          <target state="translated">Obtient ou définit le titre à afficher dans la barre de titre de la console.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>The string to be displayed in the title bar of the console.</source>
          <target state="translated">Chaîne à afficher dans la barre de titre de la console.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>The maximum length of the title string is 24500 characters.</source>
          <target state="translated">La longueur maximale de la chaîne de titre est limitée à 24 500 caractères.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.Title%2A&gt;</ph> property.</source>
          <target state="translated">Cet exemple illustre le <ph id="ph1">&lt;xref:System.Console.Title%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>The example displays the current title of the operating system window, waits for a key press, then displays a new title.</source>
          <target state="translated">L’exemple affiche le titre en cours de la fenêtre du système d’exploitation, attend qu’une touche enfoncée, puis affiche un nouveau titre.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>In a get operation, the retrieved title is longer than 24500 characters.</source>
          <target state="translated">Dans une opération get, le titre récupéré est plus long que 24 500 caractères.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>In a set operation, the specified title is longer than 24500 characters.</source>
          <target state="translated">Dans une opération set, le titre spécifié est plus long que 24 500 caractères.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>In a set operation, the specified title is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dans une opération set, le titre spécifié est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="P:System.Console.TreatControlCAsInput">
          <source>Gets or sets a value indicating whether the combination of the <ph id="ph1">&lt;see cref="F:System.ConsoleModifiers.Control" /&gt;</ph> modifier key and <ph id="ph2">&lt;see cref="F:System.ConsoleKey.C" /&gt;</ph> console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si la combinaison de la touche de modification <ph id="ph1">&lt;see cref="F:System.ConsoleModifiers.Control" /&gt;</ph> et de la touche de console (Ctrl+C) <ph id="ph2">&lt;see cref="F:System.ConsoleKey.C" /&gt;</ph> est traitée comme une entrée ordinaire ou comme une interruption gérée par le système d'exploitation.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if Ctrl+C is treated as ordinary input; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si Ctrl+C est traité comme entrée ordinaire ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> property is <ph id="ph2">`false`</ph> and Ctrl+C is pressed, the pressed keys are not stored in the input buffer and the operating system terminates the currently executing process.</source>
          <target state="translated">Si la valeur de la <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> propriété <ph id="ph2">`false`</ph> et appuyé sur Ctrl + C, les touches enfoncées ne sont pas stockées dans la mémoire tampon d’entrée et le système d’exploitation met fin au processus en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>This is the default value.</source>
          <target state="translated">Valeur par défaut.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>Use this property judiciously because setting it to <ph id="ph1">`true`</ph> has such a dramatic effect.</source>
          <target state="translated">Utilisez cette propriété judicieusement, car la valeur <ph id="ph1">`true`</ph> a un effet considérable.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>Most users expect Ctrl+C to terminate a console application.</source>
          <target state="translated">La plupart des utilisateurs attendent Ctrl + C pour arrêter une application console.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>If you disable the effect of Ctrl+C, the user must remember to use Ctrl+Break to terminate the application, which is a less familiar key combination.</source>
          <target state="translated">Si vous désactivez l’effet de Ctrl + C, l’utilisateur doit se souvenir à utiliser Ctrl + Pause pour arrêter l’application, qui est une combinaison de touches moins courantes.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant illustre le <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="P:System.Console.TreatControlCAsInput">
          <source>Unable to get or set the input mode of the console input buffer.</source>
          <target state="translated">Impossible d’obtenir ou définir le mode d’entrée de la mémoire tampon d’entrée de la console.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>Gets or sets the height of the console window area.</source>
          <target state="translated">Obtient ou définit la hauteur de la zone de la fenêtre de console.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>The height of the console window measured in rows.</source>
          <target state="translated">Hauteur de la fenêtre de console mesurée en lignes.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>Attempting to set the value of the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> property when output is redirected throws either an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> or an <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph> exception.</source>
          <target state="translated">Tentative de définition de la valeur de la <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> propriété lorsque la sortie est redirigée lève une une <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> ou un <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>To prevent an exception, you can set the value of this property only if the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Pour éviter une exception, vous pouvez définir la valeur de cette propriété uniquement si la <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> propriété renvoie <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> method, and the <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> properties.</source>
          <target state="translated">Cet exemple illustre la <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>You must run the example to see the full effect of changing the console window size.</source>
          <target state="translated">Vous devez exécuter l’exemple pour voir l’effet de la modification de la taille de fenêtre de console.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</source>
          <target state="translated">L’exemple rapporte les dimensions d’une fenêtre de console définie avec 85 colonnes et 43 lignes, puis attend une touche.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</source>
          <target state="translated">Lorsqu’une touche est enfoncée, les dimensions de la fenêtre de console sont divisés par deux, les nouvelles dimensions sont signalées et l’exemple attend une autre touche.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</source>
          <target state="translated">Enfin, lorsqu’une touche est enfoncée la fenêtre de console est restaurée à ses dimensions d’origine et l’exemple se termine.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> property or the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property is less than or equal to 0.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> ou la valeur de la propriété <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> est inférieure ou égale à 0.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property plus the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> property is greater than or equal to <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somme de la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> et de la valeur de la propriété <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> est supérieure ou égale à <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> property or the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property is greater than the largest possible window width or height for the current screen resolution and console font.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> ou <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> est supérieure à la plus grande largeur ou hauteur de fenêtre possible compte tenu de la police de la console et de la résolution d’écran actuellement définies.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>Error reading or writing information.</source>
          <target state="translated">Erreur de lecture ou d’écriture des informations.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>Gets or sets the leftmost position of the console window area relative to the screen buffer.</source>
          <target state="translated">Obtient ou définit la position la plus à gauche de la zone de la fenêtre de console par rapport à la mémoire tampon d'écran.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The leftmost console window position measured in columns.</source>
          <target state="translated">Position de la fenêtre de console la plus à gauche mesurée en colonnes.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The console represents a rectangular window into a larger rectangular buffer area.</source>
          <target state="translated">La console représente une fenêtre rectangulaire dans une plus grande zone de mémoire tampon rectangulaire.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</source>
          <target state="translated">La fenêtre et la mémoire tampon sont mesurées verticalement par leur nombre de lignes et horizontalement par leur nombre de colonnes.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The dimensions of the buffer area are defined by the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties.</source>
          <target state="translated">Les dimensions de la zone de mémoire tampon sont définies par le <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The dimensions of the console area are defined by the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties.</source>
          <target state="translated">Les dimensions de la zone de console sont définies par le <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property determines which column of the buffer area is displayed in the first column of the console window.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> propriété détermine quelle colonne de la zone de mémoire tampon est affichée dans la première colonne de la fenêtre de console.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property can range from 0 to <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph><ph id="ph3"> - </ph><ph id="ph4">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>.</source>
          <target state="translated">La valeur de la <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> propriété peut être comprise entre 0 et <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> <ph id="ph3"> - </ph> <ph id="ph4">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Attempting to set it to a value outside that range throws an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">Essayez de définir une valeur en dehors de cette plage lève un <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>When a console window first opens, the default value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property is zero, which indicates that the first column shown by the console corresponds to the first column (the column at position zero) in the buffer area.</source>
          <target state="translated">Quand une fenêtre de console s’ouvre, la valeur par défaut de la <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> propriété est zéro, ce qui indique que la première colonne indiquée par la console correspond à la première colonne (colonne à la position zéro) dans la zone de mémoire tampon.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The default width of both the console window and the buffer area is 80 columns.</source>
          <target state="translated">La largeur par défaut de la fenêtre de console et de la zone de mémoire tampon est 80 colonnes.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>This means that the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property can be modified only if the console window is made narrower or the buffer area is made wider.</source>
          <target state="translated">Cela signifie que le <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> propriété peut être modifiée uniquement si la fenêtre de console est rendue plus étroite ou la zone de mémoire tampon est rendue plus large.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Note that if the width of the buffer area exceeds the width of the console window, the value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property is automatically adjusted when the user uses the horizontal scroll bar to define the window's relationship to the buffer area.</source>
          <target state="translated">Notez que si la largeur de la zone de mémoire tampon dépasse la largeur de la fenêtre de console, la valeur de la <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> propriété est automatiquement ajustée lorsque l’utilisateur utilise la barre de défilement horizontale pour définir la relation de la fenêtre de la zone de mémoire tampon.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Attempting to set the value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property when output is redirected throws an <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> exception.</source>
          <target state="translated">Tentative de définition de la valeur de la <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> propriété lors de la sortie est redirigée lève une <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>To prevent the exception, you can set the value of this property only if the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Pour empêcher cette exception, vous pouvez définir la valeur de cette propriété uniquement si la <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> propriété renvoie <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The following example opens an 80-column console window and defines a buffer area that is 120 columns wide.</source>
          <target state="translated">L’exemple suivant ouvre une fenêtre de console de 80 colonnes et définit une zone de mémoire tampon est de 120 colonnes de large.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>It displays information on window and buffer size, and then waits for the user to press either the LEFT ARROW key or the RIGHT ARROW key.</source>
          <target state="translated">Il affiche des informations sur la taille de fenêtre et la mémoire tampon, puis attend que l’utilisateur appuie sur la touche gauche ou sur la touche flèche droite.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>In the former case, it decrements the value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property by one if the result is a legal value.</source>
          <target state="translated">Dans le premier cas, il décrémente la valeur de la <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> propriété d’une unité si le résultat est une valeur autorisée.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>In the latter case, it increases the value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property by one if the result would be legal.</source>
          <target state="translated">Dans ce cas, il augmente la valeur de la <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> propriété d’une unité si le résultat est autorisé.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Note that the example does not have to handle an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, because it checks that the value to be assigned to the <ph id="ph2">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property is not negative and does not cause the sum of the <ph id="ph3">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties to exceed the <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> property value.</source>
          <target state="translated">Notez que l’exemple n’a pas à gérer un <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, car il vérifie que la valeur à affecter à la <ph id="ph2">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> propriété n’est pas négative et n’entraîne pas la somme de la <ph id="ph3">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> propriétés dépasse le <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> valeur de propriété.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>In a set operation, the value to be assigned is less than zero.</source>
          <target state="translated">Dans une opération ensembliste, la valeur à affecter est inférieure à zéro.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>As a result of the assignment, <ph id="ph1">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> would exceed <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated">Suite à l’affectation, <ph id="ph1">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> dépasseraient <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>Error reading or writing information.</source>
          <target state="translated">Erreur de lecture ou d’écriture des informations.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>Gets or sets the top position of the console window area relative to the screen buffer.</source>
          <target state="translated">Obtient ou définit la position supérieure de la zone de la fenêtre de console par rapport à la mémoire tampon d'écran.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The uppermost console window position measured in rows.</source>
          <target state="translated">Position supérieure de la fenêtre de console mesurée en lignes.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The console represents a rectangular window into a larger rectangular buffer area.</source>
          <target state="translated">La console représente une fenêtre rectangulaire dans une plus grande zone de mémoire tampon rectangulaire.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</source>
          <target state="translated">La fenêtre et la mémoire tampon sont mesurées verticalement par leur nombre de lignes et horizontalement par leur nombre de colonnes.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The dimensions of the buffer area are defined by the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties.</source>
          <target state="translated">Les dimensions de la zone de mémoire tampon sont définies par le <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The dimensions of the console area are defined by the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties.</source>
          <target state="translated">Les dimensions de la zone de console sont définies par le <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> property determines which row of the buffer area is displayed in the first column of the console window.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> propriété détermine quelle ligne de la zone de mémoire tampon est affichée dans la première colonne de la fenêtre de console.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The value of the <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> property can range from 0 to <ph id="ph2">&lt;xref:System.Console.BufferHeight%2A&gt;</ph><ph id="ph3"> - </ph><ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>.</source>
          <target state="translated">La valeur de la <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> propriété peut être comprise entre 0 et <ph id="ph2">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> <ph id="ph3"> - </ph> <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>Attempting to set it to a value outside that range throws an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">Essayez de définir une valeur en dehors de cette plage lève un <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>Attempting to set the value of the <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> property when output is redirected throws an <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> exception.</source>
          <target state="translated">Tentative de définition de la valeur de la <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> propriété lors de la sortie est redirigée lève une <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>To prevent the exception, you can set the value of this property only if the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Pour empêcher cette exception, vous pouvez définir la valeur de cette propriété uniquement si la <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> propriété renvoie <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> properties; and the <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> methods.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, et <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> propriétés ; et le <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, et <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The example draws a grid pattern in the screen buffer based on the screen buffer width.</source>
          <target state="translated">L’exemple dessine un motif de grille dans la mémoire tampon d’écran en fonction de la largeur de la mémoire tampon écran.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</source>
          <target state="translated">L’exemple déplace ensuite la fenêtre de console dans la réponse de la flèche haut, bas, gauche ou droite touche de console enfoncée.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The grid pattern helps you see the movement of the console window relative to the screen buffer.</source>
          <target state="translated">Le modèle de grille vous permet de visualiser le déplacement de la fenêtre de console par rapport à la mémoire tampon d’écran.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>In a set operation, the value to be assigned is less than zero.</source>
          <target state="translated">Dans une opération ensembliste, la valeur à affecter est inférieure à zéro.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>As a result of the assignment, <ph id="ph1">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> would exceed <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated">Suite à l’affectation, <ph id="ph1">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> dépasseraient <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>Error reading or writing information.</source>
          <target state="translated">Erreur de lecture ou d’écriture des informations.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>Gets or sets the width of the console window.</source>
          <target state="translated">Obtient ou définit la largeur de la fenêtre de console.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>The width of the console window measured in columns.</source>
          <target state="translated">Largeur de la fenêtre de console mesurée en colonnes.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>Attempting to set the value of the <ph id="ph1">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> property when output is redirected throws either an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> or an <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph> exception.</source>
          <target state="translated">Tentative de définition de la valeur de la <ph id="ph1">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> propriété lorsque la sortie est redirigée lève une une <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> ou un <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>To prevent an exception, you can set the value of this property only if the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Pour éviter une exception, vous pouvez définir la valeur de cette propriété uniquement si la <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> propriété renvoie <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> method, and the <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> properties.</source>
          <target state="translated">Cet exemple illustre la <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>You must run the example to see the full effect of changing the console window size.</source>
          <target state="translated">Vous devez exécuter l’exemple pour voir l’effet de la modification de la taille de fenêtre de console.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</source>
          <target state="translated">L’exemple rapporte les dimensions d’une fenêtre de console définie avec 85 colonnes et 43 lignes, puis attend une touche.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</source>
          <target state="translated">Lorsqu’une touche est enfoncée, les dimensions de la fenêtre de console sont divisés par deux, les nouvelles dimensions sont signalées et l’exemple attend une autre touche.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</source>
          <target state="translated">Enfin, lorsqu’une touche est enfoncée la fenêtre de console est restaurée à ses dimensions d’origine et l’exemple se termine.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> property or the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property is less than or equal to 0.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> ou la valeur de la propriété <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> est inférieure ou égale à 0.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property plus the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> property is greater than or equal to <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">La somme de la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> et de la valeur de la propriété <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> est supérieure ou égale à <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> property or the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property is greater than the largest possible window width or height for the current screen resolution and console font.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> ou <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> est supérieure à la plus grande largeur ou hauteur de fenêtre possible compte tenu de la police de la console et de la résolution d’écran actuellement définies.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>Error reading or writing information.</source>
          <target state="translated">Erreur de lecture ou d’écriture des informations.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Writes the text representation of the specified value or values to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la ou des valeurs spécifiées dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Boolean)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Boolean)">
          <source>Writes the text representation of the specified Boolean value to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur booléenne spécifiée dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Boolean)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling <ph id="ph2">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph>, which outputs either <ph id="ph3">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant <ph id="ph2">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph>, qui retourne <ph id="ph3">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> ou <ph id="ph4">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Boolean)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Boolean)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Boolean)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char)">
          <source>Writes the specified Unicode character value to the standard output stream.</source>
          <target state="translated">Écrit la valeur du caractère Unicode spécifiée dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[])">
          <source>A Unicode character array.</source>
          <target state="translated">Tableau de caractères Unicode.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[])">
          <source>Writes the specified array of Unicode characters to the standard output stream.</source>
          <target state="translated">Écrit le tableau de caractères Unicode spécifié dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[])">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[])">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Decimal)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Decimal)">
          <source>Writes the text representation of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> spécifiée dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Decimal)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling <ph id="ph2">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant <ph id="ph2">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Decimal)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Decimal)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Decimal)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Decimal)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Double)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Double)">
          <source>Writes the text representation of the specified double-precision floating-point value to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur à virgule flottante double précision spécifiée dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Double)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Double)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Double)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Double)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Double)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int32)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int32)">
          <source>Writes the text representation of the specified 32-bit signed integer value to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur entière signée 32 bits spécifiée dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int32)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int32)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int64)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int64)">
          <source>Writes the text representation of the specified 64-bit signed integer value to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur entière signée 64 bits spécifiée dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int64)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int64)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int64)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int64)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int64)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Object)">
          <source>The value to write, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Valeur à écrire ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Object)">
          <source>Writes the text representation of the specified object to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de l'objet spécifié dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, nothing is written and no exception is thrown.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> est <ph id="ph2">`null`</ph>, rien n’est écrit et aucune exception n’est levée.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>Otherwise, the <ph id="ph1">`ToString`</ph> method of <ph id="ph2">`value`</ph> is called to produce its string representation, and the resulting string is written to the standard output stream.</source>
          <target state="translated">Dans le cas contraire, le <ph id="ph1">`ToString`</ph> méthode <ph id="ph2">`value`</ph> est appelée pour générer la représentation sous forme de chaîne, et la chaîne obtenue est écrite dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Single)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Single)">
          <source>Writes the text representation of the specified single-precision floating-point value to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur à virgule flottante simple précision spécifiée dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Single)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Single)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Single)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Single)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Single)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String)">
          <source>Writes the specified string value to the standard output stream.</source>
          <target state="translated">Écrit la valeur de chaîne spécifiée dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String)">
          <source>If value is <ph id="ph1">`null`</ph>, nothing is written to the standard output stream.</source>
          <target state="translated">Si la valeur est <ph id="ph1">`null`</ph>, rien n’est écrit dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt32)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt32)">
          <source>Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur entière non signée 32 bits spécifiée dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt32)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt32)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt32)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt64)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt64)">
          <source>Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur entière non signée 64 bits spécifiée dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt64)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt64)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt64)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt64)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt64)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>An object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>Writes the text representation of the specified object to the standard output stream using the specified format information.</source>
          <target state="translated">Écrit la représentation textuelle de l'objet spécifié dans le flux de sortie standard à l'aide des informations de mise en forme spécifiées.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise le <bpt id="p1">[</bpt>la fonctionnalité de mise en forme composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">La chaîne obtenue est écrite dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation textuelle de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">La syntaxe d’un élément de format est <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignement<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, qui spécifie un index obligatoire, la longueur facultative et alignement du texte mis en forme et une chaîne facultative de caractères de spécificateur de format qui régissent la mise en forme la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques suivantes de mise en forme.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la prise en charge par les méthodes telles que la fonctionnalité de mise en forme composite <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>et certaines surcharges de <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The following example uses the <ph id="ph1">`WriteLine`</ph> method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">L'exemple suivant utilise la méthode <ph id="ph1">`WriteLine`</ph> pour montrer les spécificateurs de format standard pour les nombres, les dates et les énumérations.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.Write%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">&lt;xref:System.Console.Write%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">La spécification du format dans <ph id="ph1">&lt;paramref name="format" /&gt;</ph> n’est pas valide.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>An array of objects to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Tableau d’objets à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Writes the text representation of the specified array of objects to the standard output stream using the specified format information.</source>
          <target state="translated">Écrit la représentation textuelle du tableau d'objets spécifiés dans le flux de sortie standard à l'aide des informations de mise en forme spécifiées.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>This method uses the  <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise le <bpt id="p1">[</bpt>la fonctionnalité de mise en forme composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">La chaîne obtenue est écrite dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation textuelle de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">La syntaxe d’un élément de format est <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignement<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, qui spécifie un index obligatoire, la longueur facultative et alignement du texte mis en forme et une chaîne facultative de caractères de spécificateur de format qui régissent la mise en forme la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques suivantes de mise en forme.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la prise en charge par les méthodes telles que la fonctionnalité de mise en forme composite <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>et certaines surcharges de <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">`arg`</ph> parameter is a parameter array.</source>
          <target state="translated">Le <ph id="ph1">`arg`</ph> paramètre est un tableau de paramètres.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Arguments  can be passed to the method either as an array or as list of five or more items.</source>
          <target state="translated">Arguments peuvent être passés à la méthode sous forme de tableau ou en tant que liste d’éléments de cinq ou plus.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The examples illustrate both forms of method call.</source>
          <target state="translated">Les exemples illustrent les deux formes d’appel de méthode.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The following example defines a <ph id="ph1">`Person`</ph> class with a number of properties that provide information about a person.</source>
          <target state="translated">L’exemple suivant définit un <ph id="ph1">`Person`</ph> classe avec un nombre de propriétés qui fournissent des informations sur une personne.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Its <ph id="ph1">`GetDescription`</ph> method returns an array that contains all of the property values except one.</source>
          <target state="translated">Son <ph id="ph1">`GetDescription`</ph> méthode retourne un tableau qui contient toutes les valeurs de propriété, sauf une.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The example then uses the array returned by the  <ph id="ph1">`GetDescription`</ph> method  to display the values of the Person object.</source>
          <target state="translated">L’exemple utilise ensuite le tableau retourné par la <ph id="ph1">`GetDescription`</ph> méthode pour afficher les valeurs de l’objet de la personne.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Note that the example calls the <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> method rather than the <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> method because it attempts to display the value of the <ph id="ph3">`Person.Remarks`</ph> property on the same line.</source>
          <target state="translated">Notez que les appels de l’exemple le <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> méthode plutôt que la <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> (méthode), car elle tente d’afficher la valeur de la <ph id="ph3">`Person.Remarks`</ph> propriété sur la même ligne.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>To do this, it examines the value of the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties to determine whether there is enough space for the remark to fit.</source>
          <target state="translated">Pour ce faire, il examine la valeur de la <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> pour déterminer s’il y a suffisamment d’espace pour la Remarque en fonction de propriétés.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>If there is, it displays the line.</source>
          <target state="translated">S’il existe, il affiche la ligne.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>If not, it writes a line, indents three spaces, and displays the remark.</source>
          <target state="translated">Si ce n’est pas le cas, il écrit une ligne met en retrait de trois espaces et affiche le commentaire.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The following example is identical to the first, except that it supplies a five-item list as the <ph id="ph1">`arg`</ph> argument instead of a parameter array.</source>
          <target state="translated">L’exemple suivant est identique à la première, sauf qu’il fournit une liste de cinq éléments comme la <ph id="ph1">`arg`</ph> argument au lieu d’un tableau de paramètres.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">La spécification du format dans <ph id="ph1">&lt;paramref name="format" /&gt;</ph> n’est pas valide.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>This method is not called by C++ code.</source>
          <target state="translated">Cette méthode n’est pas appelée par du code C++.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The C++ compiler resolves calls to <bpt id="p1">[</bpt>System.Console.Write<ept id="p1">](xref:System.Console.Write*)</ept> that include a string and a list of four or more object parameters as a call to <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Le compilateur C++ résout les appels à <bpt id="p1">[</bpt>System.Console.Write<ept id="p1">](xref:System.Console.Write*)</ept> qui incluent une chaîne et une liste de paramètres de l’objet quatre ou plus comme un appel à <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>It resolves calls to <bpt id="p1">[</bpt>System.Console.Write<ept id="p1">](xref:System.Console.Write*)</ept> that include a string and an object array as a call to <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Il résout les appels à <bpt id="p1">[</bpt>System.Console.Write<ept id="p1">](xref:System.Console.Write*)</ept> qui incluent une chaîne et un tableau d’objets comme un appel à <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>An array of Unicode characters.</source>
          <target state="translated">Tableau de caractères Unicode.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>The starting position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Nombre de caractères à écrire.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes the specified subarray of Unicode characters to the standard output stream.</source>
          <target state="translated">Écrit le sous-tableau de caractères Unicode spécifié dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>This method writes <ph id="ph1">`count`</ph> characters starting at position <ph id="ph2">`index`</ph> of <ph id="ph3">`buffer`</ph> to the standard output stream.</source>
          <target state="translated">Cette méthode écrit <ph id="ph1">`count`</ph> caractères en commençant à la position <ph id="ph2">`index`</ph> de <ph id="ph3">`buffer`</ph> au flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> specify a position that is not within <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> spécifient une position qui ne se trouve pas dans <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Premier objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Deuxième objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects to the standard output stream using the specified format information.</source>
          <target state="translated">Écrit la représentation textuelle des objets spécifiés dans le flux de sortie standard à l'aide des informations de mise en forme spécifiées.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise le <bpt id="p1">[</bpt>la fonctionnalité de mise en forme composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">La chaîne obtenue est écrite dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation textuelle de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">La syntaxe d’un élément de format est <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignement<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, qui spécifie un index obligatoire, la longueur facultative et alignement du texte mis en forme et une chaîne facultative de caractères de spécificateur de format qui régissent la mise en forme la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques suivantes de mise en forme.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la prise en charge par les méthodes telles que la fonctionnalité de mise en forme composite <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>et certaines surcharges de <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">`WriteLine`</ph> method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">L'exemple suivant utilise la méthode <ph id="ph1">`WriteLine`</ph> pour montrer les spécificateurs de format standard pour les nombres, les dates et les énumérations.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">La spécification du format dans <ph id="ph1">&lt;paramref name="format" /&gt;</ph> n’est pas valide.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Premier objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Deuxième objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Troisième objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects to the standard output stream using the specified format information.</source>
          <target state="translated">Écrit la représentation textuelle des objets spécifiés dans le flux de sortie standard à l'aide des informations de mise en forme spécifiées.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise le <bpt id="p1">[</bpt>la fonctionnalité de mise en forme composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">La chaîne obtenue est écrite dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation textuelle de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">La syntaxe d’un élément de format est <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignement<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, qui spécifie un index obligatoire, la longueur facultative et alignement du texte mis en forme et une chaîne facultative de caractères de spécificateur de format qui régissent la mise en forme la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques suivantes de mise en forme.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la prise en charge par les méthodes telles que la fonctionnalité de mise en forme composite <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>et certaines surcharges de <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">`WriteLine`</ph> method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">L'exemple suivant utilise la méthode <ph id="ph1">`WriteLine`</ph> pour montrer les spécificateurs de format standard pour les nombres, les dates et les énumérations.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">`Write`</ph>.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">La spécification du format dans <ph id="ph1">&lt;paramref name="format" /&gt;</ph> n’est pas valide.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Premier objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Deuxième objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The third object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Troisième objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The fourth object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Quatrième objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects and variable-length parameter list to the standard output stream using the specified format information.</source>
          <target state="translated">Écrit la représentation textuelle des objets spécifiés et la liste des paramètres de longueur variable dans le flux de sortie standard à l'aide des informations de mise en forme spécifiées.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Cette API n'est pas conforme CLS.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The CLS-compliant alternative is <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L’alternative conforme CLS est <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The C# and Visual Basic compilers automatically resolve a call to this method as a call to <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Les compilateurs c# et Visual Basic résoudre automatiquement un appel à cette méthode comme un appel à <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise le <bpt id="p1">[</bpt>la fonctionnalité de mise en forme composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">La chaîne obtenue est écrite dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation textuelle de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">La syntaxe d’un élément de format est <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignement<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, qui spécifie un index obligatoire, la longueur facultative et alignement du texte mis en forme et une chaîne facultative de caractères de spécificateur de format qui régissent la mise en forme la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques suivantes de mise en forme.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la prise en charge par les méthodes telles que la fonctionnalité de mise en forme composite <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>et certaines surcharges de <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The following example illustrates the use of variable parameters with the <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre l’utilisation de paramètres de variables avec le <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The method is called with a composite format string and five format items.</source>
          <target state="translated">La méthode est appelée avec une chaîne de format composite et cinq éléments de format.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">La spécification du format dans <ph id="ph1">&lt;paramref name="format" /&gt;</ph> n’est pas valide.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This method is marked with the <ph id="ph1">&lt;see langword="vararg" /&gt;</ph> keyword, which means that it supports a variable number of parameters.</source>
          <target state="translated">Cette méthode est marquée avec le <ph id="ph1">&lt;see langword="vararg" /&gt;</ph> (mot clé), ce qui signifie qu’il prend en charge un nombre variable de paramètres.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</source>
          <target state="translated">La méthode peut être appelée à partir de Visual C++, mais il ne peut pas être appelé à partir de code c# ou Visual Basic.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The C# and Visual Basic compilers resolve calls to <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph> as calls to <ph id="ph2">&lt;see cref="M:System.Console.Write(System.String,System.Object[])" /&gt;</ph>.</source>
          <target state="translated">Les compilateurs c# et Visual Basic résolvent les appels à <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph> comme des appels à <ph id="ph2">&lt;see cref="M:System.Console.Write(System.String,System.Object[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Writes the specified data, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit les données spécifiées suivies du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or <ph id="ph1">`vbCrLf`</ph> in Visual Basic).</source>
          <target state="translated">Le terminateur de ligne par défaut est une chaîne dont la valeur est un retour chariot suivi d’un saut de ligne (« \r\n » en c#, ou <ph id="ph1">`vbCrLf`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>You can change the line terminator by setting the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> property to another string.</source>
          <target state="translated">Vous pouvez modifier l’indicateur de fin de ligne en définissant le <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> propriété de la <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> propriété à une autre chaîne.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine">
          <source>Writes the current line terminator to the standard output stream.</source>
          <target state="translated">Écrit le terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or <ph id="ph1">`vbCrLf`</ph> in Visual Basic).</source>
          <target state="translated">Le terminateur de ligne par défaut est une chaîne dont la valeur est un retour chariot suivi d’un saut de ligne (« \r\n » en c#, ou <ph id="ph1">`vbCrLf`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>You can change the line terminator by setting the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> property to another string.</source>
          <target state="translated">Vous pouvez modifier l’indicateur de fin de ligne en définissant le <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> propriété de la <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> propriété à une autre chaîne.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>The example provides an illustration.</source>
          <target state="translated">Cet exemple en fournit une illustration.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>The example changes the line terminator from its default value of "\r\n" or <ph id="ph1">`vbCrLf`</ph> to "\r\n\r\n" or <ph id="ph2">`vbCrLf`</ph><ph id="ph3"> + </ph><ph id="ph4">`vbCrLf`</ph>.</source>
          <target state="translated">L’exemple modifie le terminateur de ligne à partir de sa valeur par défaut « \r\n » ou <ph id="ph1">`vbCrLf`</ph> à « \r\n\r\n » ou <ph id="ph2">`vbCrLf`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`vbCrLf`</ph>.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%29&gt;</ph> methods to display output to the console.</source>
          <target state="translated">Il appelle ensuite la <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%29&gt;</ph> méthodes pour afficher la sortie à la console.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur booléenne spécifiée suivie du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>The following example generates ten random integers and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method to indicate whether they are even.</source>
          <target state="translated">L’exemple suivant génère dix entiers aléatoires et utilise le <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> méthode pour indiquer s’ils sont égaux.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char)">
          <source>Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.</source>
          <target state="translated">Écrit la valeur du caractère Unicode spécifiée suivie du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">L’exemple suivant est une calculatrice de conseil qui calcule un Conseil 18 % et utilise le <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode pour afficher le montant des frais d’origine, la quantité de l’info-bulle et le montant total.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">L’exemple est une application console qui oblige l’utilisateur à fournir le montant des frais d’origine comme paramètre de ligne de commande.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[])">
          <source>A Unicode character array.</source>
          <target state="translated">Tableau de caractères Unicode.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[])">
          <source>Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit le tableau de caractères Unicode spécifié suivi du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[])">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[])">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[])">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>Writes the text representation of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> spécifiée suivie du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">L’exemple suivant est une calculatrice de conseil qui calcule un Conseil 18 % et utilise le <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode pour afficher le montant des frais d’origine, la quantité de l’info-bulle et le montant total.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">L’exemple est une application console qui oblige l’utilisateur à fournir le montant des frais d’origine comme paramètre de ligne de commande.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Double)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Double)">
          <source>Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur à virgule flottante double précision spécifiée suivie du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">L’exemple suivant est une calculatrice de conseil qui calcule un Conseil 18 % et utilise le <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode pour afficher le montant des frais d’origine, la quantité de l’info-bulle et le montant total.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">L’exemple est une application console qui oblige l’utilisateur à fournir le montant des frais d’origine comme paramètre de ligne de commande.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Double)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int32)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int32)">
          <source>Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur entière signée 32 bits spécifiée suivie du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">L’exemple suivant est une calculatrice de conseil qui calcule un Conseil 18 % et utilise le <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode pour afficher le montant des frais d’origine, la quantité de l’info-bulle et le montant total.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">L’exemple est une application console qui oblige l’utilisateur à fournir le montant des frais d’origine comme paramètre de ligne de commande.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int64)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int64)">
          <source>Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur entière signée 64 bits spécifiée suivie du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">L’exemple suivant est une calculatrice de conseil qui calcule un Conseil 18 % et utilise le <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode pour afficher le montant des frais d’origine, la quantité de l’info-bulle et le montant total.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">L’exemple est une application console qui oblige l’utilisateur à fournir le montant des frais d’origine comme paramètre de ligne de commande.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int64)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Object)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Object)">
          <source>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de l'objet spécifié suivie du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, only the line terminator is written.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> a la valeur <ph id="ph2">`null`</ph>, seule la marque de fin de ligne est écrite.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>Otherwise, the <ph id="ph1">`ToString`</ph> method of <ph id="ph2">`value`</ph> is called to produce its string representation, and the resulting string is written to the standard output stream.</source>
          <target state="translated">Dans le cas contraire, le <ph id="ph1">`ToString`</ph> méthode <ph id="ph2">`value`</ph> est appelée pour générer la représentation sous forme de chaîne, et la chaîne obtenue est écrite dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.Object%29&gt;</ph> method to display each value in an object array to the console.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.Object%29&gt;</ph> méthode pour afficher chaque valeur dans un tableau d’objets à la console.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Single)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Single)">
          <source>Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur à virgule flottante simple précision spécifiée suivie du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">L’exemple suivant est une calculatrice de conseil qui calcule un Conseil 18 % et utilise le <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode pour afficher le montant des frais d’origine, la quantité de l’info-bulle et le montant total.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">L’exemple est une application console qui oblige l’utilisateur à fournir le montant des frais d’origine comme paramètre de ligne de commande.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Single)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String)">
          <source>Writes the specified string value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit la valeur de chaîne spécifiée suivie du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>If value is <ph id="ph1">`null`</ph>, only the line terminator is written to the standard output stream.</source>
          <target state="translated">Si la valeur est <ph id="ph1">`null`</ph>, seul le terminateur de ligne est écrite dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> method.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>The example changes the line terminator from its default value of "\r\n" or <ph id="ph1">`vbCrLf`</ph> to "\r\n\r\n" or <ph id="ph2">`vbCrLf`</ph><ph id="ph3"> + </ph><ph id="ph4">`vbCrLf`</ph>.</source>
          <target state="translated">L’exemple modifie le terminateur de ligne à partir de sa valeur par défaut « \r\n » ou <ph id="ph1">`vbCrLf`</ph> à « \r\n\r\n » ou <ph id="ph2">`vbCrLf`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`vbCrLf`</ph>.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%29&gt;</ph> methods to display output to the console.</source>
          <target state="translated">Il appelle ensuite la <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> et <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%29&gt;</ph> méthodes pour afficher la sortie à la console.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur entière non signée 32 bits spécifiée suivie du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">L’exemple suivant est une calculatrice de conseil qui calcule un Conseil 18 % et utilise le <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode pour afficher le montant des frais d’origine, la quantité de l’info-bulle et le montant total.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">L’exemple est une application console qui oblige l’utilisateur à fournir le montant des frais d’origine comme paramètre de ligne de commande.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit la représentation textuelle de la valeur entière non signée 64 bits spécifiée suivie du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La représentation textuelle de <ph id="ph1">`value`</ph> est créée en appelant le <ph id="ph2">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">L’exemple suivant est une calculatrice de conseil qui calcule un Conseil 18 % et utilise le <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode pour afficher le montant des frais d’origine, la quantité de l’info-bulle et le montant total.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">L’exemple est une application console qui oblige l’utilisateur à fournir le montant des frais d’origine comme paramètre de ligne de commande.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>An object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">Écrit la représentation textuelle de l'objet spécifié suivie du terminateur de la ligne active dans le flux de sortie standard, à l'aide des informations de mise en forme spécifiées.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise le <bpt id="p1">[</bpt>la fonctionnalité de mise en forme composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">La chaîne obtenue est écrite dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation textuelle de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">La syntaxe d’un élément de format est <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignement<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, qui spécifie un index obligatoire, la longueur facultative et alignement du texte mis en forme et une chaîne facultative de caractères de spécificateur de format qui régissent la mise en forme la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques suivantes de mise en forme.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la prise en charge par les méthodes telles que la fonctionnalité de mise en forme composite <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>et certaines surcharges de <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29&gt;</ph> method to display five randomly generated <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant appelle la <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29&gt;</ph> méthode pour afficher cinq généré de façon aléatoire <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29&gt;</ph> method to display the current date.</source>
          <target state="translated">L’exemple suivant appelle la <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29&gt;</ph> méthode pour afficher la date actuelle.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>Note that the format item in the <ph id="ph1">`format`</ph> argument uses the "D" <bpt id="p1">[</bpt>standard date and time format string<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> to display the date in the long date format of the current culture.</source>
          <target state="translated">Notez que le format d’élément dans le <ph id="ph1">`format`</ph> argument utilise la « D » <bpt id="p1">[</bpt>chaîne de format de date et heure standard<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> pour afficher la date dans le format de date longue de la culture actuelle.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">La spécification du format dans <ph id="ph1">&lt;paramref name="format" /&gt;</ph> n’est pas valide.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>An array of objects to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Tableau d’objets à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">Écrit la représentation textuelle du tableau d'objets spécifié suivie du terminateur de la ligne active dans le flux de sortie standard, à l'aide des informations de mise en forme spécifiées.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>This method uses the  <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise le <bpt id="p1">[</bpt>la fonctionnalité de mise en forme composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">La chaîne obtenue est écrite dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation textuelle de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">La syntaxe d’un élément de format est <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignement<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, qui spécifie un index obligatoire, la longueur facultative et alignement du texte mis en forme et une chaîne facultative de caractères de spécificateur de format qui régissent la mise en forme la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques suivantes de mise en forme.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la prise en charge par les méthodes telles que la fonctionnalité de mise en forme composite <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>et certaines surcharges de <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">L'exemple suivant décrit les spécificateurs de format standard pour les nombres, les dates et énumérations.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">L’exemple suivant est une calculatrice de conseil qui calcule un Conseil 18 % et utilise le <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode pour afficher le montant des frais d’origine, la quantité de l’info-bulle et le montant total.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">L’exemple est une application console qui oblige l’utilisateur à fournir le montant des frais d’origine comme paramètre de ligne de commande.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">La spécification du format dans <ph id="ph1">&lt;paramref name="format" /&gt;</ph> n’est pas valide.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>This method is not called by C++ code.</source>
          <target state="translated">Cette méthode n’est pas appelée par du code C++.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The C++ compiler resolves calls to <bpt id="p1">[</bpt>System.Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine*)</ept> that include a string and a list of four or more object parameters as a call to <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Le compilateur C++ résout les appels à <bpt id="p1">[</bpt>System.Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine*)</ept> qui incluent une chaîne et une liste de paramètres de l’objet quatre ou plus comme un appel à <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>It resolves calls to <bpt id="p1">[</bpt>System.Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine*)</ept> that include a string and an object array as a call to <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Il résout les appels à <bpt id="p1">[</bpt>System.Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine*)</ept> qui incluent une chaîne et un tableau d’objets comme un appel à <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>An array of Unicode characters.</source>
          <target state="translated">Tableau de caractères Unicode.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The starting position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ dans <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Nombre de caractères à écrire.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Écrit le sous-tableau de caractères Unicode spécifié suivi du terminateur de la ligne active dans le flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This method writes <ph id="ph1">`count`</ph> characters starting at position <ph id="ph2">`index`</ph> of <ph id="ph3">`buffer`</ph> to the standard output stream.</source>
          <target state="translated">Cette méthode écrit <ph id="ph1">`count`</ph> caractères en commençant à la position <ph id="ph2">`index`</ph> de <ph id="ph3">`buffer`</ph> au flux de sortie standard.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> specify a position that is not within <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> spécifient une position qui ne se trouve pas dans <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Premier objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Deuxième objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">Écrit la représentation textuelle des objets spécifiés suivie du terminateur de la ligne active dans le flux de sortie standard, à l'aide des informations de mise en forme spécifiées.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise le <bpt id="p1">[</bpt>la fonctionnalité de mise en forme composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">La chaîne obtenue est écrite dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation textuelle de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">La syntaxe d’un élément de format est <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignement<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, qui spécifie un index obligatoire, la longueur facultative et alignement du texte mis en forme et une chaîne facultative de caractères de spécificateur de format qui régissent la mise en forme la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques suivantes de mise en forme.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la prise en charge par les méthodes telles que la fonctionnalité de mise en forme composite <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>et certaines surcharges de <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">L'exemple suivant décrit les spécificateurs de format standard pour les nombres, les dates et énumérations.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">L’exemple suivant est une calculatrice de conseil qui calcule un Conseil 18 % et utilise le <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode pour afficher le montant des frais d’origine, la quantité de l’info-bulle et le montant total.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">L’exemple est une application console qui oblige l’utilisateur à fournir le montant des frais d’origine comme paramètre de ligne de commande.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">La spécification du format dans <ph id="ph1">&lt;paramref name="format" /&gt;</ph> n’est pas valide.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Premier objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Deuxième objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Troisième objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">Écrit la représentation textuelle des objets spécifiés suivie du terminateur de la ligne active dans le flux de sortie standard, à l'aide des informations de mise en forme spécifiées.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise le <bpt id="p1">[</bpt>la fonctionnalité de mise en forme composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">La chaîne obtenue est écrite dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation textuelle de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">La syntaxe d’un élément de format est <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignement<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, qui spécifie un index obligatoire, la longueur facultative et alignement du texte mis en forme et une chaîne facultative de caractères de spécificateur de format qui régissent la mise en forme la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques suivantes de mise en forme.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la prise en charge par les méthodes telles que la fonctionnalité de mise en forme composite <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>et certaines surcharges de <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">L'exemple suivant décrit les spécificateurs de format standard pour les nombres, les dates et énumérations.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">L’exemple suivant est une calculatrice de conseil qui calcule un Conseil 18 % et utilise le <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode pour afficher le montant des frais d’origine, la quantité de l’info-bulle et le montant total.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">L’exemple est une application console qui oblige l’utilisateur à fournir le montant des frais d’origine comme paramètre de ligne de commande.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">La spécification du format dans <ph id="ph1">&lt;paramref name="format" /&gt;</ph> n’est pas valide.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">Chaîne de format composite.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Premier objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Deuxième objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The third object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Troisième objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The fourth object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Quatrième objet à écrire à l’aide de <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects and variable-length parameter list, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">Écrit la représentation textuelle des objets spécifiés et la liste des paramètres de longueur variable suivies du terminateur de la ligne active dans le flux de sortie standard, à l'aide des informations de mise en forme spécifiées.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Cette API n'est pas conforme CLS.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The CLS-compliant alternative is <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L’alternative conforme CLS est <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The C# and Visual Basic compilers automatically resolve a call to this method as a call to <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Les compilateurs c# et Visual Basic résoudre automatiquement un appel à cette méthode comme un appel à <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Cette méthode utilise le <bpt id="p1">[</bpt>la fonctionnalité de mise en forme composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> du .NET Framework pour convertir la valeur d’un objet en sa représentation sous forme de texte et incorporer cette représentation dans une chaîne.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">La chaîne obtenue est écrite dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre se compose de zéro ou de plusieurs exécutions de texte associées à zéro ou plusieurs espaces réservés indexés, appelés éléments de format, qui correspondent à un objet dans la liste de paramètres de cette méthode.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">Le processus de mise en forme remplace chaque élément de format par la représentation textuelle de la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">La syntaxe d’un élément de format est <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignement<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, qui spécifie un index obligatoire, la longueur facultative et alignement du texte mis en forme et une chaîne facultative de caractères de spécificateur de format qui régissent la mise en forme la valeur de l’objet correspondant.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques suivantes de mise en forme.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la prise en charge par les méthodes telles que la fonctionnalité de mise en forme composite <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>et certaines surcharges de <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>mise en forme Composite<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations à propos de date et l’heure de spécificateurs de format, consultez <bpt id="p1">[</bpt>Standard de Date et heure des chaînes de Format<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format de temps et de Date personnalisée<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les spécificateurs de format d’énumération, consultez <bpt id="p1">[</bpt>chaînes de Format d’énumération<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">Pour plus d’informations sur le terminateur de ligne, consultez la section Notes de la <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> méthode qui ne prend aucun paramètre.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The following example illustrates the use of variable arguments with the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre l’utilisation d’arguments variables avec la <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The method is called with a composite format string and five format items.</source>
          <target state="translated">La méthode est appelée avec une chaîne de format composite et cinq éléments de format.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated">La spécification du format dans <ph id="ph1">&lt;paramref name="format" /&gt;</ph> n’est pas valide.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">Pour modifier les sous-fenêtres et les fenêtres de niveau supérieur.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This method is marked with the <ph id="ph1">&lt;see langword="vararg" /&gt;</ph> keyword, which means that it supports a variable number of parameters.</source>
          <target state="translated">Cette méthode est marquée avec le <ph id="ph1">&lt;see langword="vararg" /&gt;</ph> (mot clé), ce qui signifie qu’il prend en charge un nombre variable de paramètres.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</source>
          <target state="translated">La méthode peut être appelée à partir de Visual C++, mais il ne peut pas être appelé à partir de code c# ou Visual Basic.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The C# and Visual Basic compilers resolve calls to <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph> as calls to <ph id="ph2">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object[])" /&gt;</ph>.</source>
          <target state="translated">Les compilateurs c# et Visual Basic résolvent les appels à <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph> comme des appels à <ph id="ph2">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object[])" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>