<Type Name="TimeZoneInfo+AdjustmentRule" FullName="System.TimeZoneInfo+AdjustmentRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab6846ef1683cfb44bd8a9eabf8b678f944bdece" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57956490" /></Metadata><TypeSignature Language="C#" Value="public sealed class TimeZoneInfo.AdjustmentRule : IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable sealed beforefieldinit TimeZoneInfo/AdjustmentRule extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo/AdjustmentRule&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo.AdjustmentRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeZoneInfo.AdjustmentRule&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo.AdjustmentRule), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: ref class TimeZoneInfo::AdjustmentRule sealed : IEquatable&lt;TimeZoneInfo::AdjustmentRule ^&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo.AdjustmentRule = class&#xA;    interface IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo+AdjustmentRule&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit des informations à propos d'un réglage des fuseaux horaires, tel que la transition de et vers l'heure d'été.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.TimeZoneInfo.AdjustmentRule> classe définit le début effective et fin d’un changement d’heure particulier vers et à partir de l’heure d’été, respectivement, ainsi que son delta (le montant exact par lequel le réglage provoque heure d’hiver du fuseau horaire modifier). En outre, deux propriétés retournent <xref:System.TimeZoneInfo.TransitionTime> les objets qui se définissent à chaque transition vers et depuis l’heure d’hiver.  
  
> [!NOTE]
>  Une instance de la <xref:System.TimeZoneInfo.AdjustmentRule> classe est immuable. Une fois qu’un objet a été créé, ses valeurs ne sont pas modifiables.  
  
 Pour créer un <xref:System.TimeZoneInfo.AdjustmentRule> de l’objet, appelez le `static` (`Shared` en Visual Basic) <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A?displayProperty=nameWithType> (méthode). Vous pouvez ensuite fournir un tableau de <xref:System.TimeZoneInfo.AdjustmentRule> objets à deux des surcharges de la <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> (méthode). Pour récupérer les règles d’ajustement d’un fuseau horaire particulier, appelez sa <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> (méthode), qui retourne un tableau de <xref:System.TimeZoneInfo.AdjustmentRule> objets.  
  
   
  
## Examples  
 L’exemple suivant récupère tous les fuseaux horaires définis sur le système local et affiche des informations complètes sur les règles d’ajustement.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#3)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#3)]  
  
 Voici une petite partie de la sortie générée par l’exemple. La sortie exacte varie selon le système d’exploitation et la date sur laquelle l’exemple est exécuté.  
  
```  
Morocco Standard Time Adjustment rules  
   Adjustment rule #1  
      Start Date: Tuesday, January 01, 2008  
      End Date: Wednesday, December 31, 2008  
      Time Change: 1:00 hours  
      Annual Start: The Last Saturday of May at 11:59 PM  
      Annual End: The Last Sunday of August at 11:59 PM  
   Adjustment rule #2  
      Start Date: Thursday, January 01, 2009  
      End Date: Thursday, December 31, 2009  
      Time Change: 1:00 hours  
      Annual Start: The Last Sunday of May at 11:59 PM  
      Annual End: The Third Thursday of August at 11:59 PM  
  
Coordinated Universal Time has no adjustment rules  
  
GMT Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 1:00 AM  
   Annual End: The Last Sunday of October at 2:00 AM  
  
Greenwich Standard Time has no adjustment rules  
  
W. Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Romance Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central European Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
W. Central Africa Standard Time has no adjustment rules  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName="CreateAdjustmentRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.AdjustmentRule CreateAdjustmentRule (DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo.TransitionTime daylightTransitionStart, TimeZoneInfo.TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo/AdjustmentRule CreateAdjustmentRule(valuetype System.DateTime dateStart, valuetype System.DateTime dateEnd, valuetype System.TimeSpan daylightDelta, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionStart, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAdjustmentRule (dateStart As DateTime, dateEnd As DateTime, daylightDelta As TimeSpan, daylightTransitionStart As TimeZoneInfo.TransitionTime, daylightTransitionEnd As TimeZoneInfo.TransitionTime) As TimeZoneInfo.AdjustmentRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::AdjustmentRule ^ CreateAdjustmentRule(DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo::TransitionTime daylightTransitionStart, TimeZoneInfo::TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="F#" Value="static member CreateAdjustmentRule : DateTime * DateTime * TimeSpan * TimeZoneInfo.TransitionTime * TimeZoneInfo.TransitionTime -&gt; TimeZoneInfo.AdjustmentRule" Usage="System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule (dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+AdjustmentRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateStart" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="dateEnd" Type="System.DateTime" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="daylightDelta" Type="System.TimeSpan" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="daylightTransitionStart" Type="System.TimeZoneInfo+TransitionTime" Index="3" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="daylightTransitionEnd" Type="System.TimeZoneInfo+TransitionTime" Index="4" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateStart">Date d’effet de la règle d’ajustement. Si la valeur du paramètre <paramref name="dateStart" /> est <see langword="DateTime.MinValue.Date" />, il s’agit de la première règle d’ajustement en vigueur pour un fuseau horaire.</param>
        <param name="dateEnd">Dernière date à laquelle la règle d’ajustement est en vigueur. Si la valeur du paramètre <paramref name="dateEnd" /> est <see langword="DateTime.MaxValue.Date" />, la règle d’ajustement n’a pas de date de fin.</param>
        <param name="daylightDelta">Changement d’heure qui résulte de l’ajustement. Cette valeur est ajoutée à la propriété <see cref="P:System.TimeZoneInfo.BaseUtcOffset" /> du fuseau horaire pour obtenir le décalage de l’heure d’été correct à partir du temps universel coordonné (UTC). Cette valeur peut être comprise entre -14 et 14.</param>
        <param name="daylightTransitionStart">Objet qui définit le début de l’heure d’été.</param>
        <param name="daylightTransitionEnd">Objet qui définit la fin de l’heure d’été.</param>
        <summary>Crée une règle d’ajustement pour un fuseau horaire particulier.</summary>
        <returns>Objet qui représente la nouvelle règle d’ajustement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour créer un ou plusieurs règles d’ajustement pour un fuseau horaire personnalisé. Un tableau de la <xref:System.TimeZoneInfo.AdjustmentRule> objets retournés par les appels à cette méthode peuvent ensuite être passées en tant que le `adjustmentRules` paramètre à deux surcharges de la <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> (méthode). L’exemple illustre cette procédure.  
  
> [!NOTE]
>  Le <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> méthode peut être utilisée uniquement pour définir une règle d’ajustement pour un nouveau fuseau horaire ; il ne peut pas être utilisé pour modifier une règle d’ajustement pour un fuseau horaire existant.  
  
 Le `dateStart` et `dateEnd` paramètres doivent être des valeurs de date sans composant d’heure ou un <xref:System.ArgumentException> est levée. Le composant heure peut être supprimé en récupérant un <xref:System.DateTime> valeur à partir de la date et d’heure <xref:System.DateTime.Date%2A> comme indiqué dans les instructions suivantes :  
  
```  
DateTime.MinValue.Date  
DateTime.MaxValue.Date  
DateTime.Now.Date   
dateVariable.Date  
```  
  
 Le <xref:System.DateTime.Kind%2A> propriété de la `dateStart` et `dateEnd` paramètres doivent également être <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.  
  
 La valeur de la `daylightDelta` paramètre peut varier de -14 à 14. La somme de la `daylightDelta` paramètre et le `baseUtcOffset` paramètre utilisé dans l’appel à la <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> méthode doit également être comprise entre -14 et 14 ou une <xref:System.InvalidTimeZoneException> est levée.  
  
> [!NOTE]
>  Le `daylightDelta` paramètre définit la différence entre l’heure d’hiver d’un fuseau horaire et de son passage à l’heure. Elle n’est pas destinée à définir le décalage d’heure d’hiver du fuseau horaire par rapport au temps universel coordonné (UTC). Le <xref:System.TimeZoneInfo> classe suppose que ce décalage UTC est constant pendant toute la vie du fuseau horaire. Pour refléter une modification du décalage d’un fuseau horaire à l’heure UTC qui n’est pas provoqué par l’application d’une règle d’ajustement, vous devez utiliser le <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> méthode pour créer un nouveau fuseau horaire personnalisé.  
  
   
  
## Examples  
 L’exemple suivant crée d’autres fuseaux horaires Standard Central et définit trois règles d’ajustement pour les périodes 1976-1986, 1987-2006 et 2007 et versions ultérieures. Ces règles sont ajoutées à un générique <xref:System.Collections.Generic.List%601> objet dont les éléments sont ensuite copiés vers un <xref:System.TimeZoneInfo.AdjustmentRule> tableau. Ce tableau est ensuite utilisé dans l’appel à la <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%29?displayProperty=nameWithType> (méthode).  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#1)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.DateTime.Kind" /> du paramètre <paramref name="dateStart" /> ou <paramref name="dateEnd" /> n’est pas égale à <see cref="F:System.DateTimeKind.Unspecified" />.  
  
ou 
Le paramètre <paramref name="daylightTransitionStart" /> est égal au paramètre <paramref name="daylightTransitionEnd" />.  
  
ou 
Le paramètre <paramref name="dateStart" /> ou <paramref name="dateEnd" /> inclut une valeur d’heure du jour.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dateEnd" /> est antérieur à <paramref name="dateStart" />.  
  
ou 
 <paramref name="daylightDelta" /> est inférieur à -14 ou supérieur à 14.  
  
ou 
La propriété <see cref="P:System.TimeSpan.Milliseconds" /> du paramètre <paramref name="daylightDelta" /> n’est pas égale à 0.  
  
ou 
La propriété <see cref="P:System.TimeSpan.Ticks" /> du paramètre <paramref name="daylightDelta" /> n’est pas égale à un nombre entier de secondes.</exception>
      </Docs>
    </Member>
    <Member MemberName="DateEnd">
      <MemberSignature Language="C#" Value="public DateTime DateEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateEnd As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateEnd { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateEnd : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la date de fin de la règle d’ajustement.</summary>
        <value>Valeur <see cref="T:System.DateTime" /> qui indique la fin de la règle d’ajustement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> propriété est une valeur de date sans composant d’heure.  
  
 La date de fin de la règle d’ajustement actuelle n’est généralement pas connue, vous pouvez affecter `DateTime.MaxValue.Date` à la <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> propriété lorsque vous créez une règle d’ajustement personnalisé.  
  
> [!IMPORTANT]
>  Sauf s’il existe une bonne raison de procéder autrement, vous devez définir la date de fin de la règle d’ajustement pour se produire dans l’intervalle de temps pendant lequel le fuseau horaire observe l’heure d’hiver. Sauf s’il existe une bonne raison pour ce faire, vous ne devez pas définir date de fin de la règle d’ajustement pour se produire dans l’intervalle de temps pendant lequel le fuseau horaire observe l’heure d’été. Par exemple, si la transition d’un fuseau horaire à partir de l’heure d’été se produit le troisième dimanche de mars et le passage à l’heure d’été se produit sur le premier dimanche du mois d’octobre, la date de fin effective de la règle d’ajustement ne doit pas être le 31 décembre d’un particulier année, étant donné que cette date se produit au sein de la période de l’heure d’été.  
  
 Par défaut, le Registre de Windows XP définit une règle d’ajustement unique dont la date de fin est le vendredi 31 décembre 9999 (la valeur de `DateTime.MaxValue.Date`), pour chaque fuseau horaire. Pour les fuseaux horaires aux États-Unis, le Registre dans Windows Vista définit deux règles d’ajustement :  
  
-   Lundi, janvier 01, 0001, à dimanche 31 décembre 2006.  
  
-   Lundi, janvier 01, 2007, vendredi, le 31 décembre 9999.  
  
 Cela signifie que, bien que les règles d’ajustement de fuseau horaire stockés dans le Registre sont utiles pour effectuer des opérations relatives au fuseau horaire actuelles, ils ne peuvent pas être utilisés de façon fiable pour récupérer des informations de fuseau horaire historiques. Pour plus d’informations sur la définition d’un fuseau horaire personnalisé avec plusieurs règles d’ajustement qui peut être utilisé dans une application prenant en charge de fuseau horaire historique, consultez [Comment : Créer des fuseaux horaires avec des règles d’ajustement](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).  
  
   
  
## Examples  
 L’exemple suivant affiche des informations sur l’ensemble des fuseaux horaires définis dans le Registre du système de l’ordinateur local, y compris le démarrage de dates et de fin de leurs règles d’ajustement.  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateStart">
      <MemberSignature Language="C#" Value="public DateTime DateStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateStart As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateStart { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateStart : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la date de prise d’effet de la règle d’ajustement.</summary>
        <value>Valeur <see cref="T:System.DateTime" /> qui indique quand la règle d’ajustement prend effet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A> propriété est une valeur de date sans composant d’heure. Il définit la date sur lequel une règle d’ajustement particulier entrera en vigueur.  Il s’agit de la date dans lequel un jeu de transitions (qui sont généralement définies par une transition à l’heure d’été et une transition vers l’heure d’hiver) entre en vigueur. Par exemple, une règle d’ajustement peut entrer en vigueur le 1er janvier 2017, qui fournit une transition vers l’heure d’été le deuxième dimanche de mars et une transition heure sur le premier dimanche de novembre. Notez que la date de début de la règle d’ajustement n’est pas lié à la date de la première transition.  
  
 Vous pouvez affecter `DateTime.MinValue.Date` à la <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> propriété lorsque vous créez une règle d’ajustement personnalisé pour une utilisation dans une application prenant en charge de fuseau horaire n’a pas travailler avec les informations de fuseau horaire historiques.  
  
> [!IMPORTANT]
>  Sauf s’il existe une bonne raison de procéder autrement, vous devez définir la date de début de la règle d’ajustement pour se produire dans l’intervalle de temps pendant lequel le fuseau horaire observe l’heure d’hiver. Sauf s’il existe une bonne raison pour ce faire, vous ne devez pas définir date de début de la règle d’ajustement pour se produire dans l’intervalle de temps pendant lequel le fuseau horaire observe l’heure d’été. Par exemple, si la transition d’un fuseau horaire à partir de l’heure d’été se produit le troisième dimanche de mars et le passage à l’heure d’été se produit sur le premier dimanche du mois d’octobre, la date de début effective de la règle d’ajustement ne doit pas être le 1er janvier d’un particulier année, étant donné que cette date se produit au sein de la période de l’heure d’été.  
  
 Par défaut, le Registre de Windows XP définit une règle d’ajustement unique dont la date de début est lundi 01 janvier 0001 (la valeur de `DateTime.MinValue.Date`), pour chaque fuseau horaire. Pour les fuseaux horaires aux États-Unis, le Registre dans Windows Vista définit deux règles d’ajustement :  
  
-   Lundi, janvier 01, 0001, à dimanche 31 décembre 2006.  
  
-   Lundi, janvier 01, 2007, vendredi, le 31 décembre 9999.  
  
 Cela signifie que, bien que les règles d’ajustement de fuseau horaire stockés dans le Registre sont utiles pour effectuer des opérations relatives au fuseau horaire actuelles, ils ne peuvent pas être utilisés de façon fiable pour récupérer des informations de fuseau horaire historiques. Pour plus d’informations sur la définition d’un fuseau horaire personnalisé avec plusieurs règles d’ajustement qui peut être utilisé dans une application prenant en charge de fuseau horaire historique, consultez [Comment : Créer des fuseaux horaires avec des règles d’ajustement](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).  
  
   
  
## Examples  
 L’exemple suivant affiche des informations sur l’ensemble des fuseaux horaires définis dans le Registre du système de l’ordinateur local, y compris le démarrage de dates et de fin de leurs règles d’ajustement.  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightDelta">
      <MemberSignature Language="C#" Value="public TimeSpan DaylightDelta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DaylightDelta" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightDelta As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DaylightDelta { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightDelta : TimeSpan" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le délai requis pour former l'heure d'été du fuseau horaire. Ce délai est ajouté à l'offset du fuseau horaire à partir du temps universel coordonné (UTC).</summary>
        <value>Un objet <see cref="T:System.TimeSpan" /> qui indique le délai à ajouter aux modifications d'heure d'hiver suite à la règle de réglage.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La formule suivante définit l’heure d’un fuseau horaire :  
  
```  
TimeZoneTime = BaseUtcOffset + DaylightDelta + UtcTime  
```  
  
 La valeur de la <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> propriété peut varier de 14 heures à-14 heures.  
  
> [!NOTE]
>  Le <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> propriété mesure la différence entre l’heure d’hiver du fuseau horaire et de son passage à l’heure. Il ne s’applique pas aux modifications de décalage standard d’un fuseau horaire par rapport au temps universel coordonné (UTC). Pour représenter un fuseau horaire qui a changé son décalage de l’heure d’hiver à l’heure UTC, vous devez appeler la <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> méthode pour créer un nouveau fuseau horaire.  
  
 La valeur la plus courante de la <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> propriété est 1.0 heure. L’application de la règle d’ajustement de l’heure d’été augmente l’offset du fuseau horaire par rapport au temps universel coordonné (UTC) d’une heure.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionEnd">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionEnd As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionEnd { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionEnd : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient des informations à propos de la transition annuelle de l'heure d'été à l'heure d'hiver.</summary>
        <value>Un objet <see cref="T:System.TimeZoneInfo.TransitionTime" /> qui définit la transition annuelle de l'heure d'été à l'heure d'hiver du fuseau horaire.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.TimeZoneInfo.TransitionTime> objet retourné par la <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> propriété définit une règle de date fixe ou une règle de date flottante pour le retour à l’heure d’hiver. Une règle de date fixe fournit le mois, le jour et l’heure de la journée à laquelle la transition se produit. Une règle de date flottante fournit le mois, semaine, jour de la semaine et heure de la journée à laquelle la transition se produit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionStart">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionStart As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionStart { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionStart : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient des informations à propos de la transition annuelle de l'heure d'hiver à l'heure d'été.</summary>
        <value>Un objet <see cref="T:System.TimeZoneInfo.TransitionTime" /> qui définit la transition annuelle de l'heure d'hiver d'un fuseau horaire à l'heure d'été.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.TimeZoneInfo.TransitionTime> objet retourné par la <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> propriété définit une règle de date fixe ou une règle de date flottante pour la transition à l’heure d’été. Une règle de date fixe fournit le mois, le jour et l’heure de la journée à laquelle la transition se produit. Une règle de date flottante fournit le mois, la semaine, le jour de la semaine et l’heure du jour où la transition se produit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo.AdjustmentRule other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.TimeZoneInfo/AdjustmentRule other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo.AdjustmentRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo::AdjustmentRule ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeZoneInfo.AdjustmentRule -&gt; bool" Usage="adjustmentRule.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo+AdjustmentRule" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="other">Objet à comparer à l'objet actuel.</param>
        <summary>Détermine si l'objet <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> actuel est égal à un second objet <see cref="T:System.TimeZoneInfo.AdjustmentRule" />.</summary>
        <returns><see langword="true" /> si les deux objets <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> ont des valeurs égales ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour déterminer si deux <xref:System.TimeZoneInfo.AdjustmentRule> objets sont égaux, la <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29> méthode compare les valeurs de membre de chaque objet. Deux règles d’ajustement sont égales si elles ont les mêmes dates effectives, le même delta et des valeurs identiques pour la <xref:System.TimeZoneInfo.TransitionTime> objets retournés par leurs <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> et <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> propriétés.  
  
   
  
## Examples  
 L’exemple suivant appelle la <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29?displayProperty=nameWithType> méthode pour comparer les règles d’ajustement heure d’hiver avec ceux du Canada Centre et le Mexique.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#2)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#2)]  
  
 Ce code affiche la sortie suivante dans la console :  
  
```  
Comparing Central Standard Time rule for 1/1/0001 to 12/31/9999 with:  
   Canada Central Standard Time has no adjustment rules.  
   Mexican CST for 1/1/0001 to 12/31/9999: Equal  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="adjustmentRule.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sert de fonction de hachage pour les algorithmes de hachage et les structures de données telles que les tables de hachage.</summary>
        <returns>Un entier signé 32 bits qui sert de code de hachage pour l'objet <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> actuel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sender">Objet qui a initié le rappel. La fonctionnalité pour ce paramètre n'est pas implémentée actuellement.</param>
        <summary>S'exécute lorsque la désérialisation d'un objet <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> est terminée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info">Objet à remplir avec des données.</param>
        <param name="context">Destination pour cette sérialisation (consultez <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Remplit un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour le sérialiser.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</permission>
      </Docs>
    </Member>
  </Members>
</Type>