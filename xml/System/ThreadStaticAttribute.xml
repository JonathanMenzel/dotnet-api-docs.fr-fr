<Type Name="ThreadStaticAttribute" FullName="System.ThreadStaticAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe265099e8fd5070e9b754222476cbae5d64f4ab" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39909722" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ThreadStaticAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ThreadStaticAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ThreadStaticAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadStaticAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadStaticAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ThreadStaticAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a8a35-101">Indique que la valeur d'un champ statique est unique pour chaque thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8a35-101">Indicates that the value of a static field is unique for each thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8a35-102">Un `static` champ marqué avec <xref:System.ThreadStaticAttribute> n’est pas partagé entre les threads.</span><span class="sxs-lookup"><span data-stu-id="a8a35-102">A `static` field marked with <xref:System.ThreadStaticAttribute> is not shared between threads.</span></span> <span data-ttu-id="a8a35-103">Chaque thread en cours d’exécution a une instance distincte du champ et indépendamment définit et obtient des valeurs pour ce champ.</span><span class="sxs-lookup"><span data-stu-id="a8a35-103">Each executing thread has a separate instance of the field, and independently sets and gets values for that field.</span></span> <span data-ttu-id="a8a35-104">Si le champ est accessible sur un thread différent, il contiendra une valeur différente.</span><span class="sxs-lookup"><span data-stu-id="a8a35-104">If the field is accessed on a different thread, it will contain a different value.</span></span>  
  
 <span data-ttu-id="a8a35-105">Notez qu’en plus de l’application de la <xref:System.ThreadStaticAttribute> attribut à un champ, vous devez également le définir comme un `static` champ (c#) ou un `Shared` champ (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a8a35-105">Note that in addition to applying the <xref:System.ThreadStaticAttribute> attribute to a field, you must also define it as a `static` field (in C#) or a `Shared` field (in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8a35-106">Ne spécifiez pas de valeurs initiales pour les champs marqués avec `ThreadStaticAttribute`, car cette initialisation se produit une seule fois, lorsque le constructeur de classe s’exécute et affecte donc qu’un seul thread.</span><span class="sxs-lookup"><span data-stu-id="a8a35-106">Do not specify initial values for fields marked with `ThreadStaticAttribute`, because such initialization occurs only once, when the class constructor executes, and therefore affects only one thread.</span></span> <span data-ttu-id="a8a35-107">Si vous ne spécifiez pas une valeur initiale, vous pouvez compter sur le champ sera initialisé à sa valeur par défaut s’il s’agit d’un type valeur, ou à `null` s’il s’agit d’un type référence.</span><span class="sxs-lookup"><span data-stu-id="a8a35-107">If you do not specify an initial value, you can rely on the field being initialized to its default value if it is a value type, or to `null` if it is a reference type.</span></span>  
  
 <span data-ttu-id="a8a35-108">Utilisez cet attribut tel quel, sans effectuer de dérivation à partir de celui-ci.</span><span class="sxs-lookup"><span data-stu-id="a8a35-108">Use this attribute as it is, and do not derive from it.</span></span>  
  
 <span data-ttu-id="a8a35-109">Pour plus d’informations sur l’utilisation d’attributs, consultez [attributs](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="a8a35-109">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8a35-110">L’exemple suivant instancie un générateur de nombres aléatoires, crée des dix threads en plus le thread principal, puis génère des nombres aléatoires de deux millions dans chaque thread.</span><span class="sxs-lookup"><span data-stu-id="a8a35-110">The following example instantiates a random number generator, creates ten threads in addition to the main thread, and then generates two million random numbers in each thread.</span></span> <span data-ttu-id="a8a35-111">Il utilise le <xref:System.ThreadStaticAttribute> attribut pour calculer la somme et le nombre de nombres aléatoires par thread.</span><span class="sxs-lookup"><span data-stu-id="a8a35-111">It uses the <xref:System.ThreadStaticAttribute> attribute to calculate the sum and the count of random numbers per thread.</span></span> <span data-ttu-id="a8a35-112">Il définit également deux champs supplémentaires par thread, `previous` et `abnormal`, qui lui permet de détecter une altération du Générateur de nombres aléatoires.</span><span class="sxs-lookup"><span data-stu-id="a8a35-112">It also defines two additional per-thread fields, `previous` and `abnormal`, that allows it to detect corruption of the random number generator.</span></span>  
  
 [!code-csharp[System.ThreadStaticAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threadstaticattribute/cs/threadsafe2a.cs#1)]
 [!code-vb[System.ThreadStaticAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threadstaticattribute/vb/threadsafe2a.vb#1)]  
  
 <span data-ttu-id="a8a35-113">L’exemple utilise le `lock` instruction en langage c# et le `SyncLock` construire en Visual Basic pour synchroniser l’accès au Générateur de nombres aléatoires.</span><span class="sxs-lookup"><span data-stu-id="a8a35-113">The example uses the `lock` statement in C# and the `SyncLock` construct in Visual Basic to synchronize access to the random number generator.</span></span> <span data-ttu-id="a8a35-114">Cela empêche la corruption du Générateur de nombres aléatoires, ce qui entraîne généralement son renvoi d’une valeur égale à zéro pour tous les appels ultérieurs.</span><span class="sxs-lookup"><span data-stu-id="a8a35-114">This prevents corruption of the random number generator, which typically results in its returning a value of zero for all subsequent calls.</span></span>  
  
 <span data-ttu-id="a8a35-115">L’exemple utilise également la <xref:System.Threading.CountdownEvent> classe pour garantir que chaque thread a terminé la génération de nombres aléatoires avant d’afficher le nombre total d’appels.</span><span class="sxs-lookup"><span data-stu-id="a8a35-115">The example also uses the <xref:System.Threading.CountdownEvent> class to ensure that each thread has finished generating random numbers before it displays the total number of calls.</span></span> <span data-ttu-id="a8a35-116">Sinon, si le thread principal a été exécutée avant les threads supplémentaires qu’il engendre, il affiche une valeur inexacte du nombre total d’appels de méthode.</span><span class="sxs-lookup"><span data-stu-id="a8a35-116">Otherwise, if the main thread completes execution before the additional threads that it spawns, it displays an inaccurate value for the total number of method calls.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Threading.AsyncLocal`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadStaticAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ThreadStaticAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadStaticAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8a35-117">Initialise une nouvelle instance de la classe <see cref="T:System.ThreadStaticAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a35-117">Initializes a new instance of the <see cref="T:System.ThreadStaticAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>