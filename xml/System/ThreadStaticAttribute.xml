<Type Name="ThreadStaticAttribute" FullName="System.ThreadStaticAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07d61cca1964f76b932d1ee8a032f6d54ae50db7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30727343" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ThreadStaticAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ThreadStaticAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ThreadStaticAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadStaticAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadStaticAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indique que la valeur d'un champ statique est unique pour chaque thread.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A `static` champ marqué avec <xref:System.ThreadStaticAttribute> n’est pas partagé entre les threads. Chaque thread d’exécution possède une instance distincte du champ et indépendamment définit et obtient des valeurs pour ce champ. Si le champ est accessible sur un autre thread, il contiendra une valeur différente.  
  
 Notez qu’en plus de l’application de la <xref:System.ThreadStaticAttribute> attribut à un champ, vous devez également définir comme un `static` champ (c#) ou un `Shared` champ (en Visual Basic).  
  
> [!NOTE]
>  Ne spécifiez pas de valeurs initiales pour les champs marqués avec `ThreadStaticAttribute`, car cette initialisation se produit une seule fois, lorsque le constructeur de classe s’exécute et affecte donc qu’un seul thread. Si vous ne spécifiez pas une valeur initiale, vous pouvez compter sur le champ sera initialisé à sa valeur par défaut s’il s’agit d’un type valeur, ou à `null` s’il s’agit d’un type référence.  
  
 Utilisez cet attribut, car il s’agit, sans effectuer de dérivation à partir de celui-ci.  
  
 Pour plus d’informations sur l’utilisation d’attributs, consultez [attributs](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 L’exemple suivant instancie un générateur de nombres aléatoires, crée des dix threads en plus du thread principal, puis génère des nombres aléatoires de deux millions dans chaque thread. Elle utilise le <xref:System.ThreadStaticAttribute> attribut pour calculer la somme et le nombre de nombres aléatoires par thread. Il définit également deux champs de thread supplémentaire, `previous` et `abnormal`, qui lui permet de détecter la corruption du Générateur de nombres aléatoires.  
  
 [!code-csharp[System.ThreadStaticAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threadstaticattribute/cs/threadsafe2a.cs#1)]
 [!code-vb[System.ThreadStaticAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threadstaticattribute/vb/threadsafe2a.vb#1)]  
  
 L’exemple utilise le `lock` instruction en c# et la `SyncLock` construire en Visual Basic pour synchroniser l’accès au Générateur de nombres aléatoires. Cela empêche la corruption du Générateur de nombres aléatoires, ce qui se produit généralement dans son retour d’une valeur zéro pour tous les appels suivants.  
  
 L’exemple utilise également la <xref:System.Threading.CountdownEvent> classe afin de garantir que chaque thread a terminé la génération de nombres aléatoires avant d’afficher le nombre total d’appels. Sinon, si le thread principal exécution termine avant les threads supplémentaires qu’il engendre, il affiche une valeur inexacte du nombre total d’appels de méthode.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Threading.AsyncLocal`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadStaticAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ThreadStaticAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadStaticAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ThreadStaticAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>