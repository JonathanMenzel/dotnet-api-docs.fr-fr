<Type Name="Action&lt;T&gt;" FullName="System.Action&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b667dcf79e5ae762a2e599fd337d51ceea34b2c7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37482403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void Action&lt;in T&gt;(T obj);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`1&lt;- T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T)(obj As T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate void Action(T obj);" />
  <TypeSignature Language="F#" Value="type Action&lt;'T&gt; = delegate of 'T -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="obj" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="b4ccd-101">Type du paramètre de la méthode encapsulée par ce délégué.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4ccd-101">The type of the parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <param name="obj">
      <span data-ttu-id="b4ccd-102">Paramètre de la méthode encapsulée par ce délégué.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4ccd-102">The parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="b4ccd-103">Encapsule une méthode ayant un seul paramètre et ne retournant aucune valeur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4ccd-103">Encapsulates a method that has a single parameter and does not return a value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4ccd-104">Vous pouvez utiliser le <xref:System.Action%601> délégué à passer à une méthode en tant que paramètre sans déclarer explicitement un délégué personnalisé.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-104">You can use the <xref:System.Action%601> delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="b4ccd-105">La méthode encapsulée doit correspondre à la signature de méthode définie par ce délégué.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-105">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="b4ccd-106">Cela signifie que la méthode encapsulée doit avoir un paramètre qui est passé par valeur, et il ne doit pas retourner une valeur.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-106">This means that the encapsulated method must have one parameter that is passed to it by value, and it must not return a value.</span></span> <span data-ttu-id="b4ccd-107">(En c#, la méthode doit retourner `void`.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-107">(In C#, the method must return `void`.</span></span> <span data-ttu-id="b4ccd-108">En Visual Basic, il doit être défini par le `Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="b4ccd-108">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="b4ccd-109">construction.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-109">construct.</span></span> <span data-ttu-id="b4ccd-110">Il peut également être une méthode qui retourne une valeur qui est ignorée.) En règle générale, une telle méthode est utilisée pour effectuer une opération.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-110">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4ccd-111">Pour faire référence à une méthode qui a un paramètre et retourne une valeur, utilisez le modèle générique <xref:System.Func%602> déléguer à la place.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-111">To reference a method that has one parameter and returns a value, use the generic <xref:System.Func%602> delegate instead.</span></span>  
  
 <span data-ttu-id="b4ccd-112">Lorsque vous utilisez le <xref:System.Action%601> délégué, vous n’avez pas à définir explicitement un délégué qui encapsule une méthode avec un seul paramètre.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-112">When you use the <xref:System.Action%601> delegate, you do not have to explicitly define a delegate that encapsulates a method with a single parameter.</span></span> <span data-ttu-id="b4ccd-113">Par exemple, le code suivant déclare explicitement un délégué nommé `DisplayMessage` et assigne une référence à un le <xref:System.Console.WriteLine%2A> méthode ou le `ShowWindowsMessage` à son instance de délégué (méthode).</span><span class="sxs-lookup"><span data-stu-id="b4ccd-113">For example, the following code explicitly declares a delegate named `DisplayMessage` and assigns a reference to either the <xref:System.Console.WriteLine%2A> method or the `ShowWindowsMessage` method to its delegate instance.</span></span>  
  
 [!code-cpp[System.Action~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Action~1/cpp/delegate.cpp#1)]
 [!code-csharp[System.Action~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Delegate.cs#1)]
 [!code-vb[System.Action~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~1/vb/Delegate.vb#1)]  
  
 <span data-ttu-id="b4ccd-114">L’exemple suivant simplifie ce code en instanciant le <xref:System.Action%601> délégué au lieu de définir un nouveau délégué et lui assigner une méthode nommée explicitement.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-114">The following example simplifies this code by instantiating the <xref:System.Action%601> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-cpp[System.Action~1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Action~1/cpp/action`1.cpp#2)]
 [!code-csharp[System.Action~1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Action1.cs#2)]
 [!code-vb[System.Action~1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~1/vb/Action1.vb#2)]  
  
 <span data-ttu-id="b4ccd-115">Vous pouvez également utiliser le <xref:System.Action%601> déléguer avec les méthodes anonymes en c#, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-115">You can also use the <xref:System.Action%601> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="b4ccd-116">(Pour une introduction aux méthodes anonymes, consultez [méthodes anonymes](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span><span class="sxs-lookup"><span data-stu-id="b4ccd-116">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Action~1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Anon.cs#3)]  
  
 <span data-ttu-id="b4ccd-117">Vous pouvez également affecter une expression lambda à une <xref:System.Action%601> déléguer l’instance, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-117">You can also assign a lambda expression to an <xref:System.Action%601> delegate instance, as the following example illustrates.</span></span> <span data-ttu-id="b4ccd-118">(Pour une introduction aux expressions lambda, consultez [Expressions Lambda](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span><span class="sxs-lookup"><span data-stu-id="b4ccd-118">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Action~1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~1/cs/Lambda.cs#4)]
 [!code-vb[System.Action~1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~1/vb/lambda.vb#4)]  
  
 <span data-ttu-id="b4ccd-119">Le <xref:System.Collections.Generic.List%601.ForEach%2A> et <xref:System.Array.ForEach%2A> méthodes chaque prennent un <xref:System.Action%601> délégué en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-119">The <xref:System.Collections.Generic.List%601.ForEach%2A> and <xref:System.Array.ForEach%2A> methods each take an <xref:System.Action%601> delegate as a parameter.</span></span> <span data-ttu-id="b4ccd-120">La méthode encapsulée par le délégué vous permet d’exécuter une action sur chaque élément du tableau ou de la liste.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-120">The method encapsulated by the delegate allows you to perform an action on each element in the array or list.</span></span> <span data-ttu-id="b4ccd-121">L’exemple utilise le <xref:System.Collections.Generic.List%601.ForEach%2A> méthode pour fournir une illustration.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-121">The example uses the <xref:System.Collections.Generic.List%601.ForEach%2A> method to provide an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4ccd-122">L’exemple suivant illustre l’utilisation de la <xref:System.Action%601> délégué pour imprimer le contenu d’un <xref:System.Collections.Generic.List%601> objet.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-122">The following example demonstrates the use of the <xref:System.Action%601> delegate to print the contents of a <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="b4ccd-123">Dans cet exemple, le `Print` méthode est utilisée pour afficher le contenu de la liste dans la console.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-123">In this example, the `Print` method is used to display the contents of the list to the console.</span></span> <span data-ttu-id="b4ccd-124">En outre, l’exemple c# montre également l’utilisation de méthodes anonymes pour afficher le contenu dans la console.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-124">In addition, the C# example also demonstrates the use of anonymous methods to display the contents to the console.</span></span> <span data-ttu-id="b4ccd-125">Notez que l’exemple ne déclare pas explicitement un <xref:System.Action%601> variable.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-125">Note that the example does not explicitly declare an <xref:System.Action%601> variable.</span></span> <span data-ttu-id="b4ccd-126">Au lieu de cela, il passe une référence à une méthode qui accepte un seul paramètre et qui ne retourne pas de valeur pour le <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> méthode, dont le paramètre unique est un <xref:System.Action%601> déléguer.</span><span class="sxs-lookup"><span data-stu-id="b4ccd-126">Instead, it passes a reference to a method that takes a single parameter and that does not return a value to the <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> method, whose single parameter is an <xref:System.Action%601> delegate.</span></span> <span data-ttu-id="b4ccd-127">De même, dans l’exemple c#, un <xref:System.Action%601> délégué n’est pas explicitement instancié, car la signature de la méthode anonyme correspond à la signature de la <xref:System.Action%601> délégué est attendu par le <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b4ccd-127">Similarly, in the C# example, an <xref:System.Action%601> delegate is not explicitly instantiated because the signature of the anonymous method matches the signature of the <xref:System.Action%601> delegate that is expected by the <xref:System.Collections.Generic.List%601.ForEach%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Action_PrintExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action_PrintExample/cs/action.cs#01)]
 [!code-vb[System.Action_PrintExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action_PrintExample/vb/action.vb#01)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`2" />
  </Docs>
</Type>