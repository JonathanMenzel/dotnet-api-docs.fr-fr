<Type Name="AuthenticationService" FullName="System.Web.ApplicationServices.AuthenticationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4c84e94fb1754c10414d4fbc96eecdd8da767c5d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37548173" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthenticationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.AuthenticationService" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationService" />
  <TypeSignature Language="F#" Value="type AuthenticationService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Active l'accès à l'authentification par formulaire ASP.NET comme un service Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ApplicationServices.AuthenticationService> objet vous permet d’authentifier les utilisateurs via un service Windows Communication Foundation (WCF). Vous utilisez le service d’authentification WCF lorsque vous devez authentifier les utilisateurs via l’appartenance d’ASP.NET à partir d’une application qui est en dehors de l’application Web qui stocke les informations d’identification de l’utilisateur. L’application doit être en mesure d’envoyer et consommer un message au format SOAP. Via le <xref:System.Web.ApplicationServices.AuthenticationService> (classe), vous pouvez connecter des utilisateurs, les utilisateurs du journal out, valider les informations d’identification, vérifier l’état d’authentification, personnaliser l’authentification et définir le cookie d’authentification.  
  
 Le <xref:System.Web.ApplicationServices.AuthenticationService> classe contient quatre méthodes auxquelles vous devez accéder uniquement par le biais d’un service WCF : le <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, et <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> méthodes. Pour appeler ces méthodes, vous activez le service d’authentification sur un serveur Web, puis connectez une application de client compatible WCF au service Web. Pour plus d’informations sur la façon de configurer le service d’authentification, consultez [Comment : activer le Service d’authentification WCF](http://msdn.microsoft.com/library/f7913259-762e-4a73-a771-ac9e42903f44).  
  
 Pour connecter des utilisateurs, vous passez les informations d’identification utilisateur pour le <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> (méthode). Si les informations d’identification sont valides, le <xref:System.Web.ApplicationServices.AuthenticationService> classe crée un cookie d’authentification. Si le cookie d’authentification n’a pas expiré, vous savez que les informations d’identification ont été authentifiées et que vous n’êtes pas obligé de valider les informations d’identification à nouveau. (L’authentification sans cookie n’est pas disponible via le <xref:System.Web.ApplicationServices.AuthenticationService> classe.)  
  
 Le <xref:System.Web.ApplicationServices.AuthenticationService> peut déclencher des événements de deux : <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> et <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>. Le <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> événement se produit lorsque les informations d’identification de l’utilisateur sont validées. Créer un gestionnaire d’événements pour le <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> événement pour personnaliser la façon dont les informations d’identification de l’utilisateur sont validées. Le <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> événement se produit lorsque le cookie d’authentification est défini après que les informations d’identification de l’utilisateur ont été validées. Créer un gestionnaire d’événements pour le <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> événement pour personnaliser le cookie d’authentification.  
  
 Le <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> méthode vérifie les informations d’identification de l’utilisateur pour l’authentification, mais elle ne retourne pas d’un ticket d’authentification. Utilisez <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> quand un utilisateur s’est connecté précédemment et que vous devez vérifier que les informations d’identification sont toujours valides au début d’une nouvelle session de l’application.  
  
 Pour obtenir un exemple d’utilisation du service d’authentification WCF à partir d’une application console, consultez [procédure pas à pas : Services d’Application ASP.NET à l’aide de](http://msdn.microsoft.com/library/f3f394f0-20d6-4361-aa8f-4b21bf4933eb).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.ApplicationServices.AuthenticationService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticating">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Authenticating As EventHandler(Of AuthenticatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::AuthenticatingEventArgs ^&gt; ^ Authenticating;" />
      <MemberSignature Language="F#" Value="member this.Authenticating : EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " Usage="member this.Authenticating : System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque les informations d'identification de l'utilisateur sont validées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> événement est déclenché lorsque les informations d’identification utilisateur sont validées. Créer un gestionnaire d’événements pour le <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> événement pour personnaliser la façon dont les informations d’identification de l’utilisateur sont validées.  
  
   
  
## Examples  
 L’exemple suivant montre comment lier un gestionnaire d’événements pour le <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> événement dans le `Application_Start` méthode du fichier Global.asax.  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#1)]  
  
 L’exemple suivant montre un gestionnaire d’événements pour le <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> événement dans le fichier Global.asax. Le Gestionnaire d’événements lit deux valeurs d’authentification de la <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> propriété et transmet les ainsi que le nom d’utilisateur et le mot de passe à une classe d’authentification personnalisée nommées `StudentAuthentication`.  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.AuthenticatingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CreatingCookie">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CreatingCookie As EventHandler(Of CreatingCookieEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::CreatingCookieEventArgs ^&gt; ^ CreatingCookie;" />
      <MemberSignature Language="F#" Value="member this.CreatingCookie : EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " Usage="member this.CreatingCookie : System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le cookie d'authentification est défini.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> événement est déclenché lorsque le cookie d’authentification est défini après que les informations d’identification de l’utilisateur ont été validées. Créer un gestionnaire d’événements pour le <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> événement pour personnaliser le cookie d’authentification.  
  
   
  
## Examples  
 L’exemple suivant montre comment lier un gestionnaire d’événements pour le <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> événement dans le `Application_Start` méthode du fichier Global.asax.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#1)]  
  
 L’exemple suivant montre un gestionnaire d’événements pour le <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> événement dans le fichier Global.asax. Le Gestionnaire d’événements personnalise le cookie d’authentification en ajoutant la valeur dans le <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> propriété le <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> propriété. Store le <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> propriété dans un cookie uniquement si vous savez que les données dans la propriété ne sont pas sensibles. Les utilisateurs malveillants peuvent accéder aux valeurs dans le cookie.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.CreatingCookieEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsLoggedIn">
      <MemberSignature Language="C#" Value="public bool IsLoggedIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLoggedIn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLoggedIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLoggedIn();" />
      <MemberSignature Language="F#" Value="member this.IsLoggedIn : unit -&gt; bool" Usage="authenticationService.IsLoggedIn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Détermine si l'utilisateur actuel est authentifié.</summary>
        <returns>
          <see langword="true" /> si l'utilisateur a été authentifié ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> méthode vérifie si l’utilisateur actuel est authentifié en vérifiant la <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property.  
  
> [!NOTE]
>  N’appelez pas la <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> méthode à partir du code qui s’exécute sur le serveur Web. Vous appelez le <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> méthode uniquement dans le cadre d’un service WCF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Login">
      <MemberSignature Language="C#" Value="public bool Login (string username, string password, string customCredential, bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Login(string username, string password, string customCredential, bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Login (username As String, password As String, customCredential As String, isPersistent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Login(System::String ^ username, System::String ^ password, System::String ^ customCredential, bool isPersistent);" />
      <MemberSignature Language="F#" Value="member this.Login : string * string * string * bool -&gt; bool" Usage="authenticationService.Login (username, password, customCredential, isPersistent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Le nom de l'utilisateur à valider.</param>
        <param name="password">Mot de passe de l'utilisateur spécifié.</param>
        <param name="customCredential">La valeur ou les valeurs à valider en plus de <c>userName</c> et de <c>password</c>, le cas échéant.</param>
        <param name="isPersistent">Une valeur qui indique si le ticket d'authentification reste valide d'une session à une autre.</param>
        <summary>Vérifie les informations d'identification de l'utilisateur et crée un ticket d'authentification (cookie) si les informations d'identification sont valides.</summary>
        <returns>
          <see langword="true" /> si les informations d'identification de l'utilisateur sont valides ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> méthode valide les informations d’identification de l’utilisateur via un fournisseur d’appartenances. Vous pouvez utiliser le fournisseur d’appartenances par défaut ou spécifier un fournisseur d’appartenances personnalisé au moment de l’exécution. Le <xref:System.Web.ApplicationServices.AuthenticationService> classe passe `userName` et `password` pour le fournisseur d’appartenances <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> (méthode), mais ne transmet pas `customCredential`. Si <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> retourne `true`, <xref:System.Web.ApplicationServices.AuthenticationService> crée un ticket d’authentification sous forme de cookie. Définir le `isPersistent` paramètre `true` pour créer un ticket d’authentification qui s’étend au-delà de la session active.  
  
> [!NOTE]
>  Utilisez toujours le service d’authentification ainsi que la couche de sockets sécurisés (SSL, en utilisant le protocole HTTPS) pour protéger les données sensibles.  
  
 Le <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> méthode déclenche la <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> événement et le <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> événement. Créer un gestionnaire d’événements <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> pour personnaliser l’authentification, telles que la vérification des valeurs dans `customCredential` ou la validation des informations d’identification via un fournisseur d’appartenances par défaut. Les valeurs dans `customCredential` ne sont pas validées par le fournisseur d’appartenances par défaut. Pour personnaliser le cookie d’authentification, créez un gestionnaire d’événements <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.  
  
> [!NOTE]
>  N’appelez pas la <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> méthode à partir du code qui s’exécute sur le serveur Web. Vous appelez le <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> méthode uniquement dans le cadre d’un service WCF. Pour plus d’informations, consultez [l’authentification ASP.NET](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userName" /> ou <paramref name="password" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Logout">
      <MemberSignature Language="C#" Value="public void Logout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Logout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Logout" />
      <MemberSignature Language="VB.NET" Value="Public Sub Logout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Logout();" />
      <MemberSignature Language="F#" Value="member this.Logout : unit -&gt; unit" Usage="authenticationService.Logout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface le ticket d'authentification (cookie) dans le navigateur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> méthode efface le cookie d’authentification à partir de la collection de cookies du navigateur. L’utilisateur devez vous connecter à nouveau pour être authentifié.  
  
 Le <xref:System.Web.ApplicationServices.AuthenticationService> classe ne stocke pas les informations sur le serveur sur lesquels l’authentification des tickets ont été effacés.  
  
> [!NOTE]
>  N’appelez pas la <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> méthode à partir du code qui s’exécute sur le serveur Web. Vous appelez le <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> méthode uniquement dans le cadre d’un service WCF. Pour plus d’informations, consultez [l’authentification ASP.NET](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Security.FormsAuthentication.SignOut" />
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public bool ValidateUser (string username, string password, string customCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateUser(string username, string password, string customCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateUser (username As String, password As String, customCredential As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateUser(System::String ^ username, System::String ^ password, System::String ^ customCredential);" />
      <MemberSignature Language="F#" Value="member this.ValidateUser : string * string * string -&gt; bool" Usage="authenticationService.ValidateUser (username, password, customCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Le nom de l'utilisateur à valider.</param>
        <param name="password">Mot de passe de l'utilisateur spécifié.</param>
        <param name="customCredential">La valeur ou les valeurs à valider en plus de <c>userName</c> et de <c>password</c>, le cas échéant.</param>
        <summary>Authentifie les informations d'identification de l'utilisateur sans publier de ticket d'authentification.</summary>
        <returns>
          <see langword="true" /> si les informations d'identification de l'utilisateur sont valides ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> méthode authentifie les informations d’identification de l’utilisateur, mais ne définit pas un cookie d’authentification. Sans un cookie d’authentification, l’utilisateur ne sera pas connecté même si les informations d’identification sont valides.  
  
 Utilisez le <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> méthode lorsque vous devez vérifier si les informations d’identification d’un utilisateur sont valides sans recevoir un cookie d’authentification. Par exemple, vous êtes susceptible d’effectuer cela si le cookie d’authentification est déjà stocké dans une application cliente, mais que vous souhaitez vérifier que les informations d’identification de l’utilisateur sont toujours valides lorsqu’une nouvelle session démarre.  
  
 Le <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> méthode déclenche la <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> événement, mais ne déclenche pas le <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> événement.  
  
> [!NOTE]
>  N’appelez pas la <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> méthode à partir du code qui s’exécute sur le serveur Web. Vous appelez le <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> méthode uniquement dans le cadre d’un service WCF. Pour plus d’informations, consultez [l’authentification ASP.NET](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userName" /> ou <paramref name="password" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>