<Type Name="RoleService" FullName="System.Web.ApplicationServices.RoleService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="51d2ddc78f7c657bb26ae17995f3f0f6acc3479d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529003" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RoleService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.RoleService" />
  <TypeSignature Language="VB.NET" Value="Public Class RoleService" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleService" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Active l'accès au fournisseur de rôles ASP.NET comme un service Web WCF.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ApplicationServices.RoleService> objet vous permet de lire les rôles d’un utilisateur via un service Windows Communication Foundation (WCF). Pour utiliser le service de rôle, vous devez activer le service de rôle sur un serveur Web et puis connecter une application de client compatible WCF au service Web. Pour plus d’informations sur la façon de configurer le service de rôle, consultez [Comment : activer le Service de rôle WCF](http://msdn.microsoft.com/library/d021aa39-4cbf-4450-a3c1-d5573ca7ce8c).  
  
 L’utilisateur doit être authentifié pour lire les rôles de l’utilisateur. Le service de rôle fonctionne avec n’importe quel type d’authentification ASP.NET. Pour plus d’informations sur la connexion d’utilisateurs via un service WCF, consultez [vue d’ensemble de Windows Communication Foundation Authentication Service](http://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b).  
  
 Le <xref:System.Web.ApplicationServices.RoleService> classe expose deux méthodes qui doivent être accessibles uniquement par le biais d’un service WCF : le <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> (méthode) et le <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> (méthode). Le <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> méthode retourne tous les rôles pour l’utilisateur connecté. Le <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> méthode détermine si l’utilisateur est dans un rôle spécifié.  
  
 Le <xref:System.Web.ApplicationServices.RoleService> objet déclenche le <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> événement. Vous créez un gestionnaire d’événements pour le <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> événement afin de sélectionner le fournisseur de rôles à utiliser au moment de l’exécution.  
  
 Pour obtenir un exemple montrant comment utiliser le service de rôle WCF à partir d’une application console, consultez [procédure pas à pas : Services d’Application ASP.NET à l’aide de](http://msdn.microsoft.com/library/f3f394f0-20d6-4361-aa8f-4b21bf4933eb).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.RoleService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoleService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.ApplicationServices.RoleService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForCurrentUser">
      <MemberSignature Language="C#" Value="public string[] GetRolesForCurrentUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetRolesForCurrentUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRolesForCurrentUser () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetRolesForCurrentUser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne tous les rôles pour l'utilisateur connecté.</summary>
        <returns>Un tableau des noms des rôles auxquels l'utilisateur appartient.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> méthode retourne tous les rôles pour l’utilisateur. Vous utilisez la <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> méthode lorsque vous devez vérifier ou conserver tous les rôles de l’utilisateur pour déterminer quelles ressources sont disponibles à l’utilisateur. Vous pouvez utiliser cette méthode pour éviter les appels multiples à la <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> (méthode).  
  
 Appel de la <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> méthode déclenche le <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> événement.  
  
> [!NOTE]
>  N’appelez pas la <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> méthode à partir de code qui s’exécute sur le serveur Web. Vous appelez le <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> méthode uniquement dans le cadre d’un service WCF. Pour plus d’informations sur la lecture des rôles d’un utilisateur dans le code qui s’exécute sur le serveur Web, consultez le <xref:System.Web.Security.Roles.GetRolesForUser%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestion des rôles n'est pas activée.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentUserInRole">
      <MemberSignature Language="C#" Value="public bool IsCurrentUserInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCurrentUserInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCurrentUserInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCurrentUserInRole(System::String ^ role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">Nom du rôle à vérifier.</param>
        <summary>Détermine si l'utilisateur connecté appartient au rôle spécifié.</summary>
        <returns>
          <see langword="true" /> si l'utilisateur figure dans le rôle spécifié ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> méthode vérifie si l’utilisateur connecté appartient au rôle spécifié. La méthode <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> déclenche l'événement <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>.  
  
> [!NOTE]
>  N’appelez pas la <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> méthode à partir de code qui s’exécute sur le serveur Web. Vous appelez le <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> méthode uniquement dans le cadre d’un service WCF. Pour plus d’informations sur la façon de vérifier si un utilisateur appartient au groupe spécifié à partir de code qui s’exécute sur le serveur Web, consultez le <xref:System.Web.Security.Roles.IsUserInRole%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="role" /> est <see langword="null" /> ou l'utilisateur n'est pas connecté.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">La gestion des rôles n'est pas activée.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectingProvider">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.SelectingProviderEventArgs&gt; SelectingProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.SelectingProviderEventArgs&gt; SelectingProvider" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.RoleService.SelectingProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SelectingProvider As EventHandler(Of SelectingProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::SelectingProviderEventArgs ^&gt; ^ SelectingProvider;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.SelectingProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une instance <see cref="T:System.Web.ApplicationServices.RoleService" /> détermine le fournisseur de rôles à utiliser pour vérifier les rôles de l'utilisateur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ApplicationServices.RoleService> classe déclenche le <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> événement lorsqu’il détermine le fournisseur de rôles à utiliser pour récupérer les rôles de l’utilisateur. Vous pouvez créer un gestionnaire d’événements pour le <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> événement pour le sélectionner, au moment de l’exécution, le fournisseur de rôles à utiliser.  
  
   
  
## Examples  
 L’exemple suivant montre comment lier un gestionnaire d’événements pour le <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> événement dans le fichier Global.asax. Le Gestionnaire d’événements détermine au moment de l’exécution le fournisseur de rôles à utiliser, en fonction du nom d’utilisateur.  
  
 [!code-csharp[System.Web.Security.SelectingProviderEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SelectingProviderEventHandler/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.SelectingProviderEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SelectingProviderEventHandler/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.SelectingProviderEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>