<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AmbientAttribute.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac555dd6cc03b82733e7cc9502b48929ccdfcd92546.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55dd6cc03b82733e7cc9502b48929ccdfcd92546</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Specifies that a property or type should be treated as ambient.</source>
          <target state="translated">Spécifie qu’une propriété ou un type doit être traité comme ambiant.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>The ambient concept relates to how XAML processors determine type owners of members.</source>
          <target state="translated">Le concept de caractère ambiant renvoie à la façon dont les processeurs XAML déterminent les propriétaires de types des membres.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>An ambient property is a property where the value is expected to be available in the parser context when creating an object graph, but where typical type-member lookup is suspended for purposes of the immediate XAML node set being created.</source>
          <target state="translated">Une propriété ambiante est une propriété où la valeur est censée être disponible dans le contexte de l’analyseur lors de la création d’un graphique d’objet, mais pour laquelle la recherche de membre de type standard est interrompue à des fins du jeu en cours de création de nœuds XAML immédiat.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>There are two main scenarios for the ambient concept:</source>
          <target state="translated">Il existe deux scénarios principaux pour le concept ambiant :</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Some other property of the same object influences and qualifies how that object-property lookup should work.</source>
          <target state="translated">Une autre propriété du même objet influence et qualifie le fonctionne de cette recherche de propriété de l’objet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>The property represents a larger deferral mechanism and the ambient capabilities for looking up a member value extend to all objects contained within the current object.</source>
          <target state="translated">La propriété représente un plus grand mécanisme de report et les fonctions ambiantes de recherche d’une valeur de membre étendent à tous les objets contenus dans l’objet actuel.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>This attribute can be applied to specific properties that have expected containers that enable an ambient property lookup behavior, or can be applied to a class to enable the ambient property behavior in all cases of that value type for a property.</source>
          <target state="translated">Cet attribut peut être appliqué à des propriétés spécifiques qui ont conteneurs attendus qui activent un comportement de recherche de propriété ambiante ou peut être appliqué à une classe pour activer le comportement de la propriété ambiante dans tous les cas de ce type de valeur pour une propriété.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> can also be applied to a CLR method, to support attributing a XAML attachable property as ambient.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> peut également être appliqué à une méthode CLR, pour prendre en charge l’attribution d’une propriété pouvant être attachée XAML comme ambiant.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>This is potentially necessary because in a CLR implementation a XAML attached property is implemented/represented to reflection as an accessor pattern with <ph id="ph1">`get`</ph> and <ph id="ph2">`set`</ph> methods.</source>
          <target state="translated">Ceci est potentiellement nécessaire parce que dans une implémentation CLR un XAML propriété jointe est implémentée/représentée à la réflexion comme un modèle d’accesseur avec <ph id="ph1">`get`</ph> et <ph id="ph2">`set`</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>No actual CLR property to attribute exists, so restricting usage for <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> to <ph id="ph2">`Property`</ph> would not have enabled specifying an attachable member as ambient.</source>
          <target state="translated">Aucune propriété CLR réelle de l’attribut n’existe, par conséquent, restriction d’utilisation pour <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> à <ph id="ph2">`Property`</ph> n'aurait pas permis la spécification d’un membre pouvant être attaché comme ambiant.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>For an attachable member that you want to report as ambient, attribute the <ph id="ph1">`get`</ph> accessor.</source>
          <target state="translated">Pour un membre pouvant être attaché que vous souhaitez signaler comme ambiant, attribuez le <ph id="ph1">`get`</ph> accesseur.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>You should not attempt to attribute methods that are not specifically support methods of attachable members.</source>
          <target state="translated">Vous ne devez pas essayer d’attributs aux méthodes qui ne sont pas spécifiquement les méthodes de prise en charge des membres pouvant être attachés.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">Dans les versions précédentes du .NET Framework, cette classe existait dans l’assembly WindowsBase spécifique de WPF.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> est dans l’assembly System.Xaml.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Types migrés de WPF vers System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Ambient types (types where <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is applied at type level) can be used for certain XAML processing situations where the type of a property needs to be resolved out of order.</source>
          <target state="translated">Types Ambient (types où <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> est appliqué au niveau du type) peut être utilisé pour certaines situations de traitement XAML où le type d’une propriété doit être résolu dans le désordre.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Object Writer Scenarios</source>
          <target state="translated">Scénarios de Writer d’objet</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>If you are defining a XAML object writer, and you encounter a property, method or type where <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is applied, you typically must access a service to determine the intended ambient property lookup behavior that is needed for writing out objects.</source>
          <target state="translated">Si vous définissez un writer d’objet XAML, et que vous rencontrez une propriété, la méthode ou le type dans lequel <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> est appliqué, vous généralement devez accéder à un service pour déterminer le comportement de recherche de propriété ambiante prévu est nécessaire pour l’écriture d’objets.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Value Converters</source>
          <target state="translated">Convertisseurs de valeurs</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Type converters or markup extensions might need to know the ambient information in order to process properties that represent indirect type mappings, such as properties that specify members or types by string names with or without qualification.</source>
          <target state="translated">Convertisseurs de type ou les extensions de balisage devrez connaître les informations ambiantes pour traiter les propriétés qui représentent des mappages de type indirecte, telles que les propriétés qui spécifient des membres ou types par des noms de chaîne avec ou sans qualification.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>In this scenario, <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is not intended to be used directly for value converter code logic.</source>
          <target state="translated">Dans ce scénario, <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> n’est pas destinée à être utilisée directement pour la logique de code de convertisseur de valeur.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Rather, the value converter should rely on the XAML writer processing behavior, which will pass <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph> in its service contexts to your value converter methods when called.</source>
          <target state="translated">Au lieu de cela, le convertisseur de valeur doit s’appuient sur le comportement de traitement de writer XAML, qui passera <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph> dans ses contextes de service à vos méthodes de convertisseur de valeur lorsqu’elle est appelée.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>WPF Scenarios for AmbientAttribute</source>
          <target state="translated">Scénarios WPF pour AmbientAttribute</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>A property of a <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> (<ph id="ph2">&lt;xref:System.Windows.Style.TargetType%2A&gt;</ph>) can qualify the necessary property name lookups that are needed to find the backing references for property names in <ph id="ph3">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType&gt;</ph> values.</source>
          <target state="translated">Une propriété d’un <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> (<ph id="ph2">&lt;xref:System.Windows.Style.TargetType%2A&gt;</ph>) peut qualifier les recherches de nom de propriété qui sont nécessaires pour rechercher les références de stockage pour les noms de propriété dans <ph id="ph3">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>All content within a <ph id="ph1">`Resources`</ph> property (items of a <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>) as well as template content, should be able to access other peers as values.</source>
          <target state="translated">Tout le contenu au sein d’un <ph id="ph1">`Resources`</ph> propriété (éléments d’un <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>), ainsi que le contenu du modèle, qui doit être en mesure d’accéder à d’autres homologues comme valeurs.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Declaring the entire <ph id="ph1">`Resources`</ph> property as ambient invokes logic that enables this in the WPF XAML parser.</source>
          <target state="translated">Déclaration de l’ensemble du <ph id="ph1">`Resources`</ph> propriété comme ambiant appelle la logique qui permet cela dans l’analyseur XAML WPF.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>See <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> for an example of a scenario for setting <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> at type level.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> pour obtenir un exemple de scénario de paramètre <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> au niveau du type.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.AmbientAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.AmbientAttribute" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.Markup.AmbientAttribute" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>