<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="916db8f42bff0514d0ec78ebceff451e98bd1513" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37503053" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="78c15-101">Spécifie qu’une propriété ou un type doit être traité comme ambiant.</span>
      <span class="sxs-lookup">
        <span data-stu-id="78c15-101">Specifies that a property or type should be treated as ambient.</span>
      </span>
      <span data-ttu-id="78c15-102">Le concept de caractère ambiant renvoie à la façon dont les processeurs XAML déterminent les propriétaires de types des membres.</span>
      <span class="sxs-lookup">
        <span data-stu-id="78c15-102">The ambient concept relates to how XAML processors determine type owners of members.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c15-103">Une propriété ambiante est une propriété où la valeur doit être disponible dans le contexte de l’analyseur lors de la création d’un graphique d’objet, mais pour laquelle la recherche de membre de type standard est interrompue à des fins de jeu en cours de création de nœuds XAML immédiat.</span><span class="sxs-lookup"><span data-stu-id="78c15-103">An ambient property is a property where the value is expected to be available in the parser context when creating an object graph, but where typical type-member lookup is suspended for purposes of the immediate XAML node set being created.</span></span> <span data-ttu-id="78c15-104">Il existe deux principaux scénarios pour le concept ambiant :</span><span class="sxs-lookup"><span data-stu-id="78c15-104">There are two main scenarios for the ambient concept:</span></span>  
  
-   <span data-ttu-id="78c15-105">Une autre propriété du même objet influence et qualifie le fonctionne de cette recherche de propriété de l’objet.</span><span class="sxs-lookup"><span data-stu-id="78c15-105">Some other property of the same object influences and qualifies how that object-property lookup should work.</span></span>  
  
-   <span data-ttu-id="78c15-106">La propriété représente un mécanisme de report plus volumineux et les fonctions ambiantes pour la recherche d’une valeur de membre étendent à tous les objets contenus dans l’objet actuel.</span><span class="sxs-lookup"><span data-stu-id="78c15-106">The property represents a larger deferral mechanism and the ambient capabilities for looking up a member value extend to all objects contained within the current object.</span></span>  
  
 <span data-ttu-id="78c15-107">Cet attribut peut être appliqué aux propriétés spécifiques qui ont conteneurs attendus qui activent un comportement de recherche de propriété ambiante, ou peut être appliqué à une classe pour activer le comportement de la propriété ambiante dans tous les cas de ce type de valeur pour une propriété.</span><span class="sxs-lookup"><span data-stu-id="78c15-107">This attribute can be applied to specific properties that have expected containers that enable an ambient property lookup behavior, or can be applied to a class to enable the ambient property behavior in all cases of that value type for a property.</span></span>  
  
 <span data-ttu-id="78c15-108"><xref:System.Windows.Markup.AmbientAttribute> peut également être appliqué à une méthode CLR, pour prendre en charge l’attribution d’une propriété pouvant être attachée XAML comme ambiant.</span><span class="sxs-lookup"><span data-stu-id="78c15-108"><xref:System.Windows.Markup.AmbientAttribute> can also be applied to a CLR method, to support attributing a XAML attachable property as ambient.</span></span> <span data-ttu-id="78c15-109">Il s’agit potentiellement nécessaire parce que dans une implémentation CLR un XAML propriété jointe est implémentée/représentée à la réflexion comme un modèle d’accesseur avec `get` et `set` méthodes.</span><span class="sxs-lookup"><span data-stu-id="78c15-109">This is potentially necessary because in a CLR implementation a XAML attached property is implemented/represented to reflection as an accessor pattern with `get` and `set` methods.</span></span> <span data-ttu-id="78c15-110">N’existe aucune propriété CLR réelle à l’attribut, limitant ainsi l’utilisation de <xref:System.AttributeTargets> à `Property` n'aurait pas permis la spécification d’un membre pouvant être attaché comme ambiant.</span><span class="sxs-lookup"><span data-stu-id="78c15-110">No actual CLR property to attribute exists, so restricting usage for <xref:System.AttributeTargets> to `Property` would not have enabled specifying an attachable member as ambient.</span></span> <span data-ttu-id="78c15-111">Pour plus d’un membre pouvant être attaché que vous souhaitez signaler comme ambiant, attribut le `get` accesseur.</span><span class="sxs-lookup"><span data-stu-id="78c15-111">For an attachable member that you want to report as ambient, attribute the `get` accessor.</span></span> <span data-ttu-id="78c15-112">Vous ne devez pas essayer d’attributs aux méthodes qui ne sont pas spécifiquement les méthodes de prise en charge de membres pouvant être attachés.</span><span class="sxs-lookup"><span data-stu-id="78c15-112">You should not attempt to attribute methods that are not specifically support methods of attachable members.</span></span>  
  
 <span data-ttu-id="78c15-113">Dans les versions précédentes du .NET Framework, cette classe existait dans l’assembly WindowsBase spécifique de WPF.</span><span class="sxs-lookup"><span data-stu-id="78c15-113">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="78c15-114">Dans [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> est dans l’assembly System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="78c15-114">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="78c15-115">Pour plus d’informations, consultez [Types migrés de WPF vers System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="78c15-115">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 <span data-ttu-id="78c15-116">Types ambiants (types où <xref:System.Windows.Markup.AmbientAttribute> est appliqué au niveau du type) peut être utilisé pour certaines situations de traitement XAML où le type d’une propriété doit être résolu dans le désordre.</span><span class="sxs-lookup"><span data-stu-id="78c15-116">Ambient types (types where <xref:System.Windows.Markup.AmbientAttribute> is applied at type level) can be used for certain XAML processing situations where the type of a property needs to be resolved out of order.</span></span>  
  
## <a name="object-writer-scenarios"></a><span data-ttu-id="78c15-117">Scénarios de Writer d’objet</span><span class="sxs-lookup"><span data-stu-id="78c15-117">Object Writer Scenarios</span></span>  
 <span data-ttu-id="78c15-118">Si vous définissez un writer d’objet XAML, et que vous rencontrez une propriété, la méthode ou le type où <xref:System.Windows.Markup.AmbientAttribute> est appliqué, vous en général devez accéder à un service pour déterminer le comportement de recherche de propriété ambiante prévu est nécessaire pour l’écriture d’objets.</span><span class="sxs-lookup"><span data-stu-id="78c15-118">If you are defining a XAML object writer, and you encounter a property, method or type where <xref:System.Windows.Markup.AmbientAttribute> is applied, you typically must access a service to determine the intended ambient property lookup behavior that is needed for writing out objects.</span></span> <span data-ttu-id="78c15-119">Pour plus d'informations, consultez <xref:System.Xaml.IAmbientProvider>.</span><span class="sxs-lookup"><span data-stu-id="78c15-119">For more information, see <xref:System.Xaml.IAmbientProvider>.</span></span>  
  
## <a name="value-converters"></a><span data-ttu-id="78c15-120">Convertisseurs de valeurs</span><span class="sxs-lookup"><span data-stu-id="78c15-120">Value Converters</span></span>  
 <span data-ttu-id="78c15-121">Convertisseurs de type ou les extensions de balisage deviez connaître les informations ambiantes pour traiter les propriétés qui représentent des mappages de type indirecte, telles que les propriétés qui spécifient des membres ou types par noms de chaîne avec ou sans qualification.</span><span class="sxs-lookup"><span data-stu-id="78c15-121">Type converters or markup extensions might need to know the ambient information in order to process properties that represent indirect type mappings, such as properties that specify members or types by string names with or without qualification.</span></span> <span data-ttu-id="78c15-122">Dans ce scénario, <xref:System.Windows.Markup.AmbientAttribute> n’est pas destinée à être utilisée directement pour la logique de code de convertisseur de valeur.</span><span class="sxs-lookup"><span data-stu-id="78c15-122">In this scenario, <xref:System.Windows.Markup.AmbientAttribute> is not intended to be used directly for value converter code logic.</span></span> <span data-ttu-id="78c15-123">Au lieu de cela, le convertisseur de valeur doit s’appuyer sur le comportement de traitement de writer XAML, qui passera <xref:System.Xaml.IAmbientProvider> dans ses contextes de service à vos méthodes de convertisseur de valeur lorsqu’elle est appelée.</span><span class="sxs-lookup"><span data-stu-id="78c15-123">Rather, the value converter should rely on the XAML writer processing behavior, which will pass <xref:System.Xaml.IAmbientProvider> in its service contexts to your value converter methods when called.</span></span>  
  
## <a name="wpf-scenarios-for-ambientattribute"></a><span data-ttu-id="78c15-124">Scénarios WPF pour AmbientAttribute</span><span class="sxs-lookup"><span data-stu-id="78c15-124">WPF Scenarios for AmbientAttribute</span></span>  
  
-   <span data-ttu-id="78c15-125">Une propriété d’un <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) peut qualifier les recherches de nom de propriété nécessaires pour rechercher les références de stockage pour les noms de propriété dans <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> valeurs.</span><span class="sxs-lookup"><span data-stu-id="78c15-125">A property of a <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) can qualify the necessary property name lookups that are needed to find the backing references for property names in <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values.</span></span>  
  
-   <span data-ttu-id="78c15-126">Tout le contenu au sein d’un `Resources` propriété (éléments d’un <xref:System.Windows.ResourceDictionary>), ainsi que le contenu du modèle, qui doit être en mesure d’accéder à d’autres homologues en tant que valeurs.</span><span class="sxs-lookup"><span data-stu-id="78c15-126">All content within a `Resources` property (items of a <xref:System.Windows.ResourceDictionary>) as well as template content, should be able to access other peers as values.</span></span> <span data-ttu-id="78c15-127">Déclaration de l’ensemble du `Resources` de la propriété ambiante appelle la logique qui permet cela dans l’Analyseur de WPF XAML.</span><span class="sxs-lookup"><span data-stu-id="78c15-127">Declaring the entire `Resources` property as ambient invokes logic that enables this in the WPF XAML parser.</span></span>  
  
 <span data-ttu-id="78c15-128">Consultez <xref:System.Windows.ResourceDictionary> pour obtenir un exemple de scénario de paramètre <xref:System.Windows.Markup.AmbientAttribute> au niveau du type.</span><span class="sxs-lookup"><span data-stu-id="78c15-128">See <xref:System.Windows.ResourceDictionary> for an example of a scenario for setting <xref:System.Windows.Markup.AmbientAttribute> at type level.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78c15-129">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.AmbientAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78c15-129">Initializes a new instance of the <see cref="T:System.Windows.Markup.AmbientAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>