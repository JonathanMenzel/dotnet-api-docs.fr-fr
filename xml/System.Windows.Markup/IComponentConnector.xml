<Type Name="IComponentConnector" FullName="System.Windows.Markup.IComponentConnector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="111e269e9a5af3fdc48b73b79203c7542816013a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502817" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentConnector" />
  <TypeSignature Language="F#" Value="type IComponentConnector = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Assure une prise en charge des outils et de la compilation du balisage pour les éléments XAML nommés et pour attacher à ces derniers des gestionnaires d’événements.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette interface est utilisée en interne par <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 Les implémentations de <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> sont largement observables dans le cadre de l’infrastructure fournie par les infrastructures ou les technologies qui utilisent XAML associé à l’application et les modèles de programmation. Par exemple, chaque fois que vous examinez les classes générées pour les éléments racine XAML dans les pages et applications WPF, vous verrez <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> défini dans la sortie. Cette méthode est également existe dans l’assembly compilé et joue un rôle dans le modèle d’application WPF de charger le contenu XAML UI au moment de l’analyse XAML. Pour plus d’informations sur l’intégration de WPF de la `InitializeComponent` concept, consultez [vue d’ensemble de la gestion des applications](~/docs/framework/wpf/app-development/application-management-overview.md) ou [Code-Behind et XAML dans WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).  
  
 Dans les versions précédentes du .NET Framework, cette interface existait dans l’assembly WindowsBase spécifique de WPF. Dans [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IComponentConnector> est dans l’assembly System.Xaml. . Pour plus d’informations, consultez [Types migrés de WPF vers System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
> [!TIP]
>  Un échec de résolution <xref:System.Windows.Markup.IComponentConnector> pendant une tentative de génération est souvent un indicateur que vous n'avez pas mis à jour votre projet WPF correctement. En particulier, le projet ne référence pas l’assembly System.Xaml pour un projet qui cible [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. Essayez d’exécuter la `devenv /upgrade` option pour le projet, ou sinon ajustez les références d’assembly de projet afin que System.Xaml figure dans la liste de références.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (connectionId As Integer, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(int connectionId, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Connect : int * obj -&gt; unit" Usage="iComponentConnector.Connect (connectionId, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId">Jeton d’identificateur pour distinguer des appels.</param>
        <param name="target">Cible à laquelle connecter des événements et des noms.</param>
        <summary>Joint des événements et des noms au contenu compilé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector> est utilisé en interne par <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeComponent();" />
      <MemberSignature Language="F#" Value="abstract member InitializeComponent : unit -&gt; unit" Usage="iComponentConnector.InitializeComponent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Charge la page compilée d’un composant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector> est utilisé en interne par <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 Les implémentations de <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> sont largement observables dans le cadre de l’infrastructure fournie par les infrastructures ou les technologies qui utilisent XAML associé à l’application et les modèles de programmation. Par exemple, chaque fois que vous examinez les classes générées pour les éléments racine XAML dans les pages et applications WPF, vous verrez <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> défini dans la sortie. Cette méthode est également existe dans l’assembly compilé et joue un rôle dans le modèle d’application WPF de charger le contenu XAML UI au moment de l’analyse XAML. Pour plus d’informations sur l’intégration de WPF de la `InitializeComponent` concept, consultez [vue d’ensemble de la gestion des applications](~/docs/framework/wpf/app-development/application-management-overview.md) ou [Code-Behind et XAML dans WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>