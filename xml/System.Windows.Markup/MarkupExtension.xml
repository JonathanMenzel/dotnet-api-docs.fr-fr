<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MarkupExtension.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f36d9706c5d26b97dcc9537ee7078eceaf138fc8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f36d9706c5d26b97dcc9537ee7078eceaf138fc8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.MarkupExtension">
          <source>Provides a base class for XAML markup extension implementations that can be supported by .NET Framework XAML Services and other XAML readers and XAML writers.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>Markup extensions return objects to callers, based on the input of string attribute values or markup elements in XAML.</source>
          <target state="translated">Extensions de balisage retournent des objets aux appelants, basés sur l’entrée de valeurs d’attribut de chaîne ou des éléments de balisage en XAML.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>Markup extensions return objects in a more sophisticated way than type converters alone can accomplish.</source>
          <target state="translated">Extensions de balisage retournent des objets d’une manière plus sophistiquée de convertisseurs de type seuls peuvent accomplir.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>A XAML object writer invokes a type converter because a type or member has a type converter implementation associated with it.</source>
          <target state="translated">Un writer d’objet XAML appelle un convertisseur de type, car un type ou membre a une implémentation de convertisseur de type associée.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>From the CLR frame of reference, this means that a type or member is <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> attributed.</source>
          <target state="translated">Dans le cadre de référence CLR, cela signifie qu’un type ou un membre est <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> avec attributs.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>From the XAML type system perspective, this means that a XAML type or a XAML member has a value for its <ph id="ph1">`TypeConverter`</ph> property.</source>
          <target state="translated">Point de vue du système de type XAML, cela signifie qu’une valeur pour un type XAML ou un membre XAML son <ph id="ph1">`TypeConverter`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>The invocation of a type converter is tied to the type or property definition, and is always invoked by XAML processing for these cases.</source>
          <target state="translated">L’appel d’un convertisseur de type est liée à la définition de type ou une propriété et est toujours appelée par le traitement XAML pour ces cas.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>In contrast, a markup extension is more under the control of user code and user-produced markup, and can be applied whenever an application scenario demands it.</source>
          <target state="translated">En revanche, une extension de balisage est plus sous le contrôle de code utilisateur et le balisage produit par l’utilisateur et peut être appliquée à chaque fois qu’un scénario d’application l’exige.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>A markup extension can be invoked and can be used for setting different type-member values, so long as the markup extension's return type is assignable to that value.</source>
          <target state="translated">Une extension de balisage peut être appelée et peut être utilisée pour définir les valeurs de membre de type différents, tant que type de retour de l’extension de balisage est assignable à cette valeur.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>For information on creating a custom markup extension, see <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur la création d’une extension de balisage personnalisée, consultez <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>For more information on markup extensions in general, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les extensions de balisage en général, consultez <bpt id="p1">[</bpt>Extensions de balisage pour XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>If you are building on WPF and using or creating markup extensions for XAML, other relevant information can be found in the topic <bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>.</source>
          <target state="translated">Si vous programmez sur WPF et utilisez ou créez des extensions de balisage pour XAML, les autres informations pertinentes sont accessibles dans la rubrique <bpt id="p1">[</bpt>Extensions de balisage et XAML WPF<ept id="p1">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> method of each markup extension implementation can use an <ph id="ph2">&lt;xref:System.IServiceProvider&gt;</ph> at run time that can provide context.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> méthode de chaque implémentation d’extension de balisage peut utiliser un <ph id="ph2">&lt;xref:System.IServiceProvider&gt;</ph> en cours d’exécution qui peut fournir le contexte.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>This  <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> is then queried for specific services that pass information, such as <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>.</source>
          <target state="translated">Cela <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> est alors interrogé pour les services spécifiques qui passent des informations, telles que <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>For more information on service contexts for a markup extension, see <bpt id="p1">[</bpt>Service Contexts Available to Type Converters and Markup Extensions<ept id="p1">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les contextes de service pour une extension de balisage, consultez <bpt id="p1">[</bpt>contextes de services disponibles aux convertisseurs de Type et Extensions de balisage<ept id="p1">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.MarkupExtension">
          <source>Derived classes should be attributed with <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> to inform consumers of the most specific return type available from the markup extension's <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> implementation.</source>
          <target state="translated">Les classes dérivées doivent être attribuées avec <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> pour informer les consommateurs du type de retour plus spécifique disponible à partir de l’extension de balisage <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>Initializes a new instance of a class derived from <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> abstract class does not hold any private values that require initialization.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> classe abstraite ne conserve pas de valeurs privées qui requièrent une initialisation.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>A functional markup extension should define its own public default constructor.</source>
          <target state="translated">Une extension de balisage fonctionnelle doit définir son propre constructeur public par défaut.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>Additionally, the markup extension should implement constructors that are appropriate for the extension's intended capabilities and markup usage.</source>
          <target state="translated">En outre, l’extension de balisage doit implémenter des constructeurs qui sont appropriés pour les fonctionnalités prévue de l’extension et de balisage.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Extensions de balisage pour XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>A service provider helper that can provide services for the markup extension.</source>
          
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.</source>
          
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The object value to set on the property where the extension is applied.</source>
          
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>When a XAML processor processes a type node and member value that is a markup extension, it invokes the <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> method of that markup extension and writes the result into the object graph or serialization stream.</source>
          <target state="translated">Lorsqu’un processeur XAML traite une valeur de type nœud ou de membre qui est une extension de balisage, il appelle la <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> méthode de cette extension de balisage et écrit le résultat dans le flux de sérialisation ou de graphique d’objet.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The XAML object writer passes service context to each such implementation through the <ph id="ph1">`serviceProvider`</ph> parameter.</source>
          <target state="translated">Le writer d’objet XAML passe le contexte de service à chaque implémentation de ce type via le <ph id="ph1">`serviceProvider`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>See "Notes to Implementers" section for more information on how to implement <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> in a custom markup extension.</source>
          <target state="translated">Consultez la section « Remarques à l’attention des implémenteurs » pour plus d’informations sur la façon d’implémenter <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A&gt;</ph> dans une extension de balisage personnalisée.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>WPF Usage Notes</source>
          <target state="translated">Notes d’utilisation WPF</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>WPF classes that have specific interactions with markup set operations should not rely on <ph id="ph1">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> for a <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> implementation.</source>
          <target state="translated">Les classes WPF qui ont des interactions spécifiques avec les opérations ensemblistes de balisage ne doivent pas dépendre <ph id="ph1">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> pour un <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> mise en œuvre.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>-attributed callbacks instead.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>-rappels avec attribut.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Common services returned by the default service provider that is typically available to a custom or existing <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph> implementation include the following primary services.</source>
          <target state="translated">Services communs retournés par le fournisseur de services par défaut qui est généralement disponible personnalisée ou existante <ph id="ph1">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph> implémentation incluent les services principaux suivants.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Markup.IProvideValueTarget" /&gt;</ph> reports the object reference and a property identifier from the context where the markup extension is used</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.IProvideValueTarget" /&gt;</ph> signale la référence d’objet et un identificateur de propriété à partir du contexte dans lequel l’extension de balisage est utilisée</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph> exposes a service that parallels the general XAML object writing behavior that can provide a <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> based on a XAML type name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph> expose un service qui correspond au comportement qui peut fournir d’écriture d’objet XAML général un <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> basée sur un nom de type XAML.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The name can optionally include a prefix for a mapped XAML namespace.</source>
          <target state="translated">Le nom peut éventuellement inclure un préfixe pour un espace de noms XAML mappé.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;see cref="T:System.Xaml.IXamlSchemaContextProvider" /&gt;</ph> exposes the active XAML schema context directly.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.IXamlSchemaContextProvider" /&gt;</ph> expose le contexte de schéma XAML actif directement.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>From the reported <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>, you can obtain XAML schema context information such as how assemblies are mapped for type support, preferred prefix in assemblies, lists of each <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> in an assembly, and so on.</source>
          <target state="translated">Dans le rapport <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>, vous pouvez obtenir le contexte informations de schéma XAML telles que la manière dont les assemblys sont mappés pour la prise en charge de type, un préfixe par défaut dans les assemblys, répertorie chaque <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> dans un assembly et ainsi de suite.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Other services available for more specialized markup extension scenarios include:</source>
          <target state="translated">Autres services disponibles pour les scénarios d’extension de balisage plus spécialisées sont les suivantes :</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Potentially, implementations of <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> can ignore the <ph id="ph2">&lt;paramref name="serviceProvider" /&gt;</ph> parameter.</source>
          <target state="translated">Éventuellement, les implémentations de <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> peut ignorer la <ph id="ph2">&lt;paramref name="serviceProvider" /&gt;</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>This is viable for some basic scenarios, where no context at all is required for returning a value.</source>
          <target state="translated">Il s’agit viable pour certains scénarios de base, où aucun contexte n’est requis pour retourner une valeur.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>In typical usage, the .NET Framework XAML Services and the implemented XAML object writers will provide a service provider to all value converter methods that are invoked during XAML processing.</source>
          <target state="translated">En règle générale, les Services XAML .NET Framework et le code XAML implémenté objet writers fournira un fournisseur de services à toutes les méthodes de convertisseur de valeur qui sont appelés pendant le XAML de traitement.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>However, for robustness, you should provide code paths for null values both for the service provider itself and for any requested service.</source>
          <target state="translated">Toutefois, pour plus de fiabilité, vous devez fournir les chemins de code pour les valeurs null pour le fournisseur de services et tout service demandé.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Null values might occur if your markup extension is applied in a circumstance where the typical service support provided by a XAML processor infrastructure is not available.</source>
          <target state="translated">Les valeurs null peuvent se produire si votre extension de balisage est appliquée dans un cas où la prise en charge de service standard fournie par une infrastructure de processeur XAML n’est pas disponible.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>For more information on available services from the XAML service provider context and how to use them, see <bpt id="p1">[</bpt>Type Converters and Markup Extensions for XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les services disponibles à partir du contexte de fournisseur de services XAML et comment les utiliser, consultez <bpt id="p1">[</bpt>convertisseurs de Type et Extensions de balisage pour XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>Implementations that require a certain service to be available in order to produce a useful <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> result are expected to throw exceptions if that service is not available.</source>
          <target state="translated">Les implémentations qui requièrent un certain service soit disponible afin de produire un utile <ph id="ph1">&lt;see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /&gt;</ph> résultat sont prévu de lever des exceptions si ce service n’est pas disponible.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The recommended exception to throw is <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</source>
          <target state="translated">Exception à lever recommandée est <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The implementation may also throw exceptions if one of the arguments that the custom markup extension needs in order to provide a value is null, is invalid for its data type, or does not contain a value that the markup extension is capable of processing.</source>
          <target state="translated">L’implémentation peut également lever des exceptions si l’un des arguments dont l’extension de balisage personnalisée a besoin pour fournir une valeur est null, n’est pas valide pour son type de données, ou ne contient pas de valeur que l’extension de balisage est capable de traiter.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <source>The recommended exception to throw is <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</source>
          <target state="translated">Exception à lever recommandée est <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>