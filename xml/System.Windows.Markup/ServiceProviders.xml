<Type Name="ServiceProviders" FullName="System.Windows.Markup.ServiceProviders">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dfb28a426e526247c6769e0124f29d6aa23d99a9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30655983" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceProviders : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProviders extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ServiceProviders" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProviders&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProviders : IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit une implémentation pour l'interface <see cref="T:System.IServiceProvider" /> avec des méthodes permettant d'ajouter des services.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il s’agit d’une classe utilitaire pour une utilisation lors de la sérialisation du contenu. La classe est essentiellement un dictionnaire en entrée seule pour le stockage des services indexés par leur type de service qui implémente <xref:System.IServiceProvider> pour une récupération ultérieure du même dictionnaire. À l’aide du dictionnaire évite l’interrogation à plusieurs reprises pour le même service. Cette classe est la classe de base de <xref:System.Windows.Markup.XamlDesignerSerializationManager>, qui est le service utilisé pour `ShouldSerialize` des implémentations de méthode dans d’autres parties de WPF.  
  
 À l’aide de cette classe requiert le référencement des assemblys WPF, il n’est pas conçue pour des scénarios de Services XAML .NET Framework générales. Ce scénario est pour l’implémentation interne WPF de fonctionnalités de sollicitant beaucoup le service pendant la sérialisation, comme lors du traitement de la `ShouldSerialize` implémentations de certains types. La classe pratique impliquée dans ce scénario est la classe dérivée <xref:System.Windows.Markup.XamlDesignerSerializationManager>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProviders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProviders();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ServiceProviders" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (Type serviceType, object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddService(class System.Type serviceType, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (serviceType As Type, service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddService(Type ^ serviceType, System::Object ^ service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">Type de service du nouveau service.</param>
        <param name="service">Classe d'implémentation du service.</param>
        <summary>Ajoute un service à la liste.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceType" /> ou <paramref name="service" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Tentative d'ajout d'un service qui existe déjà dans le dictionnaire.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Type de l’objet de service à obtenir.</param>
        <summary>Obtient l'objet service du type spécifié.</summary>
        <returns>Implémentation de service pour le type <paramref name="serviceType" />. Peut être <see langword="null" /> s'il n'y a aucun service stocké pour le type <paramref name="serviceType" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>