<Type Name="InternalTypeHelper" FullName="System.Windows.Markup.InternalTypeHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5095f7d280527d65f0d6634e89e388e92a437c35" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502671" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class InternalTypeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InternalTypeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.InternalTypeHelper" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InternalTypeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalTypeHelper abstract" />
  <TypeSignature Language="F#" Value="type InternalTypeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Classe abstraite utilisée en interne par le compilateur XAML WPF pour prendre en charge l'utilisation de types internes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Markup.InternalTypeHelper> classe n’est pas destinée à utiliser par une autre que le compilateur de balisage XAML WPF.  
  
 Lors de la compilation d’un fichier XAML, vous pouvez utiliser des types publics, mais vous pouvez également utiliser des types internes soumis aux mêmes limitations qui existent sur l’accès du code aux types internes. <xref:System.Windows.Markup.InternalTypeHelper> Active la prise en charge des types de niveau d’accès interne pour le balisage. Cela concerne le compilateur crée une classe générée qui dérive de <xref:System.Windows.Markup.InternalTypeHelper> et implémente ses membres. La classe générée existe dans un contexte de sécurité et d’accès tel que seul le même assembly ou autres assemblys spécifiquement attribués pour l’accès interne partagé peuvent référencer la classe générée et, par conséquent, les types internes.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InternalTypeHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InternalTypeHelper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.InternalTypeHelper" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="protected internal abstract void AddEventHandler (System.Reflection.EventInfo eventInfo, object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddEventHandler(class System.Reflection.EventInfo eventInfo, object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void AddEventHandler(System::Reflection::EventInfo ^ eventInfo, System::Object ^ target, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddEventHandler : System.Reflection.EventInfo * obj * Delegate -&gt; unit" Usage="internalTypeHelper.AddEventHandler (eventInfo, target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="eventInfo">Informations sur l'événement (informations de réflexion CLR).</param>
        <param name="target">Cible à laquelle le gestionnaire est attaché.</param>
        <param name="handler">Gestionnaire d'événements.</param>
        <summary>En cas de substitution dans une classe dérivée (générée), joint un délégué de gestionnaires d'événements à un événement interne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Markup.InternalTypeHelper> classe n’est pas destinée à utiliser par une autre que le compilateur de balisage XAML WPF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="protected internal abstract Delegate CreateDelegate (Type delegateType, object target, string handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Delegate CreateDelegate(class System.Type delegateType, object target, string handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function CreateDelegate (delegateType As Type, target As Object, handler As String) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract Delegate ^ CreateDelegate(Type ^ delegateType, System::Object ^ target, System::String ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member CreateDelegate : Type * obj * string -&gt; Delegate" Usage="internalTypeHelper.CreateDelegate (delegateType, target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <see cref="T:System.Type" /> du délégué.</param>
        <param name="target">Cible à laquelle le gestionnaire est attaché.</param>
        <param name="handler">Nom de l'implémentation de gestionnaire.</param>
        <summary>En cas de substitution dans une classe dérivée (générée), crée un délégué d'événement qui référence une méthode de gestionnaire non publique.</summary>
        <returns>Référence de délégué.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Markup.InternalTypeHelper> classe n’est pas destinée à utiliser par une autre que le compilateur de balisage XAML WPF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal abstract object CreateInstance (Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Object ^ CreateInstance(Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Globalization.CultureInfo -&gt; obj" Usage="internalTypeHelper.CreateInstance (type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> à créer.</param>
        <param name="culture">Informations propres à la culture.</param>
        <summary>En cas de substitution dans une classe dérivée (générée=, crée une instance d'un type interne.</summary>
        <returns>Instance créée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Markup.InternalTypeHelper> classe n’est pas destinée à utiliser par une autre que le compilateur de balisage XAML WPF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="protected internal abstract object GetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Object ^ GetPropertyValue(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ target, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValue : System.Reflection.PropertyInfo * obj * System.Globalization.CultureInfo -&gt; obj" Usage="internalTypeHelper.GetPropertyValue (propertyInfo, target, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">Informations sur la propriété à obtenir.</param>
        <param name="target">Objet qui contient la valeur de propriété souhaitée.</param>
        <param name="culture">Informations propres à la culture.</param>
        <summary>En cas de substitution dans une classe dérivée (générée), obtient la valeur d'une propriété interne sur l'objet cible.</summary>
        <returns>Valeur de la propriété.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Markup.InternalTypeHelper> classe n’est pas destinée à utiliser par une autre que le compilateur de balisage XAML WPF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="protected internal abstract void SetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SetPropertyValue(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ target, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValue : System.Reflection.PropertyInfo * obj * obj * System.Globalization.CultureInfo -&gt; unit" Usage="internalTypeHelper.SetPropertyValue (propertyInfo, target, value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">Informations sur la propriété à définir.</param>
        <param name="target">Objet qui contient la valeur de propriété souhaitée.</param>
        <param name="value">Valeur à définir.</param>
        <param name="culture">Informations propres à la culture.</param>
        <summary>En cas de substitution dans une classe dérivée (générée), définit la valeur d'une propriété interne sur l'objet cible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Markup.InternalTypeHelper> classe n’est pas destinée à utiliser par une autre que le compilateur de balisage XAML WPF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>