<Type Name="InternalTypeHelper" FullName="System.Windows.Markup.InternalTypeHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="979dacc721c084d768bb7dea4aa07394ae50f811" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30656573" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class InternalTypeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InternalTypeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.InternalTypeHelper" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InternalTypeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalTypeHelper abstract" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="121ad-101">Classe abstraite utilisée en interne par le compilateur XAML WPF pour prendre en charge l'utilisation de types internes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="121ad-101">Abstract class used internally by the WPF XAML compiler to support the use of internal types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="121ad-102">La <xref:System.Windows.Markup.InternalTypeHelper> classe n’est pas destinée à utiliser par une autre que le compilateur de balisage XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="121ad-102">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 <span data-ttu-id="121ad-103">Lors de la compilation d’un fichier XAML, vous pouvez utiliser des types publics, mais vous pouvez également utiliser des types internes soumis aux mêmes limitations qui existent sur l’accès du code aux types internes.</span><span class="sxs-lookup"><span data-stu-id="121ad-103">When compiling a XAML file, you can use public types, but you can also use internal types subject to the same limitations that exist on code access to internal types.</span></span> <span data-ttu-id="121ad-104"><xref:System.Windows.Markup.InternalTypeHelper> Active la prise en charge des types de niveau d’accès interne pour le balisage.</span><span class="sxs-lookup"><span data-stu-id="121ad-104"><xref:System.Windows.Markup.InternalTypeHelper> enables support of internal access level types for markup.</span></span> <span data-ttu-id="121ad-105">Cela concerne le compilateur crée une classe générée qui dérive de <xref:System.Windows.Markup.InternalTypeHelper> et implémente ses membres.</span><span class="sxs-lookup"><span data-stu-id="121ad-105">This involves the compiler creating a generated class that derives from <xref:System.Windows.Markup.InternalTypeHelper> and implements its members.</span></span> <span data-ttu-id="121ad-106">La classe générée existe dans un contexte de sécurité et d’accès tel que seul le même assembly ou autres assemblys spécifiquement attribués pour l’accès interne partagé peuvent référencer la classe générée et, par conséquent, les types internes.</span><span class="sxs-lookup"><span data-stu-id="121ad-106">The generated class exists in a security and access context such that only the same assembly or other assemblies specifically attributed for shared internal access can reference the generated class and thus the internal types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InternalTypeHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InternalTypeHelper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="121ad-107">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.InternalTypeHelper" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-107">Initializes a new instance of the <see cref="T:System.Windows.Markup.InternalTypeHelper" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="protected internal abstract void AddEventHandler (System.Reflection.EventInfo eventInfo, object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddEventHandler(class System.Reflection.EventInfo eventInfo, object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void AddEventHandler(System::Reflection::EventInfo ^ eventInfo, System::Object ^ target, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="121ad-108">Informations sur l'événement (informations de réflexion CLR).</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-108">The event information for the event (CLR reflection information).</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="121ad-109">Cible à laquelle le gestionnaire est attaché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-109">The target where the handler is attached.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="121ad-110">Gestionnaire d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-110">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="121ad-111">En cas de substitution dans une classe dérivée (générée), joint un délégué de gestionnaires d'événements à un événement interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-111">When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="121ad-112">La <xref:System.Windows.Markup.InternalTypeHelper> classe n’est pas destinée à utiliser par une autre que le compilateur de balisage XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="121ad-112">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="protected internal abstract Delegate CreateDelegate (Type delegateType, object target, string handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Delegate CreateDelegate(class System.Type delegateType, object target, string handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function CreateDelegate (delegateType As Type, target As Object, handler As String) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract Delegate ^ CreateDelegate(Type ^ delegateType, System::Object ^ target, System::String ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="121ad-113">
            <see cref="T:System.Type" /> du délégué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-113">The <see cref="T:System.Type" /> of the delegate.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="121ad-114">Cible à laquelle le gestionnaire est attaché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-114">The target where the handler is attached.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="121ad-115">Nom de l'implémentation de gestionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-115">The name of the handler implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="121ad-116">En cas de substitution dans une classe dérivée (générée), crée un délégué d'événement qui référence une méthode de gestionnaire non publique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-116">When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="121ad-117">Référence de délégué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-117">The delegate reference.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="121ad-118">La <xref:System.Windows.Markup.InternalTypeHelper> classe n’est pas destinée à utiliser par une autre que le compilateur de balisage XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="121ad-118">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal abstract object CreateInstance (Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Object ^ CreateInstance(Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="121ad-119">
            <see cref="T:System.Type" /> à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-119">The <see cref="T:System.Type" /> to create.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="121ad-120">Informations propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-120">Culture specific information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="121ad-121">En cas de substitution dans une classe dérivée (générée=, crée une instance d'un type interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-121">When overridden in a derived (generated) class, creates an instance of an internal type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="121ad-122">Instance créée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-122">The created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="121ad-123">La <xref:System.Windows.Markup.InternalTypeHelper> classe n’est pas destinée à utiliser par une autre que le compilateur de balisage XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="121ad-123">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="protected internal abstract object GetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Object ^ GetPropertyValue(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ target, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="121ad-124">Informations sur la propriété à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-124">Property information for the property to get.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="121ad-125">Objet qui contient la valeur de propriété souhaitée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-125">The object that holds the desired property value.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="121ad-126">Informations propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-126">Culture specific information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="121ad-127">En cas de substitution dans une classe dérivée (générée), obtient la valeur d'une propriété interne sur l'objet cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-127">When overridden in a derived (generated) class, gets the value of an internal property on the target object</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="121ad-128">Valeur de la propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-128">The value of the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="121ad-129">La <xref:System.Windows.Markup.InternalTypeHelper> classe n’est pas destinée à utiliser par une autre que le compilateur de balisage XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="121ad-129">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="protected internal abstract void SetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SetPropertyValue(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ target, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="121ad-130">Informations sur la propriété à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-130">Property information for the property to set.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="121ad-131">Objet qui contient la valeur de propriété souhaitée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-131">The object that holds the desired property value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="121ad-132">Valeur à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-132">The value to set.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="121ad-133">Informations propres à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-133">Culture specific information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="121ad-134">En cas de substitution dans une classe dérivée (générée), définit la valeur d'une propriété interne sur l'objet cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="121ad-134">When overridden in a derived (generated) class, sets the value on an internal property on the target object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="121ad-135">La <xref:System.Windows.Markup.InternalTypeHelper> classe n’est pas destinée à utiliser par une autre que le compilateur de balisage XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="121ad-135">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>