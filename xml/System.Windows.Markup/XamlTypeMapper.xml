<Type Name="XamlTypeMapper" FullName="System.Windows.Markup.XamlTypeMapper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6f664bcc67e42f1fe335fc9674d969c02752f7b" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52239414" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeMapper" />
  <TypeSignature Language="F#" Value="type XamlTypeMapper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Mappe un nom d'élément XAML au <see cref="T:System.Type" /> CLR approprié dans les assemblys.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper> fait partie d’un scénario WPF avancé qui fournit un autre contexte pour <xref:System.Windows.Markup.XamlReader> et <xref:System.Windows.Markup.XamlWriter>. Pour [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] les applications WPF, vous pouvez substituer <xref:System.Xaml.XamlSchemaContext> pour ce scénario, plutôt que d’essayer d’utiliser <xref:System.Windows.Markup.XamlTypeMapper>.  
  
 <xref:System.Windows.Markup.XamlTypeMapper> peut être utilisé pour fournir à l’analyseur XAML des informations de mappage personnalisé via une technique plus directe que l’application de <xref:System.Windows.Markup.XmlnsDefinitionAttribute> valeurs sur le code de l’assembly. Cela peut être utile pour la consolidation de tous les espaces de noms CLR dans un assembly, ou pour le référencement des types compatibles XAML dans un assembly existant sans devoir le recompiler uniquement pour ajouter <xref:System.Windows.Markup.XmlnsDefinitionAttribute> attribution.  
  
 Vous créez généralement un <xref:System.Windows.Markup.XamlTypeMapper> instance afin de spécifier le <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> valeur de propriété pour un <xref:System.Windows.Markup.ParserContext>. Le <xref:System.Windows.Markup.ParserContext> à son tour peut être utilisé comme contexte pour un <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType> appeler.  
  
## <a name="default-mapper"></a>Mappeur par défaut  
 Vous pouvez obtenir un mappeur par défaut à l’aide de la <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> propriété statique. Le mappeur par défaut fonctionne uniquement sur une liste des assemblys par défaut. Aucune information spécifique sur les assemblys (comme spécifié dans <xref:System.Windows.Markup.XamlTypeMapper> constructeurs) est utilisé.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.NamespaceMapEntry" />
    <altmember cref="T:System.Windows.Markup.ParserContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlTypeMapper" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper assemblyNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">Tableau des noms d'assemblys que le <see cref="T:System.Windows.Markup.XamlTypeMapper" /> doit utiliser.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlTypeMapper" /> en spécifiant un tableau des noms d'assemblys que le <see cref="T:System.Windows.Markup.XamlTypeMapper" /> doit utiliser.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyNames" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, class System.Windows.Markup.NamespaceMapEntry[] namespaceMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), namespaceMaps As NamespaceMapEntry())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames, cli::array &lt;System::Windows::Markup::NamespaceMapEntry ^&gt; ^ namespaceMaps);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] * System.Windows.Markup.NamespaceMapEntry[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper (assemblyNames, namespaceMaps)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="namespaceMaps" Type="System.Windows.Markup.NamespaceMapEntry[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">Tableau des noms d'assemblys que le <see cref="T:System.Windows.Markup.XamlTypeMapper" /> doit utiliser.</param>
        <param name="namespaceMaps">Tableau des mappages d'espaces de noms que le <see cref="T:System.Windows.Markup.XamlTypeMapper" /> doit utiliser.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.XamlTypeMapper" /> avec le tableau spécifié des noms d'assemblys et les mappages d'espaces de noms spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyNames" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMappingProcessingInstruction">
      <MemberSignature Language="C#" Value="public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingProcessingInstruction(string xmlNamespace, string clrNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingProcessingInstruction (xmlNamespace As String, clrNamespace As String, assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingProcessingInstruction(System::String ^ xmlNamespace, System::String ^ clrNamespace, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingProcessingInstruction : string * string * string -&gt; unit" Usage="xamlTypeMapper.AddMappingProcessingInstruction (xmlNamespace, clrNamespace, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="clrNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">Préfixe de l'espace de noms XML.</param>
        <param name="clrNamespace">Espace de noms CLR qui contient les types à mapper.</param>
        <param name="assemblyName">Assembly qui contient l'espace de noms CLR.</param>
        <summary>Définit un mappage entre un espace de noms XML et les espaces de noms CLR dans les assemblys et ajoute ces derniers aux informations <see cref="T:System.Windows.Markup.XamlTypeMapper" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> est un moyen par programmation pour ajouter un mappage.  Par exemple, les différentes parties de l’instruction de mappage XAML suivante correspondent aux paramètres de la <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:  
  
```  
<Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples">  
...  
```  
  
 Le `xmlNamespace` est `SDK`, le `clrNamespace` est `Samples`et le `assemblyName` est `SDKSamples`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="clrNamespace" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="assemblyName" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowInternalType">
      <MemberSignature Language="C#" Value="protected virtual bool AllowInternalType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowInternalType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowInternalType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AllowInternalType : Type -&gt; bool&#xA;override this.AllowInternalType : Type -&gt; bool" Usage="xamlTypeMapper.AllowInternalType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Type auquel accéder.</param>
        <summary>Demande l'autorisation pour un type dérivé <see cref="T:System.Windows.Markup.XamlTypeMapper" /> appelé sous confiance totale pour accéder à un type interne spécifique.</summary>
        <returns><see langword="true" /> si le type interne est accessible ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si ne pas été substituée par une sous-classe, <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> retourne toujours `false`.  
  
 En cas de substitution par une sous-classe, le comportement doit être celle <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> doit retourner `true` si le type interne peut être accessible ; sinon, `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMapper">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XamlTypeMapper DefaultMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XamlTypeMapper ^ DefaultMapper { System::Windows::Markup::XamlTypeMapper ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMapper : System.Windows.Markup.XamlTypeMapper" Usage="System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une instance de <see cref="T:System.Windows.Markup.XamlTypeMapper" /> à utiliser si aucun n'a été spécifié.</summary>
        <value>Mappeur de types par défaut.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le mappeur par défaut fonctionne uniquement sur une liste des assemblys par défaut. Aucune information spécifique sur les assemblys (comme spécifié dans <xref:System.Windows.Markup.XamlTypeMapper> constructeurs) est utilisé. Dans l’implémentation actuelle est la liste des assemblys par défaut : `WindowsBase`, `PresentationCore`, `PresentationFramework`.  
  
 À l’aide du mappeur par défaut ne signifie pas que vous ne pouvez pas utiliser des assemblys/types personnalisés dans XAML du tout. Cela signifie simplement que si vous utilisez des types/assemblys personnalisés, vous devez ensuite utiliser la technique XAML classique de création des mappages en tant que `xmlns` attributs dans chaque page XAML où les types/assemblys sont référencés, par opposition à une API de mappage de type. Pour plus d’informations, consultez [espaces de noms XAML et Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string xmlNamespace, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType(string xmlNamespace, string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (xmlNamespace As String, localName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ xmlNamespace, System::String ^ localName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; Type" Usage="xamlTypeMapper.GetType (xmlNamespace, localName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">Préfixe d'espace de noms XML spécifié.</param>
        <param name="localName">Le nom « local » de l'élément XAML pour lequel obtenir le <see cref="T:System.Type" /> mappé. Local dans ce contexte signifie mappé par opposition au <paramref name="xmlNamespace" /> fourni.</param>
        <summary>Obtient le <see cref="T:System.Type" /> CLR auquel un élément XAML donné est mappé, à l'aide du préfixe d'espace de noms XML spécifié et du nom d'élément.</summary>
        <returns><see cref="T:System.Type" /> de l'objet, ou <see langword="null" /> si aucun mappage ne peut être résolu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un type n’est trouvé qui correspond aux informations fournies, `null` est retournée.  
  
 N’incluez pas le préfixe dans le cadre de `localName`. Pour les informations sur l’élément XAML le préfixe, séparer dans `xmlNamespace` et `localName` composants pour cet appel d’API.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="localName" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="SetAssemblyPath">
      <MemberSignature Language="C#" Value="public void SetAssemblyPath (string assemblyName, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAssemblyPath(string assemblyName, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAssemblyPath (assemblyName As String, assemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAssemblyPath(System::String ^ assemblyName, System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.SetAssemblyPath : string * string -&gt; unit" Usage="xamlTypeMapper.SetAssemblyPath (assemblyName, assemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Nom court de l'assembly sans extension ni chemin d'accès spécifié(e) (équivaut à <see cref="P:System.Reflection.AssemblyName.Name" />).</param>
        <param name="assemblyPath">Chemin d'accès de l'assembly. Le chemin d'accès d'assembly doit être un chemin d'accès de fichier complet qui contient une extension de fichier.</param>
        <summary>Spécifie le chemin d'accès à utiliser pour le chargement d'un assembly.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyName" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="assemblyPath" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Windows.Markup.XamlParseException"><paramref name="assemblyName" /> a la valeur <see cref="F:System.String.Empty" />.  
  
- ou - 
 <paramref name="assemblyPath" /> a la valeur <see cref="F:System.String.Empty" />.  
  
- ou - 
 <paramref name="assemblyPath" /> n'est pas un chemin d'accès de fichier complet qui contient une extension de fichier.</exception>
      </Docs>
    </Member>
  </Members>
</Type>