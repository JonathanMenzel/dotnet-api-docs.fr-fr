<Type Name="ValueSerializer" FullName="System.Windows.Markup.ValueSerializer">
  <TypeSignature Language="C#" Value="public abstract class ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ValueSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueSerializer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="66c8a-101">Classe abstraite qui définit le comportement de conversion pour la sérialisation à partir d’une représentation sous forme d’objet.</span><span class="sxs-lookup"><span data-stu-id="66c8a-101">Abstract class that defines conversion behavior for serialization from an object representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-102">La chaîne retournée par un convertisseur pour la sérialisation doit être sans perte et le convertisseur doit toujours retourner la même chaîne pour une valeur particulière.</span><span class="sxs-lookup"><span data-stu-id="66c8a-102">The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.</span></span>  <span data-ttu-id="66c8a-103">Si un convertisseur de type (dérivé de <xref:System.ComponentModel.TypeConverter>) ne satisfait pas ces spécifications dans ses `ConvertTo` mises en œuvre pour la sortie de chaîne, personnalisé <xref:System.Windows.Markup.ValueSerializer> doit être déclarée.</span><span class="sxs-lookup"><span data-stu-id="66c8a-103">If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared.</span></span> <span data-ttu-id="66c8a-104">Soit le <xref:System.Windows.Markup.ValueSerializer> doit respecter les spécifications, ou une valeur null <xref:System.Windows.Markup.ValueSerializer> doit être associé au type.</span><span class="sxs-lookup"><span data-stu-id="66c8a-104">Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type.</span></span> <span data-ttu-id="66c8a-105">A <xref:System.Windows.Markup.ValueSerializer> est associé à un type en appliquant la <xref:System.Windows.Markup.ValueSerializerAttribute> attribut.</span><span class="sxs-lookup"><span data-stu-id="66c8a-105">A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.</span></span>  
  
 <span data-ttu-id="66c8a-106">Une valeur null <xref:System.Windows.Markup.ValueSerializer> indique le convertisseur de type doit être ignoré pour les conversions de convertir en chaînes du graphique d’objet.</span><span class="sxs-lookup"><span data-stu-id="66c8a-106">A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="66c8a-107">Implémentation de <xref:System.Windows.Markup.ValueSerializer> doit éviter de lever des exceptions.</span><span class="sxs-lookup"><span data-stu-id="66c8a-107">Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions.</span></span> <span data-ttu-id="66c8a-108">Toutes les exceptions levées peuvent mettre fin à la sérialisation.</span><span class="sxs-lookup"><span data-stu-id="66c8a-108">Any exceptions thrown could terminate serialization.</span></span>  
  
 <span data-ttu-id="66c8a-109"><xref:System.Windows.Markup.IValueSerializerContext> pour un <xref:System.Windows.Markup.ValueSerializer> et ses API est analogue à <xref:System.ComponentModel.ITypeDescriptorContext> pour un <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="66c8a-109"><xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="66c8a-110">En fait, <xref:System.Windows.Markup.IValueSerializerContext> hérite <xref:System.ComponentModel.ITypeDescriptorContext>.</span><span class="sxs-lookup"><span data-stu-id="66c8a-110">In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>.</span></span> <span data-ttu-id="66c8a-111">Lorsqu’un <xref:System.Windows.Markup.ValueSerializer> API de classe dérivée est appelée, l’appelant (en général, un processus de sérialisation) passe un contexte qui peut fournir certains services.</span><span class="sxs-lookup"><span data-stu-id="66c8a-111">When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services.</span></span> <span data-ttu-id="66c8a-112">En raison de la recommandation générale qui un <xref:System.Windows.Markup.ValueSerializer> ne doit pas lever d’exceptions.</span><span class="sxs-lookup"><span data-stu-id="66c8a-112">Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions.</span></span> <span data-ttu-id="66c8a-113">Échec pour retourner un service particulier à partir du contexte ne doit pas également lever des exceptions.</span><span class="sxs-lookup"><span data-stu-id="66c8a-113">Failure to return a particular service from the context must also not throw any exceptions.</span></span>  
  
 <span data-ttu-id="66c8a-114">Dans les versions précédentes du .NET Framework, cette classe existait dans l’assembly WindowsBase spécifique de WPF.</span><span class="sxs-lookup"><span data-stu-id="66c8a-114">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="66c8a-115">Dans [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> est dans l’assembly System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="66c8a-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="66c8a-116">Pour plus d’informations, consultez [Types migrés de WPF vers System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="66c8a-116">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66c8a-117">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-117">Initializes a new instance of the <see cref="T:System.Windows.Markup.ValueSerializer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-118">Le corps de ce constructeur est vide ; la <xref:System.Windows.Markup.ValueSerializer> classe ne contient aucune valeur nécessitant l’initialisation.</span><span class="sxs-lookup"><span data-stu-id="66c8a-118">The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="66c8a-119">Chaîne à évaluer pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="66c8a-119">The string to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="66c8a-120">Informations de contexte utilisées pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="66c8a-120">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="66c8a-121">En cas de substitution dans une classe dérivée, détermine si le <see cref="T:System.String" /> spécifié peut être converti en instance du type que l’implémentation de <see cref="T:System.Windows.Markup.ValueSerializer" /> prend en charge.</span><span class="sxs-lookup"><span data-stu-id="66c8a-121">When overridden in a derived class, determines whether the specified <see cref="T:System.String" /> can be converted to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns>
          <span data-ttu-id="66c8a-122"><see langword="true" /> si la valeur peut être convertie ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-122"><see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-123">L'implémentation de base retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="66c8a-123">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="66c8a-124">Objet à évaluer pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="66c8a-124">The object to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="66c8a-125">Informations de contexte utilisées pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="66c8a-125">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="66c8a-126">En cas de remplacement dans une classe dérivée, détermine si l’objet spécifié peut être converti en <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-126">When overridden in a derived class, determines whether the specified object can be converted into a <see cref="T:System.String" />.</span></span></summary>
        <returns>
          <span data-ttu-id="66c8a-127"><see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false." />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-127"><see langword="true" /> if the <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-128">L'implémentation de base retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="66c8a-128">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public virtual object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="66c8a-129">Chaîne à convertir.</span><span class="sxs-lookup"><span data-stu-id="66c8a-129">The string to convert.</span></span></param>
        <param name="context"><span data-ttu-id="66c8a-130">Informations de contexte utilisées pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="66c8a-130">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="66c8a-131">En cas de substitution dans une classe dérivée, convertit un <see cref="T:System.String" /> en une instance du type que l’implémentation de <see cref="T:System.Windows.Markup.ValueSerializer" /> prend en charge.</span><span class="sxs-lookup"><span data-stu-id="66c8a-131">When overridden in a derived class, converts a <see cref="T:System.String" /> to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="66c8a-132">Nouvelle instance du type que l’implémentation de <see cref="T:System.Windows.Markup.ValueSerializer" /> prend en charge en fonction du <paramref name="value" /> fourni.</span><span class="sxs-lookup"><span data-stu-id="66c8a-132">A new instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports based on the supplied <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-133">L’implémentation de base toujours lève une exception.</span><span class="sxs-lookup"><span data-stu-id="66c8a-133">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="66c8a-134"><paramref name="value" /> ne peut pas être converti.</span><span class="sxs-lookup"><span data-stu-id="66c8a-134"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="66c8a-135">Éviter de lever des exceptions à partir des implémentations.</span><span class="sxs-lookup"><span data-stu-id="66c8a-135">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="66c8a-136">Consultez <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-136">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="66c8a-137">Objet à convertir en chaîne.</span><span class="sxs-lookup"><span data-stu-id="66c8a-137">The object to convert into a string.</span></span></param>
        <param name="context"><span data-ttu-id="66c8a-138">Informations de contexte utilisées pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="66c8a-138">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="66c8a-139">En cas de substitution dans une classe dérivée, convertit l’objet spécifié en <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-139">When overridden in a derived class, converts the specified object to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="66c8a-140">Représentation sous forme de chaîne de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="66c8a-140">A string representation of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-141">L’implémentation de base toujours lève une exception.</span><span class="sxs-lookup"><span data-stu-id="66c8a-141">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="66c8a-142"><paramref name="value" /> ne peut pas être converti.</span><span class="sxs-lookup"><span data-stu-id="66c8a-142"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="66c8a-143">Éviter de lever des exceptions à partir des implémentations.</span><span class="sxs-lookup"><span data-stu-id="66c8a-143">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="66c8a-144">Consultez <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-144">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="66c8a-145">Objet qui n’a pas pu être converti.</span><span class="sxs-lookup"><span data-stu-id="66c8a-145">The object that could not be converted.</span></span></param>
        <summary><span data-ttu-id="66c8a-146">Retourne une exception à lever quand une conversion ne peut pas être effectuée.</span><span class="sxs-lookup"><span data-stu-id="66c8a-146">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="66c8a-147">Objet <see cref="T:System.Exception" /> pour l'exception à lever lorsqu'une conversion <see langword="ConvertFrom" /> ne peut pas être effectuée.</span><span class="sxs-lookup"><span data-stu-id="66c8a-147">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertFrom" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-148">Le texte réel `throw` mot clé n’est pas appelé par cette méthode, par conséquent, l’utilisation typique consiste `throw GetConvertFromException` (avec les paramètres fournis).</span><span class="sxs-lookup"><span data-stu-id="66c8a-148">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).</span></span>  
  
 <span data-ttu-id="66c8a-149">L’exception spécifique retournée est <xref:System.InvalidOperationException>, avec `value` passé dans le message d’exception.</span><span class="sxs-lookup"><span data-stu-id="66c8a-149">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="66c8a-150">Le modèle d’utilisation est la même que pour les utilitaires d’exception dans <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="66c8a-150">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="66c8a-151">Objet qui n’a pas pu être converti.</span><span class="sxs-lookup"><span data-stu-id="66c8a-151">The object that could not be converted.</span></span></param>
        <param name="destinationType"><span data-ttu-id="66c8a-152">Type qui représente le type cible de la tentative de conversion.</span><span class="sxs-lookup"><span data-stu-id="66c8a-152">A type that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="66c8a-153">Retourne une exception à lever quand une conversion ne peut pas être effectuée.</span><span class="sxs-lookup"><span data-stu-id="66c8a-153">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="66c8a-154">Objet <see cref="T:System.Exception" /> pour l'exception à lever lorsqu'une conversion <see langword="ConvertTo" /> ne peut pas être effectuée.</span><span class="sxs-lookup"><span data-stu-id="66c8a-154">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertTo" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-155">Le texte réel `throw` mot clé n’est pas appelé par cette méthode, par conséquent, l’utilisation typique consiste `throw GetConvertToException` (avec `value` paramètre fourni).</span><span class="sxs-lookup"><span data-stu-id="66c8a-155">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).</span></span>  
  
 <span data-ttu-id="66c8a-156">L’exception spécifique retournée est <xref:System.InvalidOperationException>, avec `value` passé dans le message d’exception.</span><span class="sxs-lookup"><span data-stu-id="66c8a-156">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="66c8a-157">Le modèle d’utilisation est la même que pour les utilitaires d’exception dans <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="66c8a-157">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializerFor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="66c8a-158">Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> pour un objet.</span><span class="sxs-lookup"><span data-stu-id="66c8a-158">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> for an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="66c8a-159">Descripteur de propriété CLR pour la propriété à sérialiser.</span><span class="sxs-lookup"><span data-stu-id="66c8a-159">The CLR property descriptor for the property to be serialized.</span></span></param>
        <summary><span data-ttu-id="66c8a-160">Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> déclaré pour une propriété, en passant un descripteur de propriété CLR pour la propriété.</span><span class="sxs-lookup"><span data-stu-id="66c8a-160">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for a property, by passing a CLR property descriptor for the property.</span></span></summary>
        <returns><span data-ttu-id="66c8a-161">Sérialiseur associé à la propriété spécifiée.</span><span class="sxs-lookup"><span data-stu-id="66c8a-161">The serializer associated with the specified property.</span></span> <span data-ttu-id="66c8a-162">Peut retourner <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-162">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-163">A <xref:System.Windows.Markup.ValueSerializer> pour une propriété ou d’un type qui est utilisé comme valeur pour une propriété, est indiqué en appliquant la <xref:System.Windows.Markup.ValueSerializerAttribute> attribut sur la déclaration de propriété ou un type.</span><span class="sxs-lookup"><span data-stu-id="66c8a-163">A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration.</span></span> <span data-ttu-id="66c8a-164">Le <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> méthode est une méthode utilitaire qui lit les informations de système de type CLR et retourne un nouveau <xref:System.Windows.Markup.ValueSerializer> classe en fonction de l’attribut si trouvé sur la propriété, ou ensuite si trouvé sur le type de propriété.</span><span class="sxs-lookup"><span data-stu-id="66c8a-164">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type.</span></span> <span data-ttu-id="66c8a-165">`null` peut être retournée si aucun sérialiseur n’existe.</span><span class="sxs-lookup"><span data-stu-id="66c8a-165">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="66c8a-166">`null` peut également être retourné si un type ou une propriété est attribuée délibérément avec une valeur null <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="66c8a-166">`null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="66c8a-167">Un autre mode qui <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> prend en charge est de retour interne `TypeConverterValueSerializer` (classe), qui est un <xref:System.Windows.Markup.ValueSerializer> implémentation qui encapsule un <xref:System.ComponentModel.TypeConverter> et traduit le `Convert` méthodes `Convert*String` méthodes (pour l’instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>est appelé avec l’entrée de la <xref:System.String> de type et se traduit par <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="66c8a-167">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="66c8a-168">Pour cela, uniquement dans les cas où toutes les conditions suivantes sont remplies :</span><span class="sxs-lookup"><span data-stu-id="66c8a-168">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="66c8a-169">A <xref:System.ComponentModel.TypeConverterAttribute> se trouve sur la propriété pertinente, ou le type de la propriété pertinente.</span><span class="sxs-lookup"><span data-stu-id="66c8a-169">A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.</span></span>  
  
-   <span data-ttu-id="66c8a-170">Le fonctoid <xref:System.ComponentModel.TypeConverter> peut être construit correctement.</span><span class="sxs-lookup"><span data-stu-id="66c8a-170">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="66c8a-171">Le <xref:System.ComponentModel.TypeConverter> retourne `true` pour <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, appelé pour référencer le <xref:System.String> type.</span><span class="sxs-lookup"><span data-stu-id="66c8a-171">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="66c8a-172">Le <xref:System.ComponentModel.TypeConverter> retourne `true` pour <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, appelé pour référencer le <xref:System.String> type.</span><span class="sxs-lookup"><span data-stu-id="66c8a-172">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="66c8a-173">Le <xref:System.ComponentModel.TypeConverter> retourne `true` pour <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, appelé pour référencer le <xref:System.String> type.</span><span class="sxs-lookup"><span data-stu-id="66c8a-173">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66c8a-174">Les éléments suivants sont des cas spéciaux : <xref:System.DateTime> types retournent un <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types retournent un sérialiseur interne mais fonctionnel (`StringValueSerializer`).</span><span class="sxs-lookup"><span data-stu-id="66c8a-174">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="66c8a-175"><paramref name="descriptor" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-175"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="66c8a-176">Type pour lequel obtenir le <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-176">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <summary><span data-ttu-id="66c8a-177">Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> déclaré pour le type spécifié.</span><span class="sxs-lookup"><span data-stu-id="66c8a-177">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type.</span></span></summary>
        <returns><span data-ttu-id="66c8a-178">Sérialiseur associé au type spécifié.</span><span class="sxs-lookup"><span data-stu-id="66c8a-178">The serializer associated with the specified type.</span></span> <span data-ttu-id="66c8a-179">Peut retourner <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-179">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-180">A <xref:System.Windows.Markup.ValueSerializer> pour un type est indiqué en appliquant la <xref:System.Windows.Markup.ValueSerializerAttribute> attribut sur la déclaration de type.</span><span class="sxs-lookup"><span data-stu-id="66c8a-180">A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration.</span></span> <span data-ttu-id="66c8a-181">Le <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> méthode est une méthode utilitaire qui lit les informations de système de type CLR et retourne un nouveau <xref:System.Windows.Markup.ValueSerializer> classe en fonction de l’attribut si trouvé spécifiées `type`.</span><span class="sxs-lookup"><span data-stu-id="66c8a-181">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`.</span></span> <span data-ttu-id="66c8a-182">`null` peut être retournée si aucun sérialiseur n’existe.</span><span class="sxs-lookup"><span data-stu-id="66c8a-182">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="66c8a-183">`null` peut également être retourné si un type est attribué délibérément avec une valeur null <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="66c8a-183">`null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="66c8a-184">Un autre mode qui <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> prend en charge est de retour interne `TypeConverterValueSerializer` (classe), qui est un <xref:System.Windows.Markup.ValueSerializer> implémentation qui encapsule un <xref:System.ComponentModel.TypeConverter> et traduit le `Convert` méthodes `Convert*String` méthodes (pour l’instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>est appelé avec l’entrée de la <xref:System.String> de type et se traduit par <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="66c8a-184">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="66c8a-185">Pour cela, uniquement dans les cas où toutes les conditions suivantes sont remplies :</span><span class="sxs-lookup"><span data-stu-id="66c8a-185">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="66c8a-186">A <xref:System.ComponentModel.TypeConverterAttribute> se trouve sur `type`.</span><span class="sxs-lookup"><span data-stu-id="66c8a-186">A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.</span></span>  
  
-   <span data-ttu-id="66c8a-187">Le fonctoid <xref:System.ComponentModel.TypeConverter> peut être construit correctement.</span><span class="sxs-lookup"><span data-stu-id="66c8a-187">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="66c8a-188">Le <xref:System.ComponentModel.TypeConverter> retourne `true` pour <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, appelé pour référencer le <xref:System.String> type.</span><span class="sxs-lookup"><span data-stu-id="66c8a-188">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="66c8a-189">Le <xref:System.ComponentModel.TypeConverter> retourne `true` pour <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, appelé pour référencer le <xref:System.String> type.</span><span class="sxs-lookup"><span data-stu-id="66c8a-189">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="66c8a-190">Le <xref:System.ComponentModel.TypeConverter> retourne `true` pour <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, appelé pour référencer le <xref:System.String> type.</span><span class="sxs-lookup"><span data-stu-id="66c8a-190">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66c8a-191">Les éléments suivants sont des cas spéciaux : <xref:System.DateTime> types retournent un <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types retournent un sérialiseur interne mais fonctionnel (`StringValueSerializer`).</span><span class="sxs-lookup"><span data-stu-id="66c8a-191">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="66c8a-192"><paramref name="type" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-192"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor, context As IValueSerializerContext) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="66c8a-193">Descripteur de la propriété à sérialiser.</span><span class="sxs-lookup"><span data-stu-id="66c8a-193">Descriptor for the property to be serialized.</span></span></param>
        <param name="context"><span data-ttu-id="66c8a-194">Informations de contexte utilisées pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="66c8a-194">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="66c8a-195">Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> déclaré pour la propriété spécifiée, à l'aide du contexte indiqué.</span><span class="sxs-lookup"><span data-stu-id="66c8a-195">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified property, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="66c8a-196">Sérialiseur associé à la propriété spécifiée.</span><span class="sxs-lookup"><span data-stu-id="66c8a-196">The serializer associated with the specified property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-197">Au lieu de compter uniquement sur les attributs signalés dans le système de type CLR, cette surcharge utilise le `context` en tant que service et appelle l’implémentation du service de <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66c8a-197">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="66c8a-198">Le <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implémentation serait généralement également reposer sur la `descriptor`, mais peut implémenter un comportement spécial pour certains contextes.</span><span class="sxs-lookup"><span data-stu-id="66c8a-198">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="66c8a-199">Cette méthode doit être appelée lorsque l’appelant a un disponible <xref:System.Windows.Markup.IValueSerializerContext> à partir d’un service.</span><span class="sxs-lookup"><span data-stu-id="66c8a-199">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span>  <span data-ttu-id="66c8a-200">Cela permet d’assurer la bonne <xref:System.Windows.Markup.ValueSerializer> est retournée pour le contexte spécifique.</span><span class="sxs-lookup"><span data-stu-id="66c8a-200">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="66c8a-201">Si le contexte retourne `null` à partir de son <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> votre spécifié `descriptor`, ou si le contexte que vous spécifiez est `null`, comportement est identique à l’appel du <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="66c8a-201">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="66c8a-202"><paramref name="descriptor" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-202"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="66c8a-203">Type pour lequel obtenir le <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-203">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <param name="context"><span data-ttu-id="66c8a-204">Informations de contexte utilisées pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="66c8a-204">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="66c8a-205">Obtient le <see cref="T:System.Windows.Markup.ValueSerializer" /> déclaré pour le type spécifié, à l'aide du contexte indiqué.</span><span class="sxs-lookup"><span data-stu-id="66c8a-205">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="66c8a-206">Sérialiseur associé au type spécifié.</span><span class="sxs-lookup"><span data-stu-id="66c8a-206">The serializer associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-207">Au lieu de compter uniquement sur les attributs signalés dans le système de type CLR, cette surcharge utilise le `context` en tant que service et appelle l’implémentation du service de <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66c8a-207">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="66c8a-208">Le <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implémentation serait généralement également reposer sur la `type`, mais peut implémenter un comportement spécial pour certains contextes.</span><span class="sxs-lookup"><span data-stu-id="66c8a-208">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="66c8a-209">Cette méthode doit être appelée lorsque l’appelant a un disponible <xref:System.Windows.Markup.IValueSerializerContext> à partir d’un service.</span><span class="sxs-lookup"><span data-stu-id="66c8a-209">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span> <span data-ttu-id="66c8a-210">Cela permet d’assurer la bonne <xref:System.Windows.Markup.ValueSerializer> est retournée pour le contexte spécifique.</span><span class="sxs-lookup"><span data-stu-id="66c8a-210">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="66c8a-211">Si le contexte retourne `null` à partir de son <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> votre spécifié `type`, ou si le contexte que vous spécifiez est `null`, comportement est identique à l’appel du <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="66c8a-211">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="66c8a-212"><paramref name="type" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-212"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TypeReferences (value As Object, context As IValueSerializerContext) As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="66c8a-213">Valeur en cours de sérialisation.</span><span class="sxs-lookup"><span data-stu-id="66c8a-213">The value being serialized.</span></span></param>
        <param name="context"><span data-ttu-id="66c8a-214">Informations de contexte utilisées pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="66c8a-214">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="66c8a-215">Obtient une énumération des types référencés par le <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="66c8a-215">Gets an enumeration of the types referenced by the <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></summary>
        <returns><span data-ttu-id="66c8a-216">Types convertis par ce sérialiseur.</span><span class="sxs-lookup"><span data-stu-id="66c8a-216">The types converted by this serializer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66c8a-217">Tous les types un <xref:System.Windows.Markup.ValueSerializer> convertit doit être inclus dans l’énumération retournée.</span><span class="sxs-lookup"><span data-stu-id="66c8a-217">Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.</span></span>  <span data-ttu-id="66c8a-218">Cela permet à un sérialiseur garantir qu'un désérialiseur dispose de suffisamment d’informations sur les types convertis.</span><span class="sxs-lookup"><span data-stu-id="66c8a-218">This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.</span></span>  
  
 <span data-ttu-id="66c8a-219">Substitution de cette méthode est un scénario avancé.</span><span class="sxs-lookup"><span data-stu-id="66c8a-219">Overriding this method is an advanced scenario.</span></span> <span data-ttu-id="66c8a-220">Substitution ne doit être nécessaire si vous implémentez un système où disponibles pour un contexte de schéma XAML de relations de la propriété ownertype du système type CLR ne signalent pas de suffisamment d’informations.</span><span class="sxs-lookup"><span data-stu-id="66c8a-220">Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="66c8a-221">Remarques sur l'utilisation de WPF</span><span class="sxs-lookup"><span data-stu-id="66c8a-221">WPF Usage Notes</span></span>  
 <span data-ttu-id="66c8a-222">Le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] système de propriétés implémente un sérialiseur de valeur interne qui substitue <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> , car une propriété de dépendance a un concept qu’il peut ajouter des propriétaires.</span><span class="sxs-lookup"><span data-stu-id="66c8a-222">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="66c8a-223"> expressions ont également une gestion interne spéciale.</span><span class="sxs-lookup"><span data-stu-id="66c8a-223"> expressions also have special internal handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>