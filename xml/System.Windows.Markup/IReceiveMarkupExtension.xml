<Type Name="IReceiveMarkupExtension" FullName="System.Windows.Markup.IReceiveMarkupExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d590f413cad5fd1e1bf753c645edf4ec35b2826" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30655393" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IReceiveMarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReceiveMarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IReceiveMarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReceiveMarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReceiveMarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("IReceiveMarkupExtension has been deprecated. This interface is no longer in use.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit un mécanisme permettant aux types de déclarer qu'ils peuvent recevoir une expression (ou une autre classe) d'une extension de balisage, où la sortie est un type de propriété différent de la propriété cible. Ne pas utiliser pour les implémentations du .NET Framework 4.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)], <xref:System.Windows.Markup.IReceiveMarkupExtension> était une technique spécifique au WPF pour autoriser les types à entrer un codepath différent que l’un de ses membres accessibles par XAML définis en tant qu’extensions de balisage pendant l’analyse XAML. Dans [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], cette interface est obsolète et est remplacée par une implémentation de Services XAML .NET Framework pour la façon dont les extensions de balisage peuvent recevoir les services ou les types peuvent appeler la logique de méthode setter spécifique d’extension de balisage.  
  
 Pour [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] implémentations, si les types souhaitent exécuter un traitement spécial lors de la définition des propriétés par extension de balisage plutôt que par d’autres moyens, les types doivent être définis avec <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attributs appliqués. L’attribut spécifie un rappel, qui est généralement défini comme un membre privé du type.  
  
 Dans les implémentations d’infrastructure de classes WPF, la plupart des cas où <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> est appliqué référence un `ReceiveMarkupExtension` méthode précédemment implémenté cette interface, mais désormais à la place utiliser de contexte via le rappel.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
    <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public void ReceiveMarkupExtension (string property, System.Windows.Markup.MarkupExtension markupExtension, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveMarkupExtension(string property, class System.Windows.Markup.MarkupExtension markupExtension, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReceiveMarkupExtension(System::String ^ property, System::Windows::Markup::MarkupExtension ^ markupExtension, IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="markupExtension" Type="System.Windows.Markup.MarkupExtension" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="property">Nom de la propriété cible.</param>
        <param name="markupExtension">Instance d'extension de balisage des données entrantes.</param>
        <param name="serviceProvider">Peut fournir des services supplémentaires qui doivent être exécutés lors du traitement des données d'extension de balisage pour une valeur de propriété.</param>
        <summary>Fournit la gestion pour les extensions de balisage qui fournissent des valeurs de propriété. Ne pas utiliser pour les implémentations du [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] ; consultez <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>