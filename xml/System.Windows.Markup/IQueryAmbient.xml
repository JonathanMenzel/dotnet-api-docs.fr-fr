<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b1419b6b996eab65fbdcda1f6ed9782df12197d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36502762" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3a927-101">Demande si une propriété ambiante spécifiée doit être traitée comme étant ambiante dans la portée actuelle.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a927-101">Queries for whether a specified property should be treated as ambient in the current scope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a927-102">Un mécanisme de propriété ambiante vise à améliorer les temps d’analyse en informant un writer d’objet XAML pour éviter l’instanciation de certains objets, dans le cas où il est connu que les objets sont les valeurs qui sont temporaires et inutiles pour un temps d’exécution standard application.</span><span class="sxs-lookup"><span data-stu-id="3a927-102">The purpose of an ambient property mechanism is to improve parsing time by informing a XAML object writer to avoid instantiating certain objects, in cases where it is known that the objects are for values that are temporary and not useful for a typical run time application.</span></span> <span data-ttu-id="3a927-103">En règle générale, les recherches XAML ou traitement XAML d’un accesseur get de propriété devez instancier ces objets pour remplir la représentation graphique d’objet avec les valeurs de prêts à l’emploi.</span><span class="sxs-lookup"><span data-stu-id="3a927-103">Normally, XAML lookups or XAML processing of a property get accessor would need to instantiate such objects to fill the object graph representation with ready-to-use values.</span></span>  
  
 <span data-ttu-id="3a927-104"><xref:System.Windows.Markup.IQueryAmbient> a un seul membre : <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.</span><span class="sxs-lookup"><span data-stu-id="3a927-104"><xref:System.Windows.Markup.IQueryAmbient> has one member: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.</span></span>  
  
 <span data-ttu-id="3a927-105"><xref:System.Windows.Markup.IQueryAmbient> est un mécanisme parallèle à <xref:System.Windows.Markup.AmbientAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3a927-105"><xref:System.Windows.Markup.IQueryAmbient> is a parallel mechanism to <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="3a927-106"><xref:System.Windows.Markup.IQueryAmbient> est le mécanisme spécialisé qui évite à l’aide de la réflexion pour déterminer les informations et peut également agir en fonction de la situation (un objet donné pourrait choisir d’indiquer `true` ou `false` pour <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), tandis que l’attribut est essentiellement statique analyse).</span><span class="sxs-lookup"><span data-stu-id="3a927-106"><xref:System.Windows.Markup.IQueryAmbient> is the specialized mechanism that avoids using reflection to determine information, and can also act situationally (a given object could choose to report `true` or `false` for <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), whereas the attribute is essentially static analysis).</span></span> <span data-ttu-id="3a927-107"><xref:System.Windows.Markup.AmbientAttribute> est le mécanisme général qui peut être utilisé par les writers d’objet XAML et qui correspond généralement aux propriétés de système de type XAML dédiées <xref:System.Xaml.XamlMember.IsAmbient%2A> et <xref:System.Xaml.XamlType.IsAmbient%2A>.</span><span class="sxs-lookup"><span data-stu-id="3a927-107"><xref:System.Windows.Markup.AmbientAttribute> is the general mechanism that can be used by XAML object writers and that typically correlates to the dedicated XAML type system properties <xref:System.Xaml.XamlMember.IsAmbient%2A> and <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
## <a name="wpf-implementations-of-iqueryambient"></a><span data-ttu-id="3a927-108">Implémentations WPF d’IQueryAmbient</span><span class="sxs-lookup"><span data-stu-id="3a927-108">WPF Implementations of IQueryAmbient</span></span>  
 <span data-ttu-id="3a927-109">Dans WPF, <xref:System.Windows.Markup.IQueryAmbient> est utilisé pour le processus de recherche de dictionnaire de ressources.</span><span class="sxs-lookup"><span data-stu-id="3a927-109">In WPF, <xref:System.Windows.Markup.IQueryAmbient> is used for the resource dictionary lookup process.</span></span> <span data-ttu-id="3a927-110">Le processus de recherche obtient successif `Resources` valeurs tout au long de l’arborescence logique WPF progresse vers la racine de l’étendue de la ressource jusqu'à ce qu’une clé est trouvée ou la clé est déterminée à n’existe ne pas dans la portée.</span><span class="sxs-lookup"><span data-stu-id="3a927-110">The lookup process gets successive `Resources` values throughout the WPF logical tree, working towards the root of the resource scope until either a key is found or the key is determined to not exist in scope.</span></span> <span data-ttu-id="3a927-111">Normalement, cela nécessiterait l’instanciation d’un <xref:System.Windows.ResourceDictionary> chaque fois pour recevoir les résultats.</span><span class="sxs-lookup"><span data-stu-id="3a927-111">Normally, doing so would require instantiating a <xref:System.Windows.ResourceDictionary> each time to receive the results.</span></span> <span data-ttu-id="3a927-112">Déclaration du contenu de `Resources` comme ambiant tant que `Resources` existe optimise ce processus de recherche.</span><span class="sxs-lookup"><span data-stu-id="3a927-112">Declaring the contents of `Resources` as ambient so long as `Resources` exists optimizes this lookup process.</span></span> <span data-ttu-id="3a927-113">Dans WPF, cette interface est implémentée dans les cas suivants :</span><span class="sxs-lookup"><span data-stu-id="3a927-113">In WPF, this interface is implemented in the following cases:</span></span>  
  
-   <span data-ttu-id="3a927-114"><xref:System.Windows.FrameworkElement> implémente <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> pour retourner `true` pour tous les noms de propriété s’il contient un existant <xref:System.Windows.ResourceDictionary> pour <xref:System.Windows.FrameworkElement.Resources%2A>, et tant que la requête n’est pas pour le <xref:System.Windows.FrameworkElement.Resources%2A> propriété proprement dite.</span><span class="sxs-lookup"><span data-stu-id="3a927-114"><xref:System.Windows.FrameworkElement> implements <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> to return `true` for all property names if it contains an existing <xref:System.Windows.ResourceDictionary> for <xref:System.Windows.FrameworkElement.Resources%2A>, and so long as the query is not for the <xref:System.Windows.FrameworkElement.Resources%2A> property itself.</span></span>  
  
-   <span data-ttu-id="3a927-115"><xref:System.Windows.Style> implémente le même modèle pour son <xref:System.Windows.Style.Resources%2A>.</span><span class="sxs-lookup"><span data-stu-id="3a927-115"><xref:System.Windows.Style> implements the same pattern for its <xref:System.Windows.Style.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="3a927-116"><xref:System.Windows.Application> implémente le même modèle pour son <xref:System.Windows.Application.Resources%2A>.</span><span class="sxs-lookup"><span data-stu-id="3a927-116"><xref:System.Windows.Application> implements the same pattern for its <xref:System.Windows.Application.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="3a927-117"><xref:System.Windows.FrameworkContentElement> implémente le même modèle pour son <xref:System.Windows.FrameworkContentElement.Resources%2A>.</span><span class="sxs-lookup"><span data-stu-id="3a927-117"><xref:System.Windows.FrameworkContentElement> implements the same pattern for its <xref:System.Windows.FrameworkContentElement.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="3a927-118"><xref:System.Windows.FrameworkTemplate> implémente le même modèle pour son <xref:System.Windows.FrameworkTemplate.Resources%2A>.</span><span class="sxs-lookup"><span data-stu-id="3a927-118"><xref:System.Windows.FrameworkTemplate> implements the same pattern for its <xref:System.Windows.FrameworkTemplate.Resources%2A>.</span></span> <span data-ttu-id="3a927-119">Il signale également <xref:System.Windows.FrameworkTemplate.Template%2A> comme ambiant mais retourne la valeur de contenu `false` si recherchant <xref:System.Windows.FrameworkTemplate.Template%2A> lui-même.</span><span class="sxs-lookup"><span data-stu-id="3a927-119">It also reports <xref:System.Windows.FrameworkTemplate.Template%2A> content as ambient but returns `false` if querying for <xref:System.Windows.FrameworkTemplate.Template%2A> itself.</span></span>  
  
-   <span data-ttu-id="3a927-120">Dans chacun de ces cas, les données pertinentes `Resources` propriété (et <xref:System.Windows.FrameworkTemplate.Template%2A>) sont attribuées en tant que <xref:System.Windows.Markup.AmbientAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3a927-120">In each of these cases, the relevant `Resources` property (and <xref:System.Windows.FrameworkTemplate.Template%2A>) are attributed as <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="3a927-121">L’utilisation classique consiste à rechercher les propriétés qui ne sont pas le <xref:System.Windows.Markup.AmbientAttribute> attribué les propriétés de l’objet qui définit l’interface.</span><span class="sxs-lookup"><span data-stu-id="3a927-121">The typical usage is to query for the properties that are NOT the <xref:System.Windows.Markup.AmbientAttribute> attributed properties of the object that defines the interface.</span></span> <span data-ttu-id="3a927-122">En d’autres termes, tant qu’il existe un dictionnaire de ressources afin de fournir la valeur au moment de l’exécution potentielle lorsque le graphique d’objet est créé, toute autre propriété en dehors du conteneur de propriété du dictionnaire de ressources peut être traitée comme ambiant.</span><span class="sxs-lookup"><span data-stu-id="3a927-122">In other words, so long as a resource dictionary exists in order to provide the potential run time value when the object graph is created, any other property besides the resource dictionary's property container can be treated as ambient.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="3a927-123">Nom de la propriété pour laquelle l'état ambiant doit être vérifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a927-123">The name of the property to check for ambience state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a927-124">Demande si une propriété nommée spécifiée peut être considérée comme ambiante dans la portée actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a927-124">Queries for whether a specified named property can be considered ambient in the current scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a927-125">
            <see langword="true" /> si la propriété demandée peut être considérée comme ambiante ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a927-125">
              <see langword="true" /> if the requested property can be considered ambient; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>