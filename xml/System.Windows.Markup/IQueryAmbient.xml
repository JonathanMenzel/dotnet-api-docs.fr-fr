<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b1419b6b996eab65fbdcda1f6ed9782df12197d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36502762" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Demande si une propriété ambiante spécifiée doit être traitée comme étant ambiante dans la portée actuelle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un mécanisme de propriété ambiante vise à améliorer les temps d’analyse en informant un writer d’objet XAML pour éviter l’instanciation de certains objets, dans le cas où il est connu que les objets sont les valeurs qui sont temporaires et inutiles pour un temps d’exécution standard application. En règle générale, les recherches XAML ou traitement XAML d’un accesseur get de propriété devez instancier ces objets pour remplir la représentation graphique d’objet avec les valeurs de prêts à l’emploi.  
  
 <xref:System.Windows.Markup.IQueryAmbient> a un seul membre : <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.  
  
 <xref:System.Windows.Markup.IQueryAmbient> est un mécanisme parallèle à <xref:System.Windows.Markup.AmbientAttribute>. <xref:System.Windows.Markup.IQueryAmbient> est le mécanisme spécialisé qui évite à l’aide de la réflexion pour déterminer les informations et peut également agir en fonction de la situation (un objet donné pourrait choisir d’indiquer `true` ou `false` pour <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), tandis que l’attribut est essentiellement statique analyse). <xref:System.Windows.Markup.AmbientAttribute> est le mécanisme général qui peut être utilisé par les writers d’objet XAML et qui correspond généralement aux propriétés de système de type XAML dédiées <xref:System.Xaml.XamlMember.IsAmbient%2A> et <xref:System.Xaml.XamlType.IsAmbient%2A>.  
  
## <a name="wpf-implementations-of-iqueryambient"></a>Implémentations WPF d’IQueryAmbient  
 Dans WPF, <xref:System.Windows.Markup.IQueryAmbient> est utilisé pour le processus de recherche de dictionnaire de ressources. Le processus de recherche obtient successif `Resources` valeurs tout au long de l’arborescence logique WPF progresse vers la racine de l’étendue de la ressource jusqu'à ce qu’une clé est trouvée ou la clé est déterminée à n’existe ne pas dans la portée. Normalement, cela nécessiterait l’instanciation d’un <xref:System.Windows.ResourceDictionary> chaque fois pour recevoir les résultats. Déclaration du contenu de `Resources` comme ambiant tant que `Resources` existe optimise ce processus de recherche. Dans WPF, cette interface est implémentée dans les cas suivants :  
  
-   <xref:System.Windows.FrameworkElement> implémente <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> pour retourner `true` pour tous les noms de propriété s’il contient un existant <xref:System.Windows.ResourceDictionary> pour <xref:System.Windows.FrameworkElement.Resources%2A>, et tant que la requête n’est pas pour le <xref:System.Windows.FrameworkElement.Resources%2A> propriété proprement dite.  
  
-   <xref:System.Windows.Style> implémente le même modèle pour son <xref:System.Windows.Style.Resources%2A>.  
  
-   <xref:System.Windows.Application> implémente le même modèle pour son <xref:System.Windows.Application.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkContentElement> implémente le même modèle pour son <xref:System.Windows.FrameworkContentElement.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkTemplate> implémente le même modèle pour son <xref:System.Windows.FrameworkTemplate.Resources%2A>. Il signale également <xref:System.Windows.FrameworkTemplate.Template%2A> comme ambiant mais retourne la valeur de contenu `false` si recherchant <xref:System.Windows.FrameworkTemplate.Template%2A> lui-même.  
  
-   Dans chacun de ces cas, les données pertinentes `Resources` propriété (et <xref:System.Windows.FrameworkTemplate.Template%2A>) sont attribuées en tant que <xref:System.Windows.Markup.AmbientAttribute>. L’utilisation classique consiste à rechercher les propriétés qui ne sont pas le <xref:System.Windows.Markup.AmbientAttribute> attribué les propriétés de l’objet qui définit l’interface. En d’autres termes, tant qu’il existe un dictionnaire de ressources afin de fournir la valeur au moment de l’exécution potentielle lorsque le graphique d’objet est créé, toute autre propriété en dehors du conteneur de propriété du dictionnaire de ressources peut être traitée comme ambiant.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nom de la propriété pour laquelle l'état ambiant doit être vérifié.</param>
        <summary>Demande si une propriété nommée spécifiée peut être considérée comme ambiante dans la portée actuelle.</summary>
        <returns><see langword="true" /> si la propriété demandée peut être considérée comme ambiante ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>