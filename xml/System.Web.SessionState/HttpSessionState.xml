<Type Name="HttpSessionState" FullName="System.Web.SessionState.HttpSessionState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="18f7affdc0f6b213b0b52cd239ff1cb01d7bf31d" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51303460" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpSessionState : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpSessionState extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.HttpSessionState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpSessionState&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSessionState sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type HttpSessionState = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Donne accès aux valeurs relatives à l'état de session, aux paramètres de niveau session et aux méthodes de gestion de la durée de vie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET fournit la gestion de l’état de session pour vous permettent de stocker des informations associées à une session de navigateur unique entre plusieurs demandes. Vous pouvez stocker une collection de valeurs référencées par un nom de clé ou par index numérique. Accès aux valeurs de session et la fonctionnalité est disponible à l’aide la <xref:System.Web.SessionState.HttpSessionState> (classe), qui est accessible via la <xref:System.Web.HttpContext.Session%2A> propriété du courant <xref:System.Web.HttpContext>, ou le <xref:System.Web.UI.Page.Session%2A> propriété de la <xref:System.Web.UI.Page>.  
  
 Données de session sont associé à une session de navigateur spécifiques à l’aide d’un identificateur unique. Par défaut, cet identificateur est stocké dans un cookie de session sans date d’expiration dans le navigateur, mais vous pouvez également configurer votre application stocke l’identificateur de session dans l’URL en affectant la `cookieless` attribut `true` ou <xref:System.Web.HttpCookieMode.UseUri> dans l’élément configuration de votre application. Vous pouvez demander à ASP.NET de déterminer si les cookies sont pris en charge par le navigateur en spécifiant une valeur de <xref:System.Web.HttpCookieMode.UseDeviceProfile> pour le `cookieless` attribut. Vous pouvez également avoir à ASP.NET de déterminer si les cookies sont activés pour le navigateur en spécifiant une valeur de <xref:System.Web.HttpCookieMode.AutoDetect> pour le `cookieless` attribut. Si les cookies sont pris en charge lorsque <xref:System.Web.HttpCookieMode.UseDeviceProfile> est spécifié, ou activés lorsque <xref:System.Web.HttpCookieMode.AutoDetect> est spécifié, la session identificateur sera stocké dans un cookie ; sinon l’identificateur de session est stocké dans l’URL.  
  
 Les sessions sont démarrées pendant la première requête et les valeurs de session sont conservées tant qu’une nouvelle requête est effectuée par le navigateur avant que le nombre de minutes spécifié dans le <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> pass de propriété. Quand une nouvelle session commence, la session <xref:System.Web.SessionState.SessionStateModule.Start> événement est déclenché. Vous pouvez utiliser cet événement pour effectuer des tâches supplémentaires au début d’une session, telles que la définition des valeurs de session par défaut. Lorsqu’une session expire, le <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> méthode est appelée, ou l’application ASP.NET est arrêtée, la session <xref:System.Web.SessionState.SessionStateModule.End> événement est déclenché. Vous pouvez utiliser cet événement pour effectuer tout nettoyage nécessaire. Le <xref:System.Web.SessionState.SessionStateModule.End> événement est déclenché uniquement lorsque l’état de session `mode` est défini sur <xref:System.Web.SessionState.SessionStateMode.InProc>.  
  
 Pour améliorer les performances, les sessions qui utilisent des cookies n’allouent pas de stockage de session jusqu'à ce que les données sont effectivement stockées dans le <xref:System.Web.UI.Page.Session%2A> objet. Pour plus d'informations, consultez la propriété <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
 État de session ne persiste pas au-delà des limites d’application ASP.NET. Si un navigateur accède à une autre application, les informations de session ne sont pas disponibles pour la nouvelle application.  
  
 Les valeurs de session sont stockées en mémoire sur le serveur Web, par défaut. Vous pouvez également stocker des valeurs de session dans une base de données SQL Server, un serveur d’état ASP.NET ou un serveur personnalisé. Cela vous permet de conserver les valeurs de session dans les cas où le processus ASP.NET ou IIS ou l’application ASP.NET redémarre et de proposer des valeurs de session sur tous les serveurs dans une batterie de serveurs Web. Ce comportement est configuré en définissant le `mode` valide l’attribut <xref:System.Web.SessionState.SessionStateMode> valeur dans l’élément de configuration de votre application. Pour plus d’informations, consultez [Modes d’état de Session](http://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4).  
  
 Alternatives à l’état de session incluent l’état de l’application (voir la <xref:System.Web.HttpApplication.Application%2A> propriété) et le cache ASP.NET (voir la <xref:System.Web.Caching> espace de noms), les variables de magasin qui sont accessible par tous les utilisateurs d’une application ASP.NET ; le profil ASP.NET (consultez le <xref:System.Web.Profile> espace de noms), ce qui rend persistantes les valeurs d’utilisateur dans un magasin de données sans date d’expiration à l’aide d’un délai d’attente ; ASP.NET <xref:System.Web.UI.WebControls?displayProperty=nameWithType>, lequel conserver les valeurs de contrôle dans le <xref:System.Web.UI.Control.ViewState%2A>; <xref:System.Web.HttpResponse.Cookies%2A>; le <xref:System.Web.HttpRequest.QueryString%2A> champs sur un formulaire HTML qui sont disponibles à partir de HTTP et propriété ; `POST` à l’aide de la <xref:System.Web.HttpRequest.Form%2A> collection. Pour plus d’informations sur les différences entre l’état de session et d’autres solutions de gestion d’état, consultez [recommandations de gestion d’état ASP.NET](http://msdn.microsoft.com/library/af79fa0d-4bc8-47a6-9915-d8e355bfb732).  
  
   
  
## Examples  
 L’exemple de code suivant définit et récupère les valeurs de l’état de session.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[HttpSessionState#30](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/session2cs.aspx#30)]
 [!code-aspx-vb[HttpSessionState#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/session2vb.aspx#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Web.Profile" />
    <altmember cref="N:System.Web.Caching" />
    <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
    <related type="Article" href="http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07">Vue d’ensemble des attaques de script</related>
  </Docs>
  <Members>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abandon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Abandon" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abandon ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abandon();" />
      <MemberSignature Language="F#" Value="member this.Abandon : unit -&gt; unit" Usage="httpSessionState.Abandon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annule la session active.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une fois la <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> méthode est appelée, la session active n’est plus valide et une nouvelle session peut être démarrée. <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> provoque le <xref:System.Web.SessionState.SessionStateModule.End> déclenchement d’événement. Un nouveau <xref:System.Web.SessionState.SessionStateModule.Start> événement sera déclenché à la prochaine demande.  
  
 Identificateurs de session pour les sessions abandonnées ou périmées sont recyclés par défaut. Autrement dit, si une demande est faite qui inclut l’identificateur de session pour une session a expiré ou abandonnée, une nouvelle session est démarrée à l’aide de la même identificateur de session. Vous pouvez le désactiver en définissant `regenerateExpiredSessionId` attribut de l’élément de configuration `true`. Pour plus d’informations, consultez [identificateurs de Session](http://msdn.microsoft.com/library/146ca206-d151-4f2e-a548-bcca05ccf0cb).  
  
 Le <xref:System.Web.SessionState.SessionStateModule.End> événement est pris en charge uniquement lorsque le <xref:System.Web.SessionState.HttpSessionState.Mode%2A> propriété est définie sur <xref:System.Web.SessionState.SessionStateMode.InProc>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="httpSessionState.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l’élément à ajouter à la collection d’état de session.</param>
        <param name="value">Valeur de l’élément à ajouter à la collection d’état de session.</param>
        <summary>Ajoute un nouvel élément à la collection des états de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le `name` paramètre fait référence à un élément d’état de session existant, l’élément existant est remplacé par le texte spécifié `value`.  
  
   
  
## Examples  
 L’exemple suivant montre comment stocker des valeurs dans l’état de session à l’aide de la <xref:System.Web.SessionState.HttpSessionState.Add%2A> (méthode). Il montre également comment supprimer des valeurs dans l’état de session à l’aide de la <xref:System.Web.SessionState.HttpSessionState.Remove%2A> (méthode). Un <xref:System.Web.UI.WebControls.Repeater> contrôle est utilisé pour afficher l’état de session du contenu sur la page Web. Le <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> méthode est utilisée pour effectuer une itération dans la collection d’état de session et de remplir le <xref:System.Web.UI.WebControls.Repeater> contrôle.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
        <related type="Article" href="http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07">Vue d’ensemble des attaques de script</related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpSessionState.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime toutes les clés et valeurs de la collection des états de session.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CodePage : int with get, set" Usage="System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’identificateur de jeu de caractères pour la session active.</summary>
        <value>Identificateur de jeu de caractères pour la session active.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jeu de caractères (page de codes) est utilisé pour interpréter les données caractères multioctets, déterminant la valeur du caractère et par conséquent, l’ordre de tri. Paramètres de page de codes s’appliquent uniquement aux données de caractères multioctets, pas aux données caractères Unicode.  
  
 Cela <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> propriété est fournie pour la compatibilité avec les versions précédentes d’ASP. Si vous n’avez pas besoin de maintenir la compatibilité descendante avec les pages ASP, utilisez le <xref:System.Web.HttpResponse.ContentEncoding%2A> propriété à la place.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Contents { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Web.SessionState.HttpSessionState" Usage="System.Web.SessionState.HttpSessionState.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à l'objet d’état de session actuel.</summary>
        <value>
          <see cref="T:System.Web.SessionState.HttpSessionState" /> actuel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.HttpSessionState.Contents%2A> propriété est fournie pour la compatibilité avec les versions précédentes d’ASP.  
  
   
  
## Examples  
 L’exemple de code suivant répertorie les noms d’élément et des valeurs dans le <xref:System.Web.SessionState.HttpSessionState.Contents%2A> propriété.  
  
 [!code-csharp[HttpSessionState#9](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#9)]
 [!code-vb[HttpSessionState#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieMode : System.Web.HttpCookieMode" Usage="System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si l’application est configurée pour les sessions sans cookies.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.HttpCookieMode" /> qui indiquent si l'application est configurée pour les sessions sans cookies. La valeur par défaut est <see cref="F:System.Web.HttpCookieMode.UseCookies" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> est `true`, le <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> retourne de la propriété <xref:System.Web.HttpCookieMode.UseUri>; sinon la <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> retourne de la propriété <xref:System.Web.HttpCookieMode.UseCookies>.  
  
   
  
## Examples  
 Le code suivant exemple définit le `cookieless` attribut session à `true` dans le fichier Web.config. Pour cet exemple de configuration d’application, le <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> propriété retournerait <xref:System.Web.HttpCookieMode.UseUri>.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="httpSessionState.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Array" /> qui reçoit les valeurs de session.</param>
        <param name="index">Index de base zéro dans <c>array</c> à partir duquel la copie commence.</param>
        <summary>Copie la collection de valeurs d’état de session dans un tableau unidimensionnel, en commençant à l’index spécifié dans le tableau.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.SessionState.HttpSessionState.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre d’éléments dans la collection d’état de session.</summary>
        <value>Nombre d’éléments dans la collection</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="httpSessionState.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un énumérateur qui peut être utilisé pour lire tous les noms de variables d’état de session dans la session active.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> qui peut itérer au sein des noms de variables de la collection d'états de session.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment stocker des valeurs dans l’état de session à l’aide de la <xref:System.Web.SessionState.HttpSessionState.Add%2A> (méthode). Il montre également comment supprimer des valeurs dans l’état de session à l’aide de la <xref:System.Web.SessionState.HttpSessionState.Remove%2A> (méthode). Un <xref:System.Web.UI.WebControls.Repeater> contrôle est utilisé pour afficher le contenu de l’état de session sur la page Web. Le <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> méthode est utilisée pour effectuer une itération dans la collection d’état de session et de remplir le <xref:System.Web.UI.WebControls.Repeater> contrôle.  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="IsCookieless">
      <MemberSignature Language="C#" Value="public bool IsCookieless { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCookieless As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCookieless { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCookieless : bool" Usage="System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'ID de session est incorporé dans l'URL ou stocké dans un cookie HTTP.</summary>
        <value>
          <see langword="true" /> si la session est incorporée à l'URL ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET identifie les sessions de manière unique chaque navigateur. Par défaut, l’identificateur unique pour une session est stocké dans un cookie de session sans date d’expiration dans le navigateur. Vous pouvez spécifier que les identificateurs de session ne pas stocké dans un cookie en définissant le `cookieless` attribut `true` dans l’élément de configuration.  
  
> [!NOTE]
>  Pour améliorer la sécurité de votre application, votre application doit autoriser les utilisateurs à se déconnecter, au point où il doit appeler la <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> (méthode). Cela réduit le risque d’une source non à l’aide de l’identificateur unique dans l’URL pour récupérer les données privées stockées dans la session d’un utilisateur.  
  
 ASP.NET gère l’état de session sans cookie en insérant automatiquement un ID de session unique dans l’URL de la page. Par exemple, l’URL suivante a été modifiée par ASP.NET pour inclure le lit3py55t21z5v55vlm25s55 d’ID de session unique :  
  
```  
http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx  
```  
  
 ASP.NET modifie les liens contenus dans toutes les pages demandées en incorporant une valeur d’ID de session dans les liens juste avant l’envoi de chaque page au navigateur. État de session est maintenu tant que l’utilisateur suit le chemin d’accès de liens qui fournit le site. Toutefois, si l’agent utilisateur réécrit une URL, l’instance de l’état de session seront perdue.  
  
 L’ID de session est incorporé dans l’URL après la barre oblique qui suit le nom de l’application et avant tout identificateur de fichier ou répertoire virtuel restante. Cela permet à ASP.NET de résoudre le nom de l’application avant d’impliquer le <xref:System.Web.SessionState.SessionStateModule> dans la demande.  
  
 Par défaut, les identificateurs de session utilisés dans les sessions sans cookies sont recyclés. Autrement dit, si une demande est effectuée avec un ID de session qui a expiré, une nouvelle session est démarrée à l’aide de l’ID de session fourni avec la requête. Ce comportement peut entraîner le partage indésirable des données de session lorsqu’un lien qui contient un ID de session sans cookie est partagé par plusieurs navigateurs, par exemple via un moteur de recherche ou un autre programme. Vous pouvez réduire le risque de données de session partagés par plusieurs clients en désactivant le recyclage des identificateurs de session. Pour ce faire, définissez la `regenerateExpiredSessionId` attribut de l’élément de configuration `true`. Ainsi, un nouvel ID de session généré lorsqu’une demande de session sans cookie est effectuée avec un ID de session a expiré. Notez que si la demande effectuée avec l’ID de session expiré utilise le protocole HTTP `POST` (méthode), toutes les données publiées seront perdues lorsque `regenerateExpiredSessionId` est `true`, comme ASP.NET effectue une redirection pour garantir que le navigateur a le nouvel identificateur de session dans l’URL.  
  
> [!NOTE]
>  En configurant le `regenerateExpiredSessionId` attribut `true` réduit la possibilité de partage indésirable des données de session, il ne protège pas contre une source non l’accès à la session d’un autre utilisateur en obtenant la <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur et inclure dans les demandes au serveur. Si vous stockez des informations privées ou sensibles dans l’état de session, il est recommandé d’utiliser SSL pour chiffrer toutes les communications entre le navigateur et le serveur qui inclut le <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
   
  
## Examples  
 Le code suivant exemple définit le `cookieless` attribut session sur true dans le fichier Web.config.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="IsNewSession">
      <MemberSignature Language="C#" Value="public bool IsNewSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewSession { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNewSession : bool" Usage="System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la session a été créée avec la demande en cours.</summary>
        <value>
          <see langword="true" /> si la session a été créée avec la demande en cours ; sinon <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la session est en lecture seule.</summary>
        <value>
          <see langword="true" /> si la session est en lecture seule ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'accès à la collection de valeurs d'état de session est synchronisé (thread-safe).</summary>
        <value>
          <see langword="true" /> si l’accès à la collection est synchronisé (thread-safe) ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient ou définit des valeurs de session individuelles.</summary>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Web.SessionState.HttpSessionState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index numérique de la valeur de la session.</param>
        <summary>Obtient ou définit une valeur de session par index numérique.</summary>
        <value>Valeur d'état de session stockée à l'index spécifié, ou <see langword="null" /> si l'élément n'existe pas.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.SessionState.HttpSessionState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom de clé de la valeur de session.</param>
        <summary>Obtient ou définit une valeur de session par nom.</summary>
        <value>Valeur d'état de session avec le nom spécifié, ou <see langword="null" /> si l'élément n'existe pas.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ Keys { System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" Usage="System.Web.SessionState.HttpSessionState.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection des clés de toutes les valeurs stockées dans la collection des états de session.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> contenant toutes les clés de la session.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int with get, set" Usage="System.Web.SessionState.HttpSessionState.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’identificateur de paramètres régionaux (LCID) de la session active.</summary>
        <value>Instance de <see cref="T:System.Globalization.CultureInfo" /> indiquant la culture de la session en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.HttpSessionState.LCID%2A> propriété est fournie pour la compatibilité avec les versions précédentes d’ASP. Si vous n’avez pas besoin de maintenir la compatibilité descendante avec les pages ASP, utilisez le <xref:System.Globalization.CultureInfo.LCID%2A> propriété à la place.  
  
 ASP.NET ne stocke pas d’identificateur de paramètres régionaux dans l’état de session. Le <xref:System.Web.SessionState.HttpSessionState.LCID%2A> accès de propriété le <xref:System.Globalization.CultureInfo.LCID%2A> propriété pour obtenir et définir l’identificateur.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.SessionStateMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SessionState.SessionStateMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As SessionStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::SessionStateMode Mode { System::Web::SessionState::SessionStateMode get(); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Web.SessionState.SessionStateMode" Usage="System.Web.SessionState.HttpSessionState.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le mode d’état de session actuel.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.SessionState.SessionStateMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur la façon de configurer votre serveur pour <xref:System.Web.SessionState.SessionStateMode.StateServer> ou <xref:System.Web.SessionState.SessionStateMode.SQLServer> stockage de l’état de session, consultez [ASP.NET Session State Overview](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc).  
  
   
  
## Examples  
 Le code suivant exemple définit le `mode` attribut session à <xref:System.Web.SessionState.SessionStateMode.SQLServer> dans le fichier Web.config. Pour le mode de session SQL Server, le `sqlConnectionString` attribut est également requis.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="SQLServer"  
      sqlConnectionString="Data Source=localhost;Integrated Security=SSPI"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de Session ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="httpSessionState.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l’élément à supprimer de la collection d’état de session.</param>
        <summary>Supprime un élément de la collection d’état de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la collection d’état de session ne contient pas d’élément avec la valeur `name`, la collection demeure inchangée. Aucune exception n'est levée.  
  
   
  
## Examples  
 L’exemple suivant montre comment stocker des valeurs dans l’état de session à l’aide de la <xref:System.Web.SessionState.HttpSessionState.Add%2A> (méthode). Il montre également comment supprimer des valeurs dans l’état de session à l’aide de la <xref:System.Web.SessionState.HttpSessionState.Remove%2A> (méthode). Un <xref:System.Web.UI.WebControls.Repeater> contrôle est utilisé pour afficher le contenu de l’état de session sur la page Web. Le <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> méthode est utilisée pour effectuer une itération dans la collection d’état de session et de remplir le <xref:System.Web.UI.WebControls.Repeater> contrôle.  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="httpSessionState.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime toutes les clés et valeurs de la collection des états de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.HttpSessionState.RemoveAll%2A> effectue la même fonction que <xref:System.Web.SessionState.HttpSessionState.Clear%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="httpSessionState.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Nom de l’élément à supprimer de la collection d’état de session.</param>
        <summary>Supprime de la collection d'états de session un élément situé à un index spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> est inférieur à zéro.  
  
\- ou - 
 <paramref name="index" /> est supérieur ou égal à <see cref="P:System.Web.SessionState.HttpSessionState.Count" />.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="SessionID">
      <MemberSignature Language="C#" Value="public string SessionID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionID : string" Usage="System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’identificateur unique de la session.</summary>
        <value>Identificateur de session unique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> propriété est utilisée pour identifier de manière unique un navigateur avec les données de session sur le serveur. Le <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur est aléatoire généré par ASP.NET et stockée dans un cookie de session sans date d’expiration dans le navigateur. Le <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur est ensuite transmise dans un cookie avec chaque demande à l’application ASP.NET.  
  
 Si vous souhaitez désactiver l’utilisation des cookies dans votre application ASP.NET et assurez-vous de toujours utiliser d’état de session, vous pouvez configurer votre application stocke l’identificateur de session dans l’URL au lieu d’un cookie en affectant la `cookieless` attribut de la configuration élément à `true`, ou <xref:System.Web.HttpCookieMode.UseUri>, dans le fichier Web.config pour votre application. Vous pouvez demander à ASP.NET de déterminer si les cookies sont pris en charge par le navigateur en spécifiant une valeur de <xref:System.Web.HttpCookieMode.UseDeviceProfile> pour le `cookieless` attribut. Vous pouvez également avoir à ASP.NET de déterminer si les cookies sont activés pour le navigateur en spécifiant une valeur de <xref:System.Web.HttpCookieMode.AutoDetect> pour le `cookieless` attribut. Si les cookies sont pris en charge lorsque <xref:System.Web.HttpCookieMode.UseDeviceProfile> est spécifié, ou activés lorsque <xref:System.Web.HttpCookieMode.AutoDetect> est spécifié, la session identificateur sera stocké dans un cookie ; sinon l’identificateur de session est stocké dans l’URL. Pour plus d'informations, consultez la propriété <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>.  
  
 Le <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> est envoyé entre le serveur et le navigateur en texte clair, soit dans un cookie ou dans l’URL. Par conséquent, une source non pourrait accéder à la session d’un autre utilisateur en obtenant la <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur et en l’incluant dans les demandes au serveur. Si vous stockez des informations privées ou sensibles dans l’état de session, il est recommandé d’utiliser SSL pour chiffrer toutes les communications entre le navigateur et le serveur qui inclut le <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
 Lorsque vous utilisez l’état de session basée sur les cookies, ASP.NET n’alloue pas de stockage pour les données de session jusqu'à ce que le <xref:System.Web.UI.Page.Session%2A> objet est utilisé. Par conséquent, un nouvel ID de session est généré pour chaque demande de page jusqu'à ce que l’objet de session est accessible. Si votre application nécessite un ID de session statique pour la session entière, vous pouvez implémenter la `Session_Start` méthode dans le fichier Global.asax de l’application et stocke les données dans le <xref:System.Web.UI.Page.Session%2A> pour résoudre l’ID de session de l’objet, ou vous pouvez utiliser le code dans une autre partie de votre application pour stocker explicitement les données dans le <xref:System.Web.UI.Page.Session%2A> objet.  
  
 Si votre application utilise l’état de session sans cookie, l’ID de session est généré sur la première vue de page et est conservé pour la session entière.  
  
   
  
## Examples  
 L’exemple de code suivant montre un fichier Web.config qui configure l’état de session pour utiliser des identificateurs de session sans cookie. Pour plus d'informations, consultez la propriété <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticObjects : System.Web.HttpStaticObjectsCollection" Usage="System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection d'objets déclarés par des balises <see langword="&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;" /> dans le fichier Global.asax de l'application ASP.NET.</summary>
        <value>
          <see cref="T:System.Web.HttpStaticObjectsCollection" /> contenant des objets déclarés dans le fichier Global.asax.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un objet sur une page ne prend pas en charge la sérialisation et <xref:System.Web.SessionState.HttpSessionState.Mode%2A> est out-of-process (<xref:System.Web.SessionState.SessionStateMode.SQLServer> ou <xref:System.Web.SessionState.SessionStateMode.StateServer>), l’objet ne sera pas créé et ne sera pas ajouté à cette collection.  
  
 Le <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> propriété est fournie pour la compatibilité avec les versions précédentes d’ASP.  
  
   
  
## Examples  
 Le code suivant exemple listes le `id` et type d’objet des objets dans le <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> collection.  
  
 [!code-csharp[HttpSessionState#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#10)]
 [!code-vb[HttpSessionState#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à la collection de valeurs d’état de session.</summary>
        <value>Objet permettant de synchroniser l’accès à la collection.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient et définit le délai (en minutes) autorisé entre les demandes pour que le fournisseur de l'état de session termine la session.</summary>
        <value>Délai d’attente, en minutes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> propriété peut être définie dans le fichier Web.config pour une application qui utilise le `timeout` attribut de l’élément de configuration, ou vous pouvez définir le <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> directement à l’aide de code de l’application de valeur de propriété.  
  
 Le <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> propriété ne peut pas être définie sur une valeur supérieure à 525 600 minutes (1 an). La valeur par défaut est de 20 minutes.  
  
   
  
## Examples  
 Le code suivant exemple définit le `timeout` attribut de session à 30 minutes dans le fichier Web.config.  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Vue d’ensemble de l’état de session</related>
      </Docs>
    </Member>
  </Members>
</Type>