<Type Name="IHttpSessionState" FullName="System.Web.SessionState.IHttpSessionState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5fcd8abb9eb672b289bd1d0d49a9263735df0d39" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550053" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IHttpSessionState" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpSessionState" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.IHttpSessionState" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpSessionState" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHttpSessionState" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Définit le contrat implémentant un conteneur d'état de session personnalisé.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un conteneur d’état de session permet d’accéder aux valeurs d’état de session et des informations associées pour la session active. Informations de session incluses dans un conteneur d’état de session sont exposées au code d’application via le <xref:System.Web.SessionState.HttpSessionState> à l’aide de la classe le <xref:System.Web.HttpContext.Session%2A> propriété. La <xref:System.Web.SessionState.HttpSessionState> classe est une classe wrapper pour un conteneur d’état de session.  
  
 L’implémentation d’un conteneur d’état de session ASP.NET est la <xref:System.Web.SessionState.HttpSessionStateContainer> classe. Au début d’une demande, au cours de la <xref:System.Web.HttpApplication.AcquireRequestState> événement, le <xref:System.Web.SessionState.SessionStateModule> crée et remplit une <xref:System.Web.SessionState.HttpSessionStateContainer> de l’objet et l’assigne à actuel <xref:System.Web.HttpContext>. À la fin d’une requête, au cours de la <xref:System.Web.HttpApplication.ReleaseRequestState> événement, le <xref:System.Web.SessionState.SessionStateModule> récupère le <xref:System.Web.SessionState.HttpSessionStateContainer> objet à partir du <xref:System.Web.HttpContext> et exécute tout travail de session requis, par exemple écrire les valeurs de session dans le magasin de session ou abandonner le session. Si la demande est brusquement interrompue, par exemple via une redirection, le <xref:System.Web.SessionState.SessionStateModule> exécute le même nettoyage en appelant le <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> (méthode).  
  
 Pour créer un conteneur d’état de session personnalisé, créez une classe qui implémente le <xref:System.Web.SessionState.IHttpSessionState> interface. Si vous créez votre propre conteneur d’état de session personnalisé, vous devez également remplacer la <xref:System.Web.SessionState.SessionStateModule> avec votre propre module personnalisé. Votre module personnalisé crée une instance de votre conteneur d’état de session personnalisé et ajouter à en cours <xref:System.Web.HttpContext> à l’aide de la <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> (méthode). Un exemple de module d’état de session personnalisé est inclus dans le <xref:System.Web.SessionState.SessionStateUtility> vue d’ensemble de la classe.  
  
   
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState> interface permettant de créer une nouvelle classe de conteneur d’état de session nommée `MySessionState`.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#1)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abandon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.Abandon" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abandon ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abandon();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Achève la session en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.IHttpSessionState.Abandon%2A> méthode est utilisée pour supprimer les données de session et à déclencher le **Session_OnEnd** événement défini dans le fichier Global.asax de l’application ASP.NET.  
  
   
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.Abandon%2A> méthode de la <xref:System.Web.SessionState.IHttpSessionState> interface. L’exemple de code duplique le comportement de la <xref:System.Web.SessionState.HttpSessionStateContainer> classe dans la mesure où il ajoute une <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> propriété a la valeur `true` lors de la <xref:System.Web.SessionState.IHttpSessionState.Abandon%2A> méthode est appelée. Le <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> propriété est vérifiée par le module d’état de session au cours de la <xref:System.Web.HttpApplication.ReleaseRequestState> événement pour déterminer si la session a été abandonnée, et le module d’état de session efface les données de session et exécute le **Session_OnEnd** événement.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#8)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l’élément à ajouter à la collection d’état de session.</param>
        <param name="value">Valeur de l’élément à ajouter à la collection d’état de session.</param>
        <summary>Ajoute un nouvel élément à la collection des états de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.Add%2A> méthode de la <xref:System.Web.SessionState.IHttpSessionState> interface pour ajouter une nouvelle valeur de l’élément à la collection d’éléments d’état de session interne.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#15)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime toutes les valeurs de la collection d'élément d'états de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.IHttpSessionState.Clear%2A> effectue la même fonction que <xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>.  
  
   
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.Clear%2A> méthode de la <xref:System.Web.SessionState.IHttpSessionState> interface pour supprimer tous les éléments à partir d’une collection d’éléments d’état de session interne.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#18)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'identificateur de page de codes de la session en cours.</summary>
        <value>Identificateur de page de codes de la session en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jeu de caractères (page de codes) est utilisé pour interpréter les données caractères multioctets, déterminant la valeur du caractère et par conséquent, l’ordre de tri. Paramètres de la page de codes s’appliquent uniquement aux données caractères multioctets, pas aux données caractères Unicode.  
  
 Cela <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> propriété est fournie pour la compatibilité avec les versions précédentes d’ASP. Si vous n’avez pas besoin de maintenir la compatibilité descendante avec les pages ASP, utilisez la <xref:System.Text.Encoding.CodePage%2A> propriété de la <xref:System.Web.HttpResponse.ContentEncoding%2A> propriété à la place.  
  
   
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface pour obtenir et définir l’encodage pour la réponse actuelle.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#10)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si l’application est configurée pour les sessions sans cookies.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.HttpCookieMode" /> qui indiquent si l'application est configurée pour les sessions sans cookies. La valeur par défaut est <see cref="F:System.Web.HttpCookieMode.UseCookies" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.IHttpSessionState.CookieMode%2A> propriété retourne un <xref:System.Web.HttpCookieMode> valeur d’énumération qui est basée sur la valeur de la `cookieless` attribut de la <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> élément de configuration. Si le `cookieless` attribut a la valeur `true`, le <xref:System.Web.SessionState.IHttpSessionState.CookieMode%2A> propriété renvoie <xref:System.Web.HttpCookieMode.UseUri>; sinon, le <xref:System.Web.SessionState.IHttpSessionState.CookieMode%2A> propriété renvoie <xref:System.Web.HttpCookieMode.UseCookies>.  
  
   
  
## Examples  
 Le code suivant exemple définit le `cookieless` attribut de la [sessionState, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) élément à `true` dans le fichier Web.config pour modifier le <xref:System.Web.SessionState.IHttpSessionState.CookieMode%2A> propriété. Pour cet exemple de configuration d’application, le <xref:System.Web.SessionState.IHttpSessionState.CookieMode%2A> propriété <xref:System.Web.HttpCookieMode.UseUri>.  
  
```  
<configuration>  
  <system.web>  
    <sessionState  
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Array" /> qui reçoit les valeurs de session.</param>
        <param name="index">Index dans <c>array</c> à partir duquel la copie commence.</param>
        <summary>Copie la collection de valeurs d'éléments d'état de session dans un tableau unidimensionnel, en commençant à l'index spécifié du tableau.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.CopyTo%2A> méthode de la <xref:System.Web.SessionState.IHttpSessionState> interface pour copier les valeurs d’élément d’état de session dans un tableau.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#22)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre d'éléments de la collection d'éléments d'états de session.</summary>
        <value>Nombre d'éléments de la collection d'éléments d'états de session.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.Count%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface pour retourner le nombre d’éléments dans la collection d’éléments d’état de session interne.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#19)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un énumérateur pouvant être utilisé pour lire toutes les valeurs d'éléments d'états de session de la session en cours.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> qui peut itérer au sein des valeurs de la collection d'éléments d'états de session.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.GetEnumerator%2A> méthode de la <xref:System.Web.SessionState.IHttpSessionState> interface pour retourner un énumérateur pour la collection d’éléments d’état de session interne.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#21](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#21)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCookieless">
      <MemberSignature Language="C#" Value="public bool IsCookieless { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.IsCookieless" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCookieless As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCookieless { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'ID de session est incorporé dans l'URL ou stocké dans un cookie HTTP.</summary>
        <value>
          <see langword="true" /> si la session est incorporée à l'URL ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur les sessions sans cookies, consultez [identificateurs de Session](http://msdn.microsoft.com/library/146ca206-d151-4f2e-a548-bcca05ccf0cb).  
  
   
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.IsCookieless%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#6)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNewSession">
      <MemberSignature Language="C#" Value="public bool IsNewSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.IsNewSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewSession { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la session a été créée avec la demande en cours.</summary>
        <value>
          <see langword="true" /> si la session a été créée avec la demande en cours ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.IsNewSession%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#4)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la session est en lecture seule.</summary>
        <value>
          <see langword="true" /> si la session est en lecture seule ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 État de session est définie en lecture seule en définissant le <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribut de page à `ReadOnly`.  
  
   
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.IsReadOnly%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface pour retourner la valeur d’une variable interne qui a été définie dans le constructeur.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#24](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#24)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'accès à la collection de valeurs d'état de session est synchronisé (thread-safe).</summary>
        <value>
          <see langword="true" /> si l'accès à la collection est synchronisé (thread-safe) ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.IsSynchronized%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#25](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#25)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient ou définit des valeurs d'éléments d'états de session individuels.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index numérique de la valeur de l'élément d'état de session.</param>
        <summary>Obtient ou définit une valeur d'élément d'état de session par index numérique.</summary>
        <value>Valeur de l'élément d'état de session spécifiée dans le paramètre <paramref name="index" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.Item%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface pour stocker et retourner une valeur de l’élément d’état de session dictionnaire interne par index numérique.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#14)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom clé de la valeur de l'élément d'état de session.</param>
        <summary>Obtient ou définit une valeur d'élément d'état de session par nom.</summary>
        <value>Valeur de l'élément d'état de session spécifiée dans le paramètre <paramref name="name" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.Item%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface pour stocker et retourner une valeur de l’élément d’état de session dictionnaire interne par son nom de clé.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#13)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ Keys { System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection des clés de toutes les valeurs stockées dans la collection d'éléments d'états de session.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> contenant toutes les clés des éléments de session.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.Keys%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface pour retourner une collection de noms de clé d’élément d’état de session à partir de la collection d’éléments d’état de session interne.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#20)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’identificateur de paramètres régionaux (LCID) de la session active.</summary>
        <value>Instance de <see cref="T:System.Globalization.CultureInfo" /> indiquant la culture de la session en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela `LCID` propriété est fournie pour la compatibilité avec les versions précédentes d’ASP. Si vous n’avez pas besoin de maintenir la compatibilité descendante avec les pages ASP, utilisez le <xref:System.Globalization.CultureInfo.LCID%2A> propriété à la place.  
  
 ASP.NET ne stocke pas l’identificateur de paramètres régionaux dans l’état de session. Le <xref:System.Web.SessionState.IHttpSessionState.LCID%2A> propriété appelle le <xref:System.Globalization.CultureInfo.LCID%2A> pour obtenir et définir l’identificateur.  
  
   
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.LCID%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface pour obtenir et définir l’identificateur de paramètres régionaux pour la page actuelle.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#9)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.SessionStateMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SessionState.SessionStateMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As SessionStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::SessionStateMode Mode { System::Web::SessionState::SessionStateMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le mode d’état de session actuel.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.SessionState.SessionStateMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur les différents modes d’état de session, consultez [Modes d’état de Session](http://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4).  
  
   
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.Mode%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#5)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l'élément à supprimer de la collection d'éléments d'états de session.</param>
        <summary>Supprime un élément de la collection d'éléments d'états de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.Remove%2A> méthode de la <xref:System.Web.SessionState.IHttpSessionState> interface pour supprimer un élément d’état de session à partir de la collection d’éléments d’état de session par le nom de la clé.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#16)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime toutes les valeurs de la collection d'élément d'états de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A> effectue la même fonction que <xref:System.Web.SessionState.IHttpSessionState.Clear%2A>.  
  
   
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A> méthode de la <xref:System.Web.SessionState.IHttpSessionState> interface pour supprimer tous les éléments à partir d’une collection d’éléments d’état de session interne.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#18)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Nom de l’élément à supprimer de la collection d’état de session.</param>
        <summary>Supprime de la collection d'éléments d'états de session un élément situé à un index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.RemoveAt%2A> méthode de la <xref:System.Web.SessionState.IHttpSessionState> interface pour supprimer un élément d’état de session à partir de la collection d’éléments d’état de session interne par index numérique.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#17)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionID">
      <MemberSignature Language="C#" Value="public string SessionID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.SessionID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'identificateur de session unique pour la session.</summary>
        <value>ID de session.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.SessionID%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#3)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection d'objets déclarés par des balises <see langword="&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;" /> dans le fichier Global.asax de l'application ASP.NET.</summary>
        <value>
          <see cref="T:System.Web.HttpStaticObjectsCollection" /> contenant des objets déclarés dans le fichier Global.asax.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `StaticObjects` est fourni pour des raisons de compatibilité avec les versions précédentes d'ASP.  
  
   
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.StaticObjects%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#12)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à la collection de valeurs d’état de session.</summary>
        <value>Objet permettant de synchroniser l’accès à la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.SyncRoot%2A> propriété à retourner une copie de l’objet actuel qui implémente le <xref:System.Web.SessionState.IHttpSessionState> interface.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#23)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient et définit le délai (en minutes) autorisé entre demandes pour que le fournisseur de l'état de session termine la session.</summary>
        <value>Délai d’attente, en minutes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.SessionState.IHttpSessionState.Timeout%2A> propriété de la <xref:System.Web.SessionState.IHttpSessionState> interface pour obtenir et définir la valeur de délai d’expiration de session est stockée dans une variable interne créée dans le constructeur de classe.  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#2)]
 [!code-vb[System.Web.SessionState.IHttpSessionState#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>