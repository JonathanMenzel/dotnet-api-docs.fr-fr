<Type Name="SessionStateStoreProviderBase" FullName="System.Web.SessionState.SessionStateStoreProviderBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb76d941854b8efa56af7434c73ffd2d4e7d6500" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550963" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionStateStoreProviderBase extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateStoreProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionStateStoreProviderBase&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateStoreProviderBase abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit les membres d'un fournisseur d'état de session requis pour un magasin de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 État de session ASP.NET lit et écrit le fournisseur de magasin de données de session dans un magasin de données à l’aide d’un état de session. Un fournisseur de magasin d’état de session est une classe qui hérite de la <xref:System.Web.SessionState.SessionStateStoreProviderBase> classe abstraite et substitue ses membres par les implémentations spécifiques aux données stockent. Le fournisseur de magasins d’état de session est appelé par la <xref:System.Web.SessionState.SessionStateModule> classe pendant le traitement d’une page ASP.NET pour communiquer avec le magasin de données pour le stockage et la récupération des variables de session et les informations de session associées telles que la valeur de délai d’attente.  
  
 Les données de session de chaque application ASP.NET sont stockées séparément pour chaque <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> propriété. Les applications ASP.NET ne partagent pas de données de session.  
  
 Vous pouvez spécifier des <xref:System.Web.SessionState.SessionStateStoreProviderBase> mise en œuvre d’une application ASP.NET en définissant le `mode` attribut de la `sessionState` élément de configuration <xref:System.Web.SessionState.SessionStateMode.Custom> et le `customProvider` attribut pour le nom du fournisseur personnalisé, comme indiqué dans l’exemple de cette rubrique.  
  
## <a name="locking-session-store-data"></a>Verrouiller les données du magasin de Session  
 Étant donné que les applications ASP.NET sont multithreads pour prendre en charge de répondre à plusieurs demandes simultanées, il est possible de demandes simultanées peuvent tenter d’accéder aux mêmes informations de session. Considérez un scénario où plusieurs frames dans un jeu de cadres tous les accèdent à la même application. Les demandes distinctes pour chaque frame du jeu de cadres peuvent être exécutées sur le serveur Web simultanément sur des threads différents. Si les pages ASP.NET de chaque source de frame accéder aux variables d’état de session, vous pouvez avoir plusieurs threads accèdent simultanément à la banque de session.  
  
 Pour éviter les collisions de données dans le magasin de session et le comportement d’état de session inattendu, les <xref:System.Web.SessionState.SessionStateModule> et <xref:System.Web.SessionState.SessionStateStoreProviderBase> classes incluent des fonctionnalités de verrouillage qui verrouillent exclusivement l’élément du magasin de session pour une session particulière pendant la durée de la exécution d’une page ASP.NET. Notez que même si le <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribut est marqué comme `ReadOnly`, les autres pages ASP.NET dans la même application peuvent être en mesure d’écrire dans le magasin de session, afin de verrouiller les données à une demande de données à partir du magasin peuvent finir toujours en attente de session en lecture seule libérée.  
  
 Un verrou est défini sur les données de magasin de session au début de la demande, dans l’appel à la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> (méthode). Lorsque la demande est terminée, le verrou est libéré au cours de l’appel à la <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> (méthode).  
  
 Si le <xref:System.Web.SessionState.SessionStateModule> objet rencontre des données de session verrouillées pendant l’appel à la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> ou <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> (méthode), il va redemander les données de session à des intervalles de demi-seconde tant que le verrou soit libéré ou que le temps qui le les données de session a été verrouillées dépasse la valeur de la <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> propriété. Si le délai d’attente d’exécution est dépassée, le <xref:System.Web.SessionState.SessionStateModule> objet appellera la <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> méthode pour libérer les données de magasin de session et demander les données de magasin de session à ce moment-là.  
  
 Étant donné que le magasin de session les données ont été libérées par un appel à la <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> méthode sur un thread distinct, avant l’appel à la <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> méthode pour la réponse actuelle, peut être tenté de définir et libérer des données de magasin d’état de session qui a déjà publié et modifié par une autre session. Pour éviter cette situation, le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> et <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> méthodes retournent un identificateur de verrou. Cet identificateur de verrou doit être inclus dans chaque demande pour modifier les données de magasin de session verrouillées. Magasin de session de données sont modifiées uniquement si l’identificateur de verrou dans le magasin de données correspond à l’identificateur de verrou fourni par le <xref:System.Web.SessionState.SessionStateModule>.  
  
## <a name="deleting-expired-session-store-data"></a>La suppression des données de magasin de Session a expiré  
 Lorsque le <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> méthode est appelée pour une session particulière, les données de la session sont supprimées du magasin de données à l’aide la <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> méthode ; sinon, les données restent dans le magasin de données de session pour les futures demandes du serveur pour la session. C’est à le <xref:System.Web.SessionState.SessionStateStoreProviderBase> implémentation permet de supprimer les données de session a expiré.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 L’exemple de code suivant montre le fichier Web.config pour une application ASP.NET qui est configuré pour utiliser un fournisseur de magasin d’état de session personnalisé.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="OdbcSessionServices" connectionString="DSN=SessionState;" />  
  </connectionStrings>  
  
  <system.web>  
    <sessionState   
      mode="Custom"  
      customProvider="OdbcSessionProvider">  
      <providers>  
        <add name="OdbcSessionProvider"  
             type="Samples.AspNet.Session.OdbcSessionStateStore"  
             connectionStringName="OdbcSessionServices" />  
      </providers>  
    </sessionState>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionStateStoreProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionStateStoreProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous n'êtes pas obligé d’implémenter un constructeur pour une classe qui hérite de la <xref:System.Web.SessionState.SessionStateStoreProviderBase> classe abstraite. Valeurs d’initialisation d’un <xref:System.Web.SessionState.SessionStateStoreProviderBase> implémentation sont passés à la <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> implémentation de méthode.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewStoreData">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData CreateNewStoreData(class System.Web.HttpContext context, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewStoreData (context As HttpContext, timeout As Integer) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ CreateNewStoreData(System::Web::HttpContext ^ context, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> pour la requête actuelle.</param>
        <param name="timeout">Valeur <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> d'état de session pour le nouveau <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</param>
        <summary>Crée un nouvel objet <see cref="T:System.Web.SessionState.SessionStateStoreData" /> à utiliser pour la demande actuelle.</summary>
        <returns>Nouveau <see cref="T:System.Web.SessionState.SessionStateStoreData" /> pour la demande en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.SessionStateModule> les appels de l’objet le <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> méthode au début d’une demande pour une page ASP.NET, pendant le <xref:System.Web.HttpApplication.AcquireRequestState> événement. Le <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> méthode est appelée si :  
  
-   la demande entrante ne contient aucun ID de session, ou  
  
-   la demande entrante a un ID de session, mais la session est introuvable dans le magasin de données.  
  
 Le <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> méthode crée un nouvel <xref:System.Web.SessionState.SessionStateStoreData> objet avec vide <xref:System.Web.SessionState.ISessionStateItemCollection> objet, un <xref:System.Web.HttpStaticObjectsCollection> collection et spécifié `timeout` valeur. Le <xref:System.Web.HttpStaticObjectsCollection> collection pour l’application ASP.NET peut être récupérée à l’aide de la <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> (méthode).  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUninitializedItem">
      <MemberSignature Language="C#" Value="public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateUninitializedItem(class System.Web.HttpContext context, string id, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateUninitializedItem (context As HttpContext, id As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateUninitializedItem(System::Web::HttpContext ^ context, System::String ^ id, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> pour la requête actuelle.</param>
        <param name="id">
          <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> pour la requête actuelle.</param>
        <param name="timeout">
          <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> de la session pour la demande en cours.</param>
        <summary>Ajoute un nouvel élément d'état de session au magasin de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> méthode est utilisée avec les sessions lors de la `cookieless` et `regenerateExpiredSessionId` attributs sont tous deux `true`. Ayant la `regenerateExpiredSessionId attribute` la valeur `true` provoque la <xref:System.Web.SessionState.SessionStateModule> pour générer un nouvel objet <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur lorsque expiré <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur est rencontrée.  
  
 Le processus de génération d’une nouvelle <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur requiert la redirection du navigateur vers une URL qui contient le nouvellement généré <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur. Le <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> méthode est appelée pendant la demande initiale contenant expiré <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur. Après le <xref:System.Web.SessionState.SessionStateModule> objet acquiert un nouvel <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur pour remplacer la valeur expirée, il appelle la <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> méthode pour ajouter une entrée non initialisée au magasin de données d’état de session. Le navigateur est ensuite redirigé vers l’URL contenant généré récemment <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur. L’existence de l’entrée non initialisée dans le magasin de données de session garantit que la demande redirigée qui inclut le nouvellement généré <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur n’est pas prise pour une demande pour une session a expiré et, au lieu de cela, traitée comme une nouvelle session.  
  
 L’entrée non initialisée dans le magasin de données de session est associée avec généré récemment <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valeur et contient uniquement des valeurs par défaut, notamment une date d’expiration et l’heure et une valeur qui correspond à la `actionFlags` paramètre de la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>et <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> méthodes. L’entrée non initialisée dans le magasin d’état de session doit inclure un `actionFlags` valeur égale à la <xref:System.Web.SessionState.SessionStateActions.InitializeItem> valeur d’énumération. Cette valeur est passée à la <xref:System.Web.SessionState.SessionStateModule> de l’objet par le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> et <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> méthodes et informe le <xref:System.Web.SessionState.SessionStateModule> objet la session active est un nouvelle, mais non initialisé la session. Le <xref:System.Web.SessionState.SessionStateModule> objet ensuite initialiser la nouvelle session et déclenchera le `Session_OnStart` événement.  
  
 Pour plus d’informations sur les sessions sans cookies, consultez le <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> propriété.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par l'implémentation <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType> méthode est appelée lorsque le <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType> méthode s’exécute à la fermeture du domaine d’application. Les classes qui héritent le <xref:System.Web.SessionState.SessionStateStoreProviderBase> classe peut utiliser cette méthode pour libérer les ressources n’est plus en cours d’utilisation.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public abstract void EndRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndRequest(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> pour la requête actuelle.</param>
        <summary>Appelé par l'objet <see cref="T:System.Web.SessionState.SessionStateModule" /> à la fin d'une demande.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.SessionStateModule> les appels de l’objet le <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> méthode à la fin d’une demande pour une page ASP.NET, pendant le <xref:System.Web.HttpApplication.EndRequest> événement. Vous pouvez utiliser la <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> méthode à exécuter le nettoyage par demande requis par votre fournisseur de magasin d’état de session.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItem(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItem(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan&amp;" RefType="out" />
        <Parameter Name="lockId" Type="System.Object&amp;" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> pour la requête actuelle.</param>
        <param name="id">
          <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> pour la requête actuelle.</param>
        <param name="locked">Lorsque cette méthode est retournée, elle contient une valeur booléenne <see langword="true" /> si l'élément de session demandé est verrouillé au niveau du magasin de données de session ; sinon, <see langword="false" />.</param>
        <param name="lockAge">Lorsque cette méthode est retournée, elle contient un objet <see cref="T:System.TimeSpan" /> dont la valeur est le temps pendant lequel un élément du magasin de données de session est resté verrouillé.</param>
        <param name="lockId">Lorsque cette méthode est retournée, elle contient un objet dont a valeur est l'identificateur de verrou de la demande en cours. Pour plus d'informations sur l'identificateur de verrou, consultez « Verrouiller les données du magasin de session » dans le résumé de la classe <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</param>
        <param name="actions">Lorsque cette méthode est retournée, elle contient l'une des valeurs <see cref="T:System.Web.SessionState.SessionStateActions" />, indiquant si la session en cours est une session non initialisée, sans cookie.</param>
        <summary>Retourne des données d'état de session en lecture seule du magasin de données de session.</summary>
        <returns>
          <see cref="T:System.Web.SessionState.SessionStateStoreData" /> rempli avec les valeurs et les informations de session provenant du magasin de données de session.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.SessionStateModule> les appels de l’objet le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> méthode au début d’une requête, au cours de la <xref:System.Web.HttpApplication.AcquireRequestState> événement, lorsque le <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribut a la valeur `ReadOnly`. Si le <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribut a la valeur `true`, le <xref:System.Web.SessionState.SessionStateModule> les appels de l’objet à la place la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> (méthode).  
  
 Le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> méthode retourne un <xref:System.Web.SessionState.SessionStateStoreData> objet rempli avec les informations de session dans le magasin de données et met à jour la date d’expiration des données de session. Si aucune donnée d’élément de session n’est trouvée dans le magasin de données, le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> méthode définit la `locked` `out` paramètre `false` et retourne `null`. Cela entraîne le <xref:System.Web.SessionState.SessionStateModule> objet pour appeler le <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> méthode pour créer un nouvel élément de session dans le magasin de données.  
  
 Si-l’élément de la session données se trouve dans le magasin de données, mais les données sont verrouillées, le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> méthode définit la `locked` `out` paramètre `true`, définit le `lockAge` `out` paramètre à la date et heure actuelles moins la date et l’heure lorsque l’élément a été verrouillé (qui est récupéré à partir du magasin de données), définit les `lockId` `out` paramètre à l’identificateur de verrou récupéré à partir du magasin de données et retourne `null`. Cela entraîne le <xref:System.Web.SessionState.SessionStateModule> objet pour appeler le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> méthode à nouveau après un intervalle demi-seconde pour tenter de récupérer les informations d’élément de session.  
  
 Si la valeur qui la `lockAge` `out` paramètre a la valeur dépasse la <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> valeur, le <xref:System.Web.SessionState.SessionStateModule> les appels de l’objet le <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> méthode pour effacer le verrou sur les données d’élément de session, puis appelle la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> méthode à nouveau.  
  
 Le `actionFlags` paramètre est utilisé lorsqu’à la fois le `cookieless` et `regenerateExpiredSessionId` attributs sont définis sur `true`. Un `actionFlags` la valeur <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indique que l’entrée dans le magasin de données de session est une nouvelle session qui requiert l’initialisation. Les entrées non initialisées dans le magasin de données de session sont créées par un appel à la <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> (méthode). Si l’élément à partir du magasin de données de session n’est pas un élément non initialisé, le `actionFlags` paramètre va être défini sur zéro.  
  
 Les implémenteurs de magasin d’état de session personnalisé qui prend en charge les sessions sans cookies doivent définir le `actionFlags` `out` paramètre à la valeur retournée par le magasin de données de session pour l’élément actif. Si le `actionFlags` valeur de paramètre pour le magasin de session demandé est égale à élément la <xref:System.Web.SessionState.SessionStateActions.InitializeItem> valeur d’énumération, le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> méthode doit définir la valeur dans le magasin de données à zéro après avoir défini la `actionFlags` `out` paramètre.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemExclusive">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItemExclusive(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemExclusive (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan&amp;" RefType="out" />
        <Parameter Name="lockId" Type="System.Object&amp;" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> pour la requête actuelle.</param>
        <param name="id">
          <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> pour la requête actuelle.</param>
        <param name="locked">Lorsque cette méthode est retournée, elle contient une valeur booléenne <see langword="true" /> si un verrou a pu être obtenu ; sinon, <see langword="false" />.</param>
        <param name="lockAge">Lorsque cette méthode est retournée, elle contient un objet <see cref="T:System.TimeSpan" /> dont la valeur est le temps pendant lequel un élément du magasin de données de session est resté verrouillé.</param>
        <param name="lockId">Lorsque cette méthode est retournée, elle contient un objet dont a valeur est l'identificateur de verrou de la demande en cours. Pour plus d'informations sur l'identificateur de verrou, consultez « Verrouiller les données du magasin de session » dans le résumé de la classe <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</param>
        <param name="actions">Lorsque cette méthode est retournée, elle contient l'une des valeurs <see cref="T:System.Web.SessionState.SessionStateActions" />, indiquant si la session en cours est une session non initialisée, sans cookie.</param>
        <summary>Retourne des données d'état de session en lecture seule du magasin de données de session.</summary>
        <returns>
          <see cref="T:System.Web.SessionState.SessionStateStoreData" /> rempli avec les valeurs et les informations de session provenant du magasin de données de session.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.SessionStateModule> les appels de l’objet le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> méthode au début d’une requête, au cours de la <xref:System.Web.HttpApplication.AcquireRequestState> événement, lorsque le <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribut a la valeur `true`, qui est la valeur par défaut. Si le <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribut a la valeur `ReadOnly`, le <xref:System.Web.SessionState.SessionStateModule> les appels de l’objet à la place la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> (méthode).  
  
 Le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> méthode retourne un <xref:System.Web.SessionState.SessionStateStoreData> objet rempli avec les informations de session à partir du magasin de données, met à jour la date d’expiration des données stockées et verrouille les données d’élément de session dans le magasin de données pour la durée de la demande. Si aucune donnée d’élément de session n’est trouvée dans le magasin de données, le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> méthode définit la `locked` `out` paramètre `false` et retourne `null`. Cela entraîne le <xref:System.Web.SessionState.SessionStateModule> objet pour appeler le <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> méthode pour créer un nouvel élément de session dans le magasin de données. Si-l’élément de la session données se trouve dans le magasin de données, mais les données sont verrouillées, le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> méthode définit la `locked` `out` paramètre `true`, définit le `lockAge` `out` paramètre à la date et heure actuelles moins la date et l’heure lorsque l’élément a été verrouillé (qui est récupéré à partir du magasin de données), définit les `lockId` `out` paramètre à l’identificateur de verrou récupéré à partir du magasin de données et retourne `null`. Cela entraîne le <xref:System.Web.SessionState.SessionStateModule> objet pour appeler le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> méthode à nouveau après un intervalle demi-seconde à tenter de récupérer les informations d’élément de session et obtenir un verrou sur les données. Si la valeur qui la `lockAge` `out` paramètre a la valeur dépasse la <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> valeur, le <xref:System.Web.SessionState.SessionStateModule> appelle la <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> méthode pour effacer le verrou sur les données d’élément de session, puis appelle la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> méthode à nouveau.  
  
 Le `actionFlags` paramètre est utilisé lorsque le `cookieless` et `regenerateExpiredSessionId` attributs sont définis sur `true`. Un `actionFlags` la valeur <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indique que l’entrée dans le magasin de données de session est une nouvelle session qui requiert l’initialisation. Les entrées non initialisées dans le magasin de données de session sont créées par un appel à la <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> (méthode). Si l’élément à partir du magasin de données de session n’est pas un élément non initialisé, le `actionFlags` paramètre va être défini sur zéro.  
  
 Les implémenteurs de magasin d’état de session personnalisé qui prend en charge les sessions sans cookies doivent définir le `actionFlags` `out` paramètre à la valeur retournée par le magasin de données de session pour l’élément actif. Si le `actionFlags` valeur de paramètre pour le magasin de session demandé est égale à élément la <xref:System.Web.SessionState.SessionStateActions.InitializeItem> valeur d’énumération, le <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> méthode doit définir la valeur dans le magasin de données à zéro après avoir défini la `actionFlags` `out` paramètre.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public abstract void InitializeRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InitializeRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InitializeRequest(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> pour la requête actuelle.</param>
        <summary>Appelé par l'objet <see cref="T:System.Web.SessionState.SessionStateModule" /> pour une initialisation par demande.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.SessionStateModule> de l’objet appelle la <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> méthode avant d’appeler toute autre <xref:System.Web.SessionState.SessionStateStoreProviderBase> (méthode). Vous pouvez utiliser la <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> méthode pour effectuer toute initialisation par demande requise par votre fournisseur de magasin d’état de session.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseItemExclusive(class System.Web.HttpContext context, string id, object lockId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReleaseItemExclusive (context As HttpContext, id As String, lockId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> pour la requête actuelle.</param>
        <param name="id">Identificateur de session pour la demande en cours.</param>
        <param name="lockId">Identificateur de verrouillage pour la demande en cours.</param>
        <summary>Libère le verrouillage d'un élément du magasin de données de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.SessionStateModule> de l’objet appelle la <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> méthode pour mettre à jour la date d’expiration et libérer un verrou sur un élément dans le magasin de données de session. Il est appelé à la fin d’une requête, lors de la <xref:System.Web.HttpApplication.ReleaseRequestState> événement, si les valeurs de session sont inchangées. Si les valeurs de session ont été modifiées, le <xref:System.Web.SessionState.SessionStateModule> les appels de l’objet à la place la <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> (méthode).  
  
 Le <xref:System.Web.SessionState.SessionStateModule> objet appelle également la <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> méthode lorsqu’un verrou sur un élément dans le magasin de données de session a dépassé la <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> valeur. Pour plus d’informations sur le verrouillage et les détails de l’identificateur de verrou, consultez « Verrouiller les données du magasin de Session » dans la <xref:System.Web.SessionState.SessionStateStoreProviderBase> vue d’ensemble de la classe.  
  
 Le <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> méthode supprime uniquement le verrou d’un élément dans le magasin de données de session pour l’application actuelle qui correspond à la session fournie `id` et `lockId` valeurs. Si le `lockId` ne correspond pas à celui du magasin de données, le <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> méthode ne fait rien.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem(class System.Web.HttpContext context, string id, object lockId, class System.Web.SessionState.SessionStateStoreData item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveItem (context As HttpContext, id As String, lockId As Object, item As SessionStateStoreData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveItem(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId, System::Web::SessionState::SessionStateStoreData ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> pour la requête actuelle.</param>
        <param name="id">Identificateur de session pour la demande en cours.</param>
        <param name="lockId">Identificateur de verrouillage pour la demande en cours.</param>
        <param name="item">
          <see cref="T:System.Web.SessionState.SessionStateStoreData" /> qui représente l'élément à supprimer du magasin de données.</param>
        <summary>Supprime des données d'élément du magasin de données de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.SessionStateModule> les appels de l’objet le <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> méthode à la fin d’une requête, au cours de la <xref:System.Web.HttpApplication.ReleaseRequestState> événement, afin de supprimer les données d’un élément à partir du magasin de données de session si le <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> méthode a été appelée. Uniquement les données de session pour l’application actuelle qui correspond à la session fournie `id` et `lockId` valeurs est supprimé. Pour plus d’informations sur le verrouillage et les détails de l’identificateur de verrou, consultez « Verrouiller les données du magasin de Session » dans la <xref:System.Web.SessionState.SessionStateStoreProviderBase> vue d’ensemble de la classe.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetItemTimeout">
      <MemberSignature Language="C#" Value="public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetItemTimeout(class System.Web.HttpContext context, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetItemTimeout (context As HttpContext, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetItemTimeout(System::Web::HttpContext ^ context, System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> pour la requête actuelle.</param>
        <param name="id">Identificateur de session pour la demande en cours.</param>
        <summary>Actualise la date et l'heure d'expiration d'un élément du magasin de données de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.SessionStateModule> de l’objet appelle la <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> pour mettre à jour la date d’expiration et l’heure pour une session à la date et heure actuelles plus la session <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> valeur lorsque soit :  
  
-   le <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribut est `true`, ou  
  
-   la demande n’a pas généré le <xref:System.Web.HttpApplication.AcquireRequestState> et <xref:System.Web.HttpApplication.ReleaseRequestState> événements en raison d’une erreur.  
  
 Si une page ASP.NET est demandée et le <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribut a la valeur `false`, le <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> méthode est toujours appelée pour mettre à jour la date d’expiration et l’heure des données dans le magasin de données de session.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAndReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndReleaseItemExclusive(class System.Web.HttpContext context, string id, class System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAndReleaseItemExclusive (context As HttpContext, id As String, item As SessionStateStoreData, lockId As Object, newItem As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAndReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Web::SessionState::SessionStateStoreData ^ item, System::Object ^ lockId, bool newItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="newItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> pour la requête actuelle.</param>
        <param name="id">Identificateur de session pour la demande en cours.</param>
        <param name="item">Objet <see cref="T:System.Web.SessionState.SessionStateStoreData" /> contenant les valeurs de la session en cours devant être stockées.</param>
        <param name="lockId">Identificateur de verrouillage pour la demande en cours.</param>
        <param name="newItem">
          <see langword="true" /> pour identifier l'élément de session comme étant un nouvel élément ; <see langword="false" /> pour identifier l'élément de session comme étant un élément existant.</param>
        <summary>Actualise les informations d'élément de session du magasin de données d'état de session en leur affectant les valeurs de la demande actuelle, et annule le verrouillage des données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.SessionStateModule> les appels de l’objet le <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> méthode à la fin d’une requête, au cours de la <xref:System.Web.HttpApplication.ReleaseRequestState> événement, insérer des informations d’élément de session actuel dans le magasin de données ou de mettre à jour des informations d’élément de session existantes dans le magasin de données avec les valeurs actuelles, Pour mettre à jour le délai d’expiration de l’élément et pour libérer le verrou sur les données. Uniquement les données de session pour l’application actuelle qui correspond à la session fournie `id` et `lockId` valeurs est mis à jour. Pour plus d’informations sur le verrouillage, consultez « Verrouiller les données du magasin de Session » dans la <xref:System.Web.SessionState.SessionStateStoreProviderBase> vue d’ensemble de la classe.  
  
 Si les valeurs de session pour la requête actuelle n’ont pas été modifiés, le <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> méthode n’est pas appelée. Au lieu de cela, le <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> méthode est appelée.  
  
 Si le <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> méthode a été appelée, la <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> méthode n’est pas appelée. Au lieu de cela, le <xref:System.Web.SessionState.SessionStateModule> de l’objet appelle la <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> méthode pour supprimer les données de l’élément de session à partir de la source de données.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemExpireCallback">
      <MemberSignature Language="C#" Value="public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetItemExpireCallback(class System.Web.SessionState.SessionStateItemExpireCallback expireCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetItemExpireCallback (expireCallback As SessionStateItemExpireCallback) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SetItemExpireCallback(System::Web::SessionState::SessionStateItemExpireCallback ^ expireCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expireCallback" Type="System.Web.SessionState.SessionStateItemExpireCallback" />
      </Parameters>
      <Docs>
        <param name="expireCallback">Délégué <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> de l'événement <see langword="Session_OnEnd" /> défini dans le fichier Global.asax.</param>
        <summary>Définit une référence au délégué <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> pour l'événement <see langword="Session_OnEnd" /> défini dans le fichier Global.asax.</summary>
        <returns>
          <see langword="true" /> si le fournisseur de magasin d'état de session prend en charge l'appel de l'événement <see langword="Session_OnEnd" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.SessionState.SessionStateModule> appels de l’objet le <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> méthode lorsque le module est initialisé pour déterminer si des appels à la `Session_OnEnd` événement sont pris en charge par le <xref:System.Web.SessionState.SessionStateStoreProviderBase> implémentation et pour associer le <xref:System.Web.SessionState.SessionStateItemExpireCallback> délégué avec le `Session_OnEnd` événement.  
  
 Les implémenteurs de fournisseur de magasin d’état de session personnalisé doivent utiliser le <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> pour informer le <xref:System.Web.SessionState.SessionStateModule> objet si les appels à la `Session_OnEnd` événement sont pris en charge et pour définir une référence locale la <xref:System.Web.SessionState.SessionStateItemExpireCallback> délégué fourni par le `expireCallback` paramètre. L’implémentation personnalisée doit décider du moment local <xref:System.Web.SessionState.SessionStateItemExpireCallback> délégué sera appelé. Par exemple, le délégué peut être appelé pendant l’appel à la <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> méthode, qui est appelée lorsqu’une session est abandonnée.  
  
   
  
## Examples  
 Pour obtenir un exemple d’implémentation de fournisseur de magasin d’état de session, consultez [implémentation d’un fournisseur de magasin d’état de Session](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>