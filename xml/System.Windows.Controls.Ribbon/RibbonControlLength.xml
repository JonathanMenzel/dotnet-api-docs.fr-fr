<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RibbonControlLength.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac537a03431a5c952c6b1bd2ef3f38636dbf009554f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37a03431a5c952c6b1bd2ef3f38636dbf009554f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.Ribbon.RibbonControlLength">
          <source>Represents widths in a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlSizeDefinition" /&gt;</ph>.</source>
          <target state="translated">Représente les largeurs dans <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlSizeDefinition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.Ribbon.RibbonControlLength">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> structure.</source>
          <target state="translated">Initialise une nouvelle instance de la structure <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double)">
          <source>The absolute pixel value to initialize the length to.</source>
          <target state="translated">Valeur absolue en pixels à laquelle initialiser la longueur.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> structure with an absolute value in pixels.</source>
          <target state="translated">Initialise une nouvelle instance de la structure <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> avec une valeur absolue exprimée en pixels.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double)">
          <source><ph id="ph1">&lt;paramref name="pixels" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pixels" /&gt;</ph> est <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)">
          <source>The requested size of the element.</source>
          <target state="translated">Taille demandée pour l'élément.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)">
          <source>The type that is used to determine how the size of the element is calculated.</source>
          <target state="translated">Type utilisé pour déterminer comment la taille de l'élément est calculée.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> structure with the specified value and length unit.</source>
          <target state="translated">Initialise une nouvelle instance de la structure <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> avec la valeur et l'unité de longueur spécifiées.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Star" /&gt;</ph> and <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph> or <ph id="ph5">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> a la valeur de <ph id="ph2">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Star" /&gt;</ph> et <ph id="ph3">&lt;paramref name="value" /&gt;</ph> a la valeur de <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph> ou <ph id="ph5">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Auto" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Pixel" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Star" /&gt;</ph>, or <ph id="ph5">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Item" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> n'est pas <ph id="ph2">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Auto" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Pixel" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Star" /&gt;</ph>, ou <ph id="ph5">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Ribbon.RibbonControlLength.Auto">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> structure that represents the standard automatic sizing mode.</source>
          <target state="translated">Obtient une structure <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> qui représente le mode de dimensionnement automatique standard.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonControlLength.Auto">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> structure that represents the standard automatic sizing mode.</source>
          <target state="translated">Structure <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> qui représente le mode de dimensionnement automatique standard.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.Ribbon.RibbonControlLength">
          <source>Determines whether an object is equal to the current <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph>.</source>
          <target state="translated">Détermine si un objet équivaut au <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Object)">
          <source>The object to compare to the current instance.</source>
          <target state="translated">Objet à comparer avec l'instance actuelle.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Object)">
          <source>Determines whether the specified object is equal to the current <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph>.</source>
          <target state="translated">Détermine si l'objet spécifié est égal au <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> with the same value and sizing mode as the current <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet spécifié est un <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> ayant la même valeur ou le même mode de redimensionnement que le <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> actuel ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Windows.Controls.Ribbon.RibbonControlLength)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> to compare to the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> à comparer à l'instance en cours.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Windows.Controls.Ribbon.RibbonControlLength)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> is equal to the current <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph>.</source>
          <target state="translated">Détermine si l'objet <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> spécifié est égal à l'objet <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Windows.Controls.Ribbon.RibbonControlLength)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> with the same value and sizing mode as the current <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet spécifié est un <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> ayant la même valeur ou le même mode de redimensionnement que le <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> actuel ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.GetHashCode">
          <source>Gets a hash code for the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph>.</source>
          <target state="translated">Obtient un code de hachage pour le <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph>.</source>
          <target state="translated">Code de hachage du <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Ribbon.RibbonControlLength.IsAbsolute">
          <source>Gets a value that indicates whether this instance sizes elements based on a fixed pixel or logical value.</source>
          <target state="translated">Obtient une valeur qui indique si cette instance redimensionne les éléments en fonction d'une valeur fixe (en pixels) ou logique.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonControlLength.IsAbsolute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /&gt;</ph> property is set to <ph id="ph3">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Pixel" /&gt;</ph> or <ph id="ph4">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Item" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété <ph id="ph2">&lt;see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /&gt;</ph> a la valeur <ph id="ph3">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Pixel" /&gt;</ph> ou <ph id="ph4">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Item" /&gt;</ph> ; sinon, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Ribbon.RibbonControlLength.IsAuto">
          <source>Gets a value that indicates whether this instance automatically sizes elements.</source>
          <target state="translated">Obtient une valeur qui indique si cette instance redimensionne automatiquement les éléments.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonControlLength.IsAuto">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /&gt;</ph> property is set to <ph id="ph3">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Auto" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété <ph id="ph2">&lt;see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /&gt;</ph> a la valeur <ph id="ph3">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Auto" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Ribbon.RibbonControlLength.IsStar">
          <source>Gets a value that indicates whether this instance automatically sizes elements based on a weighted proportion of available space.</source>
          <target state="translated">Obtient une valeur qui indique si cette instance redimensionne automatiquement les éléments en fonction d'une proportion pondérée d'espace disponible.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonControlLength.IsStar">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /&gt;</ph> property is set to <ph id="ph3">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Star" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété <ph id="ph2">&lt;see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /&gt;</ph> a la valeur <ph id="ph3">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Star" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.op_Equality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> instance to compare.</source>
          <target state="translated">Première instance de <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.op_Equality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> instance to compare.</source>
          <target state="translated">Deuxième instance de <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.op_Equality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> structures for equality.</source>
          <target state="translated">Compare l'égalité de deux structures <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.op_Equality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> instances have the same value and sizing mode; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les deux instances <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> ont la même valeur et le même mode de dimensionnement ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> instance to compare.</source>
          <target state="translated">Première instance de <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> instance to compare.</source>
          <target state="translated">Deuxième instance de <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> structures to determine whether they are not equal.</source>
          <target state="translated">Compare deux structures <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> pour déterminer si elles sont inégales.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> instances do not have the same value or sizing mode; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les deux instances <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> n'ont pas la même valeur ou le même mode de dimensionnement ; autrement, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType">
          <source>Gets the type that is used to determine how the size of the element is calculated.</source>
          <target state="translated">Obtient le type utilisé pour déterminer comment la taille de l'élément est calculée.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType">
          <source>One of the enumeration values that specifies how the size of the element is calculated.</source>
          <target state="translated">Une des valeurs d'énumération qui spécifie comment la taille de l'élément est calculée.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.ToString">
          <source>Returns a string that represents the current object.</source>
          <target state="translated">Retourne une chaîne qui représente l'objet actuel.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonControlLength.ToString">
          <source>A string that represent the current object.</source>
          <target state="translated">Chaîne qui représente l'objet actif.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Ribbon.RibbonControlLength.Value">
          <source>Gets the absolute value of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> in pixels or logical units.</source>
          <target state="translated">Obtient la valeur absolue de <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> en pixels ou unités logiques.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonControlLength.Value">
          <source>The absolute value of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> in pixels or logical units, or 1.0 if the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /&gt;</ph> property is set to <ph id="ph3">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Auto" /&gt;</ph>.</source>
          <target state="translated">Valeur absolue de <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /&gt;</ph> (en pixels ou unités logiques) ou 1.0 si la propriété <ph id="ph2">&lt;see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /&gt;</ph> a la valeur <ph id="ph3">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Auto" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>