<Type Name="RibbonApplicationMenuItem" FullName="System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="425bafa0b7953c8a4ec64255827e0f8a39c37ab0" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48668555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RibbonApplicationMenuItem : System.Windows.Controls.Ribbon.RibbonMenuItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RibbonApplicationMenuItem extends System.Windows.Controls.Ribbon.RibbonMenuItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class RibbonApplicationMenuItem&#xA;Inherits RibbonMenuItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class RibbonApplicationMenuItem : System::Windows::Controls::Ribbon::RibbonMenuItem" />
  <TypeSignature Language="F#" Value="type RibbonApplicationMenuItem = class&#xA;    inherit RibbonMenuItem" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Ribbon.RibbonMenuItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.Ribbon.RibbonApplicationMenuItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fbf80-101">Représente un élément de menu à l'intérieur d'un contrôle <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fbf80-101">Represents a menu item inside a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbf80-102">Vous utilisez généralement un <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> pour appeler une commande lorsque l’élément de menu est activé.</span><span class="sxs-lookup"><span data-stu-id="fbf80-102">You typically use a <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> to invoke a command when the menu item is clicked.</span></span> <span data-ttu-id="fbf80-103">Pour plus d’informations sur l’utilisation de commandes avec des éléments de menu, consultez [Comment : ajouter une commande à un MenuItem](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741839(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="fbf80-103">For more information about using commands with menu items, see [How to: Add a Command to a MenuItem](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741839(v=vs.90)).</span></span>  
  
 <span data-ttu-id="fbf80-104">Un <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> peut avoir des sous-menus.</span><span class="sxs-lookup"><span data-stu-id="fbf80-104">A <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> can have submenus.</span></span> <span data-ttu-id="fbf80-105">Le sous-menu de la <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> se compose d’objets au sein de la <xref:System.Windows.Controls.ItemsControl.Items%2A> collection d’un <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>.</span><span class="sxs-lookup"><span data-stu-id="fbf80-105">The submenu of the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> is made up of the objects within the <xref:System.Windows.Controls.ItemsControl.Items%2A> collection of a <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>.</span></span> <span data-ttu-id="fbf80-106">Il est courant pour un <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> pour contenir d’autres <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objets à créer des sous-menus imbriqués.</span><span class="sxs-lookup"><span data-stu-id="fbf80-106">It is common for a <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> to contain other <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objects to create nested submenus.</span></span>  
  
 <span data-ttu-id="fbf80-107">Un <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> ne peut pas avoir des sous-menus et également appeler une commande.</span><span class="sxs-lookup"><span data-stu-id="fbf80-107">A <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> cannot have submenus and also invoke a command.</span></span> <span data-ttu-id="fbf80-108">Si le <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> a un sous-menu, la commande associée à la <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> n’est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="fbf80-108">If the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> has a submenu, the command associated with the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> is not invoked.</span></span> <span data-ttu-id="fbf80-109">Lorsque vous avez besoin d’un contrôle qui agit comme un en-tête de menu et appelle une commande, utilisez un <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span><span class="sxs-lookup"><span data-stu-id="fbf80-109">When you need a control that acts as a menu header and invokes a command, use a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span></span>  
  
 <span data-ttu-id="fbf80-110">L’illustration suivante montre le Menu d’Application pour un contrôle de ruban.</span><span class="sxs-lookup"><span data-stu-id="fbf80-110">The following illustration shows the Application Menu for a ribbon control.</span></span> <span data-ttu-id="fbf80-111">Le **Open**, **enregistrer**, et **mise en Page** éléments sont des exemples de la <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> contrôle.</span><span class="sxs-lookup"><span data-stu-id="fbf80-111">The **Open**, **Save**, and **Page Setup** items are examples of the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> control.</span></span>  
  
 <span data-ttu-id="fbf80-112">![Ruban Menu Application](~/add/media/wpfribbon-appmenu.png "Ruban Menu d’Application")</span><span class="sxs-lookup"><span data-stu-id="fbf80-112">![Ribbon Application Menu](~/add/media/wpfribbon-appmenu.png "Ribbon Application Menu")</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbf80-113">L’exemple suivant montre les éléments de menu du Menu Application illustré précédemment.</span><span class="sxs-lookup"><span data-stu-id="fbf80-113">The following example shows the menu items of the Application Menu shown previously.</span></span> <span data-ttu-id="fbf80-114">Le <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> les objets sont hébergés directement dans le <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu> et dans un <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span><span class="sxs-lookup"><span data-stu-id="fbf80-114">The <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objects are hosted directly in the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu> and in a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span></span>  
  
 [!code-xaml[Ribbon_Snippets#AppMenuItems](~/samples/snippets/csharp/VS_Snippets_Wpf/ribbon_snippets/cs/ribbonwindow1.xaml#appmenuitems)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonApplicationMenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RibbonApplicationMenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbf80-115">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-115">Initializes a new instance of the <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="ribbonApplicationMenuItem.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbf80-116">Retourne un nouvel objet <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-116">Returns a new <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbf80-117">Un nouvel objet conteneur de <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> qui est utilisé pour afficher un élément de la collection <see cref="P:System.Windows.Controls.ItemsControl.Items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-117">A new <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> container object that is used to display an item from the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="ribbonApplicationMenuItem.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fbf80-118">Élément à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-118">The item to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbf80-119">Retourne une valeur qui indique si l'élément spécifié est (ou est susceptible d'être) son propre conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-119">Returns a value that indicates whether the specified item is (or is eligible to be) its own container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbf80-120">
            <see langword="true" /> si l'élément est un <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />, un <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, un <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, ou un <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-120">
              <see langword="true" /> if the item is a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />, a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, a <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, or a <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As RibbonApplicationMenuItemLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Ribbon::RibbonApplicationMenuItemLevel Level { System::Windows::Controls::Ribbon::RibbonApplicationMenuItemLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel" Usage="System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbf80-121">Obtient une valeur qui indique à quel niveau l'élément de menu s'affiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-121">Gets a value that indicates at what level the menu item is displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbf80-122">Une des valeurs d'énumération qui spécifie à quel niveau de l'élément de menu est affiché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-122">One the enumeration values that specifies at what level the menu item is displayed.</span>
          </span>
          <span data-ttu-id="fbf80-123">La valeur par défaut enregistrée est <see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-123">The registered default is <see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" />.</span>
          </span>
          <span data-ttu-id="fbf80-124">Pour plus d’informations sur ce qui peut influencer la valeur, consultez [priorité de valeur de propriété de dépendance](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-124">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Level"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fbf80-125">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="fbf80-125">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fbf80-126">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="fbf80-126">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.LevelProperty>|  
|<span data-ttu-id="fbf80-127">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="fbf80-127">Metadata properties set to `true`</span></span>|<span data-ttu-id="fbf80-128">Aucun</span><span class="sxs-lookup"><span data-stu-id="fbf80-128">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LevelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LevelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.LevelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LevelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LevelProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LevelProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.LevelProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbf80-129">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-129">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivatingKeyTip">
      <MemberSignature Language="C#" Value="protected override void OnActivatingKeyTip (System.Windows.Controls.ActivatingKeyTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnActivatingKeyTip(class System.Windows.Controls.ActivatingKeyTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnActivatingKeyTip(System.Windows.Controls.ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnActivatingKeyTip (e As ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnActivatingKeyTip(System::Windows::Controls::ActivatingKeyTipEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnActivatingKeyTip : System.Windows.Controls.ActivatingKeyTipEventArgs -&gt; unit" Usage="ribbonApplicationMenuItem.OnActivatingKeyTip e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ActivatingKeyTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fbf80-130">Contient des données relatives à l'activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-130">Contains data about the activation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbf80-131">Appelé lorsqu'il est appuyé sur le KeyTip ou la touche d'accès rapide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-131">Called when the KeyTip or accelerator key is pressed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="ribbonApplicationMenuItem.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbf80-132">Génère l'arborescence d'éléments visuels pour le <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> lorsqu'un nouveau modèle est appliqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-132">Builds the visual tree for the <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> when a new template is applied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbf80-133">Cette méthode est appelée chaque fois que du code d'application ou un processus interne, tel qu'une passe de disposition de reconstruction, appelle la méthode <xref:System.Windows.FrameworkElement.ApplyTemplate%2A>.</span><span class="sxs-lookup"><span data-stu-id="fbf80-133">This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="ribbonApplicationMenuItem.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fbf80-134">Données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-134">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbf80-135">Fournit la gestion de classe pour l'événement <see cref="E:System.Windows.UIElement.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-135">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="ribbonApplicationMenuItem.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="fbf80-136">Élément utilisé pour afficher l'élément donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-136">The element that is used to display the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="fbf80-137">Élément à afficher dans la collection <see cref="P:System.Windows.Controls.ItemsControl.Items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-137">The item to display from the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbf80-138">Prépare l'élément (element) spécifié pour afficher l'élément (item) spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-138">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected override bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldApplyItemContainerStyle (container As DependencyObject, item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ShouldApplyItemContainerStyle(System::Windows::DependencyObject ^ container, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.ShouldApplyItemContainerStyle : System.Windows.DependencyObject * obj -&gt; bool" Usage="ribbonApplicationMenuItem.ShouldApplyItemContainerStyle (container, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="fbf80-139">Élément conteneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-139">The container element.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="fbf80-140">L'élément pour lequel le conteneur est destiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-140">The item that the container is for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbf80-141">Retourne une valeur qui indique s'il faut appliquer le style à partir de la propriété <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> ou de la propriété <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> à l'élément conteneur de l'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-141">Returns a value that indicates whether to apply the style from the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> or <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property to the container element of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbf80-142">
            <see langword="false" /> si <paramref name="container" /> est un <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /> ou un or <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; sinon, la valeur est retournée par l'implémentation de base</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbf80-142">
              <see langword="false" /> if <paramref name="container" /> is a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, or <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; otherwise, the value returned by the base implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>